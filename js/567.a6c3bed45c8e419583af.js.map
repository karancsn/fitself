{"version":3,"file":"js/567.a6c3bed45c8e419583af.js","mappings":"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","sources":["webpack://fitself/./node_modules/@oracle/oraclejet-preact/es/UNSAFE_IntlFormatParse.js","webpack://fitself/./node_modules/@oracle/oraclejet-preact/es/utils/UNSAFE_logger.js","webpack://fitself/./node_modules/@oracle/oraclejet-preact/es/_arity-674d41d6.js","webpack://fitself/./node_modules/@oracle/oraclejet-preact/es/UNSAFE_IntlDateTime.js","webpack://fitself/./node_modules/@oracle/oraclejet-preact/es/hooks/UNSAFE_useFormVariantContext.js","webpack://fitself/./node_modules/@oracle/oraclejet/dist/js/libs/jquery/jqueryui-amd-1.13.2/data.js","webpack://fitself/./node_modules/@oracle/oraclejet/dist/js/libs/jquery/jqueryui-amd-1.13.2/ie.js","webpack://fitself/./node_modules/@oracle/oraclejet/dist/js/libs/jquery/jqueryui-amd-1.13.2/plugin.js","webpack://fitself/./node_modules/@oracle/oraclejet/dist/js/libs/jquery/jqueryui-amd-1.13.2/safe-active-element.js","webpack://fitself/./node_modules/@oracle/oraclejet/dist/js/libs/jquery/jqueryui-amd-1.13.2/safe-blur.js","webpack://fitself/./node_modules/@oracle/oraclejet/dist/js/libs/jquery/jqueryui-amd-1.13.2/scroll-parent.js","webpack://fitself/./node_modules/@oracle/oraclejet/dist/js/libs/jquery/jqueryui-amd-1.13.2/widgets/draggable.js","webpack://fitself/./node_modules/@oracle/oraclejet/dist/js/libs/jquery/jqueryui-amd-1.13.2/widgets/mouse.js","webpack://fitself/./node_modules/@oracle/oraclejet/dist/js/libs/oj/debug/ojcalendarutils.js","webpack://fitself/./node_modules/@oracle/oraclejet/dist/js/libs/oj/debug/ojconverter-number.js","webpack://fitself/./node_modules/@oracle/oraclejet/dist/js/libs/oj/debug/ojconverter-preferences.js","webpack://fitself/./node_modules/@oracle/oraclejet/dist/js/libs/oj/debug/ojconverter.js","webpack://fitself/./node_modules/@oracle/oraclejet/dist/js/libs/oj/debug/ojconverterutils-i18n.js","webpack://fitself/./node_modules/@oracle/oraclejet/dist/js/libs/oj/debug/ojconverterutils.js","webpack://fitself/./node_modules/@oracle/oraclejet/dist/js/libs/oj/debug/ojdatasource-common.js","webpack://fitself/./node_modules/@oracle/oraclejet/dist/js/libs/oj/debug/ojdialog.js","webpack://fitself/./node_modules/@oracle/oraclejet/dist/js/libs/oj/debug/ojeditablevalue.js","webpack://fitself/./node_modules/@oracle/oraclejet/dist/js/libs/oj/debug/ojinputnumber.js","webpack://fitself/./node_modules/@oracle/oraclejet/dist/js/libs/oj/debug/ojlistdataproviderview.js","webpack://fitself/./node_modules/@oracle/oraclejet/dist/js/libs/oj/debug/ojlocaledata.js","webpack://fitself/./node_modules/@oracle/oraclejet/dist/js/libs/oj/debug/ojselector.js","webpack://fitself/./node_modules/@oracle/oraclejet/dist/js/libs/oj/debug/ojtable.js","webpack://fitself/./node_modules/@oracle/oraclejet/dist/js/libs/oj/debug/ojvalidation-error.js","webpack://fitself/./node_modules/@oracle/oraclejet/dist/js/libs/oj/debug/ojvalidator-numberrange.js","webpack://fitself/./node_modules/@oracle/oraclejet/dist/js/libs/oj/debug/ojvalidator-regexp.js","webpack://fitself/./node_modules/@oracle/oraclejet/dist/js/libs/oj/debug/ojvalidator-required.js","webpack://fitself/./node_modules/@oracle/oraclejet/dist/js/libs/oj/debug/ojvalidator.js","webpack://fitself/./node_modules/@oracle/oraclejet/dist/js/libs/touchr/touchr.js","webpack://fitself/./node_modules/@oracle/oraclejet/dist/js/libs/oj/resources/nls/localeElements.js"],"sourcesContent":["/* @oracle/oraclejet-preact: 15.1.3 */\n/**\n * @license\n * Copyright (c) 2019 %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n// Type of error thrown during format or parse.\nclass FormatParseError extends Error {\n    constructor(message, options) {\n        super(message); // 'Error' breaks prototype chain here\n        Object.setPrototypeOf(this, FormatParseError.prototype);\n        this.cause = options?.cause;\n    }\n}\n\n/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nexport { FormatParseError };\n//# sourceMappingURL=UNSAFE_IntlFormatParse.js.map\n","/* @oracle/oraclejet-preact: 15.1.3 */\nimport '../_curry1-e8bdb9c0.js';\nimport { _ as _curry2_1 } from '../_curry2-cf5be105.js';\n\nvar _curry2 =\n\n_curry2_1;\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\n\n\nvar pick =\n/*#__PURE__*/\n_curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nvar pick_1 = pick;\n\n/**\n * @license\n * Copyright (c) 2011 %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n// TODO: fully implement Logger\nconst Logger = pick_1(['error', 'warn', 'info', 'log'], console);\n\n/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nexport { Logger };\n//# sourceMappingURL=UNSAFE_logger.js.map\n","/* @oracle/oraclejet-preact: 15.1.3 */\nimport './_curry1-e8bdb9c0.js';\n\nfunction _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}\n\nvar _arity_1 = _arity;\n\nexport { _arity_1 as _ };\n//# sourceMappingURL=_arity-674d41d6.js.map\n","/* @oracle/oraclejet-preact: 15.1.3 */\nimport { FormatParseError } from './UNSAFE_IntlFormatParse.js';\nimport { Logger } from './utils/UNSAFE_logger.js';\nimport { a as _isPlaceholder_1, _ as _curry1_1 } from './_curry1-e8bdb9c0.js';\nimport { _ as _arity_1 } from './_arity-674d41d6.js';\nimport { _ as _curry2_1 } from './_curry2-cf5be105.js';\n\n/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nclass CalendarUtils {\n    // Uses the Intl.DateTimeFormat formatToParts to get the day periods.\n    // Returns this object\n    // \"dayPeriods\": {\n    //  \"format\": {\n    //    \"wide\": {\n    //      \"am\": \"AM\",\n    //      \"pm\": \"PM\"\n    //    }}}\n    static _getDayPeriods(locale, calendar) {\n        const date = new Date(2019, 0, 1, 0, 0, 0);\n        function getDayPeriodsFromFormatToParts(formatter) {\n            const formatParts = formatter.formatToParts(date);\n            const eraPart = formatParts.find((value) => value.type === 'dayPeriod');\n            // TODO Era is failing for chinese calendar. Need to fix it\n            if (eraPart) {\n                return eraPart.value;\n            }\n            return '';\n        }\n        const options = { hour: 'numeric', hour12: true };\n        const formatterLocale = CalendarUtils.getFormatterLocale(locale, calendar);\n        const formatter = new Intl.DateTimeFormat(formatterLocale, options);\n        const amValue = getDayPeriodsFromFormatToParts(formatter);\n        date.setHours(20);\n        const pmValue = getDayPeriodsFromFormatToParts(formatter);\n        return { format: { wide: { am: amValue, pm: pmValue } } };\n    }\n    static getFormatterLocale(locale, calendar) {\n        return locale + '-u-ca-' + calendar;\n    }\n    // Example of an eras from localeElements is this, but this fn gets all the data, not just eraAbbr.\n    // \"eras\": {\n    //   \"eraAbbr\": {\n    //     \"0\": \"BC\",\n    //     \"1\": \"AD\"\n    //   }\n    // },\n    static _getEras(locale, calendar) {\n        const eras = [{ era: '0', start: '2000-02-11T00:00:00' }];\n        const cal = {\n            eraNarrow: { '0': '', '1': '' },\n            eraAbbr: { '0': '', '1': '' },\n            eraName: { '0': '', '1': '' }\n        };\n        function getEraFromFormatToParts(formatter, date) {\n            const formatParts = formatter.formatToParts(date);\n            const eraPart = formatParts.find((value) => value.type === 'era');\n            if (eraPart) {\n                return eraPart.value;\n            }\n            return '';\n        }\n        const eraLenArray = [\n            'narrow',\n            'short',\n            'long'\n        ];\n        const formatterLocale = CalendarUtils.getFormatterLocale(locale, calendar);\n        // get the erra name for narrow, short, long.\n        // e.g., A, AD, Anno Domini\n        // this is used to map the era option value from Intl.DateTimeFormat to\n        // what we want to short in our CalendarNode\n        const eraMap = {\n            narrow: 'eraNarrow',\n            short: 'eraAbbr',\n            long: 'eraName'\n        };\n        for (let i = 0; i < eras.length; i++) {\n            const date = new Date(eras[i].start);\n            for (let j = 0; j < eraLenArray.length; j++) {\n                const eraLenName = eraLenArray[j];\n                const options = { year: 'numeric', month: 'numeric', day: 'numeric', era: eraLenName };\n                const formatter = new Intl.DateTimeFormat(formatterLocale, options);\n                const eraForLength = getEraFromFormatToParts(formatter, date);\n                const eraNameForNode = eraMap[eraLenName];\n                const eraObj = { '0': eraForLength, '1': eraForLength };\n                cal[eraNameForNode] = eraObj;\n            }\n        }\n        return cal;\n    }\n    static _fillMonthAndDays(locale, calendar, widthVal, options, isStandAlone) {\n        // These date are used to fill in the months and weekdays.\n        // Each date is a different day of week. Like, the first is sun, the second is mon, etc.\n        const dates = [\n            [2020, 0, 5],\n            [2020, 1, 3],\n            [2020, 2, 3],\n            [2020, 3, 1],\n            [2020, 4, 7],\n            [2020, 5, 5],\n            [2020, 6, 4],\n            [2020, 7, 1],\n            [2020, 8, 1],\n            [2020, 9, 1],\n            [2020, 10, 1],\n            [2020, 11, 1]\n        ];\n        function getMonthFromFormatToParts(formatParts) {\n            const monthPart = formatParts.find((value) => value.type === 'month');\n            if (monthPart) {\n                return monthPart.value;\n            }\n            return null;\n        }\n        function getWeekdayFromFormatToParts(formatParts) {\n            const weekdayPart = formatParts.find((value) => value.type === 'weekday');\n            if (weekdayPart) {\n                return weekdayPart.value;\n            }\n            return null;\n        }\n        const formatterLocale = CalendarUtils.getFormatterLocale(locale, calendar);\n        const formatter = new Intl.DateTimeFormat(formatterLocale, options);\n        const calMonthFormat = {};\n        const calDayFormat = {};\n        // It loops from 0 to 12, dates is for each month. [0] is the year, [1] is the month, [2] is the day\n        // create a new date with year, month, day. each date[j] is a different month of the year, and it also has a different weekday.\n        for (let j = 0; j < dates.length; j++) {\n            const index = j + 1; // 1 to 12\n            const dayIndexVal = CalendarUtils._weekdaysFormatMap[index];\n            const date = new Date(dates[j][0], dates[j][1], dates[j][2]);\n            const formatParts = formatter.formatToParts(date);\n            let month;\n            let weekday;\n            // for stand-alone (e.g., {month: 'short'}), there is only one entry, so we can just get the\n            // value of format. No need for formatToParts to pull out just the month piece.\n            // Note that for ja format gives you the month kanji character too and formatToParts month is only the number. The kanji character is in the literal.\n            if (isStandAlone) {\n                month = formatter.format(date);\n                weekday = formatter.format(date);\n            }\n            else {\n                month = getMonthFromFormatToParts(formatParts);\n                weekday = getWeekdayFromFormatToParts(formatParts);\n            }\n            // store the month and weekday in the obj; only fill in weekday if (index <= 7)\n            if (calMonthFormat[widthVal] === undefined) {\n                calMonthFormat[widthVal] = {};\n            }\n            // @ts-ignore\n            calMonthFormat[widthVal][index] = month;\n            if (index <= 7) {\n                if (calDayFormat[widthVal] === undefined) {\n                    calDayFormat[widthVal] = {};\n                }\n                // @ts-ignore\n                calDayFormat[widthVal][dayIndexVal] = weekday;\n            }\n        }\n        return {\n            monthFormat: calMonthFormat,\n            dayFormat: calDayFormat\n        };\n    }\n    static _getFormatMonthAndDays(locale, calendar) {\n        const calMonths = [];\n        const calDays = [];\n        // Intl.DateTimeFormat's month can take: \"numeric\" (e.g., 3)\"2-digit\" (e.g., 03)\"long\" (e.g., March)\"short\" (e.g., Mar) \"narrow\" (e.g., M).\n        const types = ['short', 'narrow', 'long'];\n        for (let i = 0; i < types.length; i++) {\n            const options = {\n                month: types[i],\n                weekday: types[i],\n                year: 'numeric',\n                day: 'numeric'\n            };\n            // types get mapped to short: 'abbreviated', narrow: 'narrow', long: 'wide'\n            const widthVal = CalendarUtils._monthNamesFormatMap[types[i]]; // get alternate names for 'narrow', 'short', 'long'\n            const monthDayObjForWidth = CalendarUtils._fillMonthAndDays(locale, calendar, widthVal, options, false);\n            calMonths[i] = monthDayObjForWidth.monthFormat;\n            calDays[i] = monthDayObjForWidth.dayFormat;\n        }\n        const myMonthObj = Object.assign({}, ...calMonths);\n        const myDayObj = Object.assign({}, ...calDays);\n        const myMonthFormatObj = {};\n        myMonthFormatObj.format = myMonthObj;\n        const myDayFormatObj = {};\n        myDayFormatObj.format = myDayObj;\n        myMonthFormatObj['stand-alone'] = myMonthFormatObj.format;\n        myDayFormatObj['stand-alone'] = myDayFormatObj.format;\n        return {\n            monthsNode: myMonthFormatObj,\n            daysNode: myDayFormatObj\n        };\n    }\n    static _getStandAloneDays(locale, calendar) {\n        const calDays = [];\n        // Intl.DateTimeFormat's weekday can take: \"long\" (e.g., Monday)\"short\" (e.g., Mon) \"narrow\" (e.g., M).\n        // stand-alone weekday is displayed when the options conatin only one attribute weekday: options = {weekday:'long'}\n        const types = ['short', 'narrow', 'long'];\n        for (let i = 0; i < types.length; i++) {\n            const options = {\n                weekday: types[i]\n            };\n            // types get mapped to short: 'abbreviated', narrow: 'narrow', long: 'wide'\n            const widthVal = CalendarUtils._monthNamesFormatMap[types[i]]; // get alternate names for 'narrow', 'short', 'long'\n            const dayObjForWidth = CalendarUtils._fillMonthAndDays(locale, calendar, widthVal, options, true);\n            calDays[i] = dayObjForWidth.dayFormat;\n        }\n        const myDayObj = Object.assign({}, ...calDays);\n        const myDayStandAloneObj = { 'stand-alone': {} };\n        myDayStandAloneObj['stand-alone'] = myDayObj;\n        return {\n            daysNode: myDayStandAloneObj\n        };\n    }\n    static _getStandAloneMonths(locale, calendar) {\n        const calMonths = [];\n        // Intl.DateTimeFormat's month can take: \"numeric\" (e.g., 3)\"2-digit\" (e.g., 03)\"long\" (e.g., March)\"short\" (e.g., Mar) \"narrow\" (e.g., M).\n        // stand-alone month is displayed when the options conatin only one attribute month: options = {month:'long'}\n        const types = ['short', 'narrow', 'long'];\n        for (let i = 0; i < types.length; i++) {\n            const options = {\n                month: types[i]\n            };\n            // types get mapped to short: 'abbreviated', narrow: 'narrow', long: 'wide'\n            const widthVal = CalendarUtils._monthNamesFormatMap[types[i]]; // get alternate names for 'narrow', 'short', 'long'\n            const monthObjForWidth = CalendarUtils._fillMonthAndDays(locale, calendar, widthVal, options, true);\n            calMonths[i] = monthObjForWidth.monthFormat;\n        }\n        const myMonthObj = Object.assign({}, ...calMonths);\n        const myMonthStandAloneObj = { 'stand-alone': {} };\n        myMonthStandAloneObj['stand-alone'] = myMonthObj;\n        return {\n            monthsNode: myMonthStandAloneObj\n        };\n    }\n    /**\n     * Fills in CalendarUtils.calendars[locale][calendar] public static object.\n     * @param locale locale name\n     * @param calendar calendar name\n     */\n    static getCalendar(locale, calendar) {\n        CalendarUtils.calendars = CalendarUtils.calendars ?? {};\n        CalendarUtils.calendars[locale] = CalendarUtils.calendars[locale] ?? {};\n        if (CalendarUtils.calendars[locale][calendar] === undefined) {\n            const dayPeriodsObj = CalendarUtils._getDayPeriods(locale, calendar);\n            const erasObj = CalendarUtils._getEras(locale, calendar);\n            let monthFormat;\n            let dayFormat;\n            const standAloneMonths = CalendarUtils._getStandAloneMonths(locale, calendar);\n            const standAloneDays = CalendarUtils._getStandAloneDays(locale, calendar);\n            const useStandAlone = CalendarUtils.exceptionLocales.includes(locale);\n            // TODO this might only be needed for gregorian calendar. Need to check when\n            // we support other calendars\n            if (useStandAlone) {\n                monthFormat = standAloneMonths.monthsNode['stand-alone'];\n                dayFormat = standAloneDays.daysNode['stand-alone'];\n            }\n            else {\n                const monthsDaysNodeObj = CalendarUtils._getFormatMonthAndDays(locale, calendar);\n                monthFormat = monthsDaysNodeObj.monthsNode.format;\n                dayFormat = monthsDaysNodeObj.daysNode.format;\n            }\n            const monthsNodes = {\n                format: monthFormat,\n                'stand-alone': standAloneMonths.monthsNode['stand-alone']\n            };\n            const daysNodes = {\n                format: dayFormat,\n                'stand-alone': standAloneDays.daysNode['stand-alone']\n            };\n            CalendarUtils.calendars[locale][calendar] = {\n                dayPeriods: dayPeriodsObj,\n                months: monthsNodes,\n                days: daysNodes,\n                eras: erasObj,\n                locale: locale\n            };\n        }\n        return CalendarUtils.calendars[locale][calendar];\n    }\n}\nCalendarUtils._monthNamesFormatMap = {\n    short: 'abbreviated',\n    narrow: 'narrow',\n    long: 'wide'\n};\nCalendarUtils._weekdaysFormatMap = {\n    1: 'sun',\n    2: 'mon',\n    3: 'tue',\n    4: 'wed',\n    5: 'thu',\n    6: 'fri',\n    7: 'sat'\n};\n// The following locales have month name like '1<literal>' (where literal is the lang's character for 'month')\n// if we pass in the options\n// month:'long' or month:'short' the corresponding pattern in CLDR is 'M<literal>'\n// which is month numeric followed by the <literal>. As a result formatToParts\n// will return {type: month, value:1} followed by {type: literal, value:<literal>}.\n// These locales have same names for stand-alone and format month names.\n// As a work around we will get the format month names for these\n// locales using the stand-alone option instead of formatToParts.\n// For example: in ja-JP locale we have:\n// \"months\": {\n//   \"format\": {\n//       \"abbreviated\": {\n//           \"1\": \"1\\u6708\",\n//  }\n// but the corresponding pattern is \"yMMMd\": \"y\\u5e74M\\u6708d\\u65e5\"\n// so formatToParts will return\n// {type: month, value:1} followed by {type: literal, value:'\\u6708d'}\n// As a result we get '1' as month name in the calendar data instead of '1\\u6708'\nCalendarUtils.exceptionLocales = [\n    'ja',\n    'ja-JP',\n    'zh',\n    'zh-Hans',\n    'zh-Hans-CN',\n    'zh-Hans-HK',\n    'zh-Hans-MO',\n    'zh-Hans-SG',\n    'zh-Hant',\n    'zh-Hant-HK',\n    'zh-Hant-MO',\n    'zh-Hant-TW'\n];\n\n/**\n * @license\n * Copyright (c) 2004 %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n// cache the converters\nconst formatterCache = new Map();\nfunction getISODateOffset(date, timeZone) {\n    // Get the timezone-adjusted representation of the date parameter interpreted as UTC\n    const d = new Date(Date.UTC(date.year, date.month - 1, date.date, date.hours, date.minutes));\n    const utcDateAtTimezone = _applyTimezoneToDate(d, timeZone);\n    // get the offset of the target timezone (subject to a possible DTS change ajustment)\n    const offset = _getOffset(date, utcDateAtTimezone);\n    let adjustment = 0;\n    d.setTime(d.getTime() - offset * 60000);\n    // check whether the offset is correct\n    if (!_compareDates(_applyTimezoneToDate(d, timeZone), date)) {\n        // try to accommodate 'fall back'/move 1 hour west\n        adjustment = -60;\n        d.setTime(d.getTime() + 60 * 60000);\n        if (!_compareDates(_applyTimezoneToDate(d, timeZone), date)) {\n            // spring forward/move 1 hour east\n            // This case should always produce a match unless we are hitting the missing hour during the 'spring forward'\n            // JS Date() favors the DST in this case, so we will remain at the 'spring forward' offset even if _compareDates()\n            // would have returned false\n            adjustment = 60;\n            d.setTime(d.getTime() - 120 * 60000);\n        }\n    }\n    const result = offset + adjustment;\n    return result;\n}\nfunction _applyTimezoneToDate(d, timeZone) {\n    const cnv = _getConverter(timeZone);\n    const formattedUTC = cnv.format(d);\n    const [localDate, localTime] = formattedUTC.split(',');\n    const [month, date, year] = localDate.split('/');\n    const [hours, minutes] = localTime.trim().split(':');\n    return {\n        year: parseInt(year),\n        month: parseInt(month),\n        date: parseInt(date),\n        hours: parseInt(hours),\n        minutes: parseInt(minutes)\n    };\n}\nfunction _getOffset(original, asUTC) {\n    let originalMins = original.hours * 60 + original.minutes;\n    let utcMinutes = asUTC.hours * 60 + asUTC.minutes;\n    // any shift in year, month or day indicates the following day\n    let delta = original.year - asUTC.year;\n    if (delta == 0) {\n        delta = original.month - asUTC.month;\n        if (delta === 0) {\n            delta = original.date - asUTC.date;\n        }\n    }\n    if (delta > 0) {\n        originalMins += 24 * 60;\n    }\n    else if (delta < 0) {\n        utcMinutes += 24 * 60;\n    }\n    return utcMinutes - originalMins;\n}\nfunction _compareDates(date1, date2) {\n    return (date1.year === date2.year &&\n        date1.month === date2.month &&\n        date1.hours === date2.hours &&\n        date1.minutes === date2.minutes);\n}\nfunction _getConverter(timezone) {\n    let formatter = formatterCache.get(timezone);\n    if (!formatter) {\n        formatter = new Intl.DateTimeFormat('en-US', {\n            year: 'numeric',\n            month: 'numeric',\n            day: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            second: 'numeric',\n            hourCycle: 'h23',\n            timeZone: timezone\n        });\n        formatterCache.set(timezone, formatter);\n    }\n    return formatter;\n}\n\n/**\n * @license\n * Copyright (c) 2004 %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nclass NativeDateTimeConstants {\n}\nNativeDateTimeConstants._YEAR_AND_DATE_REGEXP = /(\\d{1,4})\\D+?(\\d{1,4})/g;\nNativeDateTimeConstants._YMD_REGEXP = /(\\d{1,4})\\D+?(\\d{1,4})\\D+?(\\d{1,4})/g;\nNativeDateTimeConstants._TIME_REGEXP = /(\\d{1,2})(?:\\D(\\d{1,2}))?(?:\\D(\\d{1,2}))?(?:\\D(\\d{1,3}))?/g;\nNativeDateTimeConstants._TIME_FORMAT_REGEXP = /h|H|K|k/g;\nNativeDateTimeConstants._YEAR_REGEXP = /y{1,4}/;\nNativeDateTimeConstants._MONTH_REGEXP = /M{1,5}/;\nNativeDateTimeConstants._DAY_REGEXP = /d{1,2}/;\nNativeDateTimeConstants._WEEK_DAY_REGEXP = /E{1,5}/;\nNativeDateTimeConstants._HOUR_REGEXP = /h{1,2}|k{1,2}/i;\nNativeDateTimeConstants._MINUTE_REGEXP = /m{1,2}/;\nNativeDateTimeConstants._SECOND_REGEXP = /s{1,2}/;\nNativeDateTimeConstants._FRACTIONAL_SECOND_REGEXP = /S{1,3}/;\nNativeDateTimeConstants._AMPM_REGEXP = /a{1,2}/;\nNativeDateTimeConstants._WORD_REGEXP = '(\\\\D+?\\\\s*)';\n// This eslint disable require to make eacs happy\n// eslint-disable-next-line no-useless-escape\nNativeDateTimeConstants._ESCAPE_REGEXP = /([\\^$.*+?|\\[\\](){}])/g;\nNativeDateTimeConstants._TOKEN_REGEXP = /ccccc|cccc|ccc|cc|c|EEEEE|EEEE|EEE|EE|E|dd|d|MMMMM|MMMM|MMM|MM|M|LLLLL|LLLL|LLL|LL|L|yyyy|yy|y|hh|h|HH|H|KK|K|kk|k|mm|m|ss|s|aa|a|SSS|SS|S|zzzz|zzz|zz|z|v|ZZZ|ZZ|Z|XXX|XX|X|VV|GGGGG|GGGG|GGG|GG|G/g;\nNativeDateTimeConstants._ZULU = 'zulu';\nNativeDateTimeConstants._LOCAL = 'local';\nNativeDateTimeConstants._AUTO = 'auto';\nNativeDateTimeConstants._INVARIANT = 'invariant';\nNativeDateTimeConstants._OFFSET = 'offset';\nNativeDateTimeConstants._ALNUM_REGEXP = '(\\\\D+|\\\\d\\\\d?\\\\D|\\\\d\\\\d?|\\\\D+\\\\d\\\\d?)';\nNativeDateTimeConstants._NON_DIGIT_REGEXP = '(\\\\D+|\\\\D+\\\\d\\\\d?)';\nNativeDateTimeConstants._NON_DIGIT_OPT_REGEXP = '(\\\\D*)';\nNativeDateTimeConstants._STR_REGEXP = '(.+?)';\nNativeDateTimeConstants._TWO_DIGITS_REGEXP = '(\\\\d\\\\d?)';\nNativeDateTimeConstants._THREE_DIGITS_REGEXP = '(\\\\d{1,3})';\nNativeDateTimeConstants._FOUR_DIGITS_REGEXP = '(\\\\d{1,4})';\nNativeDateTimeConstants._SLASH_REGEXP = '(\\\\/)';\nNativeDateTimeConstants._PROPERTIES_MAP = {\n    MMM: {\n        token: 'months',\n        style: 'format',\n        mLen: 'abbreviated',\n        matchIndex: 0,\n        key: 'month',\n        value: 'short',\n        regExp: NativeDateTimeConstants._ALNUM_REGEXP\n    },\n    MMMM: {\n        token: 'months',\n        style: 'format',\n        mLen: 'wide',\n        matchIndex: 0,\n        key: 'month',\n        value: 'long',\n        regExp: NativeDateTimeConstants._ALNUM_REGEXP\n    },\n    MMMMM: {\n        token: 'months',\n        style: 'format',\n        mLen: 'narrow',\n        matchIndex: 0,\n        key: 'month',\n        value: 'narrow',\n        regExp: NativeDateTimeConstants._ALNUM_REGEXP\n    },\n    LLL: {\n        token: 'months',\n        style: 'stand-alone',\n        mLen: 'abbreviated',\n        matchIndex: 1,\n        key: 'month',\n        value: 'short',\n        regExp: NativeDateTimeConstants._ALNUM_REGEXP\n    },\n    LLLL: {\n        token: 'months',\n        style: 'stand-alone',\n        mLen: 'wide',\n        matchIndex: 1,\n        key: 'month',\n        value: 'long',\n        regExp: NativeDateTimeConstants._ALNUM_REGEXP\n    },\n    LLLLL: {\n        token: 'months',\n        style: 'stand-alone',\n        mLen: 'narrow',\n        matchIndex: 1,\n        key: 'month',\n        value: 'narrow',\n        regExp: NativeDateTimeConstants._ALNUM_REGEXP\n    },\n    E: {\n        token: 'days',\n        style: 'format',\n        dLen: 'abbreviated',\n        matchIndex: 0,\n        key: 'weekday',\n        value: 'short',\n        regExp: NativeDateTimeConstants._NON_DIGIT_REGEXP\n    },\n    EE: {\n        token: 'days',\n        style: 'format',\n        dLen: 'abbreviated',\n        matchIndex: 0,\n        key: 'weekday',\n        value: 'short',\n        regExp: NativeDateTimeConstants._NON_DIGIT_REGEXP\n    },\n    EEE: {\n        token: 'days',\n        style: 'format',\n        dLen: 'abbreviated',\n        matchIndex: 0,\n        key: 'weekday',\n        value: 'short',\n        regExp: NativeDateTimeConstants._NON_DIGIT_REGEXP\n    },\n    EEEE: {\n        token: 'days',\n        style: 'format',\n        dLen: 'wide',\n        matchIndex: 0,\n        key: 'weekday',\n        value: 'long',\n        regExp: NativeDateTimeConstants._NON_DIGIT_REGEXP\n    },\n    EEEEE: {\n        token: 'days',\n        style: 'format',\n        dLen: 'narrow',\n        matchIndex: 0,\n        key: 'weekday',\n        value: 'narrow',\n        regExp: NativeDateTimeConstants._NON_DIGIT_REGEXP\n    },\n    c: {\n        token: 'days',\n        style: 'stand-alone',\n        dLen: 'abbreviated',\n        matchIndex: 1,\n        key: 'weekday',\n        value: 'short',\n        regExp: NativeDateTimeConstants._NON_DIGIT_REGEXP\n    },\n    cc: {\n        token: 'days',\n        style: 'stand-alone',\n        dLen: 'abbreviated',\n        matchIndex: 1,\n        key: 'weekday',\n        value: 'short',\n        regExp: NativeDateTimeConstants._NON_DIGIT_REGEXP\n    },\n    ccc: {\n        token: 'days',\n        style: 'stand-alone',\n        dLen: 'abbreviated',\n        matchIndex: 1,\n        key: 'weekday',\n        value: 'short',\n        regExp: NativeDateTimeConstants._NON_DIGIT_REGEXP\n    },\n    cccc: {\n        token: 'days',\n        style: 'stand-alone',\n        dLen: 'wide',\n        matchIndex: 1,\n        key: 'weekday',\n        value: 'long',\n        regExp: NativeDateTimeConstants._NON_DIGIT_REGEXP\n    },\n    ccccc: {\n        token: 'days',\n        style: 'stand-alone',\n        dLen: 'narrow',\n        matchIndex: 1,\n        key: 'weekday',\n        value: 'narrow',\n        regExp: NativeDateTimeConstants._NON_DIGIT_REGEXP\n    },\n    h: {\n        token: 'time',\n        timePart: 'hour',\n        start1: 0,\n        end1: 11,\n        start2: 1,\n        end2: 12,\n        key: 'hour',\n        value: 'numeric',\n        regExp: NativeDateTimeConstants._TWO_DIGITS_REGEXP\n    },\n    hh: {\n        token: 'time',\n        timePart: 'hour',\n        start1: 0,\n        end1: 11,\n        start2: 1,\n        end2: 12,\n        key: 'hour',\n        value: '2-digit',\n        regExp: NativeDateTimeConstants._TWO_DIGITS_REGEXP\n    },\n    K: {\n        token: 'time',\n        timePart: 'hour',\n        start1: 0,\n        end1: 12,\n        start2: 0,\n        end2: 12,\n        key: 'hour',\n        value: 'numeric',\n        regExp: NativeDateTimeConstants._TWO_DIGITS_REGEXP\n    },\n    KK: {\n        token: 'time',\n        timePart: 'hour',\n        start1: 0,\n        end1: 12,\n        start2: 0,\n        end2: 12,\n        key: 'hour',\n        value: '2-digit',\n        regExp: NativeDateTimeConstants._TWO_DIGITS_REGEXP\n    },\n    H: {\n        token: 'time',\n        timePart: 'hour',\n        start1: 0,\n        end1: 23,\n        start2: 0,\n        end2: 23,\n        key: 'hour',\n        value: 'numeric',\n        regExp: NativeDateTimeConstants._TWO_DIGITS_REGEXP\n    },\n    HH: {\n        token: 'time',\n        timePart: 'hour',\n        start1: 0,\n        end1: 23,\n        start2: 0,\n        end2: 23,\n        key: 'hour',\n        value: '2-digit',\n        regExp: NativeDateTimeConstants._TWO_DIGITS_REGEXP\n    },\n    k: {\n        token: 'time',\n        timePart: 'hour',\n        start1: 0,\n        end1: 24,\n        start2: 0,\n        end2: 24,\n        key: 'hour',\n        value: 'numeric',\n        regExp: NativeDateTimeConstants._TWO_DIGITS_REGEXP\n    },\n    kk: {\n        token: 'time',\n        timePart: 'hour',\n        start1: 0,\n        end1: 24,\n        start2: 0,\n        end2: 24,\n        key: 'hour',\n        value: '2-digit',\n        regExp: NativeDateTimeConstants._TWO_DIGITS_REGEXP\n    },\n    m: {\n        token: 'time',\n        timePart: 'minute',\n        start1: 0,\n        end1: 59,\n        start2: 0,\n        end2: 59,\n        key: 'minute',\n        value: 'numeric',\n        regExp: NativeDateTimeConstants._TWO_DIGITS_REGEXP\n    },\n    mm: {\n        token: 'time',\n        timePart: 'minute',\n        start1: 0,\n        end1: 59,\n        start2: 0,\n        end2: 59,\n        key: 'minute',\n        value: '2-digit',\n        regExp: NativeDateTimeConstants._TWO_DIGITS_REGEXP\n    },\n    s: {\n        token: 'time',\n        timePart: 'second',\n        start1: 0,\n        end1: 59,\n        start2: 0,\n        end2: 59,\n        key: 'second',\n        value: 'numeric',\n        regExp: NativeDateTimeConstants._TWO_DIGITS_REGEXP\n    },\n    ss: {\n        token: 'time',\n        timePart: 'second',\n        start1: 0,\n        end1: 59,\n        start2: 0,\n        end2: 59,\n        key: 'second',\n        value: '2-digit',\n        regExp: NativeDateTimeConstants._TWO_DIGITS_REGEXP\n    },\n    S: {\n        token: 'time',\n        timePart: 'millisec',\n        start1: 0,\n        end1: 999,\n        start2: 0,\n        end2: 999,\n        key: 'millisecond',\n        value: 'numeric',\n        regExp: NativeDateTimeConstants._THREE_DIGITS_REGEXP\n    },\n    SS: {\n        token: 'time',\n        timePart: 'millisec',\n        start1: 0,\n        end1: 999,\n        start2: 0,\n        end2: 999,\n        key: 'millisecond',\n        value: 'numeric',\n        regExp: NativeDateTimeConstants._THREE_DIGITS_REGEXP\n    },\n    SSS: {\n        token: 'time',\n        timePart: 'millisec',\n        start1: 0,\n        end1: 999,\n        start2: 0,\n        end2: 999,\n        key: 'millisecond',\n        value: 'numeric',\n        regExp: NativeDateTimeConstants._THREE_DIGITS_REGEXP\n    },\n    d: {\n        token: 'dayOfMonth',\n        key: 'day',\n        value: 'numeric',\n        getPartIdx: 2,\n        regExp: NativeDateTimeConstants._TWO_DIGITS_REGEXP\n    },\n    dd: {\n        token: 'dayOfMonth',\n        key: 'day',\n        value: '2-digit',\n        getPartIdx: 2,\n        regExp: NativeDateTimeConstants._TWO_DIGITS_REGEXP\n    },\n    M: {\n        token: 'monthIndex',\n        key: 'month',\n        value: 'numeric',\n        getPartIdx: 1,\n        regExp: NativeDateTimeConstants._TWO_DIGITS_REGEXP\n    },\n    MM: {\n        token: 'monthIndex',\n        key: 'month',\n        value: '2-digit',\n        getPartIdx: 1,\n        regExp: NativeDateTimeConstants._TWO_DIGITS_REGEXP\n    },\n    L: {\n        token: 'monthIndex',\n        key: 'month',\n        value: 'numeric',\n        getPartIdx: 1,\n        regExp: NativeDateTimeConstants._TWO_DIGITS_REGEXP\n    },\n    LL: {\n        token: 'monthIndex',\n        key: 'month',\n        value: '2-digit',\n        getPartIdx: 1,\n        regExp: NativeDateTimeConstants._TWO_DIGITS_REGEXP\n    },\n    y: {\n        token: 'year',\n        key: 'year',\n        value: 'numeric',\n        regExp: NativeDateTimeConstants._FOUR_DIGITS_REGEXP\n    },\n    yy: {\n        token: 'year',\n        key: 'year',\n        value: '2-digit',\n        regExp: NativeDateTimeConstants._TWO_DIGITS_REGEXP\n    },\n    yyyy: {\n        token: 'year',\n        key: 'year',\n        value: 'numeric',\n        regExp: NativeDateTimeConstants._FOUR_DIGITS_REGEXP\n    },\n    a: {\n        token: 'ampm',\n        key: 'dayPeriod',\n        value: undefined,\n        regExp: NativeDateTimeConstants._WORD_REGEXP\n    },\n    z: {\n        token: 'tzAbbrev',\n        key: 'timeZoneName',\n        value: 'short',\n        regExp: NativeDateTimeConstants._STR_REGEXP\n    },\n    v: {\n        token: 'tzAbbrev',\n        key: 'timeZoneName',\n        value: 'short',\n        regExp: NativeDateTimeConstants._STR_REGEXP\n    },\n    zz: {\n        token: 'tzAbbrev',\n        key: 'timeZoneName',\n        value: 'short',\n        regExp: NativeDateTimeConstants._STR_REGEXP\n    },\n    zzz: {\n        token: 'tzAbbrev',\n        key: 'timeZoneName',\n        value: 'short',\n        regExp: NativeDateTimeConstants._STR_REGEXP\n    },\n    zzzz: {\n        token: 'tzFull',\n        key: 'timeZoneName',\n        value: 'long',\n        regExp: NativeDateTimeConstants._STR_REGEXP\n    },\n    Z: {\n        token: 'tzhm',\n        key: 'tzhm',\n        value: 'short',\n        regExp: NativeDateTimeConstants._STR_REGEXP,\n        type: 'tzOffset'\n    },\n    ZZ: {\n        token: 'tzhm',\n        key: 'tzhm',\n        value: 'short',\n        regExp: NativeDateTimeConstants._STR_REGEXP,\n        type: 'tzOffset'\n    },\n    ZZZ: {\n        token: 'tzhm',\n        key: 'tzhm',\n        value: 'short',\n        regExp: NativeDateTimeConstants._STR_REGEXP,\n        type: 'tzOffset'\n    },\n    X: {\n        token: 'tzh',\n        key: 'tzh',\n        value: 'short',\n        regExp: NativeDateTimeConstants._STR_REGEXP,\n        type: 'tzOffset'\n    },\n    XX: {\n        token: 'tzhm',\n        key: 'tzhm',\n        value: 'short',\n        regExp: NativeDateTimeConstants._STR_REGEXP,\n        type: 'tzOffset'\n    },\n    XXX: {\n        token: 'tzhsepm',\n        key: 'tzhsepm',\n        value: 'short',\n        regExp: NativeDateTimeConstants._STR_REGEXP,\n        type: 'tzOffset'\n    },\n    VV: {\n        token: 'tzid',\n        key: 'tzid',\n        value: 'short',\n        regExp: NativeDateTimeConstants._STR_REGEXP,\n        type: 'tzOffset'\n    },\n    G: {\n        token: 'era',\n        key: 'era',\n        value: 'eraAbbr',\n        regExp: NativeDateTimeConstants._NON_DIGIT_REGEXP\n    },\n    GG: {\n        token: 'era',\n        key: 'era',\n        value: 'eraAbbr',\n        regExp: NativeDateTimeConstants._NON_DIGIT_REGEXP\n    },\n    GGG: {\n        token: 'era',\n        key: 'era',\n        value: 'eraAbbr',\n        regExp: NativeDateTimeConstants._NON_DIGIT_REGEXP\n    },\n    GGGG: {\n        token: 'era',\n        key: 'era',\n        value: 'eraName',\n        regExp: NativeDateTimeConstants._NON_DIGIT_REGEXP\n    },\n    GGGGG: {\n        token: 'era',\n        key: 'era',\n        value: 'eraNarrow',\n        regExp: NativeDateTimeConstants._NON_DIGIT_REGEXP\n    },\n    '/': {\n        token: 'slash',\n        regExp: NativeDateTimeConstants._SLASH_REGEXP\n    }\n};\nNativeDateTimeConstants.FRACTIONAL_SECOND_MAP = {\n    a: {\n        key: 'dayPeriod',\n        token: 'dayPeriod',\n        value: 'narrow'\n    },\n    SSS: {\n        key: 'fractionalSecondDigits',\n        token: 'fractionalSecond',\n        value: 3\n    },\n    SS: {\n        key: 'fractionalSecondDigits',\n        token: 'fractionalSecond',\n        value: 2\n    },\n    S: {\n        key: 'fractionalSecondDigits',\n        token: 'fractionalSecond',\n        value: 1\n    }\n};\n// Map between tokens length and options\nNativeDateTimeConstants._tokenMap = {\n    era: { short: 'GGG', long: 'GGGG', narrow: 'GGGGG' },\n    month: { short: 'MMM', long: 'MMMM', narrow: 'MMMMM', numeric: 'M', '2-digit': 'MM' },\n    weekday: { short: 'EEE', long: 'EEEE', narrow: 'EEEEE' },\n    year: { numeric: 'y', '2-digit': 'yy' },\n    day: { numeric: 'd', '2-digit': 'dd' },\n    hour: { numeric: 'h', '2-digit': 'hh' },\n    minute: { numeric: 'm', '2-digit': 'mm' },\n    second: { numeric: 's', '2-digit': 'ss' },\n    fractionalSecond: { 1: 'S', 2: 'SS', 3: 'SSS' },\n    timeZoneName: { short: 'z', long: 'zzzz' }\n};\n// Map between tokens and timeStyle and dateStyle\n// Always set year to y, hour to h, minute to m, and second to s\n// We need to get the pattern from the options. It is only needed by parse,\n// prase does not care of the difference between h an hh, y and yy because\n// they are all numeric. so 2021/09/01 is equivalent to 21/9/1 because the\n// pattern is (\\d)+/(\\d)+/(\\(d)+ matches both of inputs\nNativeDateTimeConstants._dateTimeFormats = {\n    dateStyle: {\n        full: { year: 'y', month_s: 'MM', month_m: 'MMMM', weekday: 'EEEE', day: 'd' },\n        long: { year: 'y', month_s: 'MM', month_m: 'MMMM', day: 'd' },\n        medium: { year: 'y', month_s: 'MM', month_m: 'MMM', day: 'd' },\n        short: { year: 'y', month_s: 'M', month_m: 'MMM', day: 'd' }\n    },\n    timeStyle: {\n        full: { hour: 'h', minute: 'mm', second: 'ss', timeZoneName: 'zzzz' },\n        long: { hour: 'h', minute: 'mm', second: 'ss', timeZoneName: 'z' },\n        medium: { hour: 'h', minute: 'mm', second: 'ss' },\n        short: { hour: 'h', minute: 'mm' }\n    }\n};\n// letters a-z and A-Z are reserved for date-time tokens in the pattern\n// they need to be surrounded by single quote if they are not a token.\n// for example at should appear as 'at' in the pattern\nNativeDateTimeConstants._ALPHA_REGEXP = /([a-zA-Z]+)/;\nNativeDateTimeConstants._HOUR12_REGEXP = /h/g;\nNativeDateTimeConstants._hourCycleMap = {\n    h12: 'h',\n    h23: 'H',\n    h11: 'K',\n    h24: 'k'\n};\n// zh-TW locales have different symbols for pm depending on the time.\n// The following entries are noon, after noon, and evening\nNativeDateTimeConstants._zh_tw_locales = ['zh-TW', 'zh-Hant', 'zh-Hant-TW'];\nNativeDateTimeConstants._zh_tw_pm_symbols = ['\\u4e2d\\u5348', '\\u4e0b\\u5348', '\\u665a\\u4e0a'];\n\n/**\n * @license\n * Copyright (c) 2004 %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n/**\n * Date time utilities.\n */\nconst regexTrim = /^\\s+|\\s+$|\\u200f|\\u200e/g;\nconst regexTrimNumber = /\\s+|\\u200f|\\u200e/g;\nconst regexTrimRightZeros = /0+$/g;\nconst zeros = ['0', '00', '000'];\n// ISO 8601 string accepted values:\n// -date only: YYYY or YYYY-MM or YYYY-MM-dd\n// -time only without timezone: Thh:mm or Thh:mm:ss or Thh:mm:ss.SSS\n// -time only with timezone: any of the time values above followed by any of the following:\n// Z or +/-hh:mm or +/-hhmm or +/-hh\n// -date time: any of the date values followed by any of the time values\nconst _ISO_DATE_REGEXP = /^[+-]?\\d{4}(?:-\\d{2}(?:-\\d{2})?)?(?:T\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d{1,3})?)?(Z|[+-]\\d{2}(?::?\\d{2})?)?)?$|^T\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d{1,3})?)?(Z|[+-]\\d{2}(?::?\\d{2})?)?$/;\nconst _ISO_DATE_ONLY_REGEXP = /^[+-]?\\d{4}-\\d{2}-\\d{2}$/;\n/**\n * Returns true if the value represents a date-only ISO string.\n *\n * @param {string} value\n * @returns true if the string represents a date-only ISO string\n */\nfunction isDateOnlyIsoString(value) {\n    // If value is undefined/null, returns true.\n    // If value is empty or blank string, returns false.\n    // Otherwise checks value against the regexp.\n    const isValid = value === undefined || value === null\n        ? true\n        : value.trim().length > 0\n            ? _ISO_DATE_ONLY_REGEXP.test(value.trim())\n            : false;\n    return isValid;\n}\nfunction startsWith(value, pattern) {\n    return value.indexOf(pattern) === 0;\n}\nfunction trim(value) {\n    return (value + '').replace(regexTrim, '');\n}\nfunction trimRightZeros(value) {\n    return (value + '').replace(regexTrimRightZeros, '');\n}\nfunction trimNumber(value) {\n    const s = (value + '').replace(regexTrimNumber, '');\n    return s;\n}\nfunction toUpper(value) {\n    // \"he-IL\" has non-breaking space in weekday names.\n    return value.split('\\u00A0').join(' ').toUpperCase();\n}\nfunction padZeros(num, c) {\n    let s = num + '';\n    let isNegative = false;\n    if (num < 0) {\n        s = s.substr(1);\n        isNegative = true;\n    }\n    if (c > 1 && s.length < c) {\n        s = zeros[c - 2] + s;\n        s = s.substr(s.length - c, c);\n    }\n    if (isNegative) {\n        s = '-' + s;\n    }\n    return s;\n}\nfunction zeroPad(str, count, left) {\n    let result = '' + str;\n    for (let l = result.length; l < count; l += 1) {\n        result = left ? '0' + result : result + '0';\n    }\n    return result;\n}\nfunction _throwInvalidISOStringRange(isoStr, name, displayValue, displayLow, displayHigh) {\n    const msg = 'The string ' +\n        isoStr +\n        ' is not a valid ISO 8601 string: ' +\n        displayValue +\n        ' is out of range.  Enter a value between ' +\n        displayLow +\n        ' and ' +\n        displayHigh +\n        ' for ' +\n        name;\n    const errorInfo = {\n        cause: {\n            code: 'isoStringOutOfRange',\n            parameterMap: {\n                isoStr: isoStr,\n                value: displayValue,\n                minValue: displayLow,\n                maxValue: displayHigh,\n                propertyName: name\n            }\n        }\n    };\n    const rangeError = new RangeError(msg, errorInfo);\n    throw rangeError;\n}\nfunction _throwInvalidISOStringSyntax(str) {\n    const msg = 'The string ' + str + ' is not a valid ISO 8601 string syntax.';\n    const errorInfo = {\n        cause: {\n            code: 'invalidISOString',\n            parameterMap: {\n                isoStr: str\n            }\n        }\n    };\n    const e = new Error(msg, errorInfo);\n    throw e;\n}\n/**\n * <p>Returns a local ISO string provided a Date object.\n * This method can be used to convert a moment in time or a local ISO string into\n * a local ISO string. It can also be used to convert any Date object into local ISO\n * string.</p>\n * Examples below are where the local (user's system) time zone is UTC-06:00<br>\n * dateToLocalIso(new Date('2021-06-04T00:00:00-04:00')); -->'2021-06-03T22:00:00'<br>\n * dateToLocalIso(new Date('2021-06-04T02:30:00Z')); -->'2021-06-03T20:30:00'<br>\n * In this example the input ISO string is local, the output is the same:<br>\n * dateToLocalIso(new Date('2021-06-04T02:30:00')); -->'2021-06-04T02:30:00'<br>\n * In this example we just want to convert a Date object:<br>\n * dateToLocalIso(new Date());<br>\n */\nfunction dateToLocalIso(_date) {\n    let date = _date;\n    if (typeof date === 'number') {\n        date = new Date(date);\n    }\n    let isoStr = padZeros(date.getFullYear(), 4) +\n        '-' +\n        padZeros(date.getMonth() + 1, 2) +\n        '-' +\n        padZeros(date.getDate(), 2) +\n        'T' +\n        padZeros(date.getHours(), 2) +\n        ':' +\n        padZeros(date.getMinutes(), 2) +\n        ':' +\n        padZeros(date.getSeconds(), 2);\n    if (date.getMilliseconds() > 0) {\n        isoStr += '.' + trimRightZeros(padZeros(date.getMilliseconds(), 3));\n    }\n    return isoStr;\n}\nfunction isLeapYear(y) {\n    if (y % 400 === 0) {\n        return true;\n    }\n    else if (y % 100 === 0) {\n        return false;\n    }\n    else if (y % 4 === 0) {\n        return true;\n    }\n    return false;\n}\n// Get days in month depending on month and leap year\nfunction getDaysInMonth(y, m) {\n    switch (m) {\n        case 0:\n        case 2:\n        case 4:\n        case 6:\n        case 7:\n        case 9:\n        case 11:\n            return 31;\n        case 1:\n            if (isLeapYear(y)) {\n                return 29;\n            }\n            return 28;\n        default:\n            return 30;\n    }\n}\nfunction IsoStrParts(isoString) {\n    const tst = _ISO_DATE_REGEXP.test(isoString);\n    if (tst === false) {\n        _throwInvalidISOStringSyntax(isoString);\n    }\n    const splitted = isoString.split('T');\n    const tIndex = isoString.indexOf('T');\n    const today = new Date();\n    let i;\n    let isBC = false;\n    const datetime = [today.getFullYear(), today.getMonth() + 1, today.getDate(), 0, 0, 0, 0];\n    if (splitted[0] !== '') {\n        // contains date portion\n        // test if date is BC, year is negative\n        if (startsWith(splitted[0], '-')) {\n            splitted[0] = splitted[0].slice(1);\n            isBC = true;\n        }\n        const dateSplitted = splitted[0].split('-');\n        for (i = 0; i < dateSplitted.length; i++) {\n            const val = parseInt(dateSplitted[i], 10);\n            // validate month\n            if (i === 1) {\n                if (val < 1 || val > 12) {\n                    _throwInvalidISOStringRange(isoString, 'month', val, 1, 12);\n                }\n            }\n            // validate day\n            if (i === 2) {\n                const nbDays = getDaysInMonth(datetime[0], datetime[1] - 1);\n                if (val < 1 || val > nbDays) {\n                    _throwInvalidISOStringRange(isoString, 'day', val, 1, nbDays);\n                }\n            }\n            datetime[i] = val;\n        }\n        if (isBC) {\n            datetime[0] = -datetime[0];\n        }\n    }\n    if (tIndex !== -1) {\n        const milliSecSplitted = splitted[1].split('.'); // contain millseconds\n        const timeSplitted = milliSecSplitted[0].split(':'); // contain hours, minutes, seconds\n        for (i = 0; i < timeSplitted.length; i++) {\n            const tVal = parseInt(timeSplitted[i], 10);\n            // validate hour\n            if (i === 0) {\n                if (tVal < 0 || tVal > 24) {\n                    _throwInvalidISOStringRange(isoString, 'hour', tVal, 0, 24);\n                }\n            }\n            // validate minute\n            if (i === 1) {\n                if (tVal < 0 || tVal > 59) {\n                    _throwInvalidISOStringRange(isoString, 'minute', tVal, 0, 59);\n                }\n            }\n            // validate second\n            if (i === 2) {\n                if (tVal < 0 || tVal > 59) {\n                    _throwInvalidISOStringRange(isoString, 'second', tVal, 0, 59);\n                }\n            }\n            datetime[3 + i] = tVal;\n        }\n        if (milliSecSplitted.length === 2 && milliSecSplitted[1]) {\n            datetime[6] = parseInt(zeroPad(milliSecSplitted[1], 3, false), 10);\n        }\n    }\n    return datetime;\n}\nfunction _toBoolean(value) {\n    if (typeof value === 'string') {\n        const s = value.toLowerCase().trim();\n        switch (s) {\n            case 'true':\n            case '1':\n                return true;\n            case 'false':\n            case '0':\n                return false;\n            default:\n                return value;\n        }\n    }\n    return value;\n}\n// Return a function getOption.\n// The getOption function extracts the value of the property named\n// property from the provided options object, converts it to the required type,\n// checks whether it is one of a List of allowed values, and fills in a\n// fallback value if necessary.\nfunction getGetOption(options, getOptionCaller) {\n    if (options === undefined) {\n        throw new Error('Internal ' + getOptionCaller + ' error. Default options missing.');\n    }\n    const getOption = function (property, type, values, defaultValue) {\n        if (options[property] !== undefined) {\n            let value = options[property];\n            switch (type) {\n                case 'boolean':\n                    value = _toBoolean(value);\n                    break;\n                case 'string':\n                    value = String(value);\n                    break;\n                case 'number':\n                    value = Number(value);\n                    break;\n                default:\n                    throw new Error('Internal error. Wrong value type.');\n            }\n            if (values !== undefined && values.indexOf(value) === -1) {\n                const expectedValues = [];\n                for (let i = 0; i < values.length; i++) {\n                    expectedValues.push(values[i]);\n                }\n                const msg = \"The value '\" +\n                    options[property] +\n                    \"' is out of range for '\" +\n                    getOptionCaller +\n                    \"' options property '\" +\n                    property +\n                    \"'. Valid values: \" +\n                    expectedValues;\n                const rangeError = new RangeError(msg);\n                const errorInfo = {\n                    errorCode: 'optionOutOfRange',\n                    parameterMap: {\n                        propertyName: property,\n                        propertyValue: options[property],\n                        propertyValueValid: expectedValues,\n                        caller: getOptionCaller\n                    }\n                };\n                rangeError.errorInfo = errorInfo;\n                throw rangeError;\n            }\n            return value;\n        }\n        return defaultValue;\n    };\n    return getOption;\n}\nfunction partsToIsoString(parts) {\n    let isoStr = padZeros(parts[0], 4) +\n        '-' +\n        padZeros(parts[1], 2) +\n        '-' +\n        padZeros(parts[2], 2) +\n        'T' +\n        padZeros(parts[3], 2) +\n        ':' +\n        padZeros(parts[4], 2) +\n        ':' +\n        padZeros(parts[5], 2);\n    if (parts[6] > 0) {\n        isoStr += '.' + trimRightZeros(padZeros(parts[6], 3));\n    }\n    return isoStr;\n}\n/**\n * Returns a local Date object from a local ISO string. This method is only meant\n * to work with local ISO strings. If the input ISO string contain Z or offset,\n * they will be ignored.\n * @param {string} isoString\n * @memberof oj.OraI18nUtils\n * @method isoToLocalDate\n */\nfunction isoToLocalDate(isoString) {\n    if (!isoString || typeof isoString !== 'string') {\n        return null;\n    }\n    return _isoToLocalDateIgnoreTimezone(isoString);\n}\nfunction _isoToLocalDateIgnoreTimezone(isoString) {\n    const datetime = IsoStrParts(isoString);\n    const date = new Date(datetime[0], datetime[1] - 1, datetime[2], datetime[3], datetime[4], datetime[5], datetime[6]);\n    // As per the documentation:\n    // new Date(year, monthIndex [, day [, hours [, minutes [, seconds [, milliseconds]]]]]);\n    // year - Integer value representing the year and\n    // values from 0 to 99 map to the years 1900 to 1999; all other values are the actual year.\n    // Use Date.prototype.setFullYear to create dates between the years 0 and 99.\n    date.setFullYear(datetime[0]);\n    return date;\n}\nfunction getISOStrFormatInfo(isoStr) {\n    const res = {\n        format: null,\n        dateTime: null,\n        timeZone: '',\n        isoStrParts: null\n    };\n    const exe = _ISO_DATE_REGEXP.exec(isoStr);\n    if (exe === null) {\n        _throwInvalidISOStringSyntax(isoStr);\n    }\n    if (exe && exe[1] === undefined && exe[2] === undefined) {\n        res.format = 'local';\n        res.dateTime = isoStr;\n        res.isoStrParts = IsoStrParts(res.dateTime);\n        return res;\n    }\n    res.timeZone = exe[1] !== undefined ? exe[1] : exe[2];\n    if (res.timeZone === 'Z') {\n        res.format = 'zulu';\n    }\n    else {\n        res.format = 'offset';\n    }\n    const isoStrLen = isoStr.length;\n    const timeZoneLen = res.timeZone.length;\n    res.dateTime = isoStr.substring(0, isoStrLen - timeZoneLen);\n    res.isoStrParts = IsoStrParts(res.dateTime);\n    return res;\n}\nfunction getTimeStringFromOffset(prefix, offset, reverseSign, alwaysMinutes) {\n    const isNegative = reverseSign ? offset > 0 : offset < 0;\n    const absOffset = Math.abs(offset);\n    let hours = Math.floor(absOffset / 60);\n    const minutes = absOffset % 60;\n    const sign = isNegative ? '-' : '+';\n    if (alwaysMinutes) {\n        hours = zeroPad(hours, 2, true);\n    }\n    let str = prefix + sign + hours;\n    if (minutes > 0 || alwaysMinutes) {\n        str += ':' + zeroPad(minutes, 2, true);\n    }\n    return str;\n}\n\nvar dateTimeUtils = {\n    __proto__: null,\n    _ISO_DATE_REGEXP: _ISO_DATE_REGEXP,\n    isDateOnlyIsoString: isDateOnlyIsoString,\n    startsWith: startsWith,\n    trim: trim,\n    trimRightZeros: trimRightZeros,\n    trimNumber: trimNumber,\n    toUpper: toUpper,\n    padZeros: padZeros,\n    zeroPad: zeroPad,\n    dateToLocalIso: dateToLocalIso,\n    isLeapYear: isLeapYear,\n    getDaysInMonth: getDaysInMonth,\n    IsoStrParts: IsoStrParts,\n    getGetOption: getGetOption,\n    partsToIsoString: partsToIsoString,\n    isoToLocalDate: isoToLocalDate,\n    getISOStrFormatInfo: getISOStrFormatInfo,\n    getTimeStringFromOffset: getTimeStringFromOffset\n};\n\n/**\n * @license\n * Copyright (c) 2004 %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n// cache locale system time zone\nlet localSystemTimeZone = null;\nclass NativeParserImpl {\n    static parseImpl(str, pattern, resOptions, cal) {\n        let dtStyle = 0;\n        // First try if str is an iso 8601 string\n        const testIsoStr = _ISO_DATE_REGEXP.test(str);\n        let parsedIsoStr = '';\n        let isoStrInfo = null;\n        let res;\n        if (testIsoStr === true) {\n            parsedIsoStr = str;\n            dtStyle = this._isoStrDateTimeStyle(str);\n        }\n        else {\n            dtStyle = this._dateTimeStyle(resOptions);\n            res = this._parseExact(str, pattern, resOptions, cal);\n            parsedIsoStr = res.value;\n        }\n        isoStrInfo = getISOStrFormatInfo(parsedIsoStr);\n        if (resOptions.timeZone !== undefined && isoStrInfo.format !== NativeDateTimeConstants._LOCAL) {\n            this._adjustHours(isoStrInfo, resOptions);\n        }\n        parsedIsoStr = this._createParseISOStringFromDate(dtStyle, isoStrInfo, resOptions);\n        if (res === undefined) {\n            res = { value: parsedIsoStr, warning: null };\n        }\n        else {\n            res.value = parsedIsoStr;\n            res.warning = null;\n        }\n        // If the returned ISO string is date-time and isoStrFormat is local,\n        // log a warning saying that local is not supported for date-time iso strings\n        // and return offset instead\n        if (dtStyle === 2 && resOptions.isoStrFormat === NativeDateTimeConstants._LOCAL) {\n            // Disable warning since it causes noise in test runs.\n            // TODO: Re-enable once JET-59083 is fixed.\n            //Logger.warn(\n            //  'isoStrFormat was set to local for date-time ISO string. local was ignored and parse returned an ISO string with offset.'\n            //);\n        }\n        return res;\n    }\n    // appends pre- and post- token match strings while removing escaped\n    // characters.\n    // Returns a single quote count which is used to determine if the\n    // token occurs\n    // in a string literal.\n    static _appendPreOrPostMatch(preMatch, strings) {\n        let quoteCount = 0;\n        let escaped = false;\n        for (let i = 0, il = preMatch.length; i < il; i++) {\n            const c = preMatch.charAt(i);\n            switch (c) {\n                case \"'\":\n                    if (escaped) {\n                        strings.push(\"'\");\n                    }\n                    else {\n                        quoteCount += 1;\n                    }\n                    escaped = false;\n                    break;\n                case '\\\\':\n                    if (escaped) {\n                        strings.push('\\\\');\n                    }\n                    escaped = !escaped;\n                    break;\n                default:\n                    strings.push(c);\n                    escaped = false;\n                    break;\n            }\n        }\n        return quoteCount;\n    }\n    static _validateRange(range) {\n        if (range.value < range.low || range.value > range.high) {\n            const msg = range.displayValue +\n                ' is out of range.  Enter a value between ' +\n                range.displayLow +\n                ' and ' +\n                range.displayHigh +\n                ' for ' +\n                range.name;\n            const errorInfo = {\n                cause: {\n                    code: 'datetimeOutOfRange',\n                    parameterMap: {\n                        value: range.displayValue,\n                        minValue: range.displayLow,\n                        maxValue: range.displayHigh,\n                        propertyName: range.name\n                    }\n                }\n            };\n            const rangeError = new RangeError(msg, errorInfo);\n            throw rangeError;\n        }\n    }\n    // Throw an exception if date-time pattern is invalid\n    static _throwInvalidDateFormat(format, options, m) {\n        const isDate = options.year !== undefined ||\n            options.month !== undefined ||\n            options.weekday !== undefined ||\n            options.day !== undefined;\n        const isTime = options.hour !== undefined || options.minute !== undefined || options.second !== undefined;\n        let samplePattern = '';\n        if (isDate && isTime) {\n            samplePattern = 'MM/dd/yy hh:mm:ss a';\n        }\n        else if (isDate) {\n            samplePattern = 'MM/dd/yy';\n        }\n        else {\n            samplePattern = 'hh:mm:ss a';\n        }\n        const msg = 'Unexpected character(s) ' +\n            m +\n            ' encountered in the pattern \"' +\n            format +\n            ' An example of a valid pattern is \"' +\n            samplePattern +\n            '\".';\n        const errorInfo = {\n            cause: {\n                code: 'optionValueInvalid',\n                parameterMap: {\n                    propertyName: 'pattern',\n                    propertyValue: format\n                }\n            }\n        };\n        const error = new SyntaxError(msg, errorInfo);\n        throw error;\n    }\n    // parse functions\n    static _throwWeekdayMismatch(weekday, day) {\n        const msg = 'The weekday ' + weekday + ' does not match the date ' + day;\n        const errorInfo = {\n            cause: {\n                code: 'dateToWeekdayMismatch',\n                parameterMap: {\n                    weekday: weekday,\n                    date: day\n                }\n            }\n        };\n        const error = new FormatParseError(msg, errorInfo);\n        throw error;\n    }\n    static _throwDateFormatMismatch(value, format, style) {\n        let msg = '';\n        let errorCodeType = '';\n        if (style === 2) {\n            msg =\n                'The value \"' + value + '\" does not match the expected date-time format \"' + format + '\"';\n            errorCodeType = 'datetimeFormatMismatch';\n        }\n        else if (style === 0) {\n            msg = 'The value \"' + value + '\" does not match the expected date format \"' + format + '\"';\n            errorCodeType = 'dateFormatMismatch';\n        }\n        else {\n            msg = 'The value \"' + value + '\" does not match the expected time format \"' + format + '\"';\n            errorCodeType = 'timeFormatMismatch';\n        }\n        const errorInfo = {\n            cause: {\n                code: errorCodeType,\n                parameterMap: {\n                    value: value,\n                    format: format\n                }\n            }\n        };\n        const error = new FormatParseError(msg, errorInfo);\n        throw error;\n    }\n    static _parseTimezoneOffset(_offset) {\n        const parts = _offset.split(':');\n        const offsetParts = new Array(2);\n        // offset is +hh:mm\n        if (parts.length === 2) {\n            offsetParts[0] = parseInt(parts[0], 10);\n            offsetParts[1] = parseInt(parts[1], 10);\n        }\n        else if (_offset.length === 2 || _offset.length === 3) {\n            // offset is +hh or +h\n            offsetParts[0] = parseInt(_offset, 10);\n            offsetParts[1] = 0;\n        }\n        else {\n            // offset is +hhmm\n            offsetParts[0] = parseInt(_offset.substr(0, 3), 10);\n            offsetParts[1] = parseInt(_offset.substr(3), 10);\n        }\n        return offsetParts;\n    }\n    static _expandYear(start2DigitYear, year) {\n        // expands 2-digit year into 4 digits.\n        year = Number(year);\n        if (year < 100) {\n            const ambiguousTwoDigitYear = start2DigitYear % 100;\n            // eslint-disable-next-line no-param-reassign\n            year += Math.floor(start2DigitYear / 100) * 100 + (year < ambiguousTwoDigitYear ? 100 : 0);\n        }\n        return year;\n    }\n    static _arrayIndexOfMonthOrDay(monthsDaysData, userInput, type) {\n        const trimUserInput = NativeParserImpl.toUpperTrimmedNoPeriod(userInput);\n        const keys = Object.keys(monthsDaysData);\n        for (let i = 0; i < keys.length; i++) {\n            const valueFromData = monthsDaysData[keys[i]];\n            const trimValueFromData = NativeParserImpl.toUpperTrimmedNoPeriod(valueFromData);\n            // first try an exact match.\n            if (trimUserInput === trimValueFromData) {\n                return i;\n            }\n            // Test if user input is a number. We don't use parseInt because we want\n            // to make sure trimUserInput is only number lie '5' and not '5abc'\n            if (type === 'months') {\n                const trimUserInputNumber = Number(trimUserInput);\n                // In some locales the month name is something like 1月. Remove the literal\n                // before compare in case the user enters only 1.\n                const numberPartFromData = parseInt(trimValueFromData);\n                if (Number.isInteger(numberPartFromData) && Number.isInteger(trimUserInputNumber)) {\n                    if (numberPartFromData === trimUserInputNumber) {\n                        return i;\n                    }\n                }\n            }\n        }\n        return -1;\n    }\n    static toUpperTrimmedNoPeriod(value) {\n        let trimItem = toUpper(value);\n        trimItem = trim(trimItem);\n        // In some locales the short month name ends with '.', remove it in case\n        // the user does not enter the dot at the end of the month name.\n        trimItem = trimItem.replace(/\\.$/, '');\n        return trimItem;\n    }\n    static _getDayIndex(calNode, value) {\n        let ret = 0;\n        let days = [];\n        const calDaysFmt = calNode.days.format;\n        const calDaysStdAlone = calNode.days['stand-alone'];\n        days = [\n            calDaysFmt.abbreviated,\n            calDaysFmt.wide,\n            calDaysStdAlone.abbreviated,\n            calDaysStdAlone.wide\n        ];\n        for (let m = 0; m < days.length; m++) {\n            ret = this._arrayIndexOfMonthOrDay(days[m], value, 'days');\n            if (ret !== -1) {\n                return ret;\n            }\n        }\n        return ret;\n    }\n    static _getMonthIndex(calNode, value) {\n        let ret = -1;\n        const calMonthsFmt = calNode.months.format;\n        const calMonthsStdAlone = calNode.months['stand-alone'];\n        const months = [\n            calMonthsFmt.wide,\n            calMonthsFmt.abbreviated,\n            calMonthsStdAlone.wide,\n            calMonthsStdAlone.abbreviated\n        ];\n        for (let m = 0; m < months.length; m++) {\n            ret = this._arrayIndexOfMonthOrDay(months[m], value, 'months');\n            if (ret !== -1) {\n                return ret;\n            }\n        }\n        return ret;\n    }\n    // converts a format string into a regular expression with groups that\n    // can be used to extract date fields from a date string.\n    // check for a cached parse regex.\n    static _getParseRegExp(format, options) {\n        //let re = {};\n        // expand single digit formats, then escape regular expression\n        //  characters.\n        const expFormat = format.replace(NativeDateTimeConstants._ESCAPE_REGEXP, '\\\\\\\\$1');\n        const regexp = ['^'];\n        const groups = [];\n        let index = 0;\n        let quoteCount = 0;\n        // iterate through each date token found.\n        let match = NativeDateTimeConstants._TOKEN_REGEXP.exec(expFormat);\n        while (match !== null) {\n            const preMatch = expFormat.slice(index, match.index);\n            index = NativeDateTimeConstants._TOKEN_REGEXP.lastIndex;\n            // don't replace any matches that occur inside a string literal.\n            quoteCount += this._appendPreOrPostMatch(preMatch, regexp);\n            if (quoteCount % 2) {\n                regexp.push(match[0]);\n            }\n            else {\n                // add a regex group for the token.\n                const m = match[0];\n                let add = '';\n                if (NativeDateTimeConstants._PROPERTIES_MAP[m] !== undefined) {\n                    add = NativeDateTimeConstants._PROPERTIES_MAP[m].regExp;\n                }\n                else {\n                    this._throwInvalidDateFormat(format, options, m);\n                }\n                if (add) {\n                    regexp.push(add);\n                }\n                groups.push(match[0]);\n            }\n            match = NativeDateTimeConstants._TOKEN_REGEXP.exec(expFormat);\n        }\n        this._appendPreOrPostMatch(expFormat.slice(index), regexp);\n        regexp.push('$');\n        // allow whitespace to differ when matching formats.\n        const regexpStr = regexp.join('').replace(/\\s+/g, '\\\\s+');\n        const parseRegExp = {\n            regExp: regexpStr,\n            groups: groups\n        };\n        // cache the regex for this format.\n        //re[format] = parseRegExp;\n        return parseRegExp;\n    }\n    static _getTokenIndex(arr, token) {\n        for (let i = 0; i < arr.length; i++) {\n            if (arr[i][token] !== undefined) {\n                return i;\n            }\n        }\n        return 0;\n    }\n    // time lenient parse\n    static _parseLenienthms(result, timepart, format, dtype, calNode) {\n        // hour, optional minutes and optional seconds\n        NativeDateTimeConstants._TIME_REGEXP.lastIndex = 0;\n        let hour = 0;\n        let minute = 0;\n        let second = 0;\n        let msec = 0;\n        let idx;\n        let match = NativeDateTimeConstants._TIME_REGEXP.exec(timepart);\n        let range;\n        if (match === null) {\n            this._throwDateFormatMismatch(timepart, format, dtype);\n        }\n        if (match[1] !== undefined) {\n            hour = parseInt(match[1], 10);\n        }\n        if (match[2] !== undefined) {\n            minute = parseInt(match[2], 10);\n        }\n        if (match[3] !== undefined) {\n            second = parseInt(match[3], 10);\n        }\n        if (match[4] !== undefined) {\n            msec = parseInt(match[4], 10);\n        }\n        NativeDateTimeConstants._TIME_FORMAT_REGEXP.lastIndex = 0;\n        match = NativeDateTimeConstants._TIME_FORMAT_REGEXP.exec(format);\n        switch (match[0]) {\n            case 'h':\n                // Hour in am/pm (1-12)\n                if (hour === 12) {\n                    hour = 0;\n                }\n                range = {\n                    name: 'hour',\n                    value: hour,\n                    low: 0,\n                    high: 11,\n                    displayValue: hour,\n                    displayLow: 1,\n                    displayHigh: 12\n                };\n                this._validateRange(range);\n                idx = this._matchPMSymbol(calNode, timepart);\n                if (idx && hour < 12) {\n                    hour += 12;\n                }\n                break;\n            case 'K':\n                // Hour in am/pm (0-11)\n                range = {\n                    name: 'hour',\n                    value: hour,\n                    low: 0,\n                    high: 11,\n                    displayValue: hour,\n                    displayLow: 0,\n                    displayHigh: 11\n                };\n                this._validateRange(range);\n                idx = this._matchPMSymbol(calNode, timepart);\n                if (idx && hour < 12) {\n                    hour += 12;\n                }\n                break;\n            case 'H':\n                range = {\n                    name: 'hour',\n                    value: hour,\n                    low: 0,\n                    high: 23,\n                    displayValue: hour,\n                    displayLow: 0,\n                    displayHigh: 23\n                };\n                this._validateRange(range);\n                break;\n            case 'k':\n                if (hour === 24) {\n                    hour = 0;\n                }\n                range = {\n                    name: 'hour',\n                    value: hour,\n                    low: 0,\n                    high: 23,\n                    displayValue: hour,\n                    displayLow: 1,\n                    displayHigh: 24\n                };\n                break;\n            default:\n                break;\n        }\n        // Minutes.\n        range = {\n            name: 'minute',\n            value: minute,\n            low: 0,\n            high: 59,\n            displayValue: minute,\n            displayLow: 0,\n            displayHigh: 59\n        };\n        this._validateRange(range);\n        // Seconds.\n        range = {\n            name: 'second',\n            value: second,\n            low: 0,\n            high: 59,\n            displayValue: second,\n            displayLow: 0,\n            displayHigh: 59\n        };\n        this._validateRange(range);\n        // millisec\n        range = {\n            name: 'farctionalSecond',\n            value: msec,\n            low: 0,\n            high: 999,\n            displayValue: msec,\n            displayLow: 0,\n            displayHigh: 999\n        };\n        this._validateRange(range);\n        result.setHours(hour, minute, second, msec);\n    }\n    static _getWeekdayName(value, calNode) {\n        const calDaysFmt = calNode.days.format;\n        const calDaysStandAlone = calNode.days['stand-alone'];\n        const days = [\n            calDaysFmt.wide,\n            calDaysFmt.abbreviated,\n            calDaysStandAlone.wide,\n            calDaysStandAlone.abbreviated\n        ];\n        for (let i = 0; i < days.length; i++) {\n            const dayKeys = Object.keys(days[i]);\n            for (let j = 0; j < dayKeys.length; j++) {\n                const dName = days[i][dayKeys[j]];\n                const dRegExp = new RegExp(dName + '\\\\b', 'i');\n                if (dRegExp.test(value)) {\n                    return dName;\n                }\n            }\n        }\n        return null;\n    }\n    // lenient parse yMd and yMEd patterm. Must have year, moth,\n    // date all numbers. Ex: 5/3/2013\n    // weekday is optional. If present it must match date.\n    // Ex:  Tuesday 11/19/2013\n    // if year is 3-digits it can be anywhere in the string.\n    // Otherwise assume its position based on pattern\n    // if date > 12 it can be anywhere in the string.\n    // Otherwise assume its position based on pattern\n    // separators can be any non digit characters\n    static _parseLenientyMEd(value, format, options, cal, isDateTime) {\n        NativeDateTimeConstants._YMD_REGEXP.lastIndex = 0;\n        const match = NativeDateTimeConstants._YMD_REGEXP.exec(value);\n        let dtype = 0;\n        if (match === null) {\n            dtype = isDateTime ? 2 : 0;\n            this._throwDateFormatMismatch(value, format, dtype);\n        }\n        const tokenIndexes = [\n            {\n                y: format.indexOf('y')\n            },\n            {\n                M: format.indexOf('M')\n            },\n            {\n                d: format.indexOf('d')\n            }\n        ];\n        tokenIndexes.sort(function (a, b) {\n            const n1 = Object.keys(a)[0];\n            const n2 = Object.keys(b)[0];\n            return a[n1] - b[n2];\n        });\n        let year = 0;\n        let month = 0;\n        let day = 0;\n        let yearIndex = 0;\n        let foundDayIndex = 0;\n        let i = 0;\n        const dayIndex = this._getTokenIndex(tokenIndexes, 'd');\n        let foundYear = false;\n        let foundDay = false;\n        for (i = 1; i <= 3; i++) {\n            const tokenMatch = match[i];\n            // find year if year is yyy|yyyy\n            const intToken = parseInt(tokenMatch);\n            if (tokenMatch.length > 2 || intToken > 31) {\n                year = intToken;\n                foundYear = true;\n                yearIndex = i - 1;\n            }\n        }\n        if (!foundYear) {\n            yearIndex = this._getTokenIndex(tokenIndexes, 'y');\n            year = match[this._getTokenIndex(tokenIndexes, 'y') + 1];\n        }\n        // find day if day value > 12\n        for (i = 0; i < 3; i++) {\n            if (i !== yearIndex && match[i + 1] > 12) {\n                day = match[i + 1];\n                foundDay = true;\n                foundDayIndex = i;\n                break;\n            }\n        }\n        if (!foundDay) {\n            if (yearIndex === this._getTokenIndex(tokenIndexes, 'd')) {\n                day = match[this._getTokenIndex(tokenIndexes, 'y') + 1];\n                month = match[this._getTokenIndex(tokenIndexes, 'M') + 1];\n            }\n            else if (yearIndex === this._getTokenIndex(tokenIndexes, 'M')) {\n                day = match[this._getTokenIndex(tokenIndexes, 'd') + 1];\n                month = match[this._getTokenIndex(tokenIndexes, 'y') + 1];\n            }\n            else {\n                day = match[this._getTokenIndex(tokenIndexes, 'd') + 1];\n                month = match[this._getTokenIndex(tokenIndexes, 'M') + 1];\n            }\n        }\n        else {\n            for (i = 0; i < 3; i++) {\n                if (i !== foundDayIndex && i !== yearIndex) {\n                    month = match[i + 1];\n                    break;\n                }\n            }\n            if (month === undefined) {\n                month = match[this._getTokenIndex(tokenIndexes, 'M') + 1];\n            }\n        }\n        month -= 1;\n        const daysInMonth = getDaysInMonth(year, month);\n        let range;\n        // if both month and day > 12 and swapped, throw exception\n        // based on original order\n        if (foundDay && dayIndex !== foundDayIndex && month > 12) {\n            range = {\n                name: 'month',\n                value: day,\n                low: 0,\n                high: 11,\n                displayValue: day,\n                displayLow: 1,\n                displayHigh: 12\n            };\n            this._validateRange(range);\n        }\n        range = {\n            name: 'month',\n            value: month,\n            low: 0,\n            high: 11,\n            displayValue: month + 1,\n            displayLow: 1,\n            displayHigh: 12\n        };\n        this._validateRange(range);\n        range = {\n            name: 'day',\n            value: day,\n            low: 1,\n            high: daysInMonth,\n            displayValue: day,\n            displayLow: 1,\n            displayHigh: daysInMonth\n        };\n        this._validateRange(range);\n        const start2DigitYear = options.twoDigitYearStart || 1950;\n        year = this._expandYear(start2DigitYear, year);\n        range = {\n            name: 'year',\n            value: year,\n            low: 0,\n            high: 9999,\n            displayValue: year,\n            displayLow: 0,\n            displayHigh: 9999\n        };\n        this._validateRange(range);\n        const parsedDate = new Date(year, month, day);\n        // locate weekday\n        const dName = this._getWeekdayName(value, cal);\n        if (dName !== null) {\n            const weekDay = this._getDayIndex(cal, dName);\n            // day of week does not match date\n            if (parsedDate.getDay() !== weekDay) {\n                this._throwWeekdayMismatch(dName, parsedDate.getDate());\n            }\n        }\n        if (isDateTime) {\n            const timepart = value.substr(NativeDateTimeConstants._YMD_REGEXP.lastIndex);\n            if (timepart.length === 0) {\n                parsedDate.setHours(0, 0, 0, 0);\n            }\n            else {\n                this._parseLenienthms(parsedDate, timepart, format, 2, cal);\n            }\n        }\n        const result = {\n            value: dateToLocalIso(parsedDate),\n            warning: 'lenient parsing was used'\n        };\n        return result;\n    }\n    // lenient parse yMMMd and yMMMEd patterns. Must have year, date as numbers\n    // and month name.\n    // weekday is optional. If present it must match date.\n    // Ex:  Monday Nov, 11 2013\n    // weekday and month name can be anywhere in the string.\n    // if year > 2-digits it can be anywhere in the string.\n    // Otherwise assume its position based on pattern\n    // separators can be any non digit characters\n    static _parseLenientyMMMEd(value, format, options, cal, isDateTime) {\n        const origValue = value;\n        // eslint-disable-next-line no-param-reassign\n        value = toUpper(value);\n        // locate month name\n        const calMonthsFmt = cal.months.format;\n        const calMonthsStandAlone = cal.months['stand-alone'];\n        const months = [\n            calMonthsFmt.wide,\n            calMonthsFmt.abbreviated,\n            calMonthsStandAlone.wide,\n            calMonthsStandAlone.abbreviated\n        ];\n        let foundMatch = false;\n        let reverseMonth = [];\n        let i = 0;\n        let mName = '';\n        for (i = 0; i < months.length; i++) {\n            reverseMonth = [];\n            const monthKeys = Object.keys(months[i]);\n            let j = 0;\n            for (j = 0; j < monthKeys.length; j++) {\n                mName = toUpper(months[i][monthKeys[j]]);\n                reverseMonth.unshift({\n                    idx: j,\n                    name: mName\n                });\n            }\n            reverseMonth.sort(function (a, b) {\n                return b.idx - a.idx;\n            });\n            for (j = 0; j < reverseMonth.length; j++) {\n                mName = reverseMonth[j].name;\n                if (value.indexOf(mName) !== -1) {\n                    foundMatch = true;\n                    // eslint-disable-next-line no-param-reassign\n                    value = value.replace(mName, '');\n                    break;\n                }\n            }\n            if (foundMatch) {\n                break;\n            }\n        }\n        // There is no month name. Try yMEd lenient parse.\n        if (!foundMatch) {\n            return this._parseLenientyMEd(origValue, format, options, cal, isDateTime);\n        }\n        const month = this._getMonthIndex(cal, mName);\n        let range = {\n            name: 'month',\n            value: month,\n            low: 0,\n            high: 11,\n            displayValue: month,\n            displayLow: 1,\n            displayHigh: 12\n        };\n        this._validateRange(range);\n        // locate weekday\n        const dName = this._getWeekdayName(origValue, cal);\n        const dRegExp = new RegExp(dName + '\\\\W', 'i');\n        if (dName !== null) {\n            // eslint-disable-next-line no-param-reassign\n            value = value.replace(dRegExp, '');\n        }\n        // find year and date\n        NativeDateTimeConstants._YEAR_AND_DATE_REGEXP.lastIndex = 0;\n        const match = NativeDateTimeConstants._YEAR_AND_DATE_REGEXP.exec(value);\n        if (match === null) {\n            const dtype = isDateTime ? 2 : 0;\n            this._throwDateFormatMismatch(origValue, format, dtype);\n        }\n        const tokenIndexes = [\n            {\n                y: format.indexOf('y')\n            },\n            {\n                d: format.indexOf('d')\n            }\n        ];\n        tokenIndexes.sort(function (a, b) {\n            const n1 = Object.keys(a)[0];\n            const n2 = Object.keys(b)[0];\n            return a[n1] - b[n2];\n        });\n        let year = 0;\n        let day = 0;\n        let yearIndex = 0;\n        let foundYear = false;\n        for (i = 1; i <= 2; i++) {\n            const tokenMatch = match[i];\n            // find year if year is yyy|yyyy\n            const intToken = parseInt(tokenMatch);\n            if (tokenMatch.length > 2 || intToken > 31) {\n                year = intToken;\n                foundYear = true;\n                yearIndex = i - 1;\n            }\n        }\n        if (!foundYear) {\n            yearIndex = this._getTokenIndex(tokenIndexes, 'y');\n            year = parseInt(match[this._getTokenIndex(tokenIndexes, 'y') + 1], 10);\n        }\n        if (yearIndex === this._getTokenIndex(tokenIndexes, 'd')) {\n            day = parseInt(match[this._getTokenIndex(tokenIndexes, 'y') + 1], 10);\n        }\n        else {\n            day = parseInt(match[this._getTokenIndex(tokenIndexes, 'd') + 1], 10);\n        }\n        const start2DigitYear = options.twoDigitYearStart || 1950;\n        year = this._expandYear(start2DigitYear, year);\n        range = {\n            name: 'year',\n            value: year,\n            low: 0,\n            high: 9999,\n            displayValue: year,\n            displayLow: 0,\n            displayHigh: 9999\n        };\n        this._validateRange(range);\n        const parsedDate = new Date(year, month, day);\n        if (dName !== null) {\n            const weekDay = this._getDayIndex(cal, dName);\n            // day of week does not match date\n            if (parsedDate.getDay() !== weekDay) {\n                this._throwWeekdayMismatch(dName, parsedDate.getDate());\n            }\n        }\n        const daysInMonth = getDaysInMonth(year, month);\n        range = {\n            name: 'day',\n            value: day,\n            low: 1,\n            high: daysInMonth,\n            displayValue: day,\n            displayLow: 1,\n            displayHigh: daysInMonth\n        };\n        this._validateRange(range);\n        if (isDateTime) {\n            const timepart = value.substr(NativeDateTimeConstants._YEAR_AND_DATE_REGEXP.lastIndex);\n            if (timepart.length === 0) {\n                parsedDate.setHours(0, 0, 0, 0);\n            }\n            else {\n                this._parseLenienthms(parsedDate, timepart, format, 2, cal);\n            }\n        }\n        const result = {\n            value: dateToLocalIso(parsedDate),\n            warning: 'lenient parsing was used'\n        };\n        return result;\n    }\n    static _parseLenient(value, format, options, cal) {\n        const dtStyle = this._dateTimeStyle(options);\n        let result;\n        switch (dtStyle) {\n            case 0:\n                // date style\n                result = this._parseLenientyMMMEd(value, format, options, cal, false);\n                break;\n            case 1:\n                // time style\n                const d = new Date();\n                this._parseLenienthms(d, value, format, 1, cal);\n                const isoStr = dateToLocalIso(d);\n                result = { value: isoStr, warning: 'lenient parsing was used' };\n                break;\n            case 2:\n                // date-time style\n                result = this._parseLenientyMMMEd(value, format, options, cal, true);\n                break;\n            default:\n                result = { value: '', warning: 'lenient parsing was used' };\n                break;\n        }\n        // convert result to gregorian\n        const parts = IsoStrParts(result.value);\n        const gregParts = [parts[0], parts[1], parts[2]];\n        const isoParts = result.value.split('T');\n        result.value =\n            padZeros(gregParts[0], 4) +\n                '-' +\n                padZeros(gregParts[1], 2) +\n                '-' +\n                padZeros(gregParts[2], 2) +\n                'T' +\n                isoParts[1];\n        return result;\n    }\n    static _getNameIndex(calNode, datePart, matchGroup, mLength, style, \n    // @ts-ignore\n    matchIndex, start1, end1, start2, end2, name) {\n        let index = 0;\n        const monthsFormat = calNode[datePart][style];\n        if (datePart === 'months') {\n            index = this._getMonthIndex(calNode, matchGroup);\n        }\n        else {\n            index = this._getDayIndex(calNode, matchGroup);\n        }\n        const startName = monthsFormat[mLength][start2];\n        const endName = monthsFormat[mLength][end2];\n        const range = {\n            name: name,\n            value: index,\n            low: start1,\n            high: end1,\n            displayValue: parseInt(matchGroup),\n            displayLow: startName,\n            displayHigh: endName\n        };\n        this._validateRange(range);\n        return index;\n    }\n    static _validateTimePart(matchInt, _timeObj, objMap, timeToken) {\n        const timeObj = _timeObj;\n        timeObj[objMap.timePart] = matchInt;\n        if (timeToken === 'h' || timeToken === 'hh') {\n            if (matchInt === 12) {\n                timeObj[objMap.timePart] = 0;\n            }\n        }\n        else if (timeToken === 'k' || timeToken === 'kk') {\n            timeObj.htoken = timeToken;\n            if (matchInt === 24) {\n                timeObj[objMap.timePart] = 0;\n            }\n        }\n        else if (timeToken === 'K' || timeToken === 'KK') {\n            if (matchInt === 12) {\n                timeObj[objMap.timePart] = 0;\n            }\n        }\n        const range = {\n            name: objMap.timePart,\n            value: timeObj[objMap.timePart],\n            low: objMap.start1,\n            high: objMap.end1,\n            displayValue: matchInt,\n            displayLow: objMap.start2,\n            displayHigh: objMap.end2\n        };\n        this._validateRange(range);\n    }\n    // test if the pattern/options is date, time or date-time\n    // 0: date, 1:time, 2:date-time\n    static _dateTimeStyle(resOptions) {\n        const isTime = resOptions.hour !== undefined ||\n            resOptions.minute !== undefined ||\n            resOptions.second !== undefined ||\n            resOptions.fractionalSecondDigits !== undefined;\n        const isDate = resOptions.year !== undefined ||\n            resOptions.month !== undefined ||\n            resOptions.day !== undefined ||\n            resOptions.weekday !== undefined;\n        if (isDate && isTime) {\n            return 2;\n        }\n        else if (isTime) {\n            return 1;\n        }\n        else if (isDate) {\n            return 0;\n        }\n        // try predefined style\n        if (resOptions.dateStyle !== undefined && resOptions.timeStyle !== undefined) {\n            return 2;\n        }\n        if (resOptions.timeStyle !== undefined) {\n            return 1;\n        }\n        return 0;\n    }\n    // for zh-TW locales the pm symbol can vary depending on the time. We need\n    // to iterate through the pm symbols in order to find a match.\n    static _matchPMSymbol(cal, matchGroup) {\n        const loc = cal.locale;\n        let isPM = false;\n        let i = 0;\n        if (NativeDateTimeConstants._zh_tw_locales.includes(loc)) {\n            const pmSymbols = NativeDateTimeConstants._zh_tw_pm_symbols;\n            for (i = 0; i < pmSymbols.length; i++) {\n                const pmSymbol = pmSymbols[i];\n                if (matchGroup.indexOf(pmSymbol) !== -1) {\n                    return true;\n                }\n            }\n        }\n        else {\n            const calPM = cal.dayPeriods.format.wide.pm;\n            isPM = toUpper(matchGroup).indexOf(toUpper(calPM)) !== -1;\n        }\n        return isPM;\n    }\n    // exact match parsing for date-time. If it fails, try lenient parse.\n    static _parseExact(value, format, resOptions, cal) {\n        // remove spaces from era.\n        const eraPart = cal.eras.eraAbbr['1'];\n        const trimEraPart = trimNumber(eraPart);\n        // eslint-disable-next-line no-param-reassign\n        value = value.replace(eraPart, trimEraPart);\n        const getOption = getGetOption(resOptions, 'NativeDateTimeConverter.parse');\n        const lenientParse = getOption('lenientParse', 'string', ['none', 'full'], 'full');\n        const dtStyle = this._dateTimeStyle(resOptions);\n        // convert date formats into regular expressions with groupings.\n        // use the regexp to determine the input format and extract the date\n        //  fields.\n        const parseInfo = this._getParseRegExp(format, resOptions);\n        const match = new RegExp(parseInfo.regExp).exec(value);\n        if (match === null) {\n            if (lenientParse === 'full') {\n                return this._parseLenient(value, format, resOptions, cal);\n            }\n            this._throwDateFormatMismatch(value, format, dtStyle);\n        }\n        // found a date format that matches the input.\n        const groups = parseInfo.groups;\n        let year = null;\n        let month = null;\n        let date = null;\n        let weekDay = null;\n        let hourOffset = '';\n        let tzID = null;\n        let pmHour = undefined;\n        let weekDayName = '';\n        let range;\n        const timeObj = {\n            hour: 0,\n            minute: 0,\n            second: 0,\n            millisec: 0,\n            htoken: ''\n        };\n        const start2DigitYear = resOptions.twoDigitYearStart || 1950;\n        // iterate the format groups to extract and set the date fields.\n        for (let j = 0, jl = groups.length; j < jl; j++) {\n            const matchGroup = match[j + 1];\n            if (matchGroup) {\n                const current = groups[j];\n                const matchInt = parseInt(matchGroup, 10);\n                const currentGroup = NativeDateTimeConstants._PROPERTIES_MAP[current];\n                switch (currentGroup.token) {\n                    case 'months':\n                        month = this._getNameIndex(cal, currentGroup.token, matchGroup, currentGroup.mLen, currentGroup.style, currentGroup.matchIndex, 0, 11, '1', '12', 'month name');\n                        break;\n                    case 'days':\n                        weekDayName = matchGroup;\n                        weekDay = this._getNameIndex(cal, currentGroup.token, matchGroup, currentGroup.dLen, currentGroup.style, currentGroup.matchIndex, 0, 6, 'sun', 'sat', 'weekday');\n                        break;\n                    case 'time':\n                        this._validateTimePart(matchInt, timeObj, currentGroup, current);\n                        break;\n                    case 'dayOfMonth':\n                        date = matchInt;\n                        break;\n                    case 'monthIndex':\n                        // Month.\n                        month = matchInt - 1;\n                        // try lenient parse for date style only\n                        if (month > 11 && lenientParse === 'full') {\n                            try {\n                                return this._parseLenient(value, format, resOptions, cal);\n                            }\n                            catch (e) {\n                                range = {\n                                    name: 'month',\n                                    value: month,\n                                    low: 0,\n                                    high: 11,\n                                    displayValue: month + 1,\n                                    displayLow: 1,\n                                    displayHigh: 12\n                                };\n                                this._validateRange(range);\n                            }\n                        }\n                        break;\n                    case 'year':\n                        year = this._expandYear(start2DigitYear, matchInt);\n                        break;\n                    case 'ampm':\n                        pmHour = this._matchPMSymbol(cal, matchGroup);\n                        break;\n                    case 'tzhm':\n                        // Time zone hours minutes: -0800\n                        hourOffset = matchGroup.substr(-2);\n                        hourOffset = matchGroup.substr(0, 3) + ':' + hourOffset;\n                        break;\n                    case 'tzhsepm':\n                        // Time zone hours minutes: -08:00\n                        hourOffset = matchGroup;\n                        break;\n                    case 'tzh':\n                        // Time zone hours minutes: -08\n                        hourOffset = matchGroup + ':00';\n                        break;\n                    case 'tzid':\n                        // Time zone ID: America/Los_Angeles\n                        tzID = matchGroup;\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n        const parsedDate = new Date();\n        if (year === null) {\n            year = parsedDate.getFullYear();\n        }\n        // if day and month are unspecified,the defaults are current\n        // day and month.\n        if (month === null && date === null) {\n            month = parsedDate.getMonth();\n            date = parsedDate.getDate();\n        }\n        else if (date === null) {\n            // if day is unspecified, default 1st day of month.\n            date = 1;\n        }\n        parsedDate.setFullYear(year, month, date);\n        // validate month days\n        const MonthDays = getDaysInMonth(year, month);\n        range = {\n            name: 'day',\n            value: date,\n            low: 1,\n            high: MonthDays,\n            displayValue: date,\n            displayLow: 1,\n            displayHigh: MonthDays\n        };\n        this._validateRange(range);\n        // if pm designator token was found make sure the hours fit the\n        // 24-hour clock.\n        if (pmHour == true && timeObj.hour < 12) {\n            timeObj.hour += 12;\n        }\n        // when hour is 12 AM and hour cycle is h24, set hour to 00\n        if (pmHour == false &&\n            timeObj.hour == 12 &&\n            (timeObj.htoken == 'k' || timeObj.htoken == 'kk')) {\n            timeObj.hour = 0;\n        }\n        const parts = [year, month + 1, date];\n        parts[3] = timeObj.hour;\n        parts[4] = timeObj.minute;\n        parts[5] = timeObj.second;\n        parts[6] = timeObj.millisec;\n        let isoParsedDate = partsToIsoString(parts);\n        if (tzID !== null) {\n            const zoneOffset = this._getTimeZoneOffset(parts, tzID);\n            hourOffset = getTimeStringFromOffset('', zoneOffset, false, true);\n        }\n        if (hourOffset !== '') {\n            isoParsedDate += hourOffset;\n        }\n        // validate year\n        range = {\n            name: 'year',\n            value: year,\n            low: 0,\n            high: 9999,\n            displayValue: year,\n            displayLow: 0,\n            displayHigh: 9999\n        };\n        this._validateRange(range);\n        // validate month\n        range = {\n            name: 'month',\n            value: month,\n            low: 0,\n            high: 11,\n            displayValue: month + 1,\n            displayLow: 1,\n            displayHigh: 12\n        };\n        this._validateRange(range);\n        // validate day range, depending on the month and year\n        const daysInMonth = getDaysInMonth(parts[0], parts[1] - 1);\n        range = {\n            name: 'day',\n            value: parts[2],\n            low: 1,\n            high: daysInMonth,\n            displayValue: parts[2],\n            displayLow: 1,\n            displayHigh: daysInMonth\n        };\n        this._validateRange(range);\n        // day of week does not match date\n        if (weekDay !== null) {\n            const validateDay = isoToLocalDate(isoParsedDate);\n            if (validateDay && validateDay.getDay() !== weekDay) {\n                this._throwWeekdayMismatch(weekDayName, validateDay.getDate());\n            }\n        }\n        const result = { value: isoParsedDate };\n        return result;\n    }\n    // test if the isoStr is date, time or date-time\n    // 0: date, 1:time, 2:date-time\n    static _isoStrDateTimeStyle(isoStr) {\n        const timeIndex = isoStr.indexOf('T');\n        if (timeIndex === -1) {\n            return 0;\n        }\n        if (timeIndex > 0) {\n            return 2;\n        }\n        return 1;\n    }\n    /*\n     * Returns the offset of a time zone at a given moment-in-time.\n     *\n     * @param {Object} localeElements - locale data bundle, it also contain the\n     * timezone data.\n     * @param {string} tzName - The IANA time zone name for which we want to get the\n     * offset. If it is the same as the local system's time zone, return the local\n     * system's time zone offset by using Date.getTimezoneOffset() instead of\n     * going through time zone data.\n     * @param {array} parts - An array conataining year, month, day, hour, minute,\n     * second that are used to create The Date object representing the moment-in-time.\n     */\n    static _getTimeZoneOffset(parts, tzName) {\n        // if The timeZone in the options is the same as local system's\n        // timezone, use Date.getTimezoneOffset\n        const localTtimeZone = this.getLocalSystemTimeZone();\n        if (localTtimeZone === tzName) {\n            const d = new Date(parts[0], parts[1] - 1, parts[2], parts[3], parts[4], parts[5]);\n            const localOffset = d.getTimezoneOffset();\n            return -localOffset;\n        }\n        const dateParts = {\n            year: parts[0],\n            month: parts[1],\n            date: parts[2],\n            hours: parts[3],\n            minutes: parts[4]\n        };\n        const offset = getISODateOffset(dateParts, tzName);\n        return offset;\n    }\n    static _getAdjustedOffset(timezone, isoStrInfo) {\n        const parts = isoStrInfo.isoStrParts;\n        return this._getTimeZoneOffset(parts, timezone);\n    }\n    static _adjustHours(isoStrInfo, options) {\n        const value = isoStrInfo.isoStrParts;\n        const isoStrFormat = isoStrInfo.format;\n        let origOffset = 0;\n        switch (isoStrFormat) {\n            case NativeDateTimeConstants._OFFSET:\n                const tzParts = this._parseTimezoneOffset(isoStrInfo.timeZone);\n                const hoursOffset = tzParts[0];\n                const minOffset = tzParts[1];\n                origOffset = hoursOffset * 60 + (hoursOffset < 0 ? -minOffset : minOffset);\n                break;\n            case NativeDateTimeConstants._ZULU:\n                origOffset = 0;\n                break;\n            default:\n                break;\n        }\n        let newOffset = this._getAdjustedOffset(options.timeZone, isoStrInfo);\n        newOffset -= origOffset;\n        // target time zone might have switched to dst before orig timezone, or\n        // orig time zone might have switched to dst before target timezone.\n        // Need to get the correct offset at target time zone. This happens when\n        // we are very close to after target or orig time zones switched to dst.\n        const newDate = new Date(value[0], value[1] - 1, value[2], value[3], value[4], value[4]);\n        newDate.setHours(value[3] + ((newOffset / 60) << 0), newOffset % 60);\n        const newDateIso = dateToLocalIso(newDate);\n        const newDateIsoStrInfo = getISOStrFormatInfo(newDateIso);\n        newOffset = this._getAdjustedOffset(options.timeZone, newDateIsoStrInfo);\n        newOffset -= origOffset;\n        // Do the offset math through the Date object.\n        const adjustD = new Date(Date.UTC(value[0], value[1] - 1, value[2], value[3], value[4], value[5]));\n        const adjustedMin = adjustD.getUTCMinutes() + newOffset;\n        // eslint-disable-next-line no-bitwise\n        adjustD.setUTCHours(adjustD.getUTCHours() + ((adjustedMin / 60) << 0), adjustedMin % 60);\n        value[0] = adjustD.getUTCFullYear();\n        value[1] = adjustD.getUTCMonth() + 1;\n        value[2] = adjustD.getUTCDate();\n        value[3] = adjustD.getUTCHours();\n        value[4] = adjustD.getUTCMinutes();\n        value[5] = adjustD.getUTCSeconds();\n    }\n    // Returns a time-only, date-only or date-time ISO string based on dtStyle.\n    static _createISOStrParts(dtStyle, d) {\n        let ms = 0;\n        let val = '';\n        switch (dtStyle) {\n            // Date only\n            case 0:\n                val =\n                    padZeros(d[0], 4) +\n                        '-' +\n                        padZeros(d[1], 2) +\n                        '-' +\n                        padZeros(d[2], 2);\n                break;\n            // Time only\n            case 1:\n                val =\n                    'T' +\n                        padZeros(d[3], 2) +\n                        ':' +\n                        padZeros(d[4], 2) +\n                        ':' +\n                        padZeros(d[5], 2);\n                ms = d[6];\n                if (ms > 0) {\n                    val += '.' + trimRightZeros(ms);\n                }\n                break;\n            // Date-Time\n            default:\n                val =\n                    padZeros(d[0], 4) +\n                        '-' +\n                        padZeros(d[1], 2) +\n                        '-' +\n                        padZeros(d[2], 2) +\n                        'T' +\n                        padZeros(d[3], 2) +\n                        ':' +\n                        padZeros(d[4], 2) +\n                        ':' +\n                        padZeros(d[5], 2);\n                ms = d[6];\n                if (ms > 0) {\n                    val += '.' + trimRightZeros(ms);\n                }\n                break;\n        }\n        return val;\n    }\n    static _getParseISOStringOffset(tzName, parts) {\n        const offset = this._getTimeZoneOffset(parts, tzName);\n        return getTimeStringFromOffset('', offset, false, true);\n    }\n    static _createParseISOStringFromDate(dtStyle, isoStrInfo, options) {\n        const getOption = getGetOption(options, 'NativeDateTimeConverter.parse');\n        const isoFormat = getOption('isoStrFormat', 'string', [\n            NativeDateTimeConstants._ZULU,\n            NativeDateTimeConstants._OFFSET,\n            NativeDateTimeConstants._INVARIANT,\n            NativeDateTimeConstants._LOCAL,\n            NativeDateTimeConstants._AUTO\n        ], NativeDateTimeConstants._AUTO);\n        const parts = isoStrInfo.isoStrParts;\n        const tzName = options.timeZone;\n        let val = this._createISOStrParts(dtStyle, parts);\n        // do not include timezone if date-only\n        if (dtStyle === 0) {\n            return val;\n        }\n        switch (isoFormat) {\n            case NativeDateTimeConstants._OFFSET:\n            case NativeDateTimeConstants._AUTO:\n                val += this._getParseISOStringOffset(tzName, parts);\n                break;\n            case NativeDateTimeConstants._LOCAL:\n                // if iso string is date-time, consider LOCAL as OFFSET\n                if (dtStyle === 2) {\n                    val += this._getParseISOStringOffset(tzName, parts);\n                }\n                break;\n            case NativeDateTimeConstants._ZULU:\n                let adjustedMin = 0;\n                adjustedMin = -this._getTimeZoneOffset(parts, tzName);\n                if (adjustedMin !== 0) {\n                    // Do the offset math through date object.\n                    const adjustD = new Date(Date.UTC(parts[0], parts[1] - 1, parts[2], parts[3], parts[4], parts[5], parts[6]));\n                    adjustedMin = adjustD.getUTCMinutes() + adjustedMin;\n                    // eslint-disable-next-line no-bitwise\n                    adjustD.setUTCHours(adjustD.getUTCHours() + ((adjustedMin / 60) << 0), adjustedMin % 60);\n                    parts[0] = adjustD.getUTCFullYear();\n                    parts[1] = adjustD.getUTCMonth() + 1;\n                    parts[2] = adjustD.getUTCDate();\n                    parts[3] = adjustD.getUTCHours();\n                    parts[4] = adjustD.getUTCMinutes();\n                    parts[5] = adjustD.getUTCSeconds();\n                    val = this._createISOStrParts(dtStyle, parts);\n                }\n                val += 'Z';\n                break;\n            default:\n                break;\n        }\n        return val;\n    }\n    /*\n     * Returns the current date at the specified timeZone. If timeZone is\n     * null, return current date of the local system.\n     */\n    static getTimeZoneCurrentDate(tzName) {\n        const options = {\n            year: 'numeric',\n            day: '2-digit',\n            month: '2-digit'\n        };\n        if (tzName) {\n            options.timeZone = tzName;\n        }\n        const cnv = Intl.DateTimeFormat('en-US', options);\n        const fmt = cnv.format(new Date()); // fmt looks something like 03/05/2020\n        const parts = fmt.split('/');\n        const result = parts[2] + '-' + parts[0] + '-' + parts[1];\n        return result;\n    }\n    /*\n     * Returns the current offset of the specified timeZone.\n     */\n    static getTimeZoneCurrentOffset(timezone) {\n        const d = new Date();\n        const isoStr = dateToLocalIso(d);\n        const isoStrInfo = getISOStrFormatInfo(isoStr);\n        return this._getAdjustedOffset(timezone, isoStrInfo);\n    }\n    /*\n     * Returns the local system's time zone.\n     */\n    static getLocalSystemTimeZone() {\n        if (!localSystemTimeZone) {\n            const intlCnv = new Intl.DateTimeFormat('en-US');\n            localSystemTimeZone = intlCnv.resolvedOptions().timeZone;\n        }\n        return localSystemTimeZone;\n    }\n}\n\n/**\n * @license\n * Copyright (c) 2004 %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n/**\n * Create an Intl.DateTimeFormat from the options.\n */\nconst getFormatter = (options) => {\n    return new Intl.DateTimeFormat(options.locale, options);\n};\n/**\n * Get the resolved options from the Intl.DateTimeFormat instance, plus any custom options used by our implementation.\n */\nconst getResolvedOptions = (formatter, options) => {\n    const resOptions = formatter.resolvedOptions();\n    const isoStrFormat = options.isoStrFormat ?? 'auto';\n    const twoDigitYearStart = options.twoDigitYearStart ?? 1950;\n    const lenientParse = options.lenientParse ?? 'full';\n    const patternFromOptions = getPatternFromOptions(formatter, resOptions);\n    return { ...resOptions, isoStrFormat, twoDigitYearStart, lenientParse, patternFromOptions };\n};\n/**\n * Create an Intl.DateTimeFormat that can merge in the year in the desired format during the call to 'format'.\n * This is useful if you always want year: 'numeric' for dateStyle: 'short' even if\n * in some locales dateStyle: 'short' yields a 2-digit year. 2-digit years are ambiguous.\n */\nconst getYearFormatter = (options, resOptions) => {\n    let formatter = null;\n    // Set up the yearFormatter if dateStyle is short and the dateStyleShortYear option is defined.\n    // If we do not add numberingSystem/calendar, then Intl.DateTimeFormat defaults to the locale's\n    // numberingSystem, and that is not what JET uses.\n    if (options.dateStyle === 'short' && options.dateStyleShortYear) {\n        formatter = new Intl.DateTimeFormat(options.locale, {\n            year: options.dateStyleShortYear,\n            numberingSystem: resOptions.numberingSystem,\n            calendar: resOptions.calendar\n        });\n    }\n    return formatter;\n};\n/**\n * Merge in the year in the desired format rather than whatever the locale default is for dateStyle: 'short'.\n */\nconst formatWithYearFormat = (formatInstance, yearInstance, value) => {\n    // first get the formatted numeric year\n    const yearParts = yearInstance.formatToParts(value);\n    const formattedYear = yearParts.find((part) => part.type === 'year')?.value;\n    // next get the formatToParts of the formatInstance and substitute in formattedYear.\n    const parts = formatInstance.formatToParts(value);\n    return parts.reduce((acc, part) => {\n        if (part.type === 'year') {\n            return acc + (formattedYear ?? part.value);\n        }\n        return acc + part.value;\n    }, '');\n};\n/**\n * Formats a date time string based on the given options.\n */\nconst formatDateTimeWithOptions = (options, value) => {\n    const intlFormatter = getFormatter(options);\n    const resOptions = getResolvedOptions(intlFormatter, options);\n    const yearFormatter = getYearFormatter(options, resOptions);\n    return formatDateTime(intlFormatter, yearFormatter, resOptions.timeZone, value);\n};\n/**\n * Formats a date time string using Intl.DateTimeFormat.\n */\nconst formatDateTime = (intlFormatter, yearFormatter, timeZone, value) => {\n    const isoStr = normalizeIsoString(timeZone, value);\n    const isoStrDate = new Date(isoStr);\n    return yearFormatter\n        ? formatWithYearFormat(intlFormatter, yearFormatter, isoStrDate)\n        : intlFormatter.format(isoStrDate);\n};\n/**\n * Parses a string into an iso string based on the given options.\n */\nconst parseDateTimeWithOptions = (options, str) => {\n    const intlFormatter = getFormatter(options);\n    const resOptions = getResolvedOptions(intlFormatter, options);\n    return parseDateTime(options.locale, intlFormatter, resOptions, str);\n};\n/**\n * Parses the formatted string, and returns an iso string.\n * @returns an iso string\n * @throws Error if undefined, null, or '' or not an iso string, or if something went wrong in the call to parse.\n */\nconst parseDateTime = (locale, formatter, resOptions, str) => {\n    if (str === undefined || str === null || str === '') {\n        throw new FormatParseError('The parse value cannot be empty.', {\n            cause: { code: 'emptyParseValue' }\n        });\n    }\n    const cal = CalendarUtils.getCalendar(locale, resOptions.calendar);\n    const pattern = getPatternFromOptions(formatter, resOptions);\n    const result = NativeParserImpl.parseImpl(str, pattern, resOptions, cal);\n    const parsed = result.value;\n    if (parsed) {\n        if (result.warning) {\n            Logger.warn('The value ' + str + ' was leniently parsed to represent a date ' + parsed);\n        }\n    }\n    return parsed;\n};\n/**\n * Checks if it is a valid iso string.\n * Also fixes up the iso string if needed, i.e. if local and timezone are specified in the options.\n * @param timeZone\n * @param value\n * @returns\n * @throws Error if undefined, null, or '' or if it is an invalid iso string.\n */\nconst normalizeIsoString = (timeZone, value) => {\n    if (value === undefined || value === null || value === '') {\n        throw new FormatParseError('The format value cannot be empty.', {\n            cause: { code: 'emptyFormatValue' }\n        });\n    }\n    if (value.startsWith('T')) {\n        // Intl Object takes Date object as parameter. new Date() throws an\n        // exception with time only ISO string. Prepend current date to time\n        // only iso string.\n        let curDate = '';\n        if (timeZone) {\n            // if options contain a timeZone, get the current date at this time zone\n            curDate = NativeParserImpl.getTimeZoneCurrentDate(timeZone);\n        }\n        else {\n            // get the current date of the local system\n            curDate = dateToLocalIso(new Date()).split('T')[0];\n        }\n        value = curDate + value;\n    }\n    else if (value.indexOf('T') === -1) {\n        value = value + 'T00:00:00';\n    }\n    // test if value is a valid ISO string\n    const exe = _ISO_DATE_REGEXP.exec(value);\n    if (!exe) {\n        const e = new FormatParseError('The format value must be a valid iso string.', {\n            cause: { code: 'invalidISOString', parameterMap: { isoStr: value } }\n        });\n        throw e;\n    }\n    // If value is local ISO string and timeZone is specified in options, adjust\n    // offset to avoid time zone conversion from local system's timezone to target timezone\n    if (timeZone) {\n        // Also test if timeZone in the options is the same as local system time zone\n        let islocalTimeZone = false;\n        const localTimeZone = NativeParserImpl.getLocalSystemTimeZone();\n        if (localTimeZone === timeZone) {\n            islocalTimeZone = true;\n        }\n        const timePart = value.substring(value.indexOf('T'));\n        const isLocalValue = timePart.indexOf('Z') === -1 && timePart.indexOf('+') === -1 && timePart.indexOf('-') === -1;\n        if (isLocalValue && !islocalTimeZone) {\n            const parts = IsoStrParts(value);\n            const dateParts = {\n                year: parts[0],\n                month: parts[1],\n                date: parts[2],\n                hours: parts[3],\n                minutes: parts[4]\n            };\n            const offset = getISODateOffset(dateParts, timeZone);\n            value = value + getTimeStringFromOffset('', offset, false, true);\n        }\n    }\n    //if ISO string time zone offset is hh, replace it with hh:00 so that new Date() does not fail\n    value = value.replace(/(T.*?[+-]..$)/, '$1:00');\n    return value;\n};\nconst getPatternFromOptions = (formatter, options) => {\n    const isoSTr = '2000-01-02T00:00:00';\n    const date = new Date(isoSTr);\n    let pattern = '';\n    let optVal = '';\n    let token = null;\n    let dtokenMap = null;\n    let ttokenMap = null;\n    let dateStyle = false;\n    let timeStyle = false;\n    if (options.dateStyle !== undefined) {\n        dtokenMap = NativeDateTimeConstants._dateTimeFormats.dateStyle;\n        dtokenMap = dtokenMap[options.dateStyle];\n        dateStyle = true;\n    }\n    if (options.timeStyle !== undefined) {\n        ttokenMap = NativeDateTimeConstants._dateTimeFormats.timeStyle;\n        ttokenMap = ttokenMap[options.timeStyle];\n        timeStyle = true;\n    }\n    const tokenMap = NativeDateTimeConstants._tokenMap;\n    // eslint-disable-next-line array-callback-return\n    formatter.formatToParts(date).map(({ type, value }) => {\n        // TODO: Intl.DateTimeFormatPartType type does not have 'fractionalSecond' even though it is in the api.\n        // so to workaround getting a typescript error, I'm setting as string here.\n        // Fix when the typescript for Intl.DateTimeFormat gets fixed.\n        switch (type) {\n            case 'literal':\n                token = value.replace(NativeDateTimeConstants._ALPHA_REGEXP, \"'$1'\");\n                break;\n            case 'dayPeriod':\n                token = 'a';\n                break;\n            case 'hour':\n                if (timeStyle) {\n                    token = ttokenMap[type];\n                }\n                else {\n                    optVal = options[type];\n                    token = tokenMap[type][optVal];\n                }\n                let ish12 = options.hour12;\n                if (ish12 === undefined) {\n                    ish12 = false;\n                }\n                // take hourCycle into consideration\n                if (options.hourCycle) {\n                    token = token.replace(NativeDateTimeConstants._HOUR12_REGEXP, NativeDateTimeConstants._hourCycleMap[options.hourCycle]);\n                }\n                // h12 takes precedence over hourCycle\n                if (ish12 === true) {\n                    token = token.replace(NativeDateTimeConstants._HOUR12_REGEXP, 'h');\n                }\n                break;\n            case 'month':\n                // some locales have month as numeric for medium style and some have month\n                // as medium style check the value to get accurate pattern\n                if (dateStyle) {\n                    if (isNaN(+value)) {\n                        token = dtokenMap.month_m;\n                    }\n                    else {\n                        token = dtokenMap.month_s;\n                    }\n                }\n                else {\n                    optVal = options[type];\n                    token = tokenMap[type][optVal];\n                }\n                break;\n            case 'year':\n            case 'day':\n            case 'weekday':\n                if (dateStyle) {\n                    token = dtokenMap[type];\n                }\n                else {\n                    optVal = options[type];\n                    token = tokenMap[type][optVal];\n                }\n                break;\n            case 'minute':\n            case 'second':\n            case 'timeZoneName':\n                if (timeStyle) {\n                    token = ttokenMap[type];\n                }\n                else {\n                    optVal = options[type];\n                    token = tokenMap[type][optVal];\n                }\n                break;\n            case 'era':\n                optVal = options[type] || 'short';\n                token = tokenMap[type][optVal];\n                break;\n            case 'fractionalSecond':\n                token = options.fractionalSecondDigits;\n                token = tokenMap[type][token];\n                break;\n            default:\n                break;\n        }\n        pattern += token;\n    });\n    return pattern;\n};\n\nvar _arity$1 =\n\n_arity_1;\n\nvar _isPlaceholder =\n\n_isPlaceholder_1;\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curryN$1(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n\n      combined[combinedIdx] = result;\n\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n\n      combinedIdx += 1;\n    }\n\n    return left <= 0 ? fn.apply(this, combined) : _arity$1(left, _curryN$1(length, combined, fn));\n  };\n}\n\nvar _curryN_1 = _curryN$1;\n\nvar _arity =\n\n_arity_1;\n\nvar _curry1 =\n\n_curry1_1;\n\nvar _curry2 =\n\n_curry2_1;\n\nvar _curryN =\n\n_curryN_1;\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\n\nvar curryN =\n/*#__PURE__*/\n_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n\n  return _arity(length, _curryN(length, [], fn));\n});\n\nvar curryN_1 = curryN;\n\n/**\n * @license\n * Copyright (c) 2004 %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n/**\n * This function is used to retrieve 'format'and 'parse' methods for formatting or parsing date,\n * time, or datetime values according to the provided options. The options may include:\n *\n * Using the standard date, datetime and time format lengths defined by Unicode CLDR; these\n * include the dateStyle and timeStyle properties (full | long | medium | short).\n *\n * Using options defined by the ECMA 402 Specification, including the properties year,\n * month, day, hour, minute, second, weekday, era, timeZoneName, hour12, timeZone.\n *\n * Passing the BCP47Locale is the only required option. If no other options are specified,\n * the default is to use the 'short' format length for the provided locale.\n *\n * Once the function has been called with a set of options, there is no need to call it again unless\n * you want to change the options being used to format and parse, or the locale.\n */\nfunction getFormatParse(options) {\n    const intlFormatter = getFormatter(options);\n    const resolvedOptions = getResolvedOptions(intlFormatter, options);\n    const yearFormatter = getYearFormatter(options, resolvedOptions);\n    const curriedFormat = curryN_1(4, formatDateTime);\n    const format = curriedFormat(intlFormatter, yearFormatter, resolvedOptions.timeZone);\n    const curriedParse = curryN_1(4, parseDateTime);\n    const parse = curriedParse(options.locale, intlFormatter, resolvedOptions);\n    return { format, parse, resolvedOptions, formatter: intlFormatter };\n}\n\n/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nexport { CalendarUtils, dateTimeUtils as DateTimeUtils, NativeDateTimeConstants, NativeParserImpl, formatWithYearFormat, getFormatParse, getISODateOffset, normalizeIsoString };\n//# sourceMappingURL=UNSAFE_IntlDateTime.js.map\n","/* @oracle/oraclejet-preact: 15.1.3 */\nimport { createContext } from 'preact';\nimport { useContext } from 'preact/hooks';\n\n/**\n * Context which an ancestor component can use to provide a value for the 'variant' property\n * of the descendant form fields.\n */\nconst FormVariantContext = createContext('default');\n\n/**\n * Utility hook for consuming the FormVariantContext\n *\n * @returns The value of the closest FormVariantContext provider\n */\nfunction useFormVariantContext() {\n    return useContext(FormVariantContext);\n}\n\nexport { FormVariantContext, useFormVariantContext };\n//# sourceMappingURL=UNSAFE_useFormVariantContext.js.map\n","/*!\n * jQuery UI :data 1.13.2\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: :data Selector\n//>>group: Core\n//>>description: Selects elements which have data stored under the specified key.\n//>>docs: http://api.jqueryui.com/data-selector/\n\n( function( factory ) {\n\t\"use strict\";\n\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./version\" ], factory );\n  } else if (typeof module === 'object' && module.exports) {\n    require(\"./version\");\n    module.exports = factory( require( \"jquery\" ) );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n} )( function( $ ) {\n\"use strict\";\n\nreturn $.extend( $.expr.pseudos, {\n\tdata: $.expr.createPseudo ?\n\t\t$.expr.createPseudo( function( dataName ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn !!$.data( elem, dataName );\n\t\t\t};\n\t\t} ) :\n\n\t\t// Support: jQuery <1.8\n\t\tfunction( elem, i, match ) {\n\t\t\treturn !!$.data( elem, match[ 3 ] );\n\t\t}\n} );\n} );\n","( function( factory ) {\n\t\"use strict\";\n\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./version\" ], factory );\n  } else if (typeof module === 'object' && module.exports) {\n    require(\"./version\");\n    module.exports = factory( require( \"jquery\" ) );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n} )( function( $ ) {\n\"use strict\";\n\n// This file is deprecated\nreturn $.ui.ie = !!/msie [\\w.]+/.exec( navigator.userAgent.toLowerCase() );\n} );\n","( function( factory ) {\n\t\"use strict\";\n\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./version\" ], factory );\n  } else if (typeof module === 'object' && module.exports) {\n    require(\"./version\");\n    module.exports = factory( require( \"jquery\" ) );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n} )( function( $ ) {\n\"use strict\";\n\n// $.ui.plugin is deprecated. Use $.widget() extensions instead.\nreturn $.ui.plugin = {\n\tadd: function( module, option, set ) {\n\t\tvar i,\n\t\t\tproto = $.ui[ module ].prototype;\n\t\tfor ( i in set ) {\n\t\t\tproto.plugins[ i ] = proto.plugins[ i ] || [];\n\t\t\tproto.plugins[ i ].push( [ option, set[ i ] ] );\n\t\t}\n\t},\n\tcall: function( instance, name, args, allowDisconnected ) {\n\t\tvar i,\n\t\t\tset = instance.plugins[ name ];\n\n\t\tif ( !set ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !allowDisconnected && ( !instance.element[ 0 ].parentNode ||\n\t\t\t\tinstance.element[ 0 ].parentNode.nodeType === 11 ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor ( i = 0; i < set.length; i++ ) {\n\t\t\tif ( instance.options[ set[ i ][ 0 ] ] ) {\n\t\t\t\tset[ i ][ 1 ].apply( instance.element, args );\n\t\t\t}\n\t\t}\n\t}\n};\n\n} );\n","( function( factory ) {\n\t\"use strict\";\n\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./version\" ], factory );\n  } else if (typeof module === 'object' && module.exports) {\n    require(\"./version\");\n    module.exports = factory( require( \"jquery\" ) );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n} )( function( $ ) {\n\"use strict\";\n\nreturn $.ui.safeActiveElement = function( document ) {\n\tvar activeElement;\n\n\t// Support: IE 9 only\n\t// IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n\ttry {\n\t\tactiveElement = document.activeElement;\n\t} catch ( error ) {\n\t\tactiveElement = document.body;\n\t}\n\n\t// Support: IE 9 - 11 only\n\t// IE may return null instead of an element\n\t// Interestingly, this only seems to occur when NOT in an iframe\n\tif ( !activeElement ) {\n\t\tactiveElement = document.body;\n\t}\n\n\t// Support: IE 11 only\n\t// IE11 returns a seemingly empty object in some cases when accessing\n\t// document.activeElement from an <iframe>\n\tif ( !activeElement.nodeName ) {\n\t\tactiveElement = document.body;\n\t}\n\n\treturn activeElement;\n};\n\n} );\n","( function( factory ) {\n\t\"use strict\";\n\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./version\" ], factory );\n  } else if (typeof module === 'object' && module.exports) {\n    require(\"./version\");\n    module.exports = factory( require( \"jquery\" ) );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n} )( function( $ ) {\n\"use strict\";\n\nreturn $.ui.safeBlur = function( element ) {\n\n\t// Support: IE9 - 10 only\n\t// If the <body> is blurred, IE will switch windows, see #9420\n\tif ( element && element.nodeName.toLowerCase() !== \"body\" ) {\n\t\t$( element ).trigger( \"blur\" );\n\t}\n};\n\n} );\n","/*!\n * jQuery UI Scroll Parent 1.13.2\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: scrollParent\n//>>group: Core\n//>>description: Get the closest ancestor element that is scrollable.\n//>>docs: http://api.jqueryui.com/scrollParent/\n\n( function( factory ) {\n\t\"use strict\";\n\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./version\" ], factory );\n  } else if (typeof module === 'object' && module.exports) {\n    require(\"./version\");\n    module.exports = factory( require( \"jquery\" ) );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n} )( function( $ ) {\n\"use strict\";\n\nreturn $.fn.scrollParent = function( includeHidden ) {\n\tvar position = this.css( \"position\" ),\n\t\texcludeStaticParent = position === \"absolute\",\n\t\toverflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\n\t\tscrollParent = this.parents().filter( function() {\n\t\t\tvar parent = $( this );\n\t\t\tif ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\n\t\t\t\tparent.css( \"overflow-x\" ) );\n\t\t} ).eq( 0 );\n\n\treturn position === \"fixed\" || !scrollParent.length ?\n\t\t$( this[ 0 ].ownerDocument || document ) :\n\t\tscrollParent;\n};\n\n} );\n","/*!\n * jQuery UI Draggable 1.13.2\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: Draggable\n//>>group: Interactions\n//>>description: Enables dragging functionality for any element.\n//>>docs: http://api.jqueryui.com/draggable/\n//>>demos: http://jqueryui.com/draggable/\n//>>css.structure: ../../themes/base/draggable.css\n\n( function( factory ) {\n\t\"use strict\";\n\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [\n\t\t\t\"jquery\",\n\t\t\t\"./mouse\",\n\t\t\t\"../data\",\n\t\t\t\"../plugin\",\n\t\t\t\"../safe-active-element\",\n\t\t\t\"../safe-blur\",\n\t\t\t\"../scroll-parent\",\n\t\t\t\"../version\",\n\t\t\t\"../widget\"\n\t\t], factory );\n  } else if (typeof module === 'object' && module.exports) {\n    require(\"./mouse\");\n    require(\"../data\");\n    require(\"../plugin\");\n    require(\"../safe-active-element\");\n    require(\"../safe-blur\");\n    require(\"../scroll-parent\");\n    require(\"../version\");\n    require(\"../widget\");\n    module.exports = factory( require( \"jquery\" ) );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n} )( function( $ ) {\n\"use strict\";\n\n$.widget( \"ui.draggable\", $.ui.mouse, {\n\tversion: \"1.13.2\",\n\twidgetEventPrefix: \"drag\",\n\toptions: {\n\t\taddClasses: true,\n\t\tappendTo: \"parent\",\n\t\taxis: false,\n\t\tconnectToSortable: false,\n\t\tcontainment: false,\n\t\tcursor: \"auto\",\n\t\tcursorAt: false,\n\t\tgrid: false,\n\t\thandle: false,\n\t\thelper: \"original\",\n\t\tiframeFix: false,\n\t\topacity: false,\n\t\trefreshPositions: false,\n\t\trevert: false,\n\t\trevertDuration: 500,\n\t\tscope: \"default\",\n\t\tscroll: true,\n\t\tscrollSensitivity: 20,\n\t\tscrollSpeed: 20,\n\t\tsnap: false,\n\t\tsnapMode: \"both\",\n\t\tsnapTolerance: 20,\n\t\tstack: false,\n\t\tzIndex: false,\n\n\t\t// Callbacks\n\t\tdrag: null,\n\t\tstart: null,\n\t\tstop: null\n\t},\n\t_create: function() {\n\n\t\tif ( this.options.helper === \"original\" ) {\n\t\t\tthis._setPositionRelative();\n\t\t}\n\t\tif ( this.options.addClasses ) {\n\t\t\tthis._addClass( \"ui-draggable\" );\n\t\t}\n\t\tthis._setHandleClassName();\n\n\t\tthis._mouseInit();\n\t},\n\n\t_setOption: function( key, value ) {\n\t\tthis._super( key, value );\n\t\tif ( key === \"handle\" ) {\n\t\t\tthis._removeHandleClassName();\n\t\t\tthis._setHandleClassName();\n\t\t}\n\t},\n\n\t_destroy: function() {\n\t\tif ( ( this.helper || this.element ).is( \".ui-draggable-dragging\" ) ) {\n\t\t\tthis.destroyOnClear = true;\n\t\t\treturn;\n\t\t}\n\t\tthis._removeHandleClassName();\n\t\tthis._mouseDestroy();\n\t},\n\n\t_mouseCapture: function( event ) {\n\t\tvar o = this.options;\n\n\t\t// Among others, prevent a drag on a resizable-handle\n\t\tif ( this.helper || o.disabled ||\n\t\t\t\t$( event.target ).closest( \".ui-resizable-handle\" ).length > 0 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t//Quit if we're not on a valid handle\n\t\tthis.handle = this._getHandle( event );\n\t\tif ( !this.handle ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._blurActiveElement( event );\n\n\t\tthis._blockFrames( o.iframeFix === true ? \"iframe\" : o.iframeFix );\n\n\t\treturn true;\n\n\t},\n\n\t_blockFrames: function( selector ) {\n\t\tthis.iframeBlocks = this.document.find( selector ).map( function() {\n\t\t\tvar iframe = $( this );\n\n\t\t\treturn $( \"<div>\" )\n\t\t\t\t.css( \"position\", \"absolute\" )\n\t\t\t\t.appendTo( iframe.parent() )\n\t\t\t\t.outerWidth( iframe.outerWidth() )\n\t\t\t\t.outerHeight( iframe.outerHeight() )\n\t\t\t\t.offset( iframe.offset() )[ 0 ];\n\t\t} );\n\t},\n\n\t_unblockFrames: function() {\n\t\tif ( this.iframeBlocks ) {\n\t\t\tthis.iframeBlocks.remove();\n\t\t\tdelete this.iframeBlocks;\n\t\t}\n\t},\n\n\t_blurActiveElement: function( event ) {\n\t\tvar activeElement = $.ui.safeActiveElement( this.document[ 0 ] ),\n\t\t\ttarget = $( event.target );\n\n\t\t// Don't blur if the event occurred on an element that is within\n\t\t// the currently focused element\n\t\t// See #10527, #12472\n\t\tif ( target.closest( activeElement ).length ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Blur any element that currently has focus, see #4261\n\t\t$.ui.safeBlur( activeElement );\n\t},\n\n\t_mouseStart: function( event ) {\n\n\t\tvar o = this.options;\n\n\t\t//Create and append the visible helper\n\t\tthis.helper = this._createHelper( event );\n\n\t\tthis._addClass( this.helper, \"ui-draggable-dragging\" );\n\n\t\t//Cache the helper size\n\t\tthis._cacheHelperProportions();\n\n\t\t//If ddmanager is used for droppables, set the global draggable\n\t\tif ( $.ui.ddmanager ) {\n\t\t\t$.ui.ddmanager.current = this;\n\t\t}\n\n\t\t/*\n\t\t * - Position generation -\n\t\t * This block generates everything position related - it's the core of draggables.\n\t\t */\n\n\t\t//Cache the margins of the original element\n\t\tthis._cacheMargins();\n\n\t\t//Store the helper's css position\n\t\tthis.cssPosition = this.helper.css( \"position\" );\n\t\tthis.scrollParent = this.helper.scrollParent( true );\n\t\tthis.offsetParent = this.helper.offsetParent();\n\t\tthis.hasFixedAncestor = this.helper.parents().filter( function() {\n\t\t\t\treturn $( this ).css( \"position\" ) === \"fixed\";\n\t\t\t} ).length > 0;\n\n\t\t//The element's absolute position on the page minus margins\n\t\tthis.positionAbs = this.element.offset();\n\t\tthis._refreshOffsets( event );\n\n\t\t//Generate the original position\n\t\tthis.originalPosition = this.position = this._generatePosition( event, false );\n\t\tthis.originalPageX = event.pageX;\n\t\tthis.originalPageY = event.pageY;\n\n\t\t//Adjust the mouse offset relative to the helper if \"cursorAt\" is supplied\n\t\tif ( o.cursorAt ) {\n\t\t\tthis._adjustOffsetFromHelper( o.cursorAt );\n\t\t}\n\n\t\t//Set a containment if given in the options\n\t\tthis._setContainment();\n\n\t\t//Trigger event + callbacks\n\t\tif ( this._trigger( \"start\", event ) === false ) {\n\t\t\tthis._clear();\n\t\t\treturn false;\n\t\t}\n\n\t\t//Recache the helper size\n\t\tthis._cacheHelperProportions();\n\n\t\t//Prepare the droppable offsets\n\t\tif ( $.ui.ddmanager && !o.dropBehaviour ) {\n\t\t\t$.ui.ddmanager.prepareOffsets( this, event );\n\t\t}\n\n\t\t// Execute the drag once - this causes the helper not to be visible before getting its\n\t\t// correct position\n\t\tthis._mouseDrag( event, true );\n\n\t\t// If the ddmanager is used for droppables, inform the manager that dragging has started\n\t\t// (see #5003)\n\t\tif ( $.ui.ddmanager ) {\n\t\t\t$.ui.ddmanager.dragStart( this, event );\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t_refreshOffsets: function( event ) {\n\t\tthis.offset = {\n\t\t\ttop: this.positionAbs.top - this.margins.top,\n\t\t\tleft: this.positionAbs.left - this.margins.left,\n\t\t\tscroll: false,\n\t\t\tparent: this._getParentOffset(),\n\t\t\trelative: this._getRelativeOffset()\n\t\t};\n\n\t\tthis.offset.click = {\n\t\t\tleft: event.pageX - this.offset.left,\n\t\t\ttop: event.pageY - this.offset.top\n\t\t};\n\t},\n\n\t_mouseDrag: function( event, noPropagation ) {\n\n\t\t// reset any necessary cached properties (see #5009)\n\t\tif ( this.hasFixedAncestor ) {\n\t\t\tthis.offset.parent = this._getParentOffset();\n\t\t}\n\n\t\t//Compute the helpers position\n\t\tthis.position = this._generatePosition( event, true );\n\t\tthis.positionAbs = this._convertPositionTo( \"absolute\" );\n\n\t\t//Call plugins and callbacks and use the resulting position if something is returned\n\t\tif ( !noPropagation ) {\n\t\t\tvar ui = this._uiHash();\n\t\t\tif ( this._trigger( \"drag\", event, ui ) === false ) {\n\t\t\t\tthis._mouseUp( new $.Event( \"mouseup\", event ) );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis.position = ui.position;\n\t\t}\n\n\t\tthis.helper[ 0 ].style.left = this.position.left + \"px\";\n\t\tthis.helper[ 0 ].style.top = this.position.top + \"px\";\n\n\t\tif ( $.ui.ddmanager ) {\n\t\t\t$.ui.ddmanager.drag( this, event );\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t_mouseStop: function( event ) {\n\n\t\t//If we are using droppables, inform the manager about the drop\n\t\tvar that = this,\n\t\t\tdropped = false;\n\t\tif ( $.ui.ddmanager && !this.options.dropBehaviour ) {\n\t\t\tdropped = $.ui.ddmanager.drop( this, event );\n\t\t}\n\n\t\t//if a drop comes from outside (a sortable)\n\t\tif ( this.dropped ) {\n\t\t\tdropped = this.dropped;\n\t\t\tthis.dropped = false;\n\t\t}\n\n\t\tif ( ( this.options.revert === \"invalid\" && !dropped ) ||\n\t\t\t\t( this.options.revert === \"valid\" && dropped ) ||\n\t\t\t\tthis.options.revert === true || ( typeof this.options.revert === \"function\" &&\n\t\t\t\tthis.options.revert.call( this.element, dropped ) )\n\t\t) {\n\t\t\t$( this.helper ).animate(\n\t\t\t\tthis.originalPosition,\n\t\t\t\tparseInt( this.options.revertDuration, 10 ),\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( that._trigger( \"stop\", event ) !== false ) {\n\t\t\t\t\t\tthat._clear();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t} else {\n\t\t\tif ( this._trigger( \"stop\", event ) !== false ) {\n\t\t\t\tthis._clear();\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t_mouseUp: function( event ) {\n\t\tthis._unblockFrames();\n\n\t\t// If the ddmanager is used for droppables, inform the manager that dragging has stopped\n\t\t// (see #5003)\n\t\tif ( $.ui.ddmanager ) {\n\t\t\t$.ui.ddmanager.dragStop( this, event );\n\t\t}\n\n\t\t// Only need to focus if the event occurred on the draggable itself, see #10527\n\t\tif ( this.handleElement.is( event.target ) ) {\n\n\t\t\t// The interaction is over; whether or not the click resulted in a drag,\n\t\t\t// focus the element\n\t\t\tthis.element.trigger( \"focus\" );\n\t\t}\n\n\t\treturn $.ui.mouse.prototype._mouseUp.call( this, event );\n\t},\n\n\tcancel: function() {\n\n\t\tif ( this.helper.is( \".ui-draggable-dragging\" ) ) {\n\t\t\tthis._mouseUp( new $.Event( \"mouseup\", { target: this.element[ 0 ] } ) );\n\t\t} else {\n\t\t\tthis._clear();\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t_getHandle: function( event ) {\n\t\treturn this.options.handle ?\n\t\t\t!!$( event.target ).closest( this.element.find( this.options.handle ) ).length :\n\t\t\ttrue;\n\t},\n\n\t_setHandleClassName: function() {\n\t\tthis.handleElement = this.options.handle ?\n\t\t\tthis.element.find( this.options.handle ) : this.element;\n\t\tthis._addClass( this.handleElement, \"ui-draggable-handle\" );\n\t},\n\n\t_removeHandleClassName: function() {\n\t\tthis._removeClass( this.handleElement, \"ui-draggable-handle\" );\n\t},\n\n\t_createHelper: function( event ) {\n\n\t\tvar o = this.options,\n\t\t\thelperIsFunction = typeof o.helper === \"function\",\n\t\t\thelper = helperIsFunction ?\n\t\t\t\t$( o.helper.apply( this.element[ 0 ], [ event ] ) ) :\n\t\t\t\t( o.helper === \"clone\" ?\n\t\t\t\t\tthis.element.clone().removeAttr( \"id\" ) :\n\t\t\t\t\tthis.element );\n\n\t\tif ( !helper.parents( \"body\" ).length ) {\n\t\t\thelper.appendTo( ( o.appendTo === \"parent\" ?\n\t\t\t\tthis.element[ 0 ].parentNode :\n\t\t\t\to.appendTo ) );\n\t\t}\n\n\t\t// Http://bugs.jqueryui.com/ticket/9446\n\t\t// a helper function can return the original element\n\t\t// which wouldn't have been set to relative in _create\n\t\tif ( helperIsFunction && helper[ 0 ] === this.element[ 0 ] ) {\n\t\t\tthis._setPositionRelative();\n\t\t}\n\n\t\tif ( helper[ 0 ] !== this.element[ 0 ] &&\n\t\t\t\t!( /(fixed|absolute)/ ).test( helper.css( \"position\" ) ) ) {\n\t\t\thelper.css( \"position\", \"absolute\" );\n\t\t}\n\n\t\treturn helper;\n\n\t},\n\n\t_setPositionRelative: function() {\n\t\tif ( !( /^(?:r|a|f)/ ).test( this.element.css( \"position\" ) ) ) {\n\t\t\tthis.element[ 0 ].style.position = \"relative\";\n\t\t}\n\t},\n\n\t_adjustOffsetFromHelper: function( obj ) {\n\t\tif ( typeof obj === \"string\" ) {\n\t\t\tobj = obj.split( \" \" );\n\t\t}\n\t\tif ( Array.isArray( obj ) ) {\n\t\t\tobj = { left: +obj[ 0 ], top: +obj[ 1 ] || 0 };\n\t\t}\n\t\tif ( \"left\" in obj ) {\n\t\t\tthis.offset.click.left = obj.left + this.margins.left;\n\t\t}\n\t\tif ( \"right\" in obj ) {\n\t\t\tthis.offset.click.left = this.helperProportions.width - obj.right + this.margins.left;\n\t\t}\n\t\tif ( \"top\" in obj ) {\n\t\t\tthis.offset.click.top = obj.top + this.margins.top;\n\t\t}\n\t\tif ( \"bottom\" in obj ) {\n\t\t\tthis.offset.click.top = this.helperProportions.height - obj.bottom + this.margins.top;\n\t\t}\n\t},\n\n\t_isRootNode: function( element ) {\n\t\treturn ( /(html|body)/i ).test( element.tagName ) || element === this.document[ 0 ];\n\t},\n\n\t_getParentOffset: function() {\n\n\t\t//Get the offsetParent and cache its position\n\t\tvar po = this.offsetParent.offset(),\n\t\t\tdocument = this.document[ 0 ];\n\n\t\t// This is a special case where we need to modify a offset calculated on start, since the\n\t\t// following happened:\n\t\t// 1. The position of the helper is absolute, so it's position is calculated based on the\n\t\t// next positioned parent\n\t\t// 2. The actual offset parent is a child of the scroll parent, and the scroll parent isn't\n\t\t// the document, which means that the scroll is included in the initial calculation of the\n\t\t// offset of the parent, and never recalculated upon drag\n\t\tif ( this.cssPosition === \"absolute\" && this.scrollParent[ 0 ] !== document &&\n\t\t\t\t$.contains( this.scrollParent[ 0 ], this.offsetParent[ 0 ] ) ) {\n\t\t\tpo.left += this.scrollParent.scrollLeft();\n\t\t\tpo.top += this.scrollParent.scrollTop();\n\t\t}\n\n\t\tif ( this._isRootNode( this.offsetParent[ 0 ] ) ) {\n\t\t\tpo = { top: 0, left: 0 };\n\t\t}\n\n\t\treturn {\n\t\t\ttop: po.top + ( parseInt( this.offsetParent.css( \"borderTopWidth\" ), 10 ) || 0 ),\n\t\t\tleft: po.left + ( parseInt( this.offsetParent.css( \"borderLeftWidth\" ), 10 ) || 0 )\n\t\t};\n\n\t},\n\n\t_getRelativeOffset: function() {\n\t\tif ( this.cssPosition !== \"relative\" ) {\n\t\t\treturn { top: 0, left: 0 };\n\t\t}\n\n\t\tvar p = this.element.position(),\n\t\t\tscrollIsRootNode = this._isRootNode( this.scrollParent[ 0 ] );\n\n\t\treturn {\n\t\t\ttop: p.top - ( parseInt( this.helper.css( \"top\" ), 10 ) || 0 ) +\n\t\t\t\t( !scrollIsRootNode ? this.scrollParent.scrollTop() : 0 ),\n\t\t\tleft: p.left - ( parseInt( this.helper.css( \"left\" ), 10 ) || 0 ) +\n\t\t\t\t( !scrollIsRootNode ? this.scrollParent.scrollLeft() : 0 )\n\t\t};\n\n\t},\n\n\t_cacheMargins: function() {\n\t\tthis.margins = {\n\t\t\tleft: ( parseInt( this.element.css( \"marginLeft\" ), 10 ) || 0 ),\n\t\t\ttop: ( parseInt( this.element.css( \"marginTop\" ), 10 ) || 0 ),\n\t\t\tright: ( parseInt( this.element.css( \"marginRight\" ), 10 ) || 0 ),\n\t\t\tbottom: ( parseInt( this.element.css( \"marginBottom\" ), 10 ) || 0 )\n\t\t};\n\t},\n\n\t_cacheHelperProportions: function() {\n\t\tthis.helperProportions = {\n\t\t\twidth: this.helper.outerWidth(),\n\t\t\theight: this.helper.outerHeight()\n\t\t};\n\t},\n\n\t_setContainment: function() {\n\n\t\tvar isUserScrollable, c, ce,\n\t\t\to = this.options,\n\t\t\tdocument = this.document[ 0 ];\n\n\t\tthis.relativeContainer = null;\n\n\t\tif ( !o.containment ) {\n\t\t\tthis.containment = null;\n\t\t\treturn;\n\t\t}\n\n\t\tif ( o.containment === \"window\" ) {\n\t\t\tthis.containment = [\n\t\t\t\t$( window ).scrollLeft() - this.offset.relative.left - this.offset.parent.left,\n\t\t\t\t$( window ).scrollTop() - this.offset.relative.top - this.offset.parent.top,\n\t\t\t\t$( window ).scrollLeft() + $( window ).width() -\n\t\t\t\t\tthis.helperProportions.width - this.margins.left,\n\t\t\t\t$( window ).scrollTop() +\n\t\t\t\t\t( $( window ).height() || document.body.parentNode.scrollHeight ) -\n\t\t\t\t\tthis.helperProportions.height - this.margins.top\n\t\t\t];\n\t\t\treturn;\n\t\t}\n\n\t\tif ( o.containment === \"document\" ) {\n\t\t\tthis.containment = [\n\t\t\t\t0,\n\t\t\t\t0,\n\t\t\t\t$( document ).width() - this.helperProportions.width - this.margins.left,\n\t\t\t\t( $( document ).height() || document.body.parentNode.scrollHeight ) -\n\t\t\t\t\tthis.helperProportions.height - this.margins.top\n\t\t\t];\n\t\t\treturn;\n\t\t}\n\n\t\tif ( o.containment.constructor === Array ) {\n\t\t\tthis.containment = o.containment;\n\t\t\treturn;\n\t\t}\n\n\t\tif ( o.containment === \"parent\" ) {\n\t\t\to.containment = this.helper[ 0 ].parentNode;\n\t\t}\n\n\t\tc = $( o.containment );\n\t\tce = c[ 0 ];\n\n\t\tif ( !ce ) {\n\t\t\treturn;\n\t\t}\n\n\t\tisUserScrollable = /(scroll|auto)/.test( c.css( \"overflow\" ) );\n\n\t\tthis.containment = [\n\t\t\t( parseInt( c.css( \"borderLeftWidth\" ), 10 ) || 0 ) +\n\t\t\t\t( parseInt( c.css( \"paddingLeft\" ), 10 ) || 0 ),\n\t\t\t( parseInt( c.css( \"borderTopWidth\" ), 10 ) || 0 ) +\n\t\t\t\t( parseInt( c.css( \"paddingTop\" ), 10 ) || 0 ),\n\t\t\t( isUserScrollable ? Math.max( ce.scrollWidth, ce.offsetWidth ) : ce.offsetWidth ) -\n\t\t\t\t( parseInt( c.css( \"borderRightWidth\" ), 10 ) || 0 ) -\n\t\t\t\t( parseInt( c.css( \"paddingRight\" ), 10 ) || 0 ) -\n\t\t\t\tthis.helperProportions.width -\n\t\t\t\tthis.margins.left -\n\t\t\t\tthis.margins.right,\n\t\t\t( isUserScrollable ? Math.max( ce.scrollHeight, ce.offsetHeight ) : ce.offsetHeight ) -\n\t\t\t\t( parseInt( c.css( \"borderBottomWidth\" ), 10 ) || 0 ) -\n\t\t\t\t( parseInt( c.css( \"paddingBottom\" ), 10 ) || 0 ) -\n\t\t\t\tthis.helperProportions.height -\n\t\t\t\tthis.margins.top -\n\t\t\t\tthis.margins.bottom\n\t\t];\n\t\tthis.relativeContainer = c;\n\t},\n\n\t_convertPositionTo: function( d, pos ) {\n\n\t\tif ( !pos ) {\n\t\t\tpos = this.position;\n\t\t}\n\n\t\tvar mod = d === \"absolute\" ? 1 : -1,\n\t\t\tscrollIsRootNode = this._isRootNode( this.scrollParent[ 0 ] );\n\n\t\treturn {\n\t\t\ttop: (\n\n\t\t\t\t// The absolute mouse position\n\t\t\t\tpos.top\t+\n\n\t\t\t\t// Only for relative positioned nodes: Relative offset from element to offset parent\n\t\t\t\tthis.offset.relative.top * mod +\n\n\t\t\t\t// The offsetParent's offset without borders (offset + border)\n\t\t\t\tthis.offset.parent.top * mod -\n\t\t\t\t( ( this.cssPosition === \"fixed\" ?\n\t\t\t\t\t-this.offset.scroll.top :\n\t\t\t\t\t( scrollIsRootNode ? 0 : this.offset.scroll.top ) ) * mod )\n\t\t\t),\n\t\t\tleft: (\n\n\t\t\t\t// The absolute mouse position\n\t\t\t\tpos.left +\n\n\t\t\t\t// Only for relative positioned nodes: Relative offset from element to offset parent\n\t\t\t\tthis.offset.relative.left * mod +\n\n\t\t\t\t// The offsetParent's offset without borders (offset + border)\n\t\t\t\tthis.offset.parent.left * mod\t-\n\t\t\t\t( ( this.cssPosition === \"fixed\" ?\n\t\t\t\t\t-this.offset.scroll.left :\n\t\t\t\t\t( scrollIsRootNode ? 0 : this.offset.scroll.left ) ) * mod )\n\t\t\t)\n\t\t};\n\n\t},\n\n\t_generatePosition: function( event, constrainPosition ) {\n\n\t\tvar containment, co, top, left,\n\t\t\to = this.options,\n\t\t\tscrollIsRootNode = this._isRootNode( this.scrollParent[ 0 ] ),\n\t\t\tpageX = event.pageX,\n\t\t\tpageY = event.pageY;\n\n\t\t// Cache the scroll\n\t\tif ( !scrollIsRootNode || !this.offset.scroll ) {\n\t\t\tthis.offset.scroll = {\n\t\t\t\ttop: this.scrollParent.scrollTop(),\n\t\t\t\tleft: this.scrollParent.scrollLeft()\n\t\t\t};\n\t\t}\n\n\t\t/*\n\t\t * - Position constraining -\n\t\t * Constrain the position to a mix of grid, containment.\n\t\t */\n\n\t\t// If we are not dragging yet, we won't check for options\n\t\tif ( constrainPosition ) {\n\t\t\tif ( this.containment ) {\n\t\t\t\tif ( this.relativeContainer ) {\n\t\t\t\t\tco = this.relativeContainer.offset();\n\t\t\t\t\tcontainment = [\n\t\t\t\t\t\tthis.containment[ 0 ] + co.left,\n\t\t\t\t\t\tthis.containment[ 1 ] + co.top,\n\t\t\t\t\t\tthis.containment[ 2 ] + co.left,\n\t\t\t\t\t\tthis.containment[ 3 ] + co.top\n\t\t\t\t\t];\n\t\t\t\t} else {\n\t\t\t\t\tcontainment = this.containment;\n\t\t\t\t}\n\n\t\t\t\tif ( event.pageX - this.offset.click.left < containment[ 0 ] ) {\n\t\t\t\t\tpageX = containment[ 0 ] + this.offset.click.left;\n\t\t\t\t}\n\t\t\t\tif ( event.pageY - this.offset.click.top < containment[ 1 ] ) {\n\t\t\t\t\tpageY = containment[ 1 ] + this.offset.click.top;\n\t\t\t\t}\n\t\t\t\tif ( event.pageX - this.offset.click.left > containment[ 2 ] ) {\n\t\t\t\t\tpageX = containment[ 2 ] + this.offset.click.left;\n\t\t\t\t}\n\t\t\t\tif ( event.pageY - this.offset.click.top > containment[ 3 ] ) {\n\t\t\t\t\tpageY = containment[ 3 ] + this.offset.click.top;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( o.grid ) {\n\n\t\t\t\t//Check for grid elements set to 0 to prevent divide by 0 error causing invalid\n\t\t\t\t// argument errors in IE (see ticket #6950)\n\t\t\t\ttop = o.grid[ 1 ] ? this.originalPageY + Math.round( ( pageY -\n\t\t\t\t\tthis.originalPageY ) / o.grid[ 1 ] ) * o.grid[ 1 ] : this.originalPageY;\n\t\t\t\tpageY = containment ? ( ( top - this.offset.click.top >= containment[ 1 ] ||\n\t\t\t\t\ttop - this.offset.click.top > containment[ 3 ] ) ?\n\t\t\t\t\t\ttop :\n\t\t\t\t\t\t( ( top - this.offset.click.top >= containment[ 1 ] ) ?\n\t\t\t\t\t\t\ttop - o.grid[ 1 ] : top + o.grid[ 1 ] ) ) : top;\n\n\t\t\t\tleft = o.grid[ 0 ] ? this.originalPageX +\n\t\t\t\t\tMath.round( ( pageX - this.originalPageX ) / o.grid[ 0 ] ) * o.grid[ 0 ] :\n\t\t\t\t\tthis.originalPageX;\n\t\t\t\tpageX = containment ? ( ( left - this.offset.click.left >= containment[ 0 ] ||\n\t\t\t\t\tleft - this.offset.click.left > containment[ 2 ] ) ?\n\t\t\t\t\t\tleft :\n\t\t\t\t\t\t( ( left - this.offset.click.left >= containment[ 0 ] ) ?\n\t\t\t\t\t\t\tleft - o.grid[ 0 ] : left + o.grid[ 0 ] ) ) : left;\n\t\t\t}\n\n\t\t\tif ( o.axis === \"y\" ) {\n\t\t\t\tpageX = this.originalPageX;\n\t\t\t}\n\n\t\t\tif ( o.axis === \"x\" ) {\n\t\t\t\tpageY = this.originalPageY;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\ttop: (\n\n\t\t\t\t// The absolute mouse position\n\t\t\t\tpageY -\n\n\t\t\t\t// Click offset (relative to the element)\n\t\t\t\tthis.offset.click.top -\n\n\t\t\t\t// Only for relative positioned nodes: Relative offset from element to offset parent\n\t\t\t\tthis.offset.relative.top -\n\n\t\t\t\t// The offsetParent's offset without borders (offset + border)\n\t\t\t\tthis.offset.parent.top +\n\t\t\t\t( this.cssPosition === \"fixed\" ?\n\t\t\t\t\t-this.offset.scroll.top :\n\t\t\t\t\t( scrollIsRootNode ? 0 : this.offset.scroll.top ) )\n\t\t\t),\n\t\t\tleft: (\n\n\t\t\t\t// The absolute mouse position\n\t\t\t\tpageX -\n\n\t\t\t\t// Click offset (relative to the element)\n\t\t\t\tthis.offset.click.left -\n\n\t\t\t\t// Only for relative positioned nodes: Relative offset from element to offset parent\n\t\t\t\tthis.offset.relative.left -\n\n\t\t\t\t// The offsetParent's offset without borders (offset + border)\n\t\t\t\tthis.offset.parent.left +\n\t\t\t\t( this.cssPosition === \"fixed\" ?\n\t\t\t\t\t-this.offset.scroll.left :\n\t\t\t\t\t( scrollIsRootNode ? 0 : this.offset.scroll.left ) )\n\t\t\t)\n\t\t};\n\n\t},\n\n\t_clear: function() {\n\t\tthis._removeClass( this.helper, \"ui-draggable-dragging\" );\n\t\tif ( this.helper[ 0 ] !== this.element[ 0 ] && !this.cancelHelperRemoval ) {\n\t\t\tthis.helper.remove();\n\t\t}\n\t\tthis.helper = null;\n\t\tthis.cancelHelperRemoval = false;\n\t\tif ( this.destroyOnClear ) {\n\t\t\tthis.destroy();\n\t\t}\n\t},\n\n\t// From now on bulk stuff - mainly helpers\n\n\t_trigger: function( type, event, ui ) {\n\t\tui = ui || this._uiHash();\n\t\t$.ui.plugin.call( this, type, [ event, ui, this ], true );\n\n\t\t// Absolute position and offset (see #6884 ) have to be recalculated after plugins\n\t\tif ( /^(drag|start|stop)/.test( type ) ) {\n\t\t\tthis.positionAbs = this._convertPositionTo( \"absolute\" );\n\t\t\tui.offset = this.positionAbs;\n\t\t}\n\t\treturn $.Widget.prototype._trigger.call( this, type, event, ui );\n\t},\n\n\tplugins: {},\n\n\t_uiHash: function() {\n\t\treturn {\n\t\t\thelper: this.helper,\n\t\t\tposition: this.position,\n\t\t\toriginalPosition: this.originalPosition,\n\t\t\toffset: this.positionAbs\n\t\t};\n\t}\n\n} );\n\n$.ui.plugin.add( \"draggable\", \"connectToSortable\", {\n\tstart: function( event, ui, draggable ) {\n\t\tvar uiSortable = $.extend( {}, ui, {\n\t\t\titem: draggable.element\n\t\t} );\n\n\t\tdraggable.sortables = [];\n\t\t$( draggable.options.connectToSortable ).each( function() {\n\t\t\tvar sortable = $( this ).sortable( \"instance\" );\n\n\t\t\tif ( sortable && !sortable.options.disabled ) {\n\t\t\t\tdraggable.sortables.push( sortable );\n\n\t\t\t\t// RefreshPositions is called at drag start to refresh the containerCache\n\t\t\t\t// which is used in drag. This ensures it's initialized and synchronized\n\t\t\t\t// with any changes that might have happened on the page since initialization.\n\t\t\t\tsortable.refreshPositions();\n\t\t\t\tsortable._trigger( \"activate\", event, uiSortable );\n\t\t\t}\n\t\t} );\n\t},\n\tstop: function( event, ui, draggable ) {\n\t\tvar uiSortable = $.extend( {}, ui, {\n\t\t\titem: draggable.element\n\t\t} );\n\n\t\tdraggable.cancelHelperRemoval = false;\n\n\t\t$.each( draggable.sortables, function() {\n\t\t\tvar sortable = this;\n\n\t\t\tif ( sortable.isOver ) {\n\t\t\t\tsortable.isOver = 0;\n\n\t\t\t\t// Allow this sortable to handle removing the helper\n\t\t\t\tdraggable.cancelHelperRemoval = true;\n\t\t\t\tsortable.cancelHelperRemoval = false;\n\n\t\t\t\t// Use _storedCSS To restore properties in the sortable,\n\t\t\t\t// as this also handles revert (#9675) since the draggable\n\t\t\t\t// may have modified them in unexpected ways (#8809)\n\t\t\t\tsortable._storedCSS = {\n\t\t\t\t\tposition: sortable.placeholder.css( \"position\" ),\n\t\t\t\t\ttop: sortable.placeholder.css( \"top\" ),\n\t\t\t\t\tleft: sortable.placeholder.css( \"left\" )\n\t\t\t\t};\n\n\t\t\t\tsortable._mouseStop( event );\n\n\t\t\t\t// Once drag has ended, the sortable should return to using\n\t\t\t\t// its original helper, not the shared helper from draggable\n\t\t\t\tsortable.options.helper = sortable.options._helper;\n\t\t\t} else {\n\n\t\t\t\t// Prevent this Sortable from removing the helper.\n\t\t\t\t// However, don't set the draggable to remove the helper\n\t\t\t\t// either as another connected Sortable may yet handle the removal.\n\t\t\t\tsortable.cancelHelperRemoval = true;\n\n\t\t\t\tsortable._trigger( \"deactivate\", event, uiSortable );\n\t\t\t}\n\t\t} );\n\t},\n\tdrag: function( event, ui, draggable ) {\n\t\t$.each( draggable.sortables, function() {\n\t\t\tvar innermostIntersecting = false,\n\t\t\t\tsortable = this;\n\n\t\t\t// Copy over variables that sortable's _intersectsWith uses\n\t\t\tsortable.positionAbs = draggable.positionAbs;\n\t\t\tsortable.helperProportions = draggable.helperProportions;\n\t\t\tsortable.offset.click = draggable.offset.click;\n\n\t\t\tif ( sortable._intersectsWith( sortable.containerCache ) ) {\n\t\t\t\tinnermostIntersecting = true;\n\n\t\t\t\t$.each( draggable.sortables, function() {\n\n\t\t\t\t\t// Copy over variables that sortable's _intersectsWith uses\n\t\t\t\t\tthis.positionAbs = draggable.positionAbs;\n\t\t\t\t\tthis.helperProportions = draggable.helperProportions;\n\t\t\t\t\tthis.offset.click = draggable.offset.click;\n\n\t\t\t\t\tif ( this !== sortable &&\n\t\t\t\t\t\t\tthis._intersectsWith( this.containerCache ) &&\n\t\t\t\t\t\t\t$.contains( sortable.element[ 0 ], this.element[ 0 ] ) ) {\n\t\t\t\t\t\tinnermostIntersecting = false;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn innermostIntersecting;\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tif ( innermostIntersecting ) {\n\n\t\t\t\t// If it intersects, we use a little isOver variable and set it once,\n\t\t\t\t// so that the move-in stuff gets fired only once.\n\t\t\t\tif ( !sortable.isOver ) {\n\t\t\t\t\tsortable.isOver = 1;\n\n\t\t\t\t\t// Store draggable's parent in case we need to reappend to it later.\n\t\t\t\t\tdraggable._parent = ui.helper.parent();\n\n\t\t\t\t\tsortable.currentItem = ui.helper\n\t\t\t\t\t\t.appendTo( sortable.element )\n\t\t\t\t\t\t.data( \"ui-sortable-item\", true );\n\n\t\t\t\t\t// Store helper option to later restore it\n\t\t\t\t\tsortable.options._helper = sortable.options.helper;\n\n\t\t\t\t\tsortable.options.helper = function() {\n\t\t\t\t\t\treturn ui.helper[ 0 ];\n\t\t\t\t\t};\n\n\t\t\t\t\t// Fire the start events of the sortable with our passed browser event,\n\t\t\t\t\t// and our own helper (so it doesn't create a new one)\n\t\t\t\t\tevent.target = sortable.currentItem[ 0 ];\n\t\t\t\t\tsortable._mouseCapture( event, true );\n\t\t\t\t\tsortable._mouseStart( event, true, true );\n\n\t\t\t\t\t// Because the browser event is way off the new appended portlet,\n\t\t\t\t\t// modify necessary variables to reflect the changes\n\t\t\t\t\tsortable.offset.click.top = draggable.offset.click.top;\n\t\t\t\t\tsortable.offset.click.left = draggable.offset.click.left;\n\t\t\t\t\tsortable.offset.parent.left -= draggable.offset.parent.left -\n\t\t\t\t\t\tsortable.offset.parent.left;\n\t\t\t\t\tsortable.offset.parent.top -= draggable.offset.parent.top -\n\t\t\t\t\t\tsortable.offset.parent.top;\n\n\t\t\t\t\tdraggable._trigger( \"toSortable\", event );\n\n\t\t\t\t\t// Inform draggable that the helper is in a valid drop zone,\n\t\t\t\t\t// used solely in the revert option to handle \"valid/invalid\".\n\t\t\t\t\tdraggable.dropped = sortable.element;\n\n\t\t\t\t\t// Need to refreshPositions of all sortables in the case that\n\t\t\t\t\t// adding to one sortable changes the location of the other sortables (#9675)\n\t\t\t\t\t$.each( draggable.sortables, function() {\n\t\t\t\t\t\tthis.refreshPositions();\n\t\t\t\t\t} );\n\n\t\t\t\t\t// Hack so receive/update callbacks work (mostly)\n\t\t\t\t\tdraggable.currentItem = draggable.element;\n\t\t\t\t\tsortable.fromOutside = draggable;\n\t\t\t\t}\n\n\t\t\t\tif ( sortable.currentItem ) {\n\t\t\t\t\tsortable._mouseDrag( event );\n\n\t\t\t\t\t// Copy the sortable's position because the draggable's can potentially reflect\n\t\t\t\t\t// a relative position, while sortable is always absolute, which the dragged\n\t\t\t\t\t// element has now become. (#8809)\n\t\t\t\t\tui.position = sortable.position;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// If it doesn't intersect with the sortable, and it intersected before,\n\t\t\t\t// we fake the drag stop of the sortable, but make sure it doesn't remove\n\t\t\t\t// the helper by using cancelHelperRemoval.\n\t\t\t\tif ( sortable.isOver ) {\n\n\t\t\t\t\tsortable.isOver = 0;\n\t\t\t\t\tsortable.cancelHelperRemoval = true;\n\n\t\t\t\t\t// Calling sortable's mouseStop would trigger a revert,\n\t\t\t\t\t// so revert must be temporarily false until after mouseStop is called.\n\t\t\t\t\tsortable.options._revert = sortable.options.revert;\n\t\t\t\t\tsortable.options.revert = false;\n\n\t\t\t\t\tsortable._trigger( \"out\", event, sortable._uiHash( sortable ) );\n\t\t\t\t\tsortable._mouseStop( event, true );\n\n\t\t\t\t\t// Restore sortable behaviors that were modfied\n\t\t\t\t\t// when the draggable entered the sortable area (#9481)\n\t\t\t\t\tsortable.options.revert = sortable.options._revert;\n\t\t\t\t\tsortable.options.helper = sortable.options._helper;\n\n\t\t\t\t\tif ( sortable.placeholder ) {\n\t\t\t\t\t\tsortable.placeholder.remove();\n\t\t\t\t\t}\n\n\t\t\t\t\t// Restore and recalculate the draggable's offset considering the sortable\n\t\t\t\t\t// may have modified them in unexpected ways. (#8809, #10669)\n\t\t\t\t\tui.helper.appendTo( draggable._parent );\n\t\t\t\t\tdraggable._refreshOffsets( event );\n\t\t\t\t\tui.position = draggable._generatePosition( event, true );\n\n\t\t\t\t\tdraggable._trigger( \"fromSortable\", event );\n\n\t\t\t\t\t// Inform draggable that the helper is no longer in a valid drop zone\n\t\t\t\t\tdraggable.dropped = false;\n\n\t\t\t\t\t// Need to refreshPositions of all sortables just in case removing\n\t\t\t\t\t// from one sortable changes the location of other sortables (#9675)\n\t\t\t\t\t$.each( draggable.sortables, function() {\n\t\t\t\t\t\tthis.refreshPositions();\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n} );\n\n$.ui.plugin.add( \"draggable\", \"cursor\", {\n\tstart: function( event, ui, instance ) {\n\t\tvar t = $( \"body\" ),\n\t\t\to = instance.options;\n\n\t\tif ( t.css( \"cursor\" ) ) {\n\t\t\to._cursor = t.css( \"cursor\" );\n\t\t}\n\t\tt.css( \"cursor\", o.cursor );\n\t},\n\tstop: function( event, ui, instance ) {\n\t\tvar o = instance.options;\n\t\tif ( o._cursor ) {\n\t\t\t$( \"body\" ).css( \"cursor\", o._cursor );\n\t\t}\n\t}\n} );\n\n$.ui.plugin.add( \"draggable\", \"opacity\", {\n\tstart: function( event, ui, instance ) {\n\t\tvar t = $( ui.helper ),\n\t\t\to = instance.options;\n\t\tif ( t.css( \"opacity\" ) ) {\n\t\t\to._opacity = t.css( \"opacity\" );\n\t\t}\n\t\tt.css( \"opacity\", o.opacity );\n\t},\n\tstop: function( event, ui, instance ) {\n\t\tvar o = instance.options;\n\t\tif ( o._opacity ) {\n\t\t\t$( ui.helper ).css( \"opacity\", o._opacity );\n\t\t}\n\t}\n} );\n\n$.ui.plugin.add( \"draggable\", \"scroll\", {\n\tstart: function( event, ui, i ) {\n\t\tif ( !i.scrollParentNotHidden ) {\n\t\t\ti.scrollParentNotHidden = i.helper.scrollParent( false );\n\t\t}\n\n\t\tif ( i.scrollParentNotHidden[ 0 ] !== i.document[ 0 ] &&\n\t\t\t\ti.scrollParentNotHidden[ 0 ].tagName !== \"HTML\" ) {\n\t\t\ti.overflowOffset = i.scrollParentNotHidden.offset();\n\t\t}\n\t},\n\tdrag: function( event, ui, i  ) {\n\n\t\tvar o = i.options,\n\t\t\tscrolled = false,\n\t\t\tscrollParent = i.scrollParentNotHidden[ 0 ],\n\t\t\tdocument = i.document[ 0 ];\n\n\t\tif ( scrollParent !== document && scrollParent.tagName !== \"HTML\" ) {\n\t\t\tif ( !o.axis || o.axis !== \"x\" ) {\n\t\t\t\tif ( ( i.overflowOffset.top + scrollParent.offsetHeight ) - event.pageY <\n\t\t\t\t\t\to.scrollSensitivity ) {\n\t\t\t\t\tscrollParent.scrollTop = scrolled = scrollParent.scrollTop + o.scrollSpeed;\n\t\t\t\t} else if ( event.pageY - i.overflowOffset.top < o.scrollSensitivity ) {\n\t\t\t\t\tscrollParent.scrollTop = scrolled = scrollParent.scrollTop - o.scrollSpeed;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( !o.axis || o.axis !== \"y\" ) {\n\t\t\t\tif ( ( i.overflowOffset.left + scrollParent.offsetWidth ) - event.pageX <\n\t\t\t\t\t\to.scrollSensitivity ) {\n\t\t\t\t\tscrollParent.scrollLeft = scrolled = scrollParent.scrollLeft + o.scrollSpeed;\n\t\t\t\t} else if ( event.pageX - i.overflowOffset.left < o.scrollSensitivity ) {\n\t\t\t\t\tscrollParent.scrollLeft = scrolled = scrollParent.scrollLeft - o.scrollSpeed;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( !o.axis || o.axis !== \"x\" ) {\n\t\t\t\tif ( event.pageY - $( document ).scrollTop() < o.scrollSensitivity ) {\n\t\t\t\t\tscrolled = $( document ).scrollTop( $( document ).scrollTop() - o.scrollSpeed );\n\t\t\t\t} else if ( $( window ).height() - ( event.pageY - $( document ).scrollTop() ) <\n\t\t\t\t\t\to.scrollSensitivity ) {\n\t\t\t\t\tscrolled = $( document ).scrollTop( $( document ).scrollTop() + o.scrollSpeed );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( !o.axis || o.axis !== \"y\" ) {\n\t\t\t\tif ( event.pageX - $( document ).scrollLeft() < o.scrollSensitivity ) {\n\t\t\t\t\tscrolled = $( document ).scrollLeft(\n\t\t\t\t\t\t$( document ).scrollLeft() - o.scrollSpeed\n\t\t\t\t\t);\n\t\t\t\t} else if ( $( window ).width() - ( event.pageX - $( document ).scrollLeft() ) <\n\t\t\t\t\t\to.scrollSensitivity ) {\n\t\t\t\t\tscrolled = $( document ).scrollLeft(\n\t\t\t\t\t\t$( document ).scrollLeft() + o.scrollSpeed\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\tif ( scrolled !== false && $.ui.ddmanager && !o.dropBehaviour ) {\n\t\t\t$.ui.ddmanager.prepareOffsets( i, event );\n\t\t}\n\n\t}\n} );\n\n$.ui.plugin.add( \"draggable\", \"snap\", {\n\tstart: function( event, ui, i ) {\n\n\t\tvar o = i.options;\n\n\t\ti.snapElements = [];\n\n\t\t$( o.snap.constructor !== String ? ( o.snap.items || \":data(ui-draggable)\" ) : o.snap )\n\t\t\t.each( function() {\n\t\t\t\tvar $t = $( this ),\n\t\t\t\t\t$o = $t.offset();\n\t\t\t\tif ( this !== i.element[ 0 ] ) {\n\t\t\t\t\ti.snapElements.push( {\n\t\t\t\t\t\titem: this,\n\t\t\t\t\t\twidth: $t.outerWidth(), height: $t.outerHeight(),\n\t\t\t\t\t\ttop: $o.top, left: $o.left\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\n\t},\n\tdrag: function( event, ui, inst ) {\n\n\t\tvar ts, bs, ls, rs, l, r, t, b, i, first,\n\t\t\to = inst.options,\n\t\t\td = o.snapTolerance,\n\t\t\tx1 = ui.offset.left, x2 = x1 + inst.helperProportions.width,\n\t\t\ty1 = ui.offset.top, y2 = y1 + inst.helperProportions.height;\n\n\t\tfor ( i = inst.snapElements.length - 1; i >= 0; i-- ) {\n\n\t\t\tl = inst.snapElements[ i ].left - inst.margins.left;\n\t\t\tr = l + inst.snapElements[ i ].width;\n\t\t\tt = inst.snapElements[ i ].top - inst.margins.top;\n\t\t\tb = t + inst.snapElements[ i ].height;\n\n\t\t\tif ( x2 < l - d || x1 > r + d || y2 < t - d || y1 > b + d ||\n\t\t\t\t\t!$.contains( inst.snapElements[ i ].item.ownerDocument,\n\t\t\t\t\tinst.snapElements[ i ].item ) ) {\n\t\t\t\tif ( inst.snapElements[ i ].snapping ) {\n\t\t\t\t\tif ( inst.options.snap.release ) {\n\t\t\t\t\t\tinst.options.snap.release.call(\n\t\t\t\t\t\t\tinst.element,\n\t\t\t\t\t\t\tevent,\n\t\t\t\t\t\t\t$.extend( inst._uiHash(), { snapItem: inst.snapElements[ i ].item } )\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tinst.snapElements[ i ].snapping = false;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( o.snapMode !== \"inner\" ) {\n\t\t\t\tts = Math.abs( t - y2 ) <= d;\n\t\t\t\tbs = Math.abs( b - y1 ) <= d;\n\t\t\t\tls = Math.abs( l - x2 ) <= d;\n\t\t\t\trs = Math.abs( r - x1 ) <= d;\n\t\t\t\tif ( ts ) {\n\t\t\t\t\tui.position.top = inst._convertPositionTo( \"relative\", {\n\t\t\t\t\t\ttop: t - inst.helperProportions.height,\n\t\t\t\t\t\tleft: 0\n\t\t\t\t\t} ).top;\n\t\t\t\t}\n\t\t\t\tif ( bs ) {\n\t\t\t\t\tui.position.top = inst._convertPositionTo( \"relative\", {\n\t\t\t\t\t\ttop: b,\n\t\t\t\t\t\tleft: 0\n\t\t\t\t\t} ).top;\n\t\t\t\t}\n\t\t\t\tif ( ls ) {\n\t\t\t\t\tui.position.left = inst._convertPositionTo( \"relative\", {\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: l - inst.helperProportions.width\n\t\t\t\t\t} ).left;\n\t\t\t\t}\n\t\t\t\tif ( rs ) {\n\t\t\t\t\tui.position.left = inst._convertPositionTo( \"relative\", {\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: r\n\t\t\t\t\t} ).left;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfirst = ( ts || bs || ls || rs );\n\n\t\t\tif ( o.snapMode !== \"outer\" ) {\n\t\t\t\tts = Math.abs( t - y1 ) <= d;\n\t\t\t\tbs = Math.abs( b - y2 ) <= d;\n\t\t\t\tls = Math.abs( l - x1 ) <= d;\n\t\t\t\trs = Math.abs( r - x2 ) <= d;\n\t\t\t\tif ( ts ) {\n\t\t\t\t\tui.position.top = inst._convertPositionTo( \"relative\", {\n\t\t\t\t\t\ttop: t,\n\t\t\t\t\t\tleft: 0\n\t\t\t\t\t} ).top;\n\t\t\t\t}\n\t\t\t\tif ( bs ) {\n\t\t\t\t\tui.position.top = inst._convertPositionTo( \"relative\", {\n\t\t\t\t\t\ttop: b - inst.helperProportions.height,\n\t\t\t\t\t\tleft: 0\n\t\t\t\t\t} ).top;\n\t\t\t\t}\n\t\t\t\tif ( ls ) {\n\t\t\t\t\tui.position.left = inst._convertPositionTo( \"relative\", {\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: l\n\t\t\t\t\t} ).left;\n\t\t\t\t}\n\t\t\t\tif ( rs ) {\n\t\t\t\t\tui.position.left = inst._convertPositionTo( \"relative\", {\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: r - inst.helperProportions.width\n\t\t\t\t\t} ).left;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( !inst.snapElements[ i ].snapping && ( ts || bs || ls || rs || first ) ) {\n\t\t\t\tif ( inst.options.snap.snap ) {\n\t\t\t\t\tinst.options.snap.snap.call(\n\t\t\t\t\t\tinst.element,\n\t\t\t\t\t\tevent,\n\t\t\t\t\t\t$.extend( inst._uiHash(), {\n\t\t\t\t\t\t\tsnapItem: inst.snapElements[ i ].item\n\t\t\t\t\t\t} ) );\n\t\t\t\t}\n\t\t\t}\n\t\t\tinst.snapElements[ i ].snapping = ( ts || bs || ls || rs || first );\n\n\t\t}\n\n\t}\n} );\n\n$.ui.plugin.add( \"draggable\", \"stack\", {\n\tstart: function( event, ui, instance ) {\n\t\tvar min,\n\t\t\to = instance.options,\n\t\t\tgroup = $.makeArray( $( o.stack ) ).sort( function( a, b ) {\n\t\t\t\treturn ( parseInt( $( a ).css( \"zIndex\" ), 10 ) || 0 ) -\n\t\t\t\t\t( parseInt( $( b ).css( \"zIndex\" ), 10 ) || 0 );\n\t\t\t} );\n\n\t\tif ( !group.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\tmin = parseInt( $( group[ 0 ] ).css( \"zIndex\" ), 10 ) || 0;\n\t\t$( group ).each( function( i ) {\n\t\t\t$( this ).css( \"zIndex\", min + i );\n\t\t} );\n\t\tthis.css( \"zIndex\", ( min + group.length ) );\n\t}\n} );\n\n$.ui.plugin.add( \"draggable\", \"zIndex\", {\n\tstart: function( event, ui, instance ) {\n\t\tvar t = $( ui.helper ),\n\t\t\to = instance.options;\n\n\t\tif ( t.css( \"zIndex\" ) ) {\n\t\t\to._zIndex = t.css( \"zIndex\" );\n\t\t}\n\t\tt.css( \"zIndex\", o.zIndex );\n\t},\n\tstop: function( event, ui, instance ) {\n\t\tvar o = instance.options;\n\n\t\tif ( o._zIndex ) {\n\t\t\t$( ui.helper ).css( \"zIndex\", o._zIndex );\n\t\t}\n\t}\n} );\n\nreturn $.ui.draggable;\n\n} );\n","/*!\n * jQuery UI Mouse 1.13.2\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: Mouse\n//>>group: Widgets\n//>>description: Abstracts mouse-based interactions to assist in creating certain widgets.\n//>>docs: http://api.jqueryui.com/mouse/\n\n( function( factory ) {\n\t\"use strict\";\n\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [\n\t\t\t\"jquery\",\n\t\t\t\"../ie\",\n\t\t\t\"../version\",\n\t\t\t\"../widget\"\n\t\t], factory );\n  } else if (typeof module === 'object' && module.exports) {\n    require(\"../ie\");\n    require(\"../version\");\n    require(\"../widget\");\n    module.exports = factory( require( \"jquery\" ) );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n} )( function( $ ) {\n\"use strict\";\n\nvar mouseHandled = false;\n$( document ).on( \"mouseup\", function() {\n\tmouseHandled = false;\n} );\n\nreturn $.widget( \"ui.mouse\", {\n\tversion: \"1.13.2\",\n\toptions: {\n\t\tcancel: \"input, textarea, button, select, option\",\n\t\tdistance: 1,\n\t\tdelay: 0\n\t},\n\t_mouseInit: function() {\n\t\tvar that = this;\n\n\t\tthis.element\n\t\t\t.on( \"mousedown.\" + this.widgetName, function( event ) {\n\t\t\t\treturn that._mouseDown( event );\n\t\t\t} )\n\t\t\t.on( \"click.\" + this.widgetName, function( event ) {\n\t\t\t\tif ( true === $.data( event.target, that.widgetName + \".preventClickEvent\" ) ) {\n\t\t\t\t\t$.removeData( event.target, that.widgetName + \".preventClickEvent\" );\n\t\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} );\n\n\t\tthis.started = false;\n\t},\n\n\t// TODO: make sure destroying one instance of mouse doesn't mess with\n\t// other instances of mouse\n\t_mouseDestroy: function() {\n\t\tthis.element.off( \".\" + this.widgetName );\n\t\tif ( this._mouseMoveDelegate ) {\n\t\t\tthis.document\n\t\t\t\t.off( \"mousemove.\" + this.widgetName, this._mouseMoveDelegate )\n\t\t\t\t.off( \"mouseup.\" + this.widgetName, this._mouseUpDelegate );\n\t\t}\n\t},\n\n\t_mouseDown: function( event ) {\n\n\t\t// don't let more than one widget handle mouseStart\n\t\tif ( mouseHandled ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._mouseMoved = false;\n\n\t\t// We may have missed mouseup (out of window)\n\t\tif ( this._mouseStarted ) {\n\t\t\tthis._mouseUp( event );\n\t\t}\n\n\t\tthis._mouseDownEvent = event;\n\n\t\tvar that = this,\n\t\t\tbtnIsLeft = ( event.which === 1 ),\n\n\t\t\t// event.target.nodeName works around a bug in IE 8 with\n\t\t\t// disabled inputs (#7620)\n\t\t\telIsCancel = ( typeof this.options.cancel === \"string\" && event.target.nodeName ?\n\t\t\t\t$( event.target ).closest( this.options.cancel ).length : false );\n\t\tif ( !btnIsLeft || elIsCancel || !this._mouseCapture( event ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tthis.mouseDelayMet = !this.options.delay;\n\t\tif ( !this.mouseDelayMet ) {\n\t\t\tthis._mouseDelayTimer = setTimeout( function() {\n\t\t\t\tthat.mouseDelayMet = true;\n\t\t\t}, this.options.delay );\n\t\t}\n\n\t\tif ( this._mouseDistanceMet( event ) && this._mouseDelayMet( event ) ) {\n\t\t\tthis._mouseStarted = ( this._mouseStart( event ) !== false );\n\t\t\tif ( !this._mouseStarted ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Click event may never have fired (Gecko & Opera)\n\t\tif ( true === $.data( event.target, this.widgetName + \".preventClickEvent\" ) ) {\n\t\t\t$.removeData( event.target, this.widgetName + \".preventClickEvent\" );\n\t\t}\n\n\t\t// These delegates are required to keep context\n\t\tthis._mouseMoveDelegate = function( event ) {\n\t\t\treturn that._mouseMove( event );\n\t\t};\n\t\tthis._mouseUpDelegate = function( event ) {\n\t\t\treturn that._mouseUp( event );\n\t\t};\n\n\t\tthis.document\n\t\t\t.on( \"mousemove.\" + this.widgetName, this._mouseMoveDelegate )\n\t\t\t.on( \"mouseup.\" + this.widgetName, this._mouseUpDelegate );\n\n\t\tevent.preventDefault();\n\n\t\tmouseHandled = true;\n\t\treturn true;\n\t},\n\n\t_mouseMove: function( event ) {\n\n\t\t// Only check for mouseups outside the document if you've moved inside the document\n\t\t// at least once. This prevents the firing of mouseup in the case of IE<9, which will\n\t\t// fire a mousemove event if content is placed under the cursor. See #7778\n\t\t// Support: IE <9\n\t\tif ( this._mouseMoved ) {\n\n\t\t\t// IE mouseup check - mouseup happened when mouse was out of window\n\t\t\tif ( $.ui.ie && ( !document.documentMode || document.documentMode < 9 ) &&\n\t\t\t\t\t!event.button ) {\n\t\t\t\treturn this._mouseUp( event );\n\n\t\t\t// Iframe mouseup check - mouseup occurred in another document\n\t\t\t} else if ( !event.which ) {\n\n\t\t\t\t// Support: Safari <=8 - 9\n\t\t\t\t// Safari sets which to 0 if you press any of the following keys\n\t\t\t\t// during a drag (#14461)\n\t\t\t\tif ( event.originalEvent.altKey || event.originalEvent.ctrlKey ||\n\t\t\t\t\t\tevent.originalEvent.metaKey || event.originalEvent.shiftKey ) {\n\t\t\t\t\tthis.ignoreMissingWhich = true;\n\t\t\t\t} else if ( !this.ignoreMissingWhich ) {\n\t\t\t\t\treturn this._mouseUp( event );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( event.which || event.button ) {\n\t\t\tthis._mouseMoved = true;\n\t\t}\n\n\t\tif ( this._mouseStarted ) {\n\t\t\tthis._mouseDrag( event );\n\t\t\treturn event.preventDefault();\n\t\t}\n\n\t\tif ( this._mouseDistanceMet( event ) && this._mouseDelayMet( event ) ) {\n\t\t\tthis._mouseStarted =\n\t\t\t\t( this._mouseStart( this._mouseDownEvent, event ) !== false );\n\t\t\tif ( this._mouseStarted ) {\n\t\t\t\tthis._mouseDrag( event );\n\t\t\t} else {\n\t\t\t\tthis._mouseUp( event );\n\t\t\t}\n\t\t}\n\n\t\treturn !this._mouseStarted;\n\t},\n\n\t_mouseUp: function( event ) {\n\t\tthis.document\n\t\t\t.off( \"mousemove.\" + this.widgetName, this._mouseMoveDelegate )\n\t\t\t.off( \"mouseup.\" + this.widgetName, this._mouseUpDelegate );\n\n\t\tif ( this._mouseStarted ) {\n\t\t\tthis._mouseStarted = false;\n\n\t\t\tif ( event.target === this._mouseDownEvent.target ) {\n\t\t\t\t$.data( event.target, this.widgetName + \".preventClickEvent\", true );\n\t\t\t}\n\n\t\t\tthis._mouseStop( event );\n\t\t}\n\n\t\tif ( this._mouseDelayTimer ) {\n\t\t\tclearTimeout( this._mouseDelayTimer );\n\t\t\tdelete this._mouseDelayTimer;\n\t\t}\n\n\t\tthis.ignoreMissingWhich = false;\n\t\tmouseHandled = false;\n\t\tevent.preventDefault();\n\t},\n\n\t_mouseDistanceMet: function( event ) {\n\t\treturn ( Math.max(\n\t\t\t\tMath.abs( this._mouseDownEvent.pageX - event.pageX ),\n\t\t\t\tMath.abs( this._mouseDownEvent.pageY - event.pageY )\n\t\t\t) >= this.options.distance\n\t\t);\n\t},\n\n\t_mouseDelayMet: function( /* event */ ) {\n\t\treturn this.mouseDelayMet;\n\t},\n\n\t// These are placeholder methods, to be overriden by extending plugin\n\t_mouseStart: function( /* event */ ) {},\n\t_mouseDrag: function( /* event */ ) {},\n\t_mouseStop: function( /* event */ ) {},\n\t_mouseCapture: function( /* event */ ) {\n\t\treturn true;\n\t}\n} );\n\n} );\n","/**\n * @license\n * Copyright (c) 2014, 2023, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\ndefine(['exports', '@oracle/oraclejet-preact/UNSAFE_IntlDateTime'], function (exports, UNSAFE_IntlDateTime) { 'use strict';\n\n\n\n\tObject.defineProperty(exports, 'CalendarUtils', {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn UNSAFE_IntlDateTime.CalendarUtils;\n\t\t}\n\t});\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n});\n","/**\n * @license\n * Copyright (c) 2014, 2023, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\ndefine(['exports', 'ojs/ojlogger', 'ojs/ojconverterutils-i18n', 'ojs/ojlocaledata', 'ojs/ojconverter', 'ojs/ojtranslation', 'ojs/ojconfig', 'ojs/ojcore-base', 'ojs/ojvalidation-error', 'ojs/ojconverter-preferences'], function (exports, Logger, __ConverterUtilsI18n, LocaleData, Converter, Translations, Config, oj$1, ojvalidationError, ojconverterPreferences) { 'use strict';\n\n  Converter = Converter && Object.prototype.hasOwnProperty.call(Converter, 'default') ? Converter['default'] : Converter;\n  oj$1 = oj$1 && Object.prototype.hasOwnProperty.call(oj$1, 'default') ? oj$1['default'] : oj$1;\n\n  /* xeslint-disable no-param-reassign */\n  /**\n   * @constructor\n   *\n   * @classdesc OraNumberConverter object implements number parsing and formatting for\n   * decimal, currency, percent and perMill types. It supports ECMA-402 options\n   * and user defined pattern. The user defined pattern is parsed in order to\n   * derive the options that can be specified as ECMA options.\n   * There are several ways to use the converter.\n   * <p>\n   * <ul>\n   * <li>Using options defined by the ECMA 402 Specification, these would be the properties style,\n   * currency, currencyDisplay, minimumIntegerDigits, minimumFractionDigits, maximumFractionDigits,\n   * useGrouping. NOTE: minimumSignificantDigits and maximumSignificantDigits are not supported.</li>\n   * <li>Using a custom decimal, currency or percent format pattern. specified using the 'pattern' property</li>\n   * <li>Using the decimalFormat option to define a compact pattern, such as \"1M\" and \"1 million\".</li>\n   * <li>Using the currencyFormat option to define a compact pattern, such as \"$1M\" and \"$1 million\".</li>\n   * <li>Using the roundingMode and roundDuringParse options to round the number UP, DOWN, CEILING, FLOOR, HALF_UP, HALF_DOWN or HALF_EVEN.</li>\n   * </ul>\n   * <p>\n   *\n   * The converter provides leniency when parsing user input value to a number in the following ways:<br/>\n   *\n   * <ul>\n   * <li>Prefix and suffix that do not match the pattern, are removed. E.g., when pattern is\n   * \"#,##0.00%\" (suffix is the % character), a value of \"abc-123.45xyz\", will be leniently parsed to\n   * -123.45</li>\n   * <li>When a value includes a symbol but the pattern doesn't require it.  E.g., the options are\n   * {pattern: \"###\", currency: 'USD'}, then values ($123), (123) and -123 will be leniently parsed as\n   * -123.</li>\n   * </ul>\n   * <p>\n   * Lenient parse can be disabled by setting the property lenientParse to \"none\". In which case the user input must\n   * be an exact match of the expected pattern and all the leniency described above will be disabled.\n   * <p>\n   * @property {Object=} options - an object literal used to provide optional information to\n   * initialize the converter.\n   * @property {string=} options.style - sets the style of number formatting. Allowed values are \"decimal\"\n   * (the default), \"currency\", \"percent\" or \"unit\". When a number is formatted as a decimal, the decimal\n   * character is replaced with the most appropriate symbol for the locale. In English this is a\n   * decimal point (\".\"), while in many locales it is a decimal comma (\",\"). If grouping is enabled the\n   * locale dependent grouping separator is also used. These symbols are also used for numbers\n   * formatted as currency or a percentage, where appropriate.\n   * @property {string=} options.currency - specifies the currency that will be used when formatting the\n   * number. The value should be a ISO 4217 alphabetic currency code. If the style is set to currency,\n   * it's required that the currency property also be specified. This is because there is no default\n   * currency associated with the current locale. The user must always specify the currency code\n   * to be shown, otherwise an error will be thrown. The current page locale\n   * (returned by oj.Config.getLocale()) determines the formatting elements of the number\n   * like grouping separator and decimal separator. The currency code tells us which currency to\n   * display in current page locale. JET has translations for currency names.\n   * <p>\n   * As an example if we want to format 1000.35 EURO and the page locale is \"en-US\",\n   * we pass {style:'currency', currency:'EUR', currencyDisplay:'symbol'} and we will get \"€1,000.35\"\n   * If the page locale is \"fr-FR\", with the same options, we will get: \"1 000,35 €\"\n   * </p>\n   * @property {string=} options.unit - Mandatory when style is \"unit\". Allowed values:\n   * \"byte\" or \"bit\". It is used for formatting only. It can not be used for parsing.\n   * <p>\n   * It is used to format digital units like 10Mb for bit unit or 10MB for byte unit.\n   * There is no need to specify the scale of the unit. We automatically detect it.\n   * For example 1024 is formatted as 1KB and 1048576 as 1MB.\n   * The user can also specify 'minimumFractionDigits' and  'maximumFractionDigits' to be displayed,\n   * otherwise we use the locale's default max and min fraction digits.\n   * </p>\n   * @property {string=} options.currencyDisplay - if the number is using currency formatting, specifies\n   * if the currency will be displayed using its \"code\" (as an ISO 4217 alphabetic currency code),\n   * \"symbol\" (a localized currency symbol (e.g. $ for US dollars, £ for Great British pounds, and so\n   * on), or \"name\" (a localized currency name. Allowed values are \"code\", \"symbol\" and \"name\".\n   * The default is \"symbol\".\n   * @property {string=} options.decimalFormat -\n   * specifies the decimal format length to use when style is set to \"decimal\".\n   * Allowed values are : \"standard\"(default), \"short\" and \"long\". \"standard\" is equivalent to not\n   * specifying the 'decimalFormat' attribute, in that case the locale's default decimal pattern\n   * is used for formatting.\n   * <p>\n   * The user can also specify 'minimumFractionDigits' and  'maximumFractionDigits' to display.\n   * When not present we use the locale's default max and min fraction digits.\n   * </p>\n   * <p>\n   * There is no need to specify the scale; we automatically detect greatest scale that is less or\n   * equal than the input number. For example  1000000 is formatted as \"1M\" or \"1 million\" and\n   * 1234 is formatted, with zero fractional digits, as \"1K\" or \" 1 thousand\" for\n   * short and long formats respectively. The pattern for the short and long number is locale dependent\n   * and uses plural rules for the particular locale.\n   * </p>\n   * <p>\n   * NOTE: Currently this option formats a value (e.g., 2000 -> 2K), but it does not parse a value\n   * (e.g., 2K -> 2000), so it can only be used\n   * in a readOnly EditableValue because readOnly EditableValue components do not call\n   * the converter's parse function.\n   * </p>\n   * @property {string=} options.currencyFormat -\n   * specifies the currency format length to use when style is set to \"currency\".\n   * Allowed values are : \"standard\"(default), \"short\" and \"long\". 'standard' is equivalent to not\n   * specifying the 'currencyFormat' attribute, in that case the locale's default currency pattern\n   * is used for formatting.\n   * Similar to decimalFormat, currencyFormat can only be used for formatting. It can not be used for parsing.\n   * <p>\n   * The user can also specify 'minimumFractionDigits' and  'maximumFractionDigits' to display.\n   * When not present we use the locale's default max and min fraction digits.\n   * </p>\n   * <p>\n   * There is no need to specify the scale; we automatically detect greatest scale that is less or\n   * equal than the input number. For example  1000000 is formatted as \"$1M\" or \"1 million dollar\" and\n   * 1000 is formatted as \"$1K\" or \" 1 thousand dollar\" for short and long formats respectively.\n   * The pattern for the short and long number is locale dependent and uses plural rules for the particular locale.\n   * </p>\n   * @property {number=} options.minimumIntegerDigits - sets the minimum number of digits before the\n   * decimal place (known as integer digits). The number is padded with leading zeros if it would not\n   * otherwise have enough digits. The value must be an integer between 1 and 21.\n   * @property {number=} options.minimumFractionDigits - similar to 'minimumIntegerDigits', except it\n   * deals with the digits after the decimal place (fractional digits). It must be an integer between\n   * 0 and 20. The fractional digits will be padded with trailing zeros if they are less than the minimum.\n   * @property {number=} options.maximumFractionDigits - follows the same rules as 'minimumFractionDigits',\n   * but sets the maximum number of fractional digits that are allowed. The value will be rounded if\n   * there are more digits than the maximum specified.\n   * @property {boolean=} options.useGrouping - when the value is truthy, the locale dependent grouping\n   * separator is used when formatting the number. This is often known as the thousands separator,\n   * although it is up to the locale where it is placed. The 'useGrouping' is set to true by default.\n   * @property {string=} options.pattern an optional localized pattern, where the characters used in\n   * pattern are as defined in the Unicode CLDR for numbers, percent or currency formats. When present\n   * this will override the other \"options\". <p>\n   *\n   * &nbsp;&nbsp;- When the pattern represents a currency style the 'currency' property is required to\n   * be set, as not setting this will throw an error. The 'currencyDisplay' is optional. <br/>Example:\n   * {pattern: '¤#,##0', currency: 'USD'}. <p>\n   *\n   * &nbsp;&nbsp;- It's not mandatory for the pattern to have the special character '¤' (currency sign)\n   * be present. When not present, values are treated as a currency value, but are not formatted to\n   * show the currency symbol. <br/>Example: {pattern: '#,##0', currency: 'USD'} <p>\n   *\n   * &nbsp;&nbsp;- When the pattern represents a percent style, the percent special character ('%') needs to be\n   * explicitly specified in the pattern, e.g., {pattern: \"#,##0%\"}. If the pattern does not contain\n   * the percent character it's treated as a decimal pattern, unless the style is set to percent,\n   * in which case the value is treated as a percent value, but not formatted to show the percent symbol.\n   * <br/>Example: {style: 'percent', pattern: \"#,##0\"}. <p>\n   *\n   * &nbsp;&nbsp;- A decimal pattern or exponent pattern is specified in the pattern using the CLDR\n   * conventions. <br/>Example: {pattern: \"#,##0.00\"} or {pattern: \"0.##E0\"}. <p>\n   *\n   * NOTE: 'pattern' is provided for backwards compatibility with existing apps that may want the\n   * convenience of specifying an explicit format mask. Setting a pattern will override the default\n   * locale specific format. <br/>\n   *\n   * @property {string=} options.roundingMode - specifies the rounding behavior.\n   * We support the options: UP, DOWN, CEILING, FLOOR, HALF_UP, HALF_DOWN and HALF_EVEN.\n   * The rounding modes can be used in conjunction with decimal (including short format), currency and percent styles.\n   * We follow the Java.Math.RoundingMode behavior : https://docs.oracle.com/javase/7/docs/api/java/math/RoundingMode.html\n   *\n   * @property {boolean=} options.roundDuringParse - Specifies whether or not to round during\n   * parse. Defaults to false; the number converter rounds during format but not during parse.\n   *\n   * @property {Object=} options.separators - An object with 2 fields: 'decimal' and 'group'.\n   * It allows the user to override the locale's default decimal and grouping separators. It is accepted for both\n   * format and parse methods.\n   * <br/>\n   *\n   * @property {string=} options.lenientParse - The lenientParse property can be used to enable or disable leninet parsing.\n   *  Allowed values: \"full\" (default), \"none\".\n   * <p style='padding-left: 5px;'>\n   * By default the lenient parse is enabled and the leniency rules descibed above will be used. When lenientParse is\n   * set to \"none\" the lenient parse is disabled and the user input must match the expected input otherwise an exception will\n   * be thrown.<br/><br/>\n   *\n   * @example <caption>Create a number converter for currencies</caption>\n   * var converter = OraNumberConveter.getInstance();\n   * var options = {style: \"currency\", currency: \"USD\", minimumIntegerDigits: 2};\n   * var localeElements;\n   * var nb = 9;\n   * converter.format(nb, localeElements, options); --> \"$09.00\" if page locale is 'en-US'\n   * converter.format(nb, localeElements, options); --> \"09,00 $US\" if page locale is 'fr-FR'<br/>\n   *\n   * TODO @example <caption>Options for percent values using a custom (CLDR) pattern</caption>\n   * var options = {pattern: '#,##0%'};\n   * converter = converterFactory.createConverter(options);<br/>\n   *\n   * @example <caption>To parse a value as percent but format it without displaying the percent character</caption>\n   * var options = {style: 'percent', pattern: '#,##0'};<br/>\n   *\n   * @example <caption>To parse a value as currency using a custom (CLDR) pattern</caption>\n   * var options = {pattern: '¤#,##0', currency: 'USD'};\n   *\n   * @example <caption>To format a value as digital bit unit</caption>\n   * var options = {style:'unit', unit:'bit'};\n   * var nb = 1024;\n   * converter.format(nb, localeElements, options);--> 1Kb<br/>\n   *\n   * @example <caption>To format a value as digital byte unit</caption>\n   * var options = {style:'unit', unit:'byte'};\n   * var nb = 1024;\n   * converter.format(nb, localeElements, options);--> 1KB<br/>\n   *\n   * @example <caption>The following decimalFormat examples are in en locale.\n   * To format a value as short (default for fraction digits is based on the locale)</caption>\n   * var options = {style:'decimal', decimalFormat:'short'};\n   * var nb = 12345\n   * converter.format(nb, localeElements, options);--> 12.354K<br/>\n   *\n   * @example <caption>To format a value as long (default for fraction digits is based on the locale):</caption>\n   * var options = {style:'decimal', decimalFormat:'long'};\n   * var nb = 12345;\n   * converter.format(nb, localeElements, options);--> 12.345 thousand<br/>\n   *\n   * @example <caption>To format a value as short with minimum fraction digits:</caption>\n   * options = { style:'decimal', decimalFormat:'short', minimumFractionDigits:4};\n   * var nb = 1234;\n   * converter.format(nb, localeElements, options);--> 1.2340K<br/>\n   *\n   * @example <caption>To format a value as short with maximum fraction digits:</caption>\n   * options = { style:'decimal', decimalFormat:'short', maximumFractionDigits:0};\n   *  var nb = 1234;\n   * converter.format(nb, localeElements, options);--> 12K<br/>\n   *\n   * @example <caption>To format a value as long with minimum and maximum fraction digits:</caption>\n   * options = { style:'decimal', decimalFormat:'long',\n   * minimumFractionDigits:2, maximumFractionDigits:4};\n   * var nb = 12000;\n   * converter.format(nb, localeElements, options);--> 12.00 thousand<br/>\n   *\n   * @example <caption>To format a value as short with minimum and maximum fraction digits:</caption>\n   * options = { style:'decimal', decimalFormat:'long',\n   * minimumFractionDigits:2, maximumFractionDigits:4};\n   * var nb = 12345678;\n   * converter.format(nb, localeElements, options);--> 12.345 million<br/>\n   *\n   * @example <caption>decimal style default is standard:</caption>\n   * options = { style:'decimal', decimalFormat:'standard'};\n   * var nb = 12345;\n   * converter.format(nb, localeElements, options);--> 12,345<br/>\n   *\n   * @example <caption>decimal round UP:</caption>\n   * options = { style:'decimal',  maximumFractionDigits:2, roundingMode:'UP'};\n   * var nb = 0.221;\n   * converter.format(nb, localeElements, options);--> 0.23\n   * var str = \"0.221\";\n   * converter.parse(str, localeElements, options);-->0.221 //doesn't round during parse by default<br/>\n   *\n   * @example <caption>decimal round DOWN:</caption>\n   * options = { style:'decimal',  maximumFractionDigits:2, roundingMode:'DOWN'};\n   * var nb = 0.229;\n   * converter.format(nb, localeElements, options);--> 0.22\n   * var str = \"0.229\";\n   * converter.parse(str, localeElements, options);-->0.229 //doesn't round during parse by default<br/>\n   *\n   * @example <caption>decimal round CEILING:</caption>\n   * options = { style:'decimal',  maximumFractionDigits:2, roundingMode:'CEILING'};\n   * var nb = 0.221;\n   * converter.format(nb, localeElements, options);--> 0.23\n   * var str = \"0.221\";\n   * converter.parse(str, localeElements, options);-->0.221 //doesn't round during parse by default<br/>\n   *\n   * @example <caption>decimal round FLOOR:</caption>\n   * options = { style:'decimal',  maximumFractionDigits:2, roundingMode:'FLOOR'};\n   * var nb = 0.228;\n   * converter.format(nb, localeElements, options);--> 0.22\n   * var str = \"0.228\";\n   * converter.parse(str, localeElements, options);-->0.228 //doesn't round during parse by default<br/>\n   *\n   * @example <caption>decimal round HALF_DOWN:</caption>\n   * options = { style:'decimal',  maximumFractionDigits:2, roundingMode:'HALF_DOWN'};\n   * var nb = 0.225;\n   * converter.format(nb, localeElements, options);--> 0.22\n   * var str = \"0.225\";\n   * converter.parse(str, localeElements, options);-->0.225 //doesn't round during parse by default<br/>\n   *\n   * @example <caption>decimal round HALF_UP:</caption>\n   * options = { style:'decimal',  maximumFractionDigits:2, roundingMode:'HALF_UP'};\n   * var nb = 0.225;\n   * converter.format(nb, localeElements, options);--> 0.23\n   * var str = \"0.225\";\n   * converter.parse(str, localeElements, options);--> 0.225 //doesn't round during parse by default<br/>\n   *\n   * @example <caption>decimal round HALF_EVEN:</caption>\n   * options = { style:'decimal',  maximumFractionDigits:2, roundingMode:'HALF_EVEN'};\n   * converter.format(0.225, localeElements, options);--> 0.22\n   * converter.format(0.235, localeElements, options);--> 0.24\n   * converter.parse(\"0.225\", localeElements, options);--> 0.225 //doesn't round during parse by default\n   * converter.parse(\"0.235\", localeElements, options);--> 0.235 //doesn't round during parse by default<br/>\n   *\n   * @example <caption>decimal round UP and roundDuringParse:</caption>\n   * options = { style:'decimal', maximumFractionDigits:2,\n   *             roundingMode:'UP', roundDuringParse: true};\n   * var nb = 0.221;\n   * converter.format(nb, localeElements, options);--> 0.23\n   * var str = \"0.221\";\n   * converter.parse(str, localeElements, options);-->0.23<br/>\n   *\n   * @example <caption>decimal round DOWN and roundDuringParse:</caption>\n   * options = { style:'decimal', maximumFractionDigits:2,\n   *             roundingMode:'DOWN', roundDuringParse: true};\n   * var nb = 0.229;\n   * converter.format(nb, localeElements, options);--> 0.22\n   * var str = \"0.229\";\n   * converter.parse(str, localeElements, options);-->0.22<br/>\n   *\n   * @example <caption>decimal round CEILING and roundDuringParse:</caption>\n   * options = { style:'decimal', maximumFractionDigits:2,\n   *             roundingMode:'CEILING', roundDuringParse: true};\n   * var nb = 0.221;\n   * converter.format(nb, localeElements, options);--> 0.23\n   * var str = \"0.221\";\n   * converter.parse(str, localeElements, options);-->0.23<br/>\n   *\n   * @example <caption>decimal round FLOOR and roundDuringParse:</caption>\n   * options = { style:'decimal', maximumFractionDigits:2,\n   *             roundingMode:'FLOOR', roundDuringParse: true};\n   * var nb = 0.228;\n   * converter.format(nb, localeElements, options);--> 0.22\n   * var str = \"0.228\";\n   * converter.parse(str, localeElements, options);-->0.22<br/>\n   *\n   * @example <caption>decimal round HALF_DOWN and roundDuringParse:</caption>\n   * options = { style:'decimal', maximumFractionDigits:2,\n   *             roundingMode:'HALF_DOWN', roundDuringParse: true};\n   * var nb = 0.225;\n   * converter.format(nb, localeElements, options);--> 0.22\n   * var str = \"0.225\";\n   * converter.parse(str, localeElements, options);-->0.22<br/>\n   *\n   * @example <caption>decimal round HALF_UP and roundDuringParse:</caption>\n   * options = { style:'decimal',  maximumFractionDigits:2,\n   *             roundingMode:'HALF_UP', roundDuringParse: true};\n   * var nb = 0.225;\n   * converter.format(nb, localeElements, options);--> 0.23\n   * var str = \"0.225\";\n   * converter.parse(str, localeElements, options);--> 0.23<br/>\n   *\n   * @example <caption>decimal round HALF_EVEN and roundDuringParse:</caption>\n   * options = { style:'decimal',  maximumFractionDigits:2,\n   *             roundingMode:'HALF_EVEN', roundDuringParse: true};\n   * converter.format(0.225, localeElements, options);--> 0.22\n   * converter.format(0.235, localeElements, options);--> 0.24\n   * converter.parse(\"0.225\", localeElements, options);--> 0.22\n   * converter.parse(\"0.235\", localeElements, options);--> 0.24<br/>\n   *\n   * @example <caption>Override locale's decimal and grouping separators:</caption>\n   * in en-US locale, the decimal separator is '.' and grouping separator is ','. In this example we will swap them.\n   * options = { style:'decimal', separators: {decimal: ',',  group: '.'}};\n   * var nb = 1234567.89;\n   * converter.format(nb, localeElements, options);--> 1.234.567,89\n   * converter.parse(\"1.234.567,89\", localeElements, options);--> 1234567.89\n   * <br/>\n   *\n   * @example <caption>Disable lenient parse:</caption>\n   * options = { style:'decimal',  lenientParse: 'none'};\n   * converter.parse(\"abc-123.45xyz\", localeElements, options);--> Error: Unparsable number abc-123.45xyz The expected number pattern is #,##0.###\n   * <br/>\n   *\n   * @name OraNumberConverter\n   * @ignore\n   */\n\n  /**\n   * @ignore\n   */\n\n  // eslint-disable-next-line no-unused-vars\n  const OraNumberConverter = (function () {\n    var instance;\n\n    var _REGEX_INFINITY = /^[+-]?infinity$/i;\n    var _REGEX_PARSE_FLOAT = /^[+-]?\\d*\\.?\\d*(e[+-]?\\d+)?$/;\n    var _LENIENT_REGEX_PARSE_FLOAT = /([^+-.0-9]*)([+-]?\\d*\\.?\\d*(E[+-]?\\d+)?).*$/;\n    // eslint-disable-next-line no-useless-escape\n    var _ESCAPE_REGEXP = /([\\^$.*+?|\\[\\](){}])/g;\n    var _REGEX_TRIM_ZEROS = /(^0\\.0*)([^0].*$)/;\n    var _REGEX_ONLY_ZEROS = /^0+$/;\n\n    var _decimalTypeValues = {\n      trillion: [100000000000000, 10000000000000, 1000000000000],\n      billion: [100000000000, 10000000000, 1000000000],\n      million: [100000000, 10000000, 1000000],\n      thousand: [100000, 10000, 1000]\n    };\n\n    var _decimalTypeValuesMap = {\n      trillion: 1000000000000,\n      billion: 1000000000,\n      million: 1000000,\n      thousand: 1000\n    };\n\n    // maps roundingMode attributes to Math rounding modes.\n    var _roundingModeMap = {\n      HALF_UP: 'ceil',\n      CEILING: 'ceil',\n      UP: 'ceil',\n      HALF_DOWN: 'floor',\n      FLOOR: 'floor',\n      DOWN: 'floor',\n      DEFAULT: 'round'\n    };\n\n    var _DIGITAL_KILO = 1024;\n    var _DIGITAL_MEGA = 1024 * 1024;\n    var _DIGITAL_GIGA = 1024 * 1024 * 1024;\n    var _DIGITAL_TERA = 1024 * 1024 * 1024 * 1024;\n\n    // prepend or append count zeros to a string.\n    function _zeroPad(str, count, left) {\n      var l;\n      for (l = str.length; l < count; l += 1) {\n        // eslint-disable-next-line no-param-reassign\n        str = left ? '0' + str : str + '0';\n      }\n      return str;\n    }\n\n    function _throwNumberOutOfRange(value, minimum, maximum, property) {\n      var msg =\n        value +\n        ' is out of range.  Enter a value between ' +\n        minimum +\n        ' and ' +\n        maximum +\n        ' for ' +\n        property;\n      var rangeError = new RangeError(msg);\n      var errorInfo = {\n        errorCode: 'numberOptionOutOfRange',\n        parameterMap: {\n          value: value,\n          minValue: minimum,\n          maxValue: maximum,\n          propertyName: property\n        }\n      };\n      rangeError.errorInfo = errorInfo;\n      throw rangeError;\n    }\n\n    function _getNumberOption(options, property, minimum, maximum, fallback) {\n      var value = options[property];\n      if (value !== undefined) {\n        value = Number(value);\n        if (isNaN(value) || value < minimum || value > maximum) {\n          _throwNumberOutOfRange(value, minimum, maximum, property);\n        }\n        return Math.floor(value);\n      }\n\n      return fallback;\n    }\n\n    // get the numbering system key from the locale's unicode extension.\n    // Verify that the locale data has a numbers entry for it, if not return latn as default.\n    function _getNumberingSystemKey(localeElements, locale) {\n      if (locale === undefined) {\n        return 'latn';\n      }\n      var numberingSystemKey = _getNumberingExtension(locale);\n      var symbols = 'symbols-numberSystem-' + numberingSystemKey;\n      if (localeElements.numbers[symbols] === undefined) {\n        numberingSystemKey = 'latn';\n      }\n      return numberingSystemKey;\n    }\n\n    // return the language part\n    function _getBCP47Lang(tag) {\n      var arr = tag.split('-');\n      return arr[0];\n    }\n\n    // get the unicode numbering system extension.\n    function _getNumberingExtension(locale) {\n      var _locale = locale || 'en-US';\n      var idx = _locale.indexOf('-u-nu-');\n      var numbering = 'latn';\n      if (idx !== -1) {\n        numbering = _locale.substr(idx + 6, 4);\n      }\n      return numbering;\n    }\n\n    /* return the properties for a number such as minimum and maximum fraction\n     *digits, decimal separator, grouping separator.\n     *-If no user defined pattern is provided, get the pattern from the locale\n     *  data and parse it to extrcat the number properties. If ecma options are\n     *  present, override the corresponding default properties.\n     *-If a user defined pattern is provided, parse it and extrcat the number\n     *  properties. Ignore ecma ptions if present.\n     */\n\n    function _getNumberSettings(localeElements, _numberSettings, options, locale) {\n      var numberSettings = _numberSettings;\n      var pat;\n      var localeElementsMainNode =\n        __ConverterUtilsI18n.OraI18nUtils.getLocaleElementsMainNode(localeElements);\n      var numberingSystemKey = _getNumberingSystemKey(localeElementsMainNode, locale);\n      numberSettings.numberingSystemKey = numberingSystemKey;\n      numberSettings.numberingSystem = 'symbols-numberSystem-' + numberingSystemKey;\n      var lenient = options.lenientParse;\n      numberSettings.lenientParse = lenient || 'full';\n      numberSettings.style = options.style;\n      // pattern passed in options\n      if (options.pattern !== undefined && options.pattern.length > 0) {\n        pat = options.pattern;\n      } else {\n        var key;\n        switch (numberSettings.style) {\n          case 'decimal':\n            key = 'decimalFormats-numberSystem-';\n            break;\n          case 'currency':\n            key = 'currencyFormats-numberSystem-';\n            break;\n          case 'percent':\n            key = 'percentFormats-numberSystem-';\n            break;\n          default:\n            key = 'decimalFormats-numberSystem-';\n            break;\n        }\n        key += numberSettings.numberingSystemKey;\n        pat = localeElementsMainNode.numbers[key].standard;\n      }\n      // check if decimalFormat is set\n      var decFormatLength = options.decimalFormat;\n      // if not, check for currencyFormat\n      if (decFormatLength === undefined) {\n        decFormatLength = options.currencyFormat;\n      }\n      // if either decimalFormat or currencyFormat is set, save it in number settings\n      if (\n        decFormatLength !== undefined &&\n        (numberSettings.style === 'decimal' || numberSettings.style === 'currency')\n      ) {\n        numberSettings.shortDecimalFormat =\n          localeElementsMainNode.numbers['decimalFormats-numberSystem-latn'][\n            decFormatLength\n          ].decimalFormat;\n      }\n      var decimalSeparator = localeElementsMainNode.numbers[numberSettings.numberingSystem].decimal;\n      var groupSeparator = localeElementsMainNode.numbers[numberSettings.numberingSystem].group;\n      var separators = options.separators;\n      if (separators !== undefined) {\n        numberSettings.separators = separators;\n        var dec = separators.decimal;\n        var grp = separators.group;\n        if (dec !== undefined && dec !== '') {\n          decimalSeparator = separators.decimal;\n        }\n        if (grp !== undefined) {\n          groupSeparator = separators.group;\n        }\n      }\n      var mainNodeKey =\n        __ConverterUtilsI18n.OraI18nUtils.getLocaleElementsMainNodeKey(localeElements);\n      var lang = _getBCP47Lang(mainNodeKey);\n      numberSettings.lang = lang;\n      numberSettings.pat = pat;\n      numberSettings.minusSign =\n        localeElementsMainNode.numbers[numberSettings.numberingSystem].minusSign;\n      numberSettings.decimalSeparator = decimalSeparator;\n      numberSettings.exponential =\n        localeElementsMainNode.numbers[numberSettings.numberingSystem].exponential;\n      numberSettings.groupingSeparator = groupSeparator;\n      numberSettings.currencyDisplay = options.currencyDisplay;\n      if (options.currency !== undefined) {\n        numberSettings.currencyCode = options.currency.toUpperCase();\n      }\n      if (options.unit !== undefined) {\n        numberSettings.unit = options.unit.toLowerCase();\n      }\n      _applyPatternImpl(options, pat, localeElementsMainNode, numberSettings);\n      if (options.pattern === undefined) {\n        numberSettings.minimumIntegerDigits = _getNumberOption(\n          options,\n          'minimumIntegerDigits',\n          1,\n          21,\n          numberSettings.minimumIntegerDigits\n        );\n        if (options.maximumFractionDigits !== undefined) {\n          numberSettings.maximumFractionDigits = _getNumberOption(\n            options,\n            'maximumFractionDigits',\n            0,\n            20,\n            numberSettings.maximumFractionDigits\n          );\n          if (numberSettings.maximumFractionDigits < numberSettings.minimumFractionDigits) {\n            numberSettings.minimumFractionDigits = numberSettings.maximumFractionDigits;\n          }\n        }\n        if (options.minimumFractionDigits !== undefined) {\n          numberSettings.minimumFractionDigits = _getNumberOption(\n            options,\n            'minimumFractionDigits',\n            0,\n            20,\n            numberSettings.minimumFractionDigits\n          );\n        }\n        if (numberSettings.maximumFractionDigits < numberSettings.minimumFractionDigits) {\n          numberSettings.maximumFractionDigits = numberSettings.minimumFractionDigits;\n          Logger.info(\n            'maximumFractionDigits is less than minimumFractionDigits, so maximumFractionDigits will be set to minimumFractionDigits'\n          );\n        }\n        // set currency fractions based on currencyData in root bundle. Do not apply\n        // it for short and long currencyFormats\n        if (\n          numberSettings.style === 'currency' &&\n          options.minimumFractionDigits === undefined &&\n          (decFormatLength === undefined || decFormatLength === 'standard')\n        ) {\n          var currencyFractions = localeElements.supplemental.currencyData.fractions;\n          var specialCurrency = currencyFractions[options.currency];\n          if (specialCurrency !== undefined) {\n            var fractionDigits = parseInt(specialCurrency._digits, 10);\n            numberSettings.minimumFractionDigits = fractionDigits;\n            numberSettings.maximumFractionDigits = fractionDigits;\n          }\n        }\n      }\n    }\n\n    function _throwMissingCurrency(prop) {\n      var typeError = new TypeError(\n        'The property \"currency\" is required when' +\n          ' the property \"' +\n          prop +\n          '\" is \"currency\". An accepted value is a ' +\n          'three-letter ISO 4217 currency code.'\n      );\n      var errorInfo = {\n        errorCode: 'optionTypesMismatch',\n        parameterMap: {\n          propertyName: prop, // the driving property\n          propertyValue: 'currency', // the driving property's value\n          requiredPropertyName: 'currency', // the required property name\n          requiredPropertyValueValid: 'a three-letter ISO 4217 currency code'\n        }\n      };\n      typeError.errorInfo = errorInfo;\n      throw typeError;\n    }\n\n    function _throwMissingUnit(prop) {\n      var typeError = new TypeError(\n        'The property \"unit\" is required when' +\n          ' the property \"' +\n          prop +\n          '\" is \"unit\". An accepted value is \"byte\" or \"bit\".'\n      );\n      var errorInfo = {\n        errorCode: 'optionTypesMismatch',\n        parameterMap: {\n          propertyName: prop, // the driving property\n          propertyValue: 'unit', // the driving property's value\n          requiredPropertyName: 'unit', // the required property name\n          requiredPropertyValueValid: 'byte or bit'\n        }\n      };\n      typeError.errorInfo = errorInfo;\n      throw typeError;\n    }\n\n    function _throwUnsupportedParseOption(val) {\n      var code = 'unsupportedParseFormat';\n      var msg = 'long and short ' + val + ' are not supported for parsing';\n      var error = new Error(msg);\n      var errorInfo = {\n        errorCode: code,\n        parameterMap: {\n          shortFormats: val\n        }\n      };\n      error.errorInfo = errorInfo;\n      throw error;\n    }\n\n    // If the user specifies currency as a style, currency option must also be\n    // provided. parse does not support short and long decimalFormat.\n    function _validateNumberOptions(options, caller) {\n      var getOption = __ConverterUtilsI18n.OraI18nUtils.getGetOption(options, caller);\n      var s = getOption(\n        'style',\n        'string',\n        ['currency', 'decimal', 'percent', 'unit', 'perMill'],\n        'decimal'\n      );\n      if (s === 'decimal' || s === 'currency') {\n        var fmt = s === 'decimal' ? 'decimalFormat' : 'currencyFormat';\n        s = getOption(fmt, 'string', ['standard', 'short', 'long']);\n        if (caller === 'OraNumberConverter.parse' && s !== undefined && s !== 'standard') {\n          _throwUnsupportedParseOption(fmt);\n        }\n      }\n      var c = getOption('currency', 'string');\n      if (s === 'currency' && c === undefined) {\n        _throwMissingCurrency('style');\n      }\n\n      c = getOption('unit', 'string');\n      if (s === 'unit' && c === undefined) {\n        _throwMissingUnit('style');\n      }\n      s = getOption('roundingMode', 'string', [\n        'UP',\n        'DOWN',\n        'FLOOR',\n        'CEILING',\n        'HALF_UP',\n        'HALF_DOWN',\n        'HALF_EVEN'\n      ]);\n    }\n\n    // _toDigitalByte does compact formatting like 300MB, 300Mb\n    function _toDigitalByte(number, options, numberSettings, localeElements) {\n      var scale;\n      var count;\n      var absVal = Math.abs(number);\n      if (absVal >= _DIGITAL_TERA) {\n        scale = 'digital-tera';\n        count = absVal / _DIGITAL_TERA;\n      } else if (absVal >= _DIGITAL_GIGA) {\n        scale = 'digital-giga';\n        count = absVal / _DIGITAL_GIGA;\n      } else if (absVal >= _DIGITAL_MEGA) {\n        scale = 'digital-mega';\n        count = absVal / _DIGITAL_MEGA;\n      } else if (absVal >= _DIGITAL_KILO) {\n        scale = 'digital-kilo';\n        count = absVal / _DIGITAL_KILO;\n      } else {\n        scale = 'digital-';\n        count = absVal;\n      }\n      // Find the corresponding entry in resource budle under units section\n      // scale -> 'digital-kilo-bit' or 'digital-kilo-byte'\n      scale += numberSettings.unit;\n      var lang = numberSettings.lang;\n      // get plural rule: one, many, etc..\n      var plural = new Intl.PluralRules(lang).select(count);\n      // plural -> 'unitPattern-count-one' or 'unitPattern-count-many'\n      plural = 'unitPattern-count-' + plural;\n      // format the number\n      if (number < 0) {\n        count = -count;\n      }\n      var fmt = _toRawFixed(count, options, numberSettings);\n      // format the number based on plural rule: \"{0} Gb\", etc..\n      var entry = localeElements.units.narrow[scale][plural];\n      fmt = __ConverterUtilsI18n.OraI18nUtils.formatString(entry, [fmt]);\n      return fmt;\n    }\n\n    // _toCompactNumber does compact formatting like 3000->3K for short\n    // and \"3 thousand\" for long\n    function _toCompactNumber(number, options, numberSettings) {\n      function _getZerosInPattern(s) {\n        var i = 0;\n        var n = 0;\n        var idx = 0;\n        var prefix = '';\n        if (s[0] !== '0') {\n          while (s[i] !== '0' && i < s.length) {\n            i += 1;\n          }\n          prefix = s.substr(0, i);\n          idx = i;\n        }\n        for (i = idx; i < s.length; i++) {\n          if (s[i] === '0') {\n            n += 1;\n          } else {\n            break;\n          }\n        }\n        return [prefix, n];\n      }\n\n      /* To format a number N, the greatest type less than or equal to N is used, with\n       * the appropriate plural category. N is divided by the type, after removing the\n       * number of zeros in the pattern, less 1.\n       * APIs supporting this format should provide control over the number of\n       * significant or fraction digits.\n       *Thus N=12345 matches <pattern type=\"10000\" count=\"other\">00 K</pattern>.\n       *N is divided by 1000 (obtained from 10000 after removing \"00\" and restoring\n       *one \"0\". The result is formatted according to the normal decimal pattern.\n       *With no fractional digits, that yields \"12 K\".\n       */\n      function _matchTypeValue(n) {\n        var decimalTypeKeys = Object.keys(_decimalTypeValues);\n        for (var i = 0; i < decimalTypeKeys.length; i++) {\n          var decimalTypeKey = decimalTypeKeys[i];\n          var len = _decimalTypeValues[decimalTypeKey].length;\n          for (var j = 0; j < len; j++) {\n            if (_decimalTypeValues[decimalTypeKey][j] <= n) {\n              return [decimalTypeKey, _decimalTypeValues[decimalTypeKey][j]];\n            }\n          }\n        }\n        return [n, null];\n      }\n      var absVal = Math.abs(number);\n      var typeVal = _matchTypeValue(absVal);\n      var prefix = '';\n      var decimalFormatType;\n      var tokens;\n      var zeros;\n      if (typeVal[1] !== null) {\n        var lang = numberSettings.lang;\n        var plural = new Intl.PluralRules(lang).select(\n          Math.floor(absVal / _decimalTypeValuesMap[typeVal[0]])\n        );\n        decimalFormatType = '' + typeVal[1] + '-count-' + plural;\n        decimalFormatType = numberSettings.shortDecimalFormat[decimalFormatType];\n        if (decimalFormatType === undefined) {\n          plural = 'other';\n          decimalFormatType = '' + typeVal[1] + '-count-' + plural;\n          decimalFormatType = numberSettings.shortDecimalFormat[decimalFormatType];\n        }\n        tokens = _getZerosInPattern(decimalFormatType);\n        zeros = tokens[1];\n        prefix = tokens[0];\n        if (zeros < decimalFormatType.length) {\n          var i = 1 * Math.pow(10, zeros);\n          i = (typeVal[1] / i) * 10;\n          // eslint-disable-next-line no-param-reassign\n          absVal /= i;\n        }\n      }\n      var s = '';\n      var fmt;\n      if (decimalFormatType !== undefined) {\n        s = decimalFormatType.substr(zeros + tokens[0].length);\n      }\n      if (number < 0) {\n        absVal = -absVal;\n      }\n      fmt = _toRawFixed(absVal, options, numberSettings);\n      var regExp = /'\\.'/g;\n      s = s.replace(regExp, '.');\n      s = prefix + fmt + s;\n      return s;\n    }\n\n    // _toExponentialPrecision does the formatting when the pattern contain E,\n    // for example #.#E0\n    function _toExponentialPrecision(number, numberSettings) {\n      var numStr0 = number + '';\n      var trimExp = 0;\n      var split = numStr0.split(/e/i);\n      var numStr = split[0];\n      _REGEX_TRIM_ZEROS.lastIndex = 0;\n      var match = _REGEX_TRIM_ZEROS.exec(numStr);\n      if (match !== null) {\n        trimExp = match[1].length - 1;\n        numStr = match[2];\n      } else {\n        numStr = numStr.replace('.', '');\n      }\n      var exponent = split.length > 1 ? parseInt(split[1], 10) : 0;\n      var numStr1 = parseInt(numStr, 10);\n      var len = numberSettings.minimumIntegerDigits + numberSettings.maximumFractionDigits;\n      if (numStr.length > len) {\n        len -= numStr.length;\n        var factor = Math.pow(10, len);\n        numStr1 = Math.round(numStr1 * factor);\n      }\n      var padLen = numberSettings.minimumIntegerDigits + numberSettings.minimumFractionDigits;\n      numStr1 += '';\n      numStr1 = _zeroPad(numStr1, padLen, false);\n      if (numStr0.indexOf('.') !== -1) {\n        exponent -= numberSettings.minimumIntegerDigits - numStr0.indexOf('.') + trimExp;\n      } else {\n        exponent -= padLen - numStr.length - numberSettings.minimumFractionDigits;\n      }\n      var posExp = Math.abs(exponent);\n      posExp = _zeroPad(posExp + '', numberSettings.minExponentDigits, true);\n      if (exponent < 0) {\n        posExp = numberSettings.minusSign + posExp;\n      }\n      var str1 = numStr1.slice(0, numberSettings.minimumIntegerDigits);\n      var str2 = numStr1.slice(numberSettings.minimumIntegerDigits);\n      if (str2.length > 0) {\n        str1 +=\n          numberSettings.decimalSeparator +\n          numStr1.slice(numberSettings.minimumIntegerDigits) +\n          numberSettings.exponential +\n          posExp;\n      } else {\n        str1 += numberSettings.exponential + posExp;\n      }\n      return str1;\n    }\n\n    // _toRawFixed does the formatting based on\n    // minimumFractionDigits and maximumFractionDigits.\n    function _toRawFixed(number, options, numberSettings) {\n      var curSize = numberSettings.groupingSize;\n      var curSize0 = numberSettings.groupingSize0;\n      var decimalSeparator = numberSettings.decimalSeparator;\n      // First round the number based on maximumFractionDigits\n      var numberString = number + '';\n      var split = numberString.split(/e/i);\n      var exponent = split.length > 1 ? parseInt(split[1], 10) : 0;\n      numberString = split[0];\n      split = numberString.split('.');\n      var right = split.length > 1 ? split[1] : '';\n      var precision = Math.min(numberSettings.maximumFractionDigits, right.length - exponent);\n      // round the number only if it has decimal points\n      if (split.length > 1 && right.length > exponent) {\n        var mode = options.roundingMode || 'DEFAULT';\n        // eslint-disable-next-line no-param-reassign\n        number = _roundNumber(number, precision, mode);\n      }\n      // split the number into integer, fraction and exponent parts.\n      numberString = Math.abs(number) + '';\n      split = numberString.split(/e/i);\n      exponent = split.length > 1 ? parseInt(split[1], 10) : 0;\n      numberString = split[0];\n      split = numberString.split('.');\n      numberString = split[0];\n      right = split.length > 1 ? split[1] : '';\n      // pad zeros based on the exponent value and minimumFractionDigits\n      if (exponent > 0) {\n        right = _zeroPad(right, exponent, false);\n        numberString += right.slice(0, exponent);\n        right = right.substr(exponent);\n      } else if (exponent < 0) {\n        exponent = -exponent;\n        numberString = _zeroPad(numberString, exponent + 1, true);\n        right = numberString.slice(-exponent, numberString.length) + right;\n        numberString = numberString.slice(0, -exponent);\n      }\n      if (precision > 0 && right.length > 0) {\n        right =\n          right.length > precision ? right.slice(0, precision) : _zeroPad(right, precision, false);\n        // if right is only zeros, truncate it to minimumFractionDigits\n        if (_REGEX_ONLY_ZEROS.test(right) === true) {\n          right = right.slice(0, numberSettings.minimumFractionDigits);\n        }\n        right = decimalSeparator + right;\n      } else if (numberSettings.minimumFractionDigits > 0) {\n        right = decimalSeparator;\n      } else {\n        right = '';\n      }\n      // trim trailing zeros from right\n      right = __ConverterUtilsI18n.OraI18nUtils.trimRightZeros(right);\n      // insert grouping separator in the integer part based on groupingSize\n      var padLen = decimalSeparator.length + numberSettings.minimumFractionDigits;\n      right = _zeroPad(right, padLen, false);\n      var sep = numberSettings.groupingSeparator;\n      var ret = '';\n      if (options.useGrouping === false && options.pattern === undefined) {\n        sep = '';\n      }\n      numberString = _zeroPad(numberString, numberSettings.minimumIntegerDigits, true);\n      var stringIndex = numberString.length - 1;\n      right = right.length > 1 ? right : '';\n      var rets;\n      while (stringIndex >= 0) {\n        if (curSize === 0 || curSize > stringIndex) {\n          rets = numberString.slice(0, stringIndex + 1) + (ret.length ? sep + ret + right : right);\n          return rets;\n        }\n        ret =\n          numberString.slice(stringIndex - curSize + 1, stringIndex + 1) +\n          (ret.length ? sep + ret : '');\n        stringIndex -= curSize;\n        if (curSize0 > 0) {\n          curSize = curSize0;\n        }\n      }\n      rets = numberString.slice(0, stringIndex + 1) + sep + ret + right;\n      return rets;\n    }\n\n    function _expandExponent(n) {\n      var str = n.toString();\n      str = str.replace('E', 'e');\n      var isNegative = false;\n      if (str.charAt(0) === '-') {\n        isNegative = true;\n        str = str.substring(1);\n      }\n      var parts = str.split('e');\n      var part1 = parts[0];\n      var part2 = Number(parts[1]);\n      if (part2 > 0) {\n        str = part1.substr(0, 1) + part1.substr(2);\n        if (str.length - 1 < part2) {\n          var e = part2 + 1 - str.length;\n          while (e > 0) {\n            str += '0';\n            e -= 1;\n          }\n        } else if (str.length - 1 > part2) {\n          str = str.substr(0, part2 + 1) + '.' + str.substr(part2 + 1);\n        }\n      } else if (part2 < 0) {\n        var digits = part1.substr(0, 1) + part1.substr(2);\n        str = '0.';\n        for (var i = part2; i < -1; i++) {\n          str += '0';\n        }\n        str += digits;\n      }\n      if (isNegative) {\n        str = '-' + str;\n      }\n      return str;\n    }\n\n    /* rounds the number based on the following rules:\n     * CEILING: Rounding mode to round towards positive infinity.\n     * DOWN: Rounding mode to round towards zero.\n     * FLOOR: Rounding mode to round towards negative infinity.\n     * HALF_DOWN: Rounding mode to round towards \"nearest neighbor\" unless both neighbors are equidistant, in which case round down.\n     * HALF_EVEN: Rounding mode to round towards the \"nearest neighbor\" unless both neighbors are equidistant, in which case, round towards the even neighbor.\n     * HALF_UP: Rounding mode to round towards \"nearest neighbor\" unless both neighbors are equidistant, in which case round up.\n     * UP: Rounding mode to round away from zero.\n     */\n    function _roundNumber(value, scale, mode) {\n      var rounded;\n      var adjustedMode = mode;\n      var parts = _expandExponent(value);\n      parts = parts.split('.');\n      if (parts[1] === undefined) {\n        return Math.abs(value);\n      }\n      if (mode !== 'DEFAULT') {\n        // HALF_DOWN behaves as HALF_UP if the discarded fraction is > 0.5\n        if (mode === 'HALF_UP' || mode === 'HALF_EVEN' || mode === 'HALF_DOWN') {\n          if (parts[1][scale] === '5') {\n            var n = parts[1].substr(scale);\n            n = parseInt(n, 10);\n            if (n > 5) {\n              adjustedMode = 'HALF_UP';\n            }\n          } else {\n            adjustedMode = 'DEFAULT';\n          }\n          // eslint-disable-next-line no-param-reassign\n          value = Math.abs(value);\n        }\n        adjustedMode = _getRoundingMode(parts, adjustedMode, scale, value);\n        rounded = _decimalAdjust(value, -scale, adjustedMode);\n      } else {\n        var factor = Math.pow(10, scale);\n        rounded = Math.round(value * factor) / factor;\n        if (!isFinite(rounded)) {\n          return value;\n        }\n      }\n      return Math.abs(rounded);\n    }\n\n    function _getRoundingMode(parts, rMode, scale, value) {\n      var mode = _roundingModeMap[rMode];\n      if (rMode === 'HALF_EVEN') {\n        var c;\n        if (scale === 0) {\n          var len = parts[0].length;\n          c = parseInt(parts[0][len - 1], 10);\n        } else {\n          c = parseInt(parts[1][scale - 1], 10);\n        }\n        if (c % 2 === 0) {\n          mode = _roundingModeMap.HALF_DOWN;\n        } else {\n          mode = _roundingModeMap.HALF_UP;\n        }\n      } else if (rMode === 'UP' && value < 0) {\n        mode = _roundingModeMap.DOWN;\n      } else if (rMode === 'DOWN' && value < 0) {\n        mode = _roundingModeMap.UP;\n      }\n      return mode;\n    }\n\n    /**\n     * This function does the actual rounding of the number based on the rounding\n     * mode:\n     * value is the number to be rounded.\n     * scale is the maximumFractionDigits.\n     * mode is the rounding mode: ceil, floor, round.\n     */\n    function _decimalAdjust(value, scale, mode) {\n      if (scale === 0) {\n        return Math[mode](value);\n      }\n      var strValue = value.toString().split('e');\n      var v0 = strValue[0];\n      var v1 = strValue[1];\n      // shift the decimal point based on the scale so that we can apply ceil or floor\n      // scale is a number, no need to parse it, just parse v1.\n      var s = v0 + 'e' + (v1 ? parseInt(v1, 10) - scale : -scale);\n      var num = parseFloat(s);\n      var _value = Math[mode](num);\n      strValue = _value.toString().split('e');\n      // need to extract v0 and v1 again because value has changed after applying Math[mode].\n      v0 = strValue[0];\n      v1 = strValue[1];\n      // shift the decimal point back to its original position\n      s = v0 + 'e' + (v1 ? parseInt(v1, 10) + scale : scale);\n      num = parseFloat(s);\n      return num;\n    }\n\n    // first call _toRawFixed then add prefixes and suffixes. Display the\n    // number using native digits based on the numbering system\n    function _formatNumberImpl(value, options, localeElements, numberSettings, locale) {\n      var localeElementsMainNode =\n        __ConverterUtilsI18n.OraI18nUtils.getLocaleElementsMainNode(localeElements);\n      if (!isFinite(value)) {\n        if (value === Infinity) {\n          return localeElementsMainNode.numbers[numberSettings.numberingSystem].infinity;\n        }\n        if (value === -Infinity) {\n          return localeElementsMainNode.numbers[numberSettings.numberingSystem].infinity;\n        }\n        // return localeElementsMainNode.numbers[numberSettings.numberingSystem].nan;\n        // return a non-localized NaN so the IntlNumberConverter can throw\n        // an error based on it.\n        return 'NaN';\n      }\n      var number = value;\n      if (numberSettings.isPercent === true || numberSettings.style === 'percent') {\n        number *= 100;\n      } else if (numberSettings.isPerMill === true) {\n        number *= 1000;\n      }\n      // expand the number\n      var formatType = options.decimalFormat;\n      if (formatType === undefined) {\n        formatType = options.currencyFormat;\n      }\n      var optStyle = numberSettings.style;\n      if (\n        (optStyle === 'decimal' || optStyle === 'currency') &&\n        formatType !== undefined &&\n        formatType !== 'standard'\n      ) {\n        number = _toCompactNumber(number, options, numberSettings);\n      } else if (numberSettings.useExponentialNotation === true) {\n        number = _toExponentialPrecision(number, numberSettings);\n      } else if (optStyle === 'unit') {\n        number = _toDigitalByte(number, options, numberSettings, localeElementsMainNode);\n      } else {\n        number = _toRawFixed(number, options, numberSettings);\n      }\n\n      var ret = '';\n      // add negative prefix and suffix if number is negative\n      // and the new formatted value isn't zero\n      if (value < 0 && number - 0 !== 0) {\n        ret += numberSettings.negativePrefix + number + numberSettings.negativeSuffix;\n      } else {\n        // add positive prefix and suffix if number is positive\n        ret += numberSettings.positivePrefix + number + numberSettings.positiveSuffix;\n      }\n      // display the digits based on the numbering system\n      var numberingSystemKey = _getNumberingExtension(locale);\n      if (__ConverterUtilsI18n.OraI18nUtils.numeringSystems[numberingSystemKey] === undefined) {\n        numberingSystemKey = 'latn';\n      }\n      if (numberingSystemKey !== 'latn') {\n        var idx;\n        var nativeRet = [];\n        for (idx = 0; idx < ret.length; idx++) {\n          if (ret[idx] >= '0' && ret[idx] <= '9') {\n            nativeRet.push(\n              __ConverterUtilsI18n.OraI18nUtils.numeringSystems[numberingSystemKey][ret[idx]]\n            );\n          } else {\n            nativeRet.push(ret[idx]);\n          }\n        }\n        return nativeRet.join('');\n      }\n      return ret;\n    }\n\n    // remove prefix and suffix, return a sign and value. First try to extract\n    // a number using exact match. If it fails try lenient parsing.\n    function _parseNegativePattern(value, options, numberSettings, localeElements) {\n      var ret;\n      var num = __ConverterUtilsI18n.OraI18nUtils.trimNumber(value);\n      var sign = '';\n      var exactMatch = false;\n      var posSign = localeElements.numbers[numberSettings.numberingSystem].plusSign;\n      var posSignRegExp = new RegExp('^' + posSign.replace(_ESCAPE_REGEXP, '\\\\$1'));\n      num = num.replace(posSignRegExp, '');\n      // The pattern of a number may contain positive prefix (nbSettingPosPrefix),\n      // positive suffix (nbSettingPosSuffix),\n      // negative prefix (nbSettingNegPrefix) ,\n      // negative suffix (nbSettingNegSuffix).\n      // We first try exact match of these prefix/suffix to determine the sign of\n      // the number. If the number pattern pattern contain these prefix/suffix\n      // and no exact match is found, we go to lenient parse.\n      var nbSettingPosPrefix = __ConverterUtilsI18n.OraI18nUtils.trimNumber(\n        numberSettings.positivePrefix\n      );\n      var nbSettingPosSuffix = __ConverterUtilsI18n.OraI18nUtils.trimNumber(\n        numberSettings.positiveSuffix\n      );\n      var nbSettingNegPrefix = __ConverterUtilsI18n.OraI18nUtils.trimNumber(\n        numberSettings.negativePrefix\n      );\n      var nbSettingNegSuffix = __ConverterUtilsI18n.OraI18nUtils.trimNumber(\n        numberSettings.negativeSuffix\n      );\n      // Create regular expressions for the prefixes and suffixes in order to\n      // match them with the input number. We need to escape the special\n      // characters in them by using _ESCAPE_REGEXP. For example if the prefix\n      // conatain '$' it need to be escaped to '\\\\$'\n      // positive prefix regular expression\n      var posPrefRegexp = new RegExp(\n        '^' + (nbSettingPosPrefix || '').replace(_ESCAPE_REGEXP, '\\\\$1')\n      );\n      // positive suffix regular expression\n      var posSuffRegexp = new RegExp(\n        (nbSettingPosSuffix || '').replace(_ESCAPE_REGEXP, '\\\\$1') + '$'\n      );\n      // negative prefix regular expression\n      var negPrefRegexp = new RegExp(\n        '^' + (nbSettingNegPrefix || '').replace(_ESCAPE_REGEXP, '\\\\$1')\n      );\n      // negative suffix regular expression\n      var negSuffRegexp = new RegExp(\n        (nbSettingNegSuffix || '').replace(_ESCAPE_REGEXP, '\\\\$1') + '$'\n      );\n      // try exact match of negative prefix and suffix\n      if (negPrefRegexp.test(num) === true && negSuffRegexp.test(num) === true) {\n        num = num.replace(negPrefRegexp, '');\n        num = num.replace(negSuffRegexp, '');\n        sign = '-';\n        exactMatch = true;\n      } else if (posPrefRegexp.test(num) === true && posSuffRegexp.test(num) === true) {\n        // try exact match of positive prefix and suffix\n        num = num.replace(posPrefRegexp, '');\n        num = num.replace(posSuffRegexp, '');\n        sign = '+';\n        exactMatch = true;\n      } else if (numberSettings.style === 'currency') {\n        // if style is currency, remove currency symbol from prefix and suffix\n        // and try a match\n        var code = numberSettings.currencyCode;\n        var symbol = code;\n        var repStr;\n        if (localeElements.numbers.currencies[code] !== undefined) {\n          symbol = localeElements.numbers.currencies[code].symbol;\n        }\n        if (\n          numberSettings.currencyDisplay === undefined ||\n          numberSettings.currencyDisplay === 'symbol'\n        ) {\n          repStr = symbol;\n        } else if (numberSettings.currencyDisplay === 'code') {\n          repStr = code;\n        }\n        if (repStr !== undefined) {\n          // Remove the currency code/symbol from the prefix/suffix\n          var posPrefix = (nbSettingPosPrefix || '').replace(repStr, '');\n          var posSuffix = (nbSettingPosSuffix || '').replace(repStr, '');\n          var negPrefix = (nbSettingNegPrefix || '').replace(repStr, '');\n          var negSuffix = (nbSettingNegSuffix || '').replace(repStr, '');\n          // positive prefix regular expression without currency code/symbol\n          posPrefRegexp = new RegExp('^' + posPrefix.replace(_ESCAPE_REGEXP, '\\\\$1'));\n          // positive suffix regular expression without currency code/symbol\n          posSuffRegexp = new RegExp(posSuffix.replace(_ESCAPE_REGEXP, '\\\\$1') + '$');\n          // negative prefix regular expression without currency code/symbol\n          negPrefRegexp = new RegExp('^' + negPrefix.replace(_ESCAPE_REGEXP, '\\\\$1'));\n          // negative suffix regular expression without currency code/symbol\n          negSuffRegexp = new RegExp(negSuffix.replace(_ESCAPE_REGEXP, '\\\\$1') + '$');\n\n          // try  match of positive prefix and suffix without currency code/symbol\n          if (negPrefRegexp.test(num) === true && negSuffRegexp.test(num) === true) {\n            num = num.replace(negPrefRegexp, '');\n            num = num.replace(negSuffRegexp, '');\n            sign = '-';\n            exactMatch = true;\n          } else if (posPrefRegexp.test(num) === true && posSuffRegexp.test(num) === true) {\n            // try exact match of positive prefix and suffix\n            num = num.replace(posPrefRegexp, '');\n            num = num.replace(posSuffRegexp, '');\n            sign = '+';\n            exactMatch = true;\n          }\n        }\n      }\n      if (!exactMatch) {\n        if (numberSettings.lenientParse === 'full') {\n          ret = _lenientParseNumber(num, numberSettings);\n          ret[2] = true;\n        } else {\n          _throwNaNException(numberSettings.style, numberSettings, value);\n        }\n      } else {\n        ret = [sign, num];\n      }\n      return ret;\n    }\n\n    function _lenientParseNumber(_num, numberSettings) {\n      // Try to extract the number accoring to the following pattern:\n      // optional +- followed by one or many digits followed by optional\n      // fraction part followed by optional exponential.\n      // use localized +, -, decimal separator, exponential\n      // [+-]?\\d+(?:\\.\\d+)?(?:E[+-]?\\d+)?/;\n      // remove grouping deparator from string\n      var groupingSeparator = numberSettings.groupingSeparator;\n      var decimalSeparator = numberSettings.decimalSeparator;\n      var localeMinusSign = numberSettings.minusSign;\n      var plusSign = '+';\n      var minusSign = '-';\n      var sign = '';\n      var dot = '';\n      var exponential = __ConverterUtilsI18n.OraI18nUtils.toUpper(numberSettings.exponential);\n      var num = __ConverterUtilsI18n.OraI18nUtils.toUpper(_num);\n      num = num.split(exponential).join('E');\n      // remove grouping separator from string\n      var groupSep = groupingSeparator;\n      num = num.split(groupSep).join('');\n      var altGroupSep = groupSep.replace(/\\u00A0/g, ' ');\n      if (groupSep !== altGroupSep) {\n        num = num.split(altGroupSep).join('');\n      }\n      num = num.split(decimalSeparator).join('.');\n      if (num.charAt(0) === '.') {\n        num = num.substr(1);\n        dot = '.';\n      }\n      // replace localized minus with minus\n      num = num.replace(localeMinusSign, minusSign);\n      var match = _LENIENT_REGEX_PARSE_FLOAT.exec(num);\n      var resNum = dot + match[2];\n      if (__ConverterUtilsI18n.OraI18nUtils.startsWith(resNum, minusSign)) {\n        resNum = resNum.substr(minusSign.length);\n        sign = '-';\n      } else if (__ConverterUtilsI18n.OraI18nUtils.startsWith(num, plusSign)) {\n        resNum = resNum.substr(plusSign.length);\n        sign = '+';\n      }\n      return [sign, resNum];\n    }\n\n    // parse the exponent part of a number\n    function _parseNegativeExponent(_value, numberSettings) {\n      var neg = numberSettings.minusSign;\n      var pos = numberSettings.plusSign;\n      var ret;\n      var value = __ConverterUtilsI18n.OraI18nUtils.trimNumber(_value);\n      neg = __ConverterUtilsI18n.OraI18nUtils.trimNumber(neg);\n      pos = __ConverterUtilsI18n.OraI18nUtils.trimNumber(pos);\n      if (__ConverterUtilsI18n.OraI18nUtils.startsWith(value, neg)) {\n        ret = ['-', value.substr(neg.length)];\n      } else if (\n        __ConverterUtilsI18n.OraI18nUtils.startsWith(\n          value,\n          __ConverterUtilsI18n.OraI18nUtils.trimNumber(pos)\n        )\n      ) {\n        ret = ['+', value.substr(pos.length)];\n      }\n      return ret || ['', value];\n    }\n\n    function _getLatnDigits(str, locale) {\n      var numberingSystemKey = _getNumberingExtension(locale);\n      if (__ConverterUtilsI18n.OraI18nUtils.numeringSystems[numberingSystemKey] === undefined) {\n        return str;\n      }\n      var idx;\n      var latnStr = [];\n      for (idx = 0; idx < str.length; idx++) {\n        var pos = __ConverterUtilsI18n.OraI18nUtils.numeringSystems[numberingSystemKey].indexOf(\n          str[idx]\n        );\n        if (pos !== -1) {\n          latnStr.push(pos);\n        } else {\n          latnStr.push(str[idx]);\n        }\n      }\n      var ret = latnStr.join('');\n      return ret;\n    }\n\n    // split the number into integer, fraction and exponential parts\n    function _getNumberParts(_num, numberSettings) {\n      var parts = {};\n      var decimalSeparator = numberSettings.decimalSeparator;\n      var groupSep = numberSettings.groupingSeparator;\n      var num = _num.replace(/ /g, '');\n      // determine exponent and number\n      var exponentSymbol = numberSettings.exponential;\n      var integer;\n      var intAndFraction;\n      var exponentPos = num.indexOf(exponentSymbol.toLowerCase());\n      if (exponentPos < 0) {\n        exponentPos = num.indexOf(__ConverterUtilsI18n.OraI18nUtils.toUpper(exponentSymbol));\n      }\n      if (exponentPos < 0) {\n        intAndFraction = num;\n        parts.exponent = null;\n      } else {\n        intAndFraction = num.substr(0, exponentPos);\n        parts.exponent = num.substr(exponentPos + exponentSymbol.length);\n      }\n      // determine decimal position\n      var decSep = decimalSeparator;\n      var decimalPos = intAndFraction.indexOf(decSep);\n      if (decimalPos < 0) {\n        integer = intAndFraction;\n        parts.fraction = null;\n      } else {\n        integer = intAndFraction.substr(0, decimalPos);\n        parts.fraction = intAndFraction.substr(decimalPos + decSep.length);\n      }\n      // handle groups (e.g. 1,000,000)\n      integer = integer.split(groupSep).join('');\n      var altGroupSep = groupSep.replace(/\\u00A0/g, ' ');\n      if (groupSep !== altGroupSep) {\n        integer = integer.split(altGroupSep).join('');\n      }\n      parts.integer = integer;\n      return parts;\n    }\n\n    function _getParsedValue(ret, options, numberSettings, errStr) {\n      if (isNaN(ret)) {\n        _throwNaNException(numberSettings.style, numberSettings, errStr);\n      }\n      if (numberSettings.isPercent === true || numberSettings.style === 'percent') {\n        // eslint-disable-next-line no-param-reassign\n        ret /= 100;\n      } else if (numberSettings.isPerMill === true) {\n        // eslint-disable-next-line no-param-reassign\n        ret /= 1000;\n      }\n      var getOption = __ConverterUtilsI18n.OraI18nUtils.getGetOption(\n        options,\n        'OraNumberConverter.parse'\n      );\n      var roundDuringParse = getOption('roundDuringParse', 'boolean', [true, false], false);\n      if (roundDuringParse) {\n        // eslint-disable-next-line no-param-reassign\n        ret = _getRoundedNumber(ret, numberSettings, options);\n      }\n      return ret;\n    }\n\n    function _throwNaNException(style, numberSettings, errStr) {\n      var code;\n      var msg = 'Enter a number in this format:' + numberSettings.pat;\n      switch (style) {\n        case 'decimal':\n          code = 'decimalFormatMismatch';\n          break;\n        case 'currency':\n          code = 'currencyFormatMismatch';\n          break;\n        case 'percent':\n          code = 'percentFormatMismatch';\n          break;\n        default:\n          break;\n      }\n      var error = new Error(msg);\n      var errorInfo = {\n        errorCode: code,\n        parameterMap: {\n          value: errStr,\n          format: numberSettings.pat\n        }\n      };\n      error.errorInfo = errorInfo;\n      throw error;\n    }\n\n    function _parseNumberImpl(str, localeElements, options, locale) {\n      var localeElementsMainNode =\n        __ConverterUtilsI18n.OraI18nUtils.getLocaleElementsMainNode(localeElements);\n      var numberSettings = {};\n      var numStr = _getLatnDigits(str, locale);\n      _getNumberSettings(localeElements, numberSettings, options, locale);\n      var ret = NaN;\n      var value1 = numStr.replace(/ /g, '');\n      // allow infinity or hexidecimal\n      if (_REGEX_INFINITY.test(value1)) {\n        ret = parseFloat(numStr);\n        return ret;\n      }\n      var signInfo = _parseNegativePattern(numStr, options, numberSettings, localeElementsMainNode);\n      var sign = signInfo[0];\n      var num = signInfo[1];\n      sign = sign || '+';\n      if (signInfo[2]) {\n        ret = parseFloat(sign + num);\n        return _getParsedValue(ret, options, numberSettings, str);\n      }\n\n      var parts = _getNumberParts(num, numberSettings);\n      var integer = parts.integer;\n      var fraction = parts.fraction;\n      var exponent = parts.exponent;\n\n      // build a natively parsable number string\n      var p = sign + integer;\n      if (fraction !== null) {\n        p += '.' + fraction;\n      }\n      if (exponent !== null) {\n        // exponent itself may have a number pattern\n        var expSignInfo = _parseNegativeExponent(exponent, numberSettings);\n        p += 'e' + (expSignInfo[0] || '+') + expSignInfo[1];\n      }\n      if (_REGEX_PARSE_FLOAT.test(p)) {\n        ret = parseFloat(p);\n      } else if (numberSettings.lenientParse === 'full') {\n        p = _lenientParseNumber(numStr, numberSettings);\n        ret = parseFloat(p[0] + p[1]);\n      } else {\n        _throwNaNException(numberSettings.style, numberSettings, str);\n      }\n      return _getParsedValue(ret, options, numberSettings, str);\n    }\n\n    /* This module handles the  parsing of a number pattern.\n     * It sets prefix, suffix, minimum and maximum farcation digits,\n     * miimum  integer digits and grouping size.\n     */\n\n    var _ZERO_DIGIT = '0';\n    var _GROUPING_SEPARATOR = ',';\n    var _DECIMAL_SEPARATOR = '.';\n    var _PERCENT = '%';\n    var _PER_MILL = '\\u2030';\n    var _DIGIT = '#';\n    var _SEPARATOR = ';';\n    var _EXPONENT = 'E';\n    var _MINUS = '-';\n    var _QUOT = \"'\";\n    var _CURRENCY = '\\u00A4';\n\n    var posPrefixPattern;\n    var posSuffixPattern;\n    var negPrefixPattern;\n    var negSuffixPattern;\n\n    var _MAXIMUM_INTEGER_DIGITS = 0x7fffffff;\n    var _MAXIMUM_FRACTION_DIGITS = 0x7fffffff;\n\n    function _throwSyntaxError(pattern) {\n      var samplePattern = '#,##0.###';\n      var msg =\n        'Unexpected character(s) encountered in the pattern \"' +\n        pattern +\n        ' An example of a valid pattern is \"' +\n        samplePattern +\n        '\".';\n      var syntaxError = new SyntaxError(msg);\n      var errorInfo = {\n        errorCode: 'optionValueInvalid',\n        parameterMap: {\n          propertyName: 'pattern',\n          propertyValue: pattern,\n          propertyValueHint: samplePattern\n        }\n      };\n      syntaxError.errorInfo = errorInfo;\n      throw syntaxError;\n    }\n\n    function _regionMatches(str1, offset1, str2) {\n      var sub1 = str1.substr(offset1, str2.length);\n      var regExp = new RegExp(str2, 'i');\n      return regExp.exec(sub1) !== null;\n    }\n\n    function _expandAffixes(localeElements, _numberSettings) {\n      var numberSettings = _numberSettings;\n      var curDisplay = {};\n      if (posPrefixPattern !== null) {\n        numberSettings.positivePrefix = _expandAffix(\n          posPrefixPattern,\n          localeElements,\n          numberSettings,\n          curDisplay\n        );\n      }\n      if (posSuffixPattern !== null) {\n        numberSettings.positiveSuffix = _expandAffix(\n          posSuffixPattern,\n          localeElements,\n          numberSettings,\n          curDisplay\n        );\n      }\n      if (negPrefixPattern !== null) {\n        numberSettings.negativePrefix = _expandAffix(\n          negPrefixPattern,\n          localeElements,\n          numberSettings,\n          curDisplay\n        );\n      }\n      if (negSuffixPattern !== null) {\n        numberSettings.negativeSuffix = _expandAffix(\n          negSuffixPattern,\n          localeElements,\n          numberSettings,\n          curDisplay\n        );\n      }\n      if (curDisplay.name !== undefined) {\n        numberSettings.positiveSuffix = '\\u00a0' + curDisplay.name;\n        numberSettings.positivePrefix = '';\n        if (numberSettings.lang === 'ar') {\n          numberSettings.negativeSuffix =\n            localeElements.numbers[numberSettings.numberingSystem].minusSign +\n            '\\u00a0' +\n            curDisplay.name;\n          numberSettings.negativePrefix = '';\n        } else {\n          numberSettings.negativeSuffix = '\\u00a0' + curDisplay.name;\n          numberSettings.negativePrefix =\n            localeElements.numbers[numberSettings.numberingSystem].minusSign;\n        }\n      }\n    }\n\n    function _expandAffix(pattern, localeElements, numberSettings, currencyDisplay) {\n      var buffer = '';\n      for (var i = 0; i < pattern.length; ) {\n        var c = pattern.charAt(i);\n        i += 1;\n        if (c !== _QUOT) {\n          // c = pattern.charAt(i++);\n          switch (c) {\n            case _CURRENCY:\n              var code = numberSettings.currencyCode;\n              var name = code;\n              var symbol = code;\n\n              if (localeElements.numbers.currencies[code] !== undefined) {\n                name = localeElements.numbers.currencies[code].displayName;\n                symbol = localeElements.numbers.currencies[code].symbol;\n              }\n              if (\n                numberSettings.currencyDisplay === undefined ||\n                numberSettings.currencyDisplay === 'symbol'\n              ) {\n                c = symbol;\n              } else if (numberSettings.currencyDisplay === 'code') {\n                // Currency code need to be followed by a space character\n                c = code + ' ';\n              } else {\n                c = name;\n                // eslint-disable-next-line no-param-reassign\n                currencyDisplay.name = c;\n              }\n              break;\n            case _PERCENT:\n              c = localeElements.numbers[numberSettings.numberingSystem].percentSign;\n              break;\n            case _PER_MILL:\n              c = localeElements.numbers[numberSettings.numberingSystem].perMille;\n              break;\n            case _MINUS:\n              c = localeElements.numbers[numberSettings.numberingSystem].minusSign;\n              break;\n            default:\n              break;\n          }\n          buffer = buffer.concat(c);\n        }\n      }\n      return buffer;\n    }\n\n    function _applyPatternImpl(options, pattern, localeElements, _numberSettings) {\n      var numberSettings = _numberSettings;\n      var gotNegative = false;\n      var useExponentialNotation = false;\n      var phaseOneLength = 0;\n      var start = 0;\n      var isPrefix = true;\n      var minExponentDigits;\n\n      for (var j = 1; j >= 0 && start < pattern.length; --j) {\n        var inQuote = false;\n        var prefix = '';\n        var suffix = '';\n        var decimalPos = -1;\n        var multiplier = 1;\n        var digitLeftCount = 0;\n        var zeroDigitCount = 0;\n        var digitRightCount = 0;\n        var groupingCount = -1;\n        var groupingCount0 = -1;\n        var phase = 0;\n\n        /* eslint-disable no-continue */\n        isPrefix = true;\n        for (var pos = start; pos < pattern.length; ++pos) {\n          var ch = pattern.charAt(pos);\n          switch (phase) {\n            case 0:\n            case 2:\n              // Process the prefix / suffix characters\n              if (inQuote) {\n                if (ch === _QUOT) {\n                  if (pos + 1 < pattern.length && pattern.charAt(pos + 1) === _QUOT) {\n                    pos += 1;\n                    if (isPrefix) {\n                      prefix = prefix.concat(\"''\");\n                    } else {\n                      suffix = suffix.concat(\"''\");\n                    }\n                  } else {\n                    inQuote = false; // 'do'\n                  }\n                  continue;\n                }\n              } else if (\n                ch === _DIGIT ||\n                ch === _ZERO_DIGIT ||\n                ch === _GROUPING_SEPARATOR ||\n                ch === _DECIMAL_SEPARATOR\n              ) {\n                // Process unquoted characters seen in prefix or suffix phase.\n                phase = 1;\n                pos -= 1; // Reprocess this character\n                continue;\n              } else if (ch === _CURRENCY) {\n                if (options.currency === undefined) {\n                  _throwMissingCurrency('style');\n                }\n                // Use lookahead to determine if the currency sign\n                // is doubled or not.\n                numberSettings.style = 'currency';\n                var doubled = pos + 1 < pattern.length && pattern.charAt(pos + 1) === _CURRENCY;\n                if (doubled) {\n                  // Skip over the doubled character\n                  pos += 1;\n                }\n                if (isPrefix) {\n                  prefix = prefix.concat(doubled ? \"'\\u00A4\\u00A4\" : \"'\\u00A4\");\n                } else {\n                  suffix = suffix.concat(doubled ? \"'\\u00A4\\u00A4\" : \"'\\u00A4\");\n                }\n                continue;\n              } else if (ch === _QUOT) {\n                if (ch === _QUOT) {\n                  if (pos + 1 < pattern.length && pattern.charAt(pos + 1) === _QUOT) {\n                    pos += 1;\n                    if (isPrefix) {\n                      prefix = prefix.concat(\"''\"); // o''clock\n                    } else {\n                      suffix = suffix.concat(\"''\");\n                    }\n                  } else {\n                    inQuote = true; // 'do'\n                  }\n                  continue;\n                }\n              } else if (ch === _SEPARATOR) {\n                if (phase === 0 || j === 0) {\n                  _throwSyntaxError(pattern);\n                }\n                start = pos + 1;\n                pos = pattern.length;\n                continue;\n              } else if (ch === _PERCENT) {\n                // Next handle characters which are appended directly.\n                numberSettings.style = 'percent';\n                if (multiplier !== 1) {\n                  _throwSyntaxError(pattern);\n                }\n                numberSettings.isPercent = true;\n                multiplier = 100;\n                if (isPrefix) {\n                  prefix = prefix.concat(\"'%\");\n                } else {\n                  suffix = suffix.concat(\"'%\");\n                }\n                continue;\n              } else if (ch === _PER_MILL) {\n                if (multiplier !== 1) {\n                  _throwSyntaxError(pattern);\n                }\n                numberSettings.style = 'perMill';\n                numberSettings.isPerMill = true;\n                multiplier = 1000;\n                if (isPrefix) {\n                  prefix = prefix.concat(\"'\\u2030\");\n                } else {\n                  suffix = suffix.concat(\"'\\u2030\");\n                }\n                continue;\n              } else if (ch === _MINUS) {\n                if (isPrefix) {\n                  prefix = prefix.concat(\"'-\");\n                } else {\n                  suffix = suffix.concat(\"'-\");\n                }\n                continue;\n              }\n              if (isPrefix) {\n                prefix = prefix.concat(ch);\n              } else {\n                suffix = suffix.concat(ch);\n              }\n              break;\n\n            case 1:\n              if (j === 1) {\n                phaseOneLength += 1;\n              } else {\n                phaseOneLength -= 1;\n                if (phaseOneLength === 0) {\n                  phase = 2;\n                  isPrefix = false;\n                }\n                continue;\n              }\n\n              if (ch === _DIGIT) {\n                if (zeroDigitCount > 0) {\n                  digitRightCount += 1;\n                } else {\n                  digitLeftCount += 1;\n                }\n                if (groupingCount >= 0 && decimalPos < 0) {\n                  groupingCount += 1;\n                }\n              } else if (ch === _ZERO_DIGIT) {\n                if (digitRightCount > 0) {\n                  _throwSyntaxError(pattern);\n                }\n                zeroDigitCount += 1;\n                if (groupingCount >= 0 && decimalPos < 0) {\n                  groupingCount += 1;\n                }\n              } else if (ch === _GROUPING_SEPARATOR) {\n                groupingCount0 = groupingCount;\n                groupingCount = 0;\n              } else if (ch === _DECIMAL_SEPARATOR) {\n                if (decimalPos >= 0) {\n                  _throwSyntaxError(pattern);\n                }\n                decimalPos = digitLeftCount + zeroDigitCount + digitRightCount;\n              } else if (_regionMatches(pattern, pos, _EXPONENT)) {\n                if (useExponentialNotation) {\n                  _throwSyntaxError(pattern);\n                }\n                useExponentialNotation = true;\n                minExponentDigits = 0;\n                pos += _EXPONENT.length;\n                while (pos < pattern.length && pattern.charAt(pos) === _ZERO_DIGIT) {\n                  minExponentDigits += 1;\n                  phaseOneLength += 1;\n                  pos += 1;\n                }\n\n                if (digitLeftCount + zeroDigitCount < 1 || minExponentDigits < 1) {\n                  _throwSyntaxError(pattern);\n                }\n                phase = 2;\n                isPrefix = false;\n                pos -= 1;\n                continue;\n              } else {\n                phase = 2;\n                isPrefix = false;\n                pos -= 1;\n                phaseOneLength -= 1;\n                continue;\n              }\n              break;\n            default:\n              break;\n          }\n        }\n        /* eslint-enable no-continue */\n\n        if (zeroDigitCount === 0 && digitLeftCount > 0 && decimalPos >= 0) {\n          // Handle \"###.###\" and \"###.\" and \".###\"\n          var n = decimalPos;\n          if (n === 0) {\n            // Handle \".###\"\n            n += 1;\n          }\n          digitRightCount = digitLeftCount - n;\n          digitLeftCount = n - 1;\n          zeroDigitCount = 1;\n        }\n\n        // Do syntax checking on the digits.\n        if (\n          (decimalPos < 0 && digitRightCount > 0) ||\n          (decimalPos >= 0 &&\n            (decimalPos < digitLeftCount || decimalPos > digitLeftCount + zeroDigitCount)) ||\n          groupingCount === 0 ||\n          inQuote\n        ) {\n          _throwSyntaxError(pattern);\n        }\n\n        if (j === 1) {\n          posPrefixPattern = prefix;\n          posSuffixPattern = suffix;\n          negPrefixPattern = posPrefixPattern;\n          negSuffixPattern = posSuffixPattern;\n          var digitTotalCount = digitLeftCount + zeroDigitCount + digitRightCount;\n          // The effectiveDecimalPos is the position the decimal is at or\n          // would be at if there is no decimal. Note that if decimalPos<0,\n          // then digitTotalCount == digitLeftCount + zeroDigitCount.\n          var effectiveDecimalPos = decimalPos >= 0 ? decimalPos : digitTotalCount;\n          numberSettings.minimumIntegerDigits = effectiveDecimalPos - digitLeftCount;\n          numberSettings.maximumIntegerDigits = useExponentialNotation\n            ? digitLeftCount + numberSettings.minimumIntegerDigits\n            : _MAXIMUM_INTEGER_DIGITS;\n          numberSettings.maximumFractionDigits = decimalPos >= 0 ? digitTotalCount - decimalPos : 0;\n          numberSettings.minimumFractionDigits =\n            decimalPos >= 0 ? digitLeftCount + zeroDigitCount - decimalPos : 0;\n          numberSettings.groupingSize = groupingCount > 0 ? groupingCount : 0;\n          numberSettings.groupingSize0 = groupingCount0;\n        } else {\n          negPrefixPattern = prefix;\n          negSuffixPattern = suffix;\n          gotNegative = true;\n        }\n      }\n\n      if (pattern.length === 0) {\n        posPrefixPattern = '';\n        posSuffixPattern = '';\n        numberSettings.minimumIntegerDigits = 0;\n        numberSettings.maximumIntegerDigits = _MAXIMUM_INTEGER_DIGITS;\n        numberSettings.minimumFractionDigits = 0;\n        numberSettings.maximumFractionDigits = _MAXIMUM_FRACTION_DIGITS;\n      }\n      numberSettings.useExponentialNotation = useExponentialNotation;\n      numberSettings.minExponentDigits = minExponentDigits;\n      // If there was no negative pattern, or if the negative pattern is\n      // identical to the positive pattern, then prepend the minus sign to\n      // the positive pattern to form the negative pattern.\n      if (\n        !gotNegative ||\n        (negPrefixPattern.localeCompare(posPrefixPattern) === 0 &&\n          negSuffixPattern.localeCompare(posSuffixPattern) === 0)\n      ) {\n        if (numberSettings.style === 'currency' && numberSettings.lang === 'ar') {\n          negSuffixPattern = posSuffixPattern + \"'\\u200f-\";\n          negPrefixPattern = posPrefixPattern;\n        } else {\n          negSuffixPattern = posSuffixPattern;\n          negPrefixPattern = \"'-\" + posPrefixPattern;\n        }\n      }\n      _expandAffixes(localeElements, numberSettings);\n    }\n\n    function _getRoundedNumber(ret, numberSettings, options) {\n      var precision = numberSettings.maximumFractionDigits;\n      var isNegative = ret < 0;\n      var mode = options.roundingMode || 'DEFAULT';\n      var roundedNumber = _roundNumber(ret, precision, mode);\n      return isNegative ? -roundedNumber : roundedNumber;\n    }\n\n    function _resolveNumberSettings(localeElements, options, locale) {\n      var numberSettings = {};\n      _validateNumberOptions(options, 'OraNumberConverter.resolvedOptions');\n      _getNumberSettings(localeElements, numberSettings, options, locale);\n      numberSettings.numberingSystemKey = _getNumberingExtension(locale);\n      if (\n        __ConverterUtilsI18n.OraI18nUtils.numeringSystems[numberSettings.numberingSystemKey] ===\n        undefined\n      ) {\n        numberSettings.numberingSystemKey = 'latn';\n      }\n      return numberSettings;\n    }\n\n    function _resolveOptions(numberSettings, options, locale) {\n      var resOptions = {\n        locale: locale,\n        style: numberSettings.style === undefined ? 'decimal' : numberSettings.style,\n        useGrouping: options.useGrouping === undefined ? true : options.useGrouping,\n        numberingSystem: numberSettings.numberingSystemKey\n      };\n      resOptions.minimumIntegerDigits = numberSettings.minimumIntegerDigits;\n      resOptions.minimumFractionDigits = numberSettings.minimumFractionDigits;\n      resOptions.maximumFractionDigits = numberSettings.maximumFractionDigits;\n      if (numberSettings.style === 'decimal' && options.decimalFormat !== undefined) {\n        resOptions.decimalFormat = options.decimalFormat;\n      }\n      if (numberSettings.style === 'currency' && options.currencyFormat !== undefined) {\n        resOptions.currencyFormat = options.currencyFormat;\n      }\n      if (numberSettings.style === 'currency') {\n        resOptions.currency = options.currency;\n        resOptions.currencyDisplay =\n          options.currencyDisplay === undefined ? 'symbol' : options.currencyDisplay;\n      }\n      if (options.unit !== undefined) {\n        resOptions.unit = options.unit;\n      }\n      if (options.pattern !== undefined) {\n        resOptions.pattern = options.pattern;\n      }\n      var roundingMode = options.roundingMode;\n      var roundDuringParse = options.roundDuringParse;\n      if (roundingMode !== undefined) {\n        resOptions.roundingMode = roundingMode;\n      }\n      if (roundDuringParse !== undefined) {\n        resOptions.roundDuringParse = roundDuringParse;\n      }\n      var leneint = numberSettings.lenientParse;\n      if (leneint !== undefined) {\n        resOptions.lenientParse = leneint;\n      }\n      var sep = numberSettings.separators;\n      if (sep !== undefined) {\n        resOptions.separators = sep;\n      }\n      resOptions.virtualKeyboardHint = _getVirtualKeyboardHint(numberSettings, options);\n      return resOptions;\n    }\n\n    /*\n     * Checks through the converter options.\n     * Based on the options the appropriate virtualKeyboardHint is returned.\n     * @return {string} virtual keyboard hint type - 'number' or 'text'\n     */\n    function _getVirtualKeyboardHint(numberSettings, options) {\n      var virtualKeyboardHint = 'text';\n      var converterStyle = options.style;\n      switch (converterStyle) {\n        case 'unit':\n          virtualKeyboardHint = 'text';\n          break;\n\n        case 'currency':\n        case 'percent':\n          if (options.pattern === undefined) {\n            virtualKeyboardHint = 'text';\n          } else {\n            virtualKeyboardHint = _parsePatternOption(numberSettings, options);\n          }\n          break;\n\n        default:\n          if (options.pattern === undefined) {\n            if (options.decimalFormat === 'short' || options.decimalFormat === 'long') {\n              virtualKeyboardHint = 'text';\n            } else {\n              virtualKeyboardHint = _parseUseGrouping(numberSettings, options);\n            }\n          } else {\n            virtualKeyboardHint = _parsePatternOption(numberSettings, options);\n          }\n          break;\n      }\n\n      return virtualKeyboardHint;\n    }\n\n    /*\n     * Based on converter's options.useGrouping the virtualKeyboardHint is decided.\n     * @return {string} virtualKeyboardHint value\n     */\n    function _parseUseGrouping(numberSettings, options) {\n      if (options.useGrouping === undefined || options.useGrouping) {\n        if (numberSettings.decimalSeparator === '.' && numberSettings.groupingSeparator === '') {\n          return 'number';\n        }\n      } else if (numberSettings.decimalSeparator === '.') {\n        return 'number';\n      }\n      return 'text';\n    }\n\n    /*\n     * Based on converter's options.pattern the virtualKeyboardHint is decided.\n     * @return {string} virtualKeyboardHint value\n     */\n    function _parsePatternOption(numberSettings, options) {\n      var patternHasNonNumericChar = _checkPatternForNonNumericChar(options.pattern);\n      if (patternHasNonNumericChar) {\n        return 'text';\n      }\n\n      var patternHasGroupSeparator = _checkPatternForGroupSeparator(options.pattern);\n      var patternHasDecimalSeparator = _checkPatternForDecimalSeparator(options.pattern);\n\n      if (patternHasGroupSeparator && patternHasDecimalSeparator) {\n        if (numberSettings.groupingSeparator !== '' || numberSettings.decimalSeparator !== '.') {\n          return 'text';\n        } else if (numberSettings.groupingSeparator === numberSettings.decimalSeparator) {\n          return 'text';\n        }\n      }\n\n      if (patternHasDecimalSeparator && !patternHasGroupSeparator) {\n        if (numberSettings.decimalSeparator !== '.') {\n          return 'text';\n        }\n      }\n\n      if (!patternHasDecimalSeparator && patternHasGroupSeparator) {\n        if (numberSettings.groupingSeparator !== '') {\n          return 'text';\n        }\n      }\n      return 'number';\n    }\n\n    /*\n     * Checks if the converter's options.pattern has non-numeric characters\n     * that cannot be rendered by input type 'number'.\n     * @return {boolean} indicates whether pattern has non-numeric characters or not.\n     */\n\n    function _checkPatternForNonNumericChar(pattern) {\n      var nonNumericPattern = /[^0-9.#]/i;\n      return nonNumericPattern.test(pattern);\n    }\n\n    /*\n     * Checks if the converter's options.pattern has group separator symbol\n     * that cannot be rendered by input type 'number'.\n     * @return {boolean} indicates whether pattern has group separator symbol or not.\n     */\n    function _checkPatternForGroupSeparator(pattern) {\n      if (pattern.indexOf(',') !== -1) {\n        return true;\n      }\n      return false;\n    }\n\n    /*\n     * Checks if the converter's options.pattern has decimal separator symbol\n     * that cannot be rendered by input type 'number'.\n     * @return {boolean} indicates whether pattern has\n     *  decimal separator symbol or not.\n     */\n    function _checkPatternForDecimalSeparator(pattern) {\n      if (pattern.indexOf('.') !== -1) {\n        return true;\n      }\n      return false;\n    }\n\n    function _init() {\n      return {\n        /**\n         * Format a number.\n         * @memberof OraNumberConverter\n         * @param {number} value - Number object to be formatted.\n         * @param {Object} localeElements - the instance of LocaleElements\n         * bundle\n         * @param {Object=} options - Containing the following properties:<br>\n         * - <b>style.</b>  is one of the String values \"decimal\", \"currency\",\n         * \"percent\" or \"unit\". The default is \"decimal\".<br>\n         * - <b>decimalFormat.</b> is used in conjuction with \"decimal\" style.\n         * It can have one of the string values \"short\", \"long\", \"standard\". \"standard\"\n         * is the default. It is used for compact number formatting. For example 3000 is displayed\n         *  as 3K for \"short\" and 3 thousand for \"long\". We take into consideration\n         *  the locale's plural rules for the compact pattern.<br>\n         * - <b>currency.</b> An ISO 4217 alphabetic currency code. Mandatory\n         *  when style is \"currency\".<br>\n         * - <b>unit.</b> Mandatory when style is \"unit\". Allowed values are \"byte\" or \"bit\".<br>\n         * - <b>currencyFormat.</b> is used in conjuction with \"currency\" style.\n         * It can have one of the string values \"short\", \"long\", \"standard\". \"standard\"\n         * is the default. It is used for compact currency formatting. For example $3000 is displayed\n         *  as $3K for \"short\" and 3 thousand US Dollar for \"long\".<br>\n         * - <b>currencyDisplay.</b> is one of the String values \"code\",\n         * \"symbol\", or \"name\", specifying whether to display the currency as\n         * an ISO 4217 alphabetic currency code,\n         * a localized currency symbol, or a localized currency name if\n         * formatting with the \"currency\" style. It is only present when style\n         * has the value \"currency\". The default is \"symbol\".<br>\n         * - <b>minimumIntegerDigits.</b> is a non-negative integer Number value\n         * indicating the minimum integer digits to be used. Numbers will be\n         * padded with leading zeroes if necessary.<br>\n         * - <b>minimumFractionDigits.</b> a non-negative integer Number value\n         * indicating the minimum fraction digits to be used. Numbers will be\n         * padded with trailing zeroes if necessary.<br>\n         * - <b>maximumFractionDigits.</b> a non-negative integer Number value\n         * indicating the maximum fraction digits to be used. Numbers will be\n         * rounded if necessary.<br>\n         * - <b>roundingMode.</b> specifies the rounding behavior. This follows the\n         *  Java.Math.RoundingMode behavior. Currently we support the options :\n         *  HALF_UP, HALF_DOWN, and HALF_EVEN<br>\n         * - <b>useGrouping.</b> is a Boolean value indicating whether a\n         * grouping separator should be used. The default is true.<br>\n         * - <b>separators.</b> - An object with 2 fields: 'decimal' and 'group'.\n         * It allows the user to override the locale's default decimal and grouping separators.<br>\n         * - <b>pattern.</b> custom pattern. Will override above options\n         * when present.\n         * @param {string=} locale - A BCP47 compliant language tag. it is only\n         * used to extract the unicode extension keys.\n         * @return {string} formatted number.\n         * @throws {RangeError} If a property value of the options parameter is\n         * out of range.\n         * @throws {TypeError} If the style is currency and currency code is\n         * missing.\n         * @throws {SyntaxError} If an unexpected character is encountered in\n         * the pattern.\n         */\n        format: function (value, localeElements, options, locale) {\n          if (arguments.length <= 2 || options === undefined) {\n            // eslint-disable-next-line no-param-reassign\n            options = {\n              useGrouping: true,\n              style: 'decimal'\n            };\n          }\n          _validateNumberOptions(options, 'OraNumberConverter.format');\n          var numberSettings = {};\n          _getNumberSettings(localeElements, numberSettings, options, locale);\n          return _formatNumberImpl(value, options, localeElements, numberSettings, locale);\n        },\n        /**\n         * Parse a number.\n         * @memberof OraNumberConverter\n         * @param {string|number} str - string to be parsed.\n         * @param {Object} localeElements - the instance of LocaleElements\n         * bundle\n         * @param {Object=} options - Containing the following properties:<br>\n         * - <b>style.</b>  is one of the String values \"decimal\", \"currency\" or\n         * \"percent\". The default is \"decimal\".<br>\n         * - <b>currency.</b> An ISO 4217 alphabetic currency code. Mandatory\n         * when style is \"currency\".<br>\n         * - <b>currencyDisplay.</b> is one of the String values \"code\",\n         * \"symbol\", or \"name\", specifying whether to display the currency as\n         * an ISO 4217 alphabetic currency code,\n         *  a localized currency symbol, or a localized currency name if\n         *  formatting with the \"currency\" style. It is only considered when\n         *  style has the value \"currency\". The default is \"symbol\".<br>\n         * - <b>pattern.</b> custom pattern. Will override above options when\n         * present.<br>\n         * - <b>roundingMode.</b> specifies the rounding behavior. This follows the\n         *  Java.Math.RoundingMode behavior. Currently we support the options :\n         *  HALF_UP, HALF_DOWN, and HALF_EVEN<br>\n         *  - <b>roundDuringParse.</b> Boolean value. Specifies whether or not to round during parse.\n         *  by default the number converter rounds during format but not during parse.<br>\n         *  - <b>separators.</b> - An object with 2 fields: 'decimal' and 'group'.\n         * It allows the user to override the locale's default decimal and grouping separators.<br>\n         *  - <b>lenientParse.</b> specifies if lenient parse is enabled or disabled. Allowed values: \"full\", \"none\".\n         *  default is \"full\" which means lenient parse is enabled.<br>\n         * @param {string=} locale - A BCP47 compliant language tag. it is only\n         * used to extract the unicode extension keys.\n         * @return {number} a number object parsed from the string. In case of\n         * error, returns null.\n         * @throws {RangeError} If a property value of the options parameter is\n         * out of range.\n         * @throws {TypeError} If the style is currency and currency code is\n         * missing.\n         * @throws {SyntaxError} If an unexpected character is encountered in\n         * the pattern.\n         * @throws {Error} If the <i>str</i> parameter does not match the number\n         * pattern.\n         */\n        parse: function (str, localeElements, options, locale) {\n          if (typeof str === 'number') {\n            return str;\n          }\n          if (Object.prototype.toString.call(str) === '[object Number]') {\n            return Number(str);\n          }\n          if (arguments.length <= 2 || options === undefined) {\n            // eslint-disable-next-line no-param-reassign\n            options = {\n              useGrouping: true,\n              style: 'decimal'\n            };\n          }\n          _validateNumberOptions(options, 'OraNumberConverter.parse');\n          return _parseNumberImpl(str, localeElements, options, locale);\n        },\n        /**\n         * Resolve options.\n         * Returns a new object with properties reflecting the number formatting\n         * options computed based on the options parameter.\n         * If options is not provided, the properties will be derived from the\n         * locale defaults.\n         * @memberof OraNumberConverter\n         * @param {Object} localeElements - the instance of LocaleElements\n         * bundle\n         * @param {Object=} options containing the following properties:<br>\n         * - <b>style.</b> \"decimal\", \"currency\", \"percent\" or \"unit\". The default is\n         * \"decimal\".<br>\n         * - <b>unit.</b> one of the strings \"byte\" or \"bit\" when the style is \"unit\".<br>\n         * - <b>decimalFormat.</b> It can have one of the string values \"short\", \"long\", \"standard\".\n         * \"standard\" is the default. It is used for compact number formatting. For example 3000 is displayed\n         *  as 3K for \"short\" and 3 thousand for \"long\". We take into consideration\n         *  the locale's plural rules for the compact pattern.<br>\n         * - <b>currency.</b> An ISO 4217 alphabetic currency code. Mandatory\n         * when when style is \"currency\".<br>\n         * - <b>currencyFormat.</b> is used in conjuction with \"currency\" style.\n         * It can have one of the string values \"short\", \"long\", \"standard\". \"standard\"\n         * is the default. It is used for compact currency formatting. For example $3000 is displayed\n         *  as $3K for \"short\" and 3 thousand US Dollar for \"long\".<br>\n         * - <b>currencyDisplay.</b> is one of the String values \"code\",\n         * \"symbol\", or \"name\", specifying whether to display the currency as\n         * an ISO 4217 alphabetic currency code,\n         *   a localized currency symbol, or a localized currency name if\n         *   formatting with the \"currency\" style. It is only present\n         *   when style has the value \"currency\". The default is \"symbol\".<br>\n         * - <b>minimumIntegerDigits.</b> is a non-negative integer Number value\n         * indicating the minimum integer digits to be used. Numbers will be\n         * padded with leading zeroes if necessary.<br>\n         * - <b>minimumFractionDigits.</b> a non-negative integer Number value\n         * indicating the minimum fraction digits to be used. Numbers will be\n         * padded with trailing zeroes if necessary.<br>\n         * - <b>maximumFractionDigits.</b> a non-negative integer Number value\n         * indicating the maximum fraction digits to be used. Numbers will be\n         * rounded if necessary.<br>\n         * - <b>numberingSystem</b>. The numbering system.<br>\n         * - <b>useGrouping.</b> is a Boolean value indicating whether a\n         * grouping separator should be used. The default is true.<br>\n         * - <b>pattern.</b> custom pattern. Will override above options when\n         * present.<br>\n         * - <b>roundingMode.</b> specifies the rounding behavior. This follows the\n         *  Java.Math.RoundingMode behavior. Currently we support the options :\n         *  HALF_UP, HALF_DOWN, and HALF_EVEN<br>\n         *  - <b>roundDuringParse.</b> Boolean value. Specifies whether or not to round during parse.\n         *  by default the number converter rounds during format but not during parse.<br>\n         *  - <b>separators.</b> - An object with 2 fields: 'decimal' and 'group'.\n         * It allows the user to override the locale's default decimal and grouping separators.<br>\n         *  - <b>lenientParse.</b> specifies if lenient parse is enabled or disabled. Allowed values: \"full\", \"none\".\n         * default is \"full\" which means lenient parse is enabled.<br>\n         * @param {string=} locale - A BCP47 compliant language tag. it is only\n         * used to extract the unicode extension keys.\n         * @return {Object} Resolved options object.\n         * @throws {RangeError} If a property value of the options parameter is\n         * out of range.\n         * @throws {TypeError} If the style is currency and currency code is\n         * missing.\n         */\n        resolvedOptions: function (localeElements, options, locale) {\n          if (arguments.length < 3 || locale === undefined) {\n            // eslint-disable-next-line no-param-reassign\n            locale = __ConverterUtilsI18n.OraI18nUtils.getLocaleElementsMainNodeKey(localeElements);\n          }\n          if (arguments.length < 2 || options === undefined) {\n            // eslint-disable-next-line no-param-reassign\n            options = {\n              useGrouping: true,\n              style: 'decimal'\n            };\n          }\n          var numberSettings = _resolveNumberSettings(localeElements, options, locale);\n          return _resolveOptions(numberSettings, options, locale);\n        }\n      };\n    }\n\n    return {\n      /**\n       * getInstance.\n       * Returns the singleton instance of OraNumberConverter class.\n       * @memberof OraNumberConverter\n       * @return {Object} The singleton OraNumberConverter instance.\n       */\n      getInstance: function () {\n        if (!instance) {\n          instance = _init();\n        }\n        return instance;\n      }\n    };\n  })();\n\n  /**\n   * oj.NumberConverter Contract.\n   * @ignore\n   */\n\n  /**\n   * @class\n   * @name oj.NumberConverter\n   * @constructor\n   * @hideconstructor\n   * @abstract\n   * @augments oj.Converter\n   * @ojsignature {target: \"Type\",\n   *                value: \"abstract class NumberConverter implements Converter<number>\"}\n   *\n   * @ojtsimport {module: \"ojconverter\", type: \"AMD\", importName: \"Converter\"}\n   * @export\n   * @since 0.6.0\n   * @see oj.IntlNumberConverter JET's implementation of the NumberConverter\n   */\n  const NumberConverter = function () {\n    this.Init();\n  };\n\n  // Subclass from oj.Object\n  oj.Object.createSubclass(NumberConverter, Converter, 'oj.NumberConverter');\n\n  /**\n   * Initializes the number converter instance with the set options.\n   * @param {Object=} options an object literal used to provide an optional information to\n   * initialize the converter.<p>\n   * @export\n   * @ignore\n   */\n  NumberConverter.prototype.Init = function (options) {\n    NumberConverter.superclass.Init.call(this, options);\n  };\n\n  /**\n   * Formats the Number value using the options provided and returs a String value.\n   *\n   * @param {number} value the value to be formatted for display\n   * @return {(string|null)} the localized and formatted value suitable for display\n   * @throws {Error} a ConverterError if formatting fails.\n   * @export\n   * @memberof oj.NumberConverter\n   * @instance\n   * @method format\n   */\n  NumberConverter.prototype.format = function (value) {\n    return NumberConverter.superclass.format.call(this, value);\n  };\n\n  /**\n   * Parses the value using the options provided and returns a Number object.\n   *\n   * @param {string} value to parse\n   * @return {number|null} the parsed value as a Number object.\n   * @throws {Error} a ConverterError if parsing fails\n   * @export\n   * @memberof oj.NumberConverter\n   * @instance\n   * @method parse\n   */\n  NumberConverter.prototype.parse = function (value) {\n    return NumberConverter.superclass.parse.call(this, value);\n  };\n\n  /**\n   * @export\n   * Placeholder here as closure compiler objects to export annotation outside of top level\n   */\n\n  /**\n   * @constructor\n   * @final\n   * @name oj.IntlNumberConverter\n   * @classdesc Constructs an immutable instance and initializes it with the options provided. When initialized\n   * with no options, the default options for the current locale are assumed. The converters by\n   * default use the current page locale (set with the html lang attribute and what is returned by oj.Config.getLocale()).\n   * There are several ways to initialize the converter.\n   * <p>\n   * <ul>\n   * <li>Using options defined by the ECMA 402 Specification, these would be the properties style,\n   * currency, currencyDisplay, minimumIntegerDigits, minimumFractionDigits, maximumFractionDigits,\n   * useGrouping. NOTE: minimumSignificantDigits and maximumSignificantDigits are not supported.</li>\n   * <li>Using the decimalFormat option to define a locale-based pattern, e.g.,\n   *  a compact pattern, such as \"1M\" and \"1 million\".</li>\n   * <li>Using the currencyFormat option to define a locale-based pattern, e.g.,\n   * a compact pattern, such as \"$1M\" and \"$1 million\".</li>\n   * <li>Using the roundingMode and roundDuringParse options to round the number UP, DOWN, CEILING, FLOOR, HALF_UP, HALF_DOWN or HALF_EVEN.</li>\n   * <li>Using a custom decimal, currency or percent format pattern. specified using the 'pattern' property. (deprecated)</li>\n   * </ul>\n   * <p>\n   *\n   * The converter provides leniency when parsing user input value to a number in the following ways:<br/>\n   *\n   * <ul>\n   * <li>Prefix and suffix that do not match the pattern, are removed. E.g., when the options are\n   * {style: \"percent\"} (suffix is the % character), a value of \"abc-123.45xyz\", will be leniently parsed as\n   * if the value was -123.45 to\n   * -123%</li>\n   * <li>When a value includes a symbol but the pattern doesn't require it.  E.g., the options are\n   * {pattern: \"###\", currency: 'USD'}, then values ($123), (123) and -123 will be leniently parsed as\n   * -123.</li>\n   * </ul>\n   * <p>\n   * Lenient parse can be disabled by setting the property lenientParse to \"none\". In which case the user input must\n   * be an exact match of the expected pattern and all the leniency described above will be disabled.\n   * <p>\n   * <h3 id=\"migration-section\">\n   *   Migration\n   *   <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#migration-section\"></a>\n   * </h3>\n   *\n   * <p>\n   * Please be aware that newer converters are available and IntlNumberConverter will be deprecated in the future.\n   * See the docs for <a href=\"BigDecimalStringConverter.html\" target=\"_blank\">BigDecimalStringConverter</a> and\n   * <a href=\"NumberConverter.html\" target=\"_blank\">NumberConverter</a> for more details.\n   * </p>\n   * @param {Object=} options - an object literal used to provide optional information to\n   * initialize the converter.\n   *\n   * @example <caption>Create a number converter for currencies</caption>\n   * var options = {style: \"currency\", currency: \"USD\", minimumIntegerDigits: 2};\n   * converter = new IntlNumberConverter(options);\n   * converter.format(9); --> \"$09.00\" if page locale is 'en-US'\n   * converter.format(9); --> \"09,00 $US\" if page locale is 'fr-FR'<br/>\n   *\n   * @example <caption>A number converter for percent values using a custom (CLDR) pattern</caption>\n   * var options = {pattern: '#,##0%'};\n   * converter = new IntlNumberConverter(options);<br/>\n   *\n   * @example <caption>To parse a value as percent but format it without displaying the percent character</caption>\n   * var options = {style: 'percent', pattern: '#,##0'};<br/>\n   *\n   * @example <caption>To parse a value as currency using a custom (CLDR) pattern</caption>\n   * var options = {pattern: '¤#,##0', currency: 'USD'};\n   *\n   * @example <caption>To format a value as digital bit unit</caption>\n   * var options = {style:'unit', unit:'bit'};\n   * converter = new IntlNumberConverter(options);\n   * var nb = 1024;\n   * converter.format(nb, localeElements, options);--> 1Kb<br/>\n   *\n   * @example <caption>To format a value as digital byte unit</caption>\n   * var options = {style:'unit', unit:'byte'};\n   * converter = new IntlNumberConverter(options);\n   * var nb = 1024;\n   * converter.format(nb, localeElements, options);--> 1KB<br/>\n   *\n   * @example <caption>The following decimalFormat examples are in en locale.\n   * To format a value as short (default for fraction digits is based on the locale)</caption>\n   * var options = {style:'decimal', decimalFormat:'short'};\n   * converter = new IntlNumberConverter(options);\n   * converter.format(12345);--> 12.354K<br/>\n   *\n   * @example <caption>Same as above for currencyFormat.\n   * To format a value as short (default for fraction digits is based on the locale)</caption>\n   * var options = {style:'currency', currency: 'USD', currencyFormat:'short'};\n   * converter = new IntlNumberConverter(options);\n   * converter.format(1234);--> $1.23K<br/>\n   *\n   * @example <caption>To format a value as long (default for fraction digits is based on the locale):</caption>\n   * var options = {style:'decimal', decimalFormat:'long'};\n   * converter = new IntlNumberConverter(options);\n   * converter.format(12345);--> 12.345 thousand<br/>\n   *\n   * @example <caption>To format a value as long currency format:</caption>\n   * var options = {style:'currency',  currency: 'USD', currencyFormat:'long'};\n   * converter = new IntlNumberConverter(options);\n   * converter.format(1234);--> $1.23 thousand<br/>\n   *\n   * @example <caption>To format a value as short with minimum fraction digits:</caption>\n   * options = { style:'decimal', decimalFormat:'short',\n   * minimumFractionDigits:4};\n   * converter = new IntlNumberConverter(options);\n   * converter.format(1234);--> 1.2340K<br/>\n   *\n   * @example <caption>To format a value as short with maximum fraction digits:</caption>\n   * options = { style:'decimal', decimalFormat:'short',\n   * maximumFractionDigits:0};\n   * converter = new IntlNumberConverter(options);\n   * converter.format(12345);--> 12K<br/>\n   *\n   * @example <caption>To format a value as long with minimum and maximum fraction digits:</caption>\n   * options = { style:'decimal', decimalFormat:'long',\n   * minimumFractionDigits:2, maximumFractionDigits:4};\n   * converter = new IntlNumberConverter(options);\n   * converter.format(12000);--> 12.00 thousand<br/>\n   *\n   * @example <caption>To format a value as short with minimum and maximum fraction digits:</caption>\n   * options = { style:'decimal', decimalFormat:'long',\n   * minimumFractionDigits:2, maximumFractionDigits:4};\n   * converter = new IntlNumberConverter(options);\n   * converter.format(12345678);--> 12.345 million<br/>\n   *\n   * @example <caption>decimal style default is standard:</caption>\n   * options = { style:'decimal', decimalFormat:'standard'};\n   * converter = new IntlNumberConverter(options);\n   * converter.format(12345);--> 12,345<br/>\n   *\n   * @example <caption>decimal round UP:</caption>\n   * options = { style:'decimal',  maximumFractionDigits:2, roundingMode:'UP'};\n   * converter = new IntlNumberConverter(options);\n   * converter.format(0.221);--> 0.23\n   * converter.parse(0.221);-->0.221 //doesn't round during parse by default<br/>\n   *\n   * @example <caption>decimal round DOWN:</caption>\n   * options = { style:'decimal',  maximumFractionDigits:2, roundingMode:'DOWN'};\n   * converter = new IntlNumberConverter(options);\n   * converter.format(0.229);--> 0.22\n   * converter.parse(0.229);-->0.229 //doesn't round during parse by default<br/>\n   *\n   * @example <caption>decimal round CEILING:</caption>\n   * options = { style:'decimal',  maximumFractionDigits:2, roundingMode:'CEILING'};\n   * converter = new IntlNumberConverter(options);\n   * converter.format(0.221);--> 0.23\n   * converter.parse(0.221);-->0.221 //doesn't round during parse by default<br/>\n   *\n   * @example <caption>decimal round FLOOR:</caption>\n   * options = { style:'decimal',  maximumFractionDigits:2, roundingMode:'FLOOR'};\n   * converter = new IntlNumberConverter(options);\n   * converter.format(0.229);--> 0.22\n   * converter.parse(0.229);-->0.229 //doesn't round during parse by default<br/>\n   *\n   * @example <caption>decimal round HALF_DOWN:</caption>\n   * options = { style:'decimal',  maximumFractionDigits:2, roundingMode:'HALF_DOWN'};\n   * converter = new IntlNumberConverter(options);\n   * converter.format(0.225);--> 0.22\n   * converter.parse(0.225);-->0.225 //doesn't round during parse by default<br/>\n   *\n   * @example <caption>decimal round HALF_UP:</caption>\n   * options = { style:'decimal',  maximumFractionDigits:2, roundingMode:'HALF_UP'};\n   * converter = new IntlNumberConverter(options);\n   * converter.format(0.225);--> 0.23\n   * converter.parse(0.225);--> 0.225 //doesn't round during parse by default<br/>\n   *\n   * @example <caption>decimal round HALF_EVEN:</caption>\n   * options = { style:'decimal',  maximumFractionDigits:2, roundingMode:'HALF_EVEN'};\n   * converter = new IntlNumberConverter(options);\n   * converter.format(0.225);--> 0.22\n   * converter.format(0.235);--> 0.24\n   * converter.parse(0.225);--> 0.225 //doesn't round during parse by default\n   * converter.parse(0.235);--> 0.235 //doesn't round during parse by default<br/>\n   *\n   * @example <caption>decimal round UP and roundDuringParse:</caption>\n   * options = { style:'decimal', maximumFractionDigits:2,\n   *             roundingMode:'UP', roundDuringParse: true};\n   * converter = new IntlNumberConverter(options);\n   * converter.format(0.221);--> 0.23\n   * converter.parse(0.221);-->0.23<br/>\n   *\n   * @example <caption>decimal round DOWN and roundDuringParse:</caption>\n   * options = { style:'decimal', maximumFractionDigits:2,\n   *             roundingMode:'DOWN', roundDuringParse: true};\n   * converter = new IntlNumberConverter(options);\n   * converter.format(0.229);--> 0.22\n   * converter.parse(0.229);-->0.22<br/>\n   *\n   * @example <caption>decimal round CEILING and roundDuringParse:</caption>\n   * options = { style:'decimal', maximumFractionDigits:2,\n   *             roundingMode:'CEILING', roundDuringParse: true};\n   * converter = new IntlNumberConverter(options);\n   * converter.format(0.221);--> 0.23\n   * converter.parse(0.221);-->0.23<br/>\n   *\n   * @example <caption>decimal round FLOOR and roundDuringParse:</caption>\n   * options = { style:'decimal', maximumFractionDigits:2,\n   *             roundingMode:'FLOOR', roundDuringParse: true};\n   * converter = new IntlNumberConverter(options);\n   * converter.format(0.229);--> 0.22\n   * converter.parse(0.229);-->0.22<br/>\n   *\n   * @example <caption>decimal round HALF_DOWN and roundDuringParse:</caption>\n   * options = { style:'decimal', maximumFractionDigits:2,\n   *             roundingMode:'HALF_DOWN', roundDuringParse: true};\n   * converter = new IntlNumberConverter(options);\n   * converter.format(0.225);--> 0.22\n   * converter.parse(0.225);-->0.22<br/>\n   *\n   * @example <caption>decimal round HALF_UP and roundDuringParse:</caption>\n   * options = { style:'decimal',  maximumFractionDigits:2,\n   *             roundingMode:'HALF_UP', roundDuringParse: true};\n   * converter = new IntlNumberConverter(options);\n   * converter.format(0.225);--> 0.23\n   * converter.parse(0.225);--> 0.23<br/>\n   *\n   * @example <caption>decimal round HALF_EVEN and roundDuringParse:</caption>\n   * options = { style:'decimal',  maximumFractionDigits:2,\n   *             roundingMode:'HALF_EVEN', roundDuringParse: true};\n   * converter = new IntlNumberConverter(options);\n   * converter.format(0.225);--> 0.22\n   * converter.format(0.235);--> 0.24\n   * converter.parse(0.225);--> 0.22\n   * converter.parse(0.235);--> 0.24<br/>\n   *\n   * @example <caption>Use custom decimal and grouping separators:</caption>\n   * options = { style:'decimal', separators: {decimal: ',',  group: '.'}};\n   * converter = new IntlNumberConverter(options);\n   * var nb = 1234567.89;\n   * converter.format(nb);--> 1.234.567,89\n   * converter.parse(\"1.234.567,89\");--> 1234567.89\n   * <br/>\n   *\n   * @example <caption>Disable lenient parse:</caption>\n   * options = { style:'decimal',  lenientParse: 'none'};\n   * converter = new IntlNumberConverter(options);\n   * converter.parse(\"abc-123.45xyz\");--> Error: Unparsable number abc-123.45xyz The expected number pattern is #,##0.###\n   * <br/>\n   *\n   * @export\n   * @augments oj.NumberConverter\n   * @name oj.IntlNumberConverter\n   * @ojsignature [{target: \"Type\",\n   *                value: \"class IntlNumberConverter extends NumberConverter\"},\n   *               {target: \"Type\",\n   *                value: \"oj.IntlNumberConverter.ConverterOptions\",\n   *                for: \"options\", jsdocOverride: true}\n   *              ]\n   * @since 0.6.0\n   */\n  const IntlNumberConverter = function (options) {\n    const mo = ojconverterPreferences.getMergedNumberPreferencesWithOptions(options);\n    this.Init(mo);\n  };\n\n  /**\n   * @typedef {object} oj.IntlNumberConverter.Separators\n   * @property {string=} decimal - Allows the user to provide custom decimal separators.\n   * <br/>Example: { style:'decimal', separators: {decimal: ',',  group: '.'}};\n   * @property {string=} group - Allows the user to provide custom group separators.\n   * <br/>Example: { style:'decimal', separators: {decimal: ',',  group: '.'}};\n   */\n\n  /**\n   * @typedef {object} oj.IntlNumberConverter.ConverterOptions\n   * @property {('decimal'|'currency'|'percent'|'unit')=} style - sets the style of number formatting. Allowed values are \"decimal\"\n   * (the default), \"currency\", \"percent\" or \"unit\". When a number is formatted as a decimal, the decimal\n   * character is replaced with the most appropriate symbol for the locale. In English this is a\n   * decimal point (\".\"), while in many locales it is a decimal comma (\",\"). If grouping is enabled the\n   * locale dependent grouping separator is also used. These symbols are also used for numbers\n   * formatted as currency or a percentage, where appropriate.\n   * @property {string=} currency - specifies the currency that will be used when formatting the\n   * number. The value should be a ISO 4217 alphabetic currency code. If the style is set to currency,\n   * it's required that the currency property also be specified. This is because there is no default\n   * currency associated with the current locale. The user must always specify the currency code\n   * to be shown, otherwise an error will be thrown. The current page locale\n   * (returned by oj.Config.getLocale()) determines the formatting elements of the number\n   * like grouping separator and decimal separator. The currency code tells us which currency to\n   * display in current page locale. JET has translations for currency names.\n   * <p>\n   * As an example if we want to format 1000.35 EURO and the page locale is \"en-US\",\n   * we pass {style:'currency', currency:'EUR', currencyDisplay:'symbol'} and we will get \"€1,000.35\"\n   * If the page locale is \"fr-FR\", with the same options, we will get: \"1 000,35 €\"\n   * </p>\n   * @property {('byte'|'bit')=} unit - Mandatory when style is \"unit\". Allowed values:\n   * \"byte\" or \"bit\". It is used for formatting only. It can not be used for parsing.\n   * <p>\n   * It is used to format digital units like 10Mb for bit unit or 10MB for byte unit.\n   * There is no need to specify the scale of the unit. We automatically detect it.\n   * For example 1024 is formatted as 1KB and ?1048576? as 1MB.\n   * The user can also specify 'minimumFractionDigits' and  'maximumFractionDigits' to be displayed,\n   * otherwise we use the locale's default max and min fraction digits.\n   * </p>\n   * @property {('code'|'symbol'|'name')=} currencyDisplay - if the number is using currency formatting, specifies\n   * if the currency will be displayed using its \"code\" (as an ISO 4217 alphabetic currency code),\n   * \"symbol\" (a localized currency symbol (e.g. $ for US dollars, £ for Great British pounds, and so\n   * on), or \"name\" (a localized currency name. Allowed values are \"code\", \"symbol\" and \"name\".\n   * The default is \"symbol\".\n   * @property {('standard'|'short'|'long')=} decimalFormat -\n   * specifies the decimal format length to use when style is set to \"decimal\".\n   * Allowed values are : \"standard\"(default), \"short\" and \"long\". 'standard' is equivalent to not\n   * specifying the 'decimalFormat' attribute, in that case the locale’s default decimal pattern\n   * is used for formatting.\n   * <p>\n   * The user can also specify 'minimumFractionDigits' and  'maximumFractionDigits' to display.\n   * When not present we use the locale's default max and min fraction digits.\n   * </p>\n   * <p>\n   * There is no need to specify the scale; we automatically detect greatest scale that is less or\n   * equal than the input number. For example  1000000 is formatted as \"1M\" or \"1 million\" and\n   * 1234 is formatted, with zero fractional digits, as \"1K\" or \" 1 thousand\" for\n   * short and long formats respectively. The pattern for the short and long number is locale dependent\n   * and uses plural rules for the particular locale.\n   * </p>\n   * <p>\n   * NOTE: Currently this option formats a value (e.g., 2000 -> 2K), but it does not parse a value\n   * (e.g., 2K -> 2000), so it can only be used\n   * in a readOnly EditableValue because readOnly EditableValue components do not call\n   * the converter's parse function.\n   * </p>\n   * @property {('standard'|'short'|'long')=} currencyFormat -\n   * specifies the currency format length to use when style is set to \"currency\".\n   * Allowed values are : \"standard\"(default), \"short\" and \"long\". 'standard' is equivalent to not\n   * specifying the 'currencyFormat' attribute, in that case the locale's default currency pattern\n   * is used for formatting.\n   * Similar to decimalFormat, currencyFormat can only be used for formatting. It can not be used for parsing.\n   * <p>\n   * The user can also specify 'minimumFractionDigits' and  'maximumFractionDigits' to display.\n   * When not present we use the locale's default max and min fraction digits.\n   * </p>\n   * <p>\n   * There is no need to specify the scale; we automatically detect greatest scale that is less or\n   * equal than the input number. For example  1000000 is formatted as \"$1M\" or \"1 million dollar\" and\n   * 1000 is formatted as \"$1K\" or \" 1 thousand dollar\" for short and long formats respectively.\n   * The pattern for the short and long number is locale dependent and uses plural rules for the particular locale.\n   * </p>\n   * @property {number=} minimumIntegerDigits - sets the minimum number of digits before the\n   * decimal place (known as integer digits). The number is padded with leading zeros if it would not\n   * otherwise have enough digits. The value must be an integer between 1 and 21.\n   * @property {number=} minimumFractionDigits - similar to 'minimumIntegerDigits', except it\n   * deals with the digits after the decimal place (fractional digits). It must be an integer between\n   * 0 and 20. The fractional digits will be padded with trailing zeros if they are less than the minimum.\n   * @property {number=} maximumFractionDigits - follows the same rules as 'minimumFractionDigits',\n   * but sets the maximum number of fractional digits that are allowed. The value will be rounded if\n   * there are more digits than the maximum specified.\n   * @property {boolean=} useGrouping - when the value is truthy, the locale dependent grouping\n   * separator is used when formatting the number. This is often known as the thousands separator,\n   * although it is up to the locale where it is placed. The ‘useGrouping’ is set to true by default.\n   * @property {string=} pattern an optional localized pattern, where the characters used in\n   * pattern are as defined in the Unicode CLDR for numbers, percent or currency formats. When present\n   * this will override the other \"options\". <p>\n   *\n   * &nbsp;&nbsp;- When the pattern represents a currency style the 'currency' property is required to\n   * be set, as not setting this will throw an error. The 'currencyDisplay' is optional. <br/>Example:\n   * {pattern: '¤#,##0', currency: 'USD'}. <p>\n   *\n   * &nbsp;&nbsp;- It's not mandatory for the pattern to have the special character '¤' (currency sign)\n   * be present. When not present, values are treated as a currency value, but are not formatted to\n   * show the currency symbol. <br/>Example: {pattern: '#,##0', currency: 'USD'} <p>\n   *\n   * &nbsp;&nbsp;- When the pattern represents a percent style, the percent special character ('%') needs to be\n   * explicitly specified in the pattern, e.g., {pattern: \"#,##0%\"}. If the pattern does not contain\n   * the percent character it's treated as a decimal pattern, unless the style is set to percent,\n   * in which case the value is treated as a percent value, but not formatted to show the percent symbol.\n   * <br/>Example: {style: 'percent', pattern: \"#,##0\"}. <p>\n   *\n   * &nbsp;&nbsp;- A decimal pattern or exponent pattern is specified in the pattern using the CLDR\n   * conventions. <br/>Example: {pattern: \"#,##0.00\"} or {pattern: \"0.##E0\"}. <p>\n   *\n   * NOTE: 'pattern' is provided for backwards compatibility with existing apps that may want the\n   * convenience of specifying an explicit format mask. Setting a pattern will override the default\n   * locale specific format. <br/>\n   * @ojdeprecated {target: 'property', for:'pattern', since: '11.0.0', description: 'Use other options instead like style'}\n   *\n   * @property {('HALF_UP'|'HALF_DOWN'|'HALF_EVEN'|'UP'|'DOWN'|'CEILING'|'FLOOR')=} roundingMode - specifies the rounding behavior.\n   * This follows the Java.Math.RoundingMode behavior. https://docs.oracle.com/javase/7/docs/api/java/math/RoundingMode.html\n   *\n   * @property {boolean=} roundDuringParse - Specifies whether or not to round during\n   * parse. Defaults to false; the number converter rounds during format but not during parse.\n   *\n   * @property {oj.IntlNumberConverter.Separators=} separators - An object with 2 fields: 'decimal' and 'group'.\n   * It allows the user to provide custom decimal and grouping separators. It is accepted for both\n   * format and parse methods.\n   * <br/>\n   *\n   * @property {('full'|'none')=} lenientParse - The lenientParse property can be used to enable or disable leninet parsing.\n   *  Allowed values: \"full\" (default), \"none\".\n   * <p style='padding-left: 5px;'>\n   * By default the lenient parse is enabled and the leniency rules descibed above will be used. When lenientParse is\n   * set to \"none\" the lenient parse is disabled and the user input must match the expected input otherwise an exception will\n   * be thrown.<br/><br/>\n   */\n  oj$1.Object.createSubclass(IntlNumberConverter, NumberConverter, 'oj.IntlNumberConverter');\n\n  /**\n   * Initializes the number converter instance with the set options.\n   * @param {Object=} options an object literal used to provide an optional information to\n   * initialize the converter.<p>\n   * @export\n   * @ignore\n   * @memberof oj.IntlNumberConverter\n   */\n  IntlNumberConverter.prototype.Init = function (options) {\n    IntlNumberConverter.superclass.Init.call(this, options);\n  };\n\n  // Returns the wrapped number converter implementation object.\n  // FA is overriding our ojs/ojconverter-datetime bundle and needs to define this function\n  // or else they will get an error.\n  // Do not rename. TODO: Ideally we will remove the need for them to have to define this function.\n  IntlNumberConverter.prototype._getWrapped = function () {\n    if (!this._wrapped) {\n      this._wrapped = OraNumberConverter.getInstance();\n    }\n\n    return this._wrapped;\n  };\n\n  /**\n   * Formats a Number and returns the formatted string, using the options this converter was\n   * initialized with.\n   *\n   * @param {number} value to be formatted for display\n   * @return {string} the localized and formatted value suitable for display. When the value is\n   * formatted as a percent it's multiplied by 100.\n   *\n   * @throws {Error} a ConverterError both when formatting fails, or if the options provided during\n   * initialization cannot be resolved correctly.\n   * @memberof oj.IntlNumberConverter\n   * @export\n   * @instance\n   * @method format\n   */\n  IntlNumberConverter.prototype.format = function (value) {\n    // undefined, null and empty string values all return null. If value is NaN then return \"\".\n    if (\n      value == null ||\n      (typeof value === 'string' && oj$1.StringUtils.trim('' + value).length === 0) ||\n      (typeof value === 'number' && isNaN(value))\n    ) {\n      return '';\n    }\n\n    var locale = Config.getLocale();\n    var localeElements = LocaleData.__getBundle();\n    var resolvedOptions = this.resolvedOptions();\n    var converterError;\n    var formatValue;\n\n    try {\n      formatValue = this._getWrapped().format(value, localeElements, resolvedOptions, locale);\n    } catch (e) {\n      converterError = this._processConverterError(e, value);\n      throw converterError;\n    }\n    // The base converter returns NaN if the value is a string. This\n    // is expected behavior and is also the same behavior of the\n    // browser's Intl.NumberFormat. So this converter takes that and\n    // logs an error. NOTE: it is\n    // an application error if the value option is not a valid number.\n    if (formatValue === 'NaN') {\n      var summary = Translations.getTranslatedString(\n        'oj-converter.number.invalidNumberFormat.summary',\n        { value: value }\n      );\n      var detail = Translations.getTranslatedString('oj-converter.number.invalidNumberFormat.detail');\n      Logger.error(summary + ' ' + detail);\n    }\n    return formatValue;\n  };\n\n  /**\n   * In general, returns hint for the converter. For a IntlNumberConverter returned value is always null.\n   *\n   * @return {null} a hint describing the format the value is expected to be in.\n   * @memberof oj.IntlNumberConverter\n   * @export\n   * @instance\n   * @method getHint\n   */\n  IntlNumberConverter.prototype.getHint = function () {\n    // UX does not want any hint for numbers.\n    // return oj.Translations.getTranslatedString(\"oj-converter.hint.summary\",\n    //        {'exampleValue': this._getHintValue()});\n    // return IntlNumberConverter.superclass.getHint.call(this); // this asserts, and we don't want that.\n    return null;\n  };\n\n  /**\n   * Returns the options called with converter initialization.\n   * @return {Object} an object of options.\n   * @ojsignature {target:\"Type\", for: \"returns\",\n   *    value: \"oj.IntlNumberConverter.ConverterOptions\"}\n   * @memberof oj.IntlNumberConverter\n   * @export\n   * @instance\n   * @method getOptions\n   * @ojdeprecated {since: '11.0.0', description: 'Use resolvedOptions.'}\n   */\n  IntlNumberConverter.prototype.getOptions = function () {\n    return IntlNumberConverter.superclass.getOptions.call(this);\n  };\n\n  /**\n   * Parses a string value to return a Number, using the options this converter was initialized with.\n   *\n   * @param {string} value to parse\n   * @return {number|null} the parsed number or null if the value was null or an empty string. When\n   * the value is parsed as a percent its 1/100th part is returned.\n   *\n   * @throws {Error} a ConverterError both when parsing fails, or if the options provided during\n   * initialization cannot be resolved correctly.\n   * @memberof oj.IntlNumberConverter\n   * @export\n   * @instance\n   * @method parse\n   */\n  IntlNumberConverter.prototype.parse = function (value) {\n    var converterError;\n    var locale;\n    var localeElements;\n    var resolvedOptions;\n\n    // null and empty string values are ignored and not parsed. It\n    // undefined.\n    if (value == null || value === '') {\n      // check for undefined, null and \"\"\n      return null;\n    }\n\n    locale = Config.getLocale();\n    localeElements = LocaleData.__getBundle();\n    resolvedOptions = this.resolvedOptions();\n\n    try {\n      // we want to trim the value for leading spaces before and after\n      return this._getWrapped().parse(\n        oj$1.StringUtils.trim(value),\n        localeElements,\n        resolvedOptions,\n        locale\n      );\n    } catch (e) {\n      converterError = this._processConverterError(e, value);\n      throw converterError;\n    }\n  };\n\n  /**\n   * Returns an object literal with properties reflecting the number formatting options computed based\n   * on the options parameter. If options (or pattern) is not provided, the properties will be derived\n   * from the locale defaults.\n   *\n   * @return {Object} An object literal containing the resolved values for the following options. Some\n   * of these properties may not be present, indicating that the corresponding components will not be\n   * represented in the formatted output.\n   * <ul>\n   * <li><b>locale</b>: a String value with the language tag of the locale whose localization is used\n   * for formatting.</li>\n   * <li><b>style</b>: a String value. One of the allowed values - \"decimal\", \"currency\" or \"percent\".</li>\n   * <li><b>currency</b>: a String value.  an ISO 4217 alphabetic currency code. May be present only\n   *  when style is currency.</li>\n   * <li><b>currencyDisplay</b>: a String value. One of the allowed values - \"code\", \"symbol\", or\n   *  \"name\".</li>\n   * <li><b>numberingSystem</b>: a String value of the numbering system used. E.g. latn</li>\n   * <li><b>minimumIntegerDigits</b>: a non-negative integer Number value indicating the minimum\n   *  integer digits to be used.</li>\n   * <li><b>minimumFractionDigits</b>: a non-negative integer Number value indicating the minimum\n   *  fraction digits to be used.</li>\n   * <li><b>maximumFractionDigits</b>: a non-negative integer Number value indicating the maximum\n   *  fraction digits to be used.</li>\n   * <li><b>useGrouping</b>: a Boolean value indicating whether a grouping separator is used.</li>\n   * <li><b>lenientParse</b>: specifies if lenient parse is enabled or disabled. Allowed values: \"full\", \"none\".\n   * default is \"full\" which means lenient parse is enabled.</li>\n   * <li><b>separators</b>: - An object with 2 fields: 'decimal' and 'group'.</li>\n   *\n   * @throws a ConverterError when the options that the converter was initialized with are invalid.\n   * @ojsignature {target:\"Type\", for: \"returns\",\n   *    value: \"oj.IntlNumberConverter.ConverterOptions\"}\n   * @memberof oj.IntlNumberConverter\n   * @export\n   * @instance\n   * @method resolvedOptions\n   */\n  IntlNumberConverter.prototype.resolvedOptions = function () {\n    var converterError;\n    var locale = Config.getLocale();\n    var localeElements;\n\n    // options are resolved and cached for the current locale. when locale changes resolvedOptions\n    // is reevaluated as it contains locale specific info.\n    if (locale !== this._locale || !this._resolvedOptions) {\n      // leave this line unchanged so that we can test that LocaleData can also be accessed from the oj namespace.\n      localeElements = LocaleData.__getBundle();\n      try {\n        if (!localeElements) {\n          Logger.error('locale bundle for the current locale %s is unavailable', locale);\n          return {};\n        }\n\n        // cache if successfully resolved\n        this._resolvedOptions = this._getWrapped().resolvedOptions(\n          localeElements,\n          this.getOptions(),\n          locale\n        );\n        this._locale = locale;\n      } catch (e) {\n        converterError = this._processConverterError(e);\n        throw converterError;\n      }\n    }\n\n    return this._resolvedOptions;\n  };\n\n  /**\n   * Processes the error returned by the converter implementation and throws a ConverterError\n   * instance.\n   *\n   * FA is overriding our ojs/ojconverter-datetime bundle and needs to define this function\n   * or else they will get an error.\n   * Do not rename. TODO: Ideally we will remove the need for them to have to define this function.\n   * @param {Error} e\n   * @param {String|string|Number|number|Object=} value\n   * @throws an instance of ConverterError\n   * @private\n   */\n  IntlNumberConverter.prototype._processConverterError = function (e, value) {\n    var converterError;\n    var errorInfo = e.errorInfo;\n    var detail;\n    var resourceKey;\n    var summary;\n\n    if (errorInfo) {\n      var errorCode = errorInfo.errorCode;\n      var parameterMap = errorInfo.parameterMap;\n      oj$1.Assert.assertObject(parameterMap);\n\n      switch (errorCode) {\n        case 'optionTypesMismatch':\n        case 'optionTypeInvalid':\n          converterError = __ConverterUtilsI18n.IntlConverterUtils.__getConverterOptionError(\n            errorCode,\n            parameterMap\n          );\n          break;\n        case 'optionOutOfRange':\n          converterError = __ConverterUtilsI18n.IntlConverterUtils.__getConverterOptionError(\n            errorCode,\n            parameterMap\n          );\n          break;\n        case 'optionValueInvalid':\n          converterError = __ConverterUtilsI18n.IntlConverterUtils.__getConverterOptionError(\n            errorCode,\n            parameterMap\n          );\n          break;\n        case 'decimalFormatMismatch':\n          // The '{value}' does not match the expected number format\n          resourceKey = 'oj-converter.number.decimalFormatMismatch.summary';\n          break;\n        case 'currencyFormatMismatch':\n          // The {value} does not match the expected currency format\n          resourceKey = 'oj-converter.number.currencyFormatMismatch.summary';\n          break;\n        case 'percentFormatMismatch':\n          // The {value} does not match the expected currency format\n          resourceKey = 'oj-converter.number.percentFormatMismatch.summary';\n          break;\n        case 'unsupportedParseFormat':\n          // TODO: We'll be able to remove this exception when this bug is fixed post V1.1:\n          //  - implement parse() for short number converter\n          //\n          summary = Translations.getTranslatedString(\n            'oj-converter.number.shortLongUnsupportedParse.summary'\n          );\n          detail = Translations.getTranslatedString(\n            'oj-converter.number.shortLongUnsupportedParse.detail'\n          );\n          converterError = new ojvalidationError.ConverterError(summary, detail);\n          break;\n        default:\n          break;\n      }\n\n      // The formatMismatch errors need a hint\n      if (resourceKey) {\n        summary = Translations.getTranslatedString(resourceKey, {\n          value: value || parameterMap.value,\n          format: parameterMap.format\n        });\n\n        // _getHintValue is smart. It uses the converter's 'format' function\n        //  to get the example format to show the end user.\n        detail = Translations.getTranslatedString('oj-converter.hint.detail', {\n          exampleValue: this._getHintValue()\n        });\n\n        converterError = new ojvalidationError.ConverterError(summary, detail);\n      }\n    }\n\n    if (!converterError) {\n      // An error we are unfamiliar with. Get the message and set as detail\n      summary = e.message; // TODO: What should the summary be when it's missing??\n      detail = e.message;\n      converterError = new ojvalidationError.ConverterError(summary, detail);\n    }\n\n    return converterError;\n  };\n\n  // Returns the hint value. It uses the converter's format function to return a formatted\n  // example. For example, if the converter's style is decimal and decimalFormat is short,\n  // this.format(12345.98765) returns 12K, and we show 12K in the error message as an example\n  // of what they should type in.\n  // FA is overriding our ojs/ojconverter-datetime bundle and needs to define this function\n  // or else they will get an error.\n  // Do not rename. TODO: Ideally we will remove the need for them to have to define this function.\n  IntlNumberConverter.prototype._getHintValue = function () {\n    var value = '';\n    try {\n      // use .format to get a real example to show the user what format they can type in to the field.\n      value = this.format(12345.98765);\n    } catch (e) {\n      if (e instanceof ojvalidationError.ConverterError) {\n        // Something went wrong and we don't have a way to retrieve a valid value.\n        value = '';\n        Logger.error('error retrieving hint value in format');\n      }\n    }\n\n    // returns the formatted value of 12345.98765\n    return value;\n  };\n\n  exports.IntlNumberConverter = IntlNumberConverter;\n  exports.NumberConverter = NumberConverter;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n});\n","/**\n * @license\n * Copyright (c) 2014, 2023, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\ndefine(['exports', 'ojs/ojlogger', 'ojs/ojthemeutils', '@oracle/oraclejet-preact/UNSAFE_IntlDateTime'], function (exports, Logger, ojthemeutils, UNSAFE_IntlDateTime) { 'use strict';\n\n    let dateTimePrefs = {};\n    const setDateTimePreferences = (options) => {\n        if (Object.isFrozen(dateTimePrefs))\n            return;\n        if (!hasValidOptions(options)) {\n            return;\n        }\n        dateTimePrefs = options;\n        adjustAndFreeze();\n    };\n    const getDateTimePreferences = () => {\n        adjustAndFreeze();\n        return dateTimePrefs;\n    };\n    const hasValidOptions = (options) => {\n        const timeStylePattern = options.timeStyle?.short?.pattern;\n        const dateStylePattern = options.dateStyle?.short?.pattern;\n        if ((timeStylePattern && !dateStylePattern) || (dateStylePattern && !timeStylePattern)) {\n            Logger.error(`timeStyle.short.pattern and dateStyle.short.pattern must be set together.`);\n            return false;\n        }\n        if (isEmpty(options)) {\n            Logger.error(`setDateTimePreferences options must not be empty.`);\n            return false;\n        }\n        return true;\n    };\n    const adjustAndFreeze = () => {\n        if (!Object.isFrozen(dateTimePrefs)) {\n            if (isEmpty(dateTimePrefs.dateStyle) && isEmpty(dateTimePrefs.timeStyle)) {\n                dateTimePrefs.dateStyle = getDateStyleShortYearFromTheme();\n            }\n            Object.freeze(dateTimePrefs);\n        }\n    };\n    const getDateStyleShortYearFromTheme = () => {\n        const themeOptionDefaults = ojthemeutils.parseJSONFromFontFamily('oj-inputdatetime-option-defaults') || {};\n        let yearFormat;\n        if (themeOptionDefaults.converterYear === 'numeric' ||\n            themeOptionDefaults.converterYear === '2-digit') {\n            yearFormat = themeOptionDefaults.converterYear;\n        }\n        else {\n            yearFormat = 'numeric';\n        }\n        return { short: { year: yearFormat } };\n    };\n    const isEmpty = (obj) => {\n        return !obj || Object.keys(obj).length === 0;\n    };\n\n    let numberPrefs = {};\n    const setNumberPreferences = (options) => {\n        if (Object.isFrozen(numberPrefs))\n            return;\n        if (!hasValidOptions$1(options)) {\n            return;\n        }\n        numberPrefs = options;\n        Object.freeze(numberPrefs);\n    };\n    const getNumberPreferences = () => {\n        return numberPrefs;\n    };\n    const hasValidOptions$1 = (options) => {\n        const currencyStyleOptions = options.style?.currency;\n        const decimalStyleOptions = options.style?.decimal;\n        let valid = true;\n        if (currencyStyleOptions && !isGroupAndDecimalBothSet(currencyStyleOptions.separators)) {\n            Logger.error(`style.currency.separators group and decimal must be set together.`);\n            valid = false;\n        }\n        if (decimalStyleOptions && !isGroupAndDecimalBothSet(decimalStyleOptions.separators)) {\n            Logger.error(`style.decimal.separators group and decimal must be set together.`);\n            valid = false;\n        }\n        if (isEmpty$1(options) || (isEmpty$1(currencyStyleOptions) && isEmpty$1(decimalStyleOptions))) {\n            Logger.error(`setNumberPreferences options must not be empty.`);\n            valid = false;\n        }\n        return valid;\n    };\n    const isGroupAndDecimalBothSet = (separators) => {\n        if (!separators) {\n            return false;\n        }\n        if (!(separators.decimal && separators.group)) {\n            return false;\n        }\n        return true;\n    };\n    const isEmpty$1 = (obj) => {\n        return !obj || Object.keys(obj).length === 0;\n    };\n\n    const getMergedNumberPreferencesWithOptions = (cnvOptions) => {\n        const preferenceOptions = getNumberPreferences();\n        const hasNoPreferences = !preferenceOptions || Object.keys(preferenceOptions).length === 0;\n        if (hasNoPreferences) {\n            return cnvOptions;\n        }\n        const cnvOptionsHasSeparators = !isEmpty$2(cnvOptions?.separators);\n        if (cnvOptionsHasSeparators) {\n            return cnvOptions;\n        }\n        const userPrefCurrencySeparators = preferenceOptions.style?.currency?.separators;\n        const userPrefDecimalSeparators = preferenceOptions.style?.decimal?.separators;\n        const hasCurrencySeparators = !isEmpty$2(userPrefCurrencySeparators);\n        const hasDecimalSeparators = !isEmpty$2(userPrefDecimalSeparators);\n        if (!hasCurrencySeparators && !hasDecimalSeparators) {\n            return cnvOptions;\n        }\n        if ((cnvOptions?.style === undefined || cnvOptions.style === 'decimal') && hasDecimalSeparators) {\n            return mergeOptions(userPrefDecimalSeparators, cnvOptions);\n        }\n        if (cnvOptions?.style === 'currency' && hasCurrencySeparators) {\n            return mergeOptions(userPrefCurrencySeparators, cnvOptions);\n        }\n        return cnvOptions;\n    };\n    const mergeOptions = (prefSeparators, cnvOptions) => {\n        let mo = {};\n        const separators = {\n            separators: prefSeparators\n        };\n        Object.assign(mo, separators, cnvOptions);\n        return mo;\n    };\n    const isEmpty$2 = (obj) => {\n        return !obj || Object.keys(obj).length === 0;\n    };\n\n    const getMergedDateTimePreferencesWithOptions = (cnvOptions) => {\n        const preferenceOptions = getDateTimePreferences();\n        const hasNoPreferences = !preferenceOptions || Object.keys(preferenceOptions).length === 0;\n        if (hasNoPreferences) {\n            return cnvOptions;\n        }\n        const userPrefPattern = _getPreferencesPattern(preferenceOptions, cnvOptions);\n        const dateStyleShortYearPref = preferenceOptions?.dateStyle?.short?.year;\n        const dateStyleShortYearOption = userPrefPattern === undefined && dateStyleShortYearPref\n            ? { dateStyleShortYear: dateStyleShortYearPref }\n            : undefined;\n        const timeZonePref = preferenceOptions.timeZone;\n        const userPrefTimezone = timeZonePref ? { timeZone: timeZonePref } : {};\n        let mo = {};\n        Object.assign(mo, userPrefPattern ?? dateStyleShortYearOption, userPrefTimezone, cnvOptions);\n        return mo;\n    };\n    const formatWithYearFormat = (formatInstance, yearInstance, value) => {\n        return UNSAFE_IntlDateTime.formatWithYearFormat(formatInstance, yearInstance, value);\n    };\n    const _getPreferencesPattern = (preferenceOptions, cnvOptions) => {\n        const noCnvOptions = !cnvOptions || Object.keys(cnvOptions).length === 0;\n        if (noCnvOptions) {\n            return _getNoCvtrOptionsPrefPattern(preferenceOptions);\n        }\n        if (cnvOptions.dateStyle !== 'short' && cnvOptions.timeStyle !== 'short') {\n            return undefined;\n        }\n        let datePattern;\n        let timePattern;\n        if (cnvOptions.dateStyle === 'short' && preferenceOptions.dateStyle?.short?.pattern) {\n            datePattern = _getShortPattern(preferenceOptions.dateStyle);\n        }\n        if (cnvOptions.timeStyle === 'short') {\n            timePattern = _getShortPattern(preferenceOptions.timeStyle);\n        }\n        const completePattern = _combinePatternsWithSpace(datePattern, timePattern);\n        return completePattern ? { pattern: completePattern } : undefined;\n    };\n    const _getNoCvtrOptionsPrefPattern = (preferenceOptions) => {\n        const datePattern = _getShortPattern(preferenceOptions.dateStyle);\n        return datePattern ? { pattern: datePattern } : undefined;\n    };\n    const _getShortPattern = (prefs) => {\n        return prefs?.short?.pattern;\n    };\n    const _combinePatternsWithSpace = (datePattern, timePattern) => {\n        if (datePattern && timePattern) {\n            return `${datePattern} ${timePattern}`;\n        }\n        return timePattern || datePattern || undefined;\n    };\n\n    exports.formatWithYearFormat = formatWithYearFormat;\n    exports.getDateTimePreferences = getDateTimePreferences;\n    exports.getMergedDateTimePreferencesWithOptions = getMergedDateTimePreferencesWithOptions;\n    exports.getMergedNumberPreferencesWithOptions = getMergedNumberPreferencesWithOptions;\n    exports.getNumberPreferences = getNumberPreferences;\n    exports.setDateTimePreferences = setDateTimePreferences;\n    exports.setNumberPreferences = setNumberPreferences;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n});\n","/**\n * @license\n * Copyright (c) 2014, 2023, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\ndefine(['ojs/ojcore-base', 'jquery'], function (oj, $) { 'use strict';\n\n  oj = oj && Object.prototype.hasOwnProperty.call(oj, 'default') ? oj['default'] : oj;\n  $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n\n  /**\n   * Constructs an immutable instance of Converter.\n   * @param {Object=} options an object literal used to provide an optional information to\n   * initialize the converter.<p>\n   * @export\n   * @ojsignature {target: \"Type\", value: \"interface Converter<V>\",\n   *               genericParameters: [{\"name\": \"V\", \"description\": \"Type of value to be converted. Parse will\n   *                 convert string to this type and format will format this type to string\"}]}\n   * @ojtsmodule\n   * @name oj.Converter\n   * @interface\n   * @since 0.6.0\n   */\n  const Converter = function (options) {\n    this.Init(options);\n  };\n\n  // Subclass from oj.Object\n  oj.Object.createSubclass(Converter, oj.Object, 'oj.Converter');\n\n  /**\n   * Initializes converter instance with the set options\n   * @param {Object=} options an object literal used to provide an optional information to\n   * initialize the converter.<p>\n   * @export\n   * @ignore\n   * @memberof oj.Converter\n   */\n  Converter.prototype.Init = function (options) {\n    Converter.superclass.Init.call(this);\n    // should we make options truly immutable? non-configurable, non-enumerable, non-writable\n    // Object.defineProperty(oj.Converter.prototype, \"_options\", {value: options});\n    this._options = options;\n  };\n\n  /**\n   * Returns a hint that describes the converter format expected.\n   * @method getHint\n   * @return {string|null} a hint describing the format the value is expected to be in.\n   * @memberof oj.Converter\n   * @ojsignature {target: \"Type\", value: \"?(): string|null\"}\n   * @instance\n   */\n\n  /**\n   * Returns the options called with converter initialization.\n   * @method getOptions\n   * @return {Object} an object of options.\n   * @ojsignature {target: \"Type\", value: \"?(): object\"}\n   * @memberof oj.Converter\n   * @instance\n   * @export\n   */\n  Converter.prototype.getOptions = function () {\n    return this._options || {};\n  };\n\n  /**\n   * Parses a String value using the options provided.\n   * @method parse\n   * @param {string} value to parse\n   * @return {any} the parsed value.\n   * @ojsignature [\n   *                {target: \"Type\", value: \"V|null\", for: \"returns\"}\n   *              ]\n   * @throws {Error} if parsing fails\n   * @memberof oj.Converter\n   * @instance\n   */\n\n  /**\n   * Formats the value using the options provided.\n   *\n   * @param {any} value the value to be formatted for display\n   * @return {(string|null)} the localized and formatted value suitable for display\n   * @throws {Error} if formatting fails.\n   * @method format\n   * @ojsignature {target: \"Type\", value: \"V\", for: \"value\"}\n   * @memberof oj.Converter\n   * @instance\n   */\n\n  /**\n   * Returns an object literal with locale and formatting options computed during initialization of\n   * the object. If options was not provided at the time of initialization, the properties will be\n   * derived from the locale defaults.\n   * @return {Object} an object of resolved options.\n   * @ojsignature {target: \"Type\", value: \"?(): object\"}\n   * @export\n   * @memberof oj.Converter\n   * @instance\n   * @method resolvedOptions\n   */\n  Converter.prototype.resolvedOptions = function () {\n    var resolved = {};\n    // returns a clone of this._options\n    $.extend(resolved, this._options);\n\n    return resolved;\n  };\n\n  return Converter;\n\n});\n","/**\n * @license\n * Copyright (c) 2014, 2023, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\ndefine(['exports', 'ojs/ojcore-base', 'ojs/ojtranslation', 'jquery', 'ojs/ojconverterutils', 'ojs/ojvalidation-error'], function (exports, oj, Translations, $, ConverterUtils, ojvalidationError) { 'use strict';\n\n  oj = oj && Object.prototype.hasOwnProperty.call(oj, 'default') ? oj['default'] : oj;\n  $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n  ConverterUtils = ConverterUtils && Object.prototype.hasOwnProperty.call(ConverterUtils, 'default') ? ConverterUtils['default'] : ConverterUtils;\n\n  /*\n   DESCRIPTION\n   OraI18nUtils provides helper functions for converter objects.\n\n   PRIVATE CLASSES\n   <list of private classes defined - with one-line descriptions>\n\n   NOTES\n   <other useful comments, qualifications, etc.>\n\n   * @namespace oj.OraI18nUtils\n   * @classdesc Helper functions for converter objects\n   * @ignore\n   * @export\n   * @since 0.6.0\n   * @ojtsnoexport\n   */\n\n  const OraI18nUtils = {};\n  // supported numbering systems\n  OraI18nUtils.numeringSystems = {\n    latn: '\\u0030\\u0031\\u0032\\u0033\\u0034\\u0035\\u0036\\u0037\\u0038\\u0039',\n    arab: '\\u0660\\u0661\\u0662\\u0663\\u0664\\u0665\\u0666\\u0667\\u0668\\u0669',\n    thai: '\\u0e50\\u0e51\\u0e52\\u0e53\\u0e54\\u0e55\\u0e56\\u0e57\\u0e58\\u0e59'\n  };\n\n  OraI18nUtils.regexTrim = /^\\s+|\\s+$|\\u200f|\\u200e/g;\n  OraI18nUtils.regexTrimNumber = /\\s+|\\u200f|\\u200e/g;\n  OraI18nUtils.regexTrimRightZeros = /0+$/g;\n  OraI18nUtils.zeros = ['0', '00', '000'];\n  // ISO 8601 string accepted values:\n  // -date only: YYYY or YYYY-MM or YYYY-MM-dd\n  // -time only without timezone: Thh:mm or Thh:mm:ss or Thh:mm:ss.SSS\n  // -time only with timezone: any of the time values above followed by any of the following:\n  // Z or +/-hh:mm or +/-hhmm or +/-hh\n  // -date time: any of the date values followed by any of the time values\n  OraI18nUtils._ISO_DATE_REGEXP =\n    /^[+-]?\\d{4}(?:-\\d{2}(?:-\\d{2})?)?(?:T\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d{1,3})?)?(Z|[+-]\\d{2}(?::?\\d{2})?)?)?$|^T\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d{1,3})?)?(Z|[+-]\\d{2}(?::?\\d{2})?)?$/;\n  /**\n   * Returns the timezone offset between UTC and the local time in Etc/GMT[+-]h syntax.\n   * <p>\n   * The offset is positive if the local timezone is behind UTC and negative if\n   * it is ahead. The offset range is between Etc/GMT-14 and Etc/GMT+12 (UTC-12 and UTC+14)\n   * Examples:\n   * 1- The local time is UTC-7 (Pacific Daylight Time):\n   * OraI18nUtils. getLocalTimeZoneOffset() will return the string \"Etc/GMT+7\"\n   * 2- The local time is UTC+1 (Central European Standard Time):\n   * OraI18nUtils. getLocalTimeZoneOffset() will return the string \"Etc/GMT-1\"\n   * </p>\n   * <p>\n   * NOTE: Since JET v12.0.0, the IntlDateTimeConverter will fallback to the local system time zone\n   * if no timeZone is in the options.\n   * So instead of using this API to get a local timezone offset to pass the converter,\n   * you should not set any timeZone in the converter options.\n   * </p>\n   * @param {Date=} date optional Date object. If not present return the local time zone\n   * offset of the current date, otherwise return the local time zone offset at the\n   * particular date.\n   * @returns {string}\n   * @memberof oj.OraI18nUtils\n   * @method getLocalTimeZoneOffset\n   */\n  OraI18nUtils.getLocalTimeZoneOffset = function (date) {\n    var d = date || new Date();\n    var offset = d.getTimezoneOffset();\n\n    // getTimeStringFromOffset recently changed to return 'z' for offset 0, and we don't want to return that from this method.\n    // this code will still work if getTimeStringFromOffset decides not to return 'z' for offset 0.\n    return offset !== 0\n      ? OraI18nUtils.getTimeStringFromOffset('Etc/GMT', offset, false, false)\n      : 'Etc/GMT+0';\n  };\n\n  /*\n   * Will return timezone if it exists.\n   */\n  // This private method is not called, commenting out for now to remove it from code coverage calculations\n  // OraI18nUtils._getTimeZone = function (isoString)\n  // {\n  //  if (!isoString || typeof isoString !== \"string\")\n  //  {\n  //    return null;\n  //  }\n  //  var match = OraI18nUtils._ISO_DATE_REGEXP.exec(isoString);\n  //  //make sure it is iso string\n  //  if (match === null)\n  //  {\n  //    OraI18nUtils._throwInvalidISOString(isoString);\n  //  }\n  //  if (match[1] !== undefined)\n  //    return match[1];\n  //  return null;\n  // };\n\n  /**\n   * <p>Returns a local ISO string provided a Date object.\n   * This method can be used to convert a moment in time or a local ISO string into\n   * a local ISO string. It can also be used to convert any Date object into local ISO\n   * string.</p>\n   * Examples below are where the local (user's system) time zone is UTC-06:00<br>\n   * dateToLocalIso(new Date('2021-06-04T00:00:00-04:00')); -->'2021-06-03T22:00:00'<br>\n   * dateToLocalIso(new Date('2021-06-04T02:30:00Z')); -->'2021-06-03T20:30:00'<br>\n   * In this example the input ISO string is local, the output is the same:<br>\n   * dateToLocalIso(new Date('2021-06-04T02:30:00')); -->'2021-06-04T02:30:00'<br>\n   * In this example we just want to convert a Date object:<br>\n   * dateToLocalIso(new Date());<br>\n   *\n   * @param {Date} _date\n   * @returns {string} isoString\n   * @export\n   * @since 0.7.0\n   * @memberof oj.OraI18nUtils\n   * @method dateToLocalIso\n   */\n  OraI18nUtils.dateToLocalIso = function (_date) {\n    var date = _date;\n    if (typeof date === 'number') {\n      date = new Date(date);\n    }\n    var isoStr =\n      OraI18nUtils.padZeros(date.getFullYear(), 4) +\n      '-' +\n      OraI18nUtils.padZeros(date.getMonth() + 1, 2) +\n      '-' +\n      OraI18nUtils.padZeros(date.getDate(), 2) +\n      'T' +\n      OraI18nUtils.padZeros(date.getHours(), 2) +\n      ':' +\n      OraI18nUtils.padZeros(date.getMinutes(), 2) +\n      ':' +\n      OraI18nUtils.padZeros(date.getSeconds(), 2);\n    if (date.getMilliseconds() > 0) {\n      isoStr += '.' + OraI18nUtils.trimRightZeros(OraI18nUtils.padZeros(date.getMilliseconds(), 3));\n    }\n    return isoStr;\n  };\n\n  /**\n   * <p>Returns the date only portion of a local ISO string provided a Date object.\n   * This method can be used to convert a moment in time ISO string into a local\n   * ISO string and get the date part of it. This method is useful if you are storing\n   * your dates as a moment in time and you want to use it in a date only component,\n   * like oj-input-date, that shows the date in the timezone of the user's local system.</p>\n   * Examples where local time zone offset is UTC-06:00<br>\n   * dateToLocalIsoDateString(new Date('2021-06-04T00:00:00-04:00')); -->'2021-06-03'<br>\n   * dateToLocalIsoDateString(new Date('2021-06-04T02:30:00Z')); -->'2021-06-03'<br>\n   *\n   * @param {Date} date\n   * @returns {string} date portion only of the ISO String\n   * @export\n   * @since 12.0.0\n   * @memberof oj.OraI18nUtils\n   * @method dateToLocalIsoDateString\n   */\n  OraI18nUtils.dateToLocalIsoDateString = function (date) {\n    var isoStr = OraI18nUtils.dateToLocalIso(date);\n    var parts = isoStr.split('T');\n    return parts[0];\n  };\n\n  /**\n   * @memberof oj.OraI18nUtils\n   * @method partsToIsoString\n   */\n  OraI18nUtils.partsToIsoString = function (parts) {\n    var isoStr =\n      OraI18nUtils.padZeros(parts[0], 4) +\n      '-' +\n      OraI18nUtils.padZeros(parts[1], 2) +\n      '-' +\n      OraI18nUtils.padZeros(parts[2], 2) +\n      'T' +\n      OraI18nUtils.padZeros(parts[3], 2) +\n      ':' +\n      OraI18nUtils.padZeros(parts[4], 2) +\n      ':' +\n      OraI18nUtils.padZeros(parts[5], 2);\n    if (parts[6] > 0) {\n      isoStr += '.' + OraI18nUtils.trimRightZeros(OraI18nUtils.padZeros(parts[6], 3));\n    }\n    return isoStr;\n  };\n\n  /**\n   * Returns a local Date object from a local ISO string. This method is only meant\n   * to work with local ISO strings. If the input ISO string contain Z or offset,\n   * they will be ignored.\n   * @param {string} isoString\n   * @memberof oj.OraI18nUtils\n   * @method isoToLocalDate\n   */\n  OraI18nUtils.isoToLocalDate = function (isoString) {\n    if (!isoString || typeof isoString !== 'string') {\n      return null;\n    }\n    return this._isoToLocalDateIgnoreTimezone(isoString);\n  };\n\n  OraI18nUtils._isoToLocalDateIgnoreTimezone = function (isoString) {\n    var datetime = OraI18nUtils._IsoStrParts(isoString);\n    var date = new Date(\n      datetime[0],\n      datetime[1] - 1,\n      datetime[2],\n      datetime[3],\n      datetime[4],\n      datetime[5],\n      datetime[6]\n    );\n    // As per the documentation:\n    // new Date(year, monthIndex [, day [, hours [, minutes [, seconds [, milliseconds]]]]]);\n    // year - Integer value representing the year and\n    // values from 0 to 99 map to the years 1900 to 1999; all other values are the actual year.\n    // Use Date.prototype.setFullYear to create dates between the years 0 and 99.\n    date.setFullYear(datetime[0]);\n    return date;\n  };\n\n  OraI18nUtils._IsoStrParts = function (isoString) {\n    var tst = OraI18nUtils._ISO_DATE_REGEXP.test(isoString);\n    if (tst === false) {\n      OraI18nUtils._throwInvalidISOStringSyntax(isoString);\n    }\n    var splitted = isoString.split('T');\n    var tIndex = isoString.indexOf('T');\n    var today = new Date();\n    var i;\n    var isBC = false;\n    var datetime = [today.getFullYear(), today.getMonth() + 1, today.getDate(), 0, 0, 0, 0];\n\n    if (splitted[0] !== '') {\n      // contains date portion\n      // test if date is BC, year is negative\n      if (OraI18nUtils.startsWith(splitted[0], '-')) {\n        splitted[0] = splitted[0].substr(1);\n        isBC = true;\n      }\n      var dateSplitted = splitted[0].split('-');\n      for (i = 0; i < dateSplitted.length; i++) {\n        var val = parseInt(dateSplitted[i], 10);\n        // validate month\n        if (i === 1) {\n          if (val < 1 || val > 12) {\n            OraI18nUtils._throwInvalidISOStringRange(isoString, 'month', val, 1, 12);\n          }\n        }\n        // validate day\n        if (i === 2) {\n          var nbDays = OraI18nUtils._getDaysInMonth(datetime[0], datetime[1] - 1);\n          if (val < 1 || val > nbDays) {\n            OraI18nUtils._throwInvalidISOStringRange(isoString, 'day', val, 1, nbDays);\n          }\n        }\n        datetime[i] = val;\n      }\n      if (isBC) {\n        datetime[0] = -datetime[0];\n      }\n    }\n\n    if (tIndex !== -1) {\n      var milliSecSplitted = splitted[1].split('.'); // contain millseconds\n      var timeSplitted = milliSecSplitted[0].split(':'); // contain hours, minutes, seconds\n\n      for (i = 0; i < timeSplitted.length; i++) {\n        var tVal = parseInt(timeSplitted[i], 10);\n        // validate hour\n        if (i === 0) {\n          if (tVal < 0 || tVal > 24) {\n            OraI18nUtils._throwInvalidISOStringRange(isoString, 'hour', tVal, 0, 24);\n          }\n        }\n        // validate minute\n        if (i === 1) {\n          if (tVal < 0 || tVal > 59) {\n            OraI18nUtils._throwInvalidISOStringRange(isoString, 'minute', tVal, 0, 59);\n          }\n        }\n        // validate second\n        if (i === 2) {\n          if (tVal < 0 || tVal > 59) {\n            OraI18nUtils._throwInvalidISOStringRange(isoString, 'second', tVal, 0, 59);\n          }\n        }\n        datetime[3 + i] = tVal;\n      }\n\n      if (milliSecSplitted.length === 2 && milliSecSplitted[1]) {\n        datetime[6] = parseInt(OraI18nUtils.zeroPad(milliSecSplitted[1], 3, false), 10);\n      }\n    }\n    return datetime;\n  };\n\n  /**\n   * @memberof oj.OraI18nUtils\n   * @method getISOStrFormatInfo\n   */\n  OraI18nUtils.getISOStrFormatInfo = function (isoStr) {\n    var res = {\n      format: null,\n      dateTime: null,\n      timeZone: '',\n      isoStrParts: null\n    };\n    var exe = OraI18nUtils._ISO_DATE_REGEXP.exec(isoStr);\n\n    if (exe === null) {\n      OraI18nUtils._throwInvalidISOStringSyntax(isoStr);\n    }\n    if (exe && exe[1] === undefined && exe[2] === undefined) {\n      res.format = 'local';\n      res.dateTime = isoStr;\n      res.isoStrParts = OraI18nUtils._IsoStrParts(res.dateTime);\n      return res;\n    }\n    res.timeZone = exe[1] !== undefined ? exe[1] : exe[2];\n    if (res.timeZone === 'Z') {\n      res.format = 'zulu';\n    } else {\n      res.format = 'offset';\n    }\n    var isoStrLen = isoStr.length;\n    var timeZoneLen = res.timeZone.length;\n    res.dateTime = isoStr.substring(0, isoStrLen - timeZoneLen);\n    res.isoStrParts = OraI18nUtils._IsoStrParts(res.dateTime);\n    return res;\n  };\n\n  /**\n   * Returns the format type of the isoStr: 'local', 'zulu' or 'offset',\n   * or throw invalidISOStringSytax error\n   * @param {string} isoStr isoString\n   * @returns {'local'|'zulu'|'offset'} isoString format: 'local', 'zulu', or 'offset'\n   * @throws Error\n   * @memberof oj.OraI18nUtils\n   * @method getISOStrFormatType\n   */\n  OraI18nUtils.getISOStrFormatType = function (isoStr) {\n    let format;\n    const exe = OraI18nUtils._ISO_DATE_REGEXP.exec(isoStr);\n\n    if (exe === null) {\n      OraI18nUtils._throwInvalidISOStringSyntax(isoStr);\n    }\n    if (exe && exe[1] === undefined && exe[2] === undefined) {\n      format = 'local';\n      return format;\n    }\n    let timeZone = exe[1] !== undefined ? exe[1] : exe[2];\n    if (timeZone === 'Z') {\n      format = 'zulu';\n    } else {\n      format = 'offset';\n    }\n    return format;\n  };\n\n  // This private method is not called, commenting out for now to remove it from code coverage calculations\n  // OraI18nUtils._throwTimeZoneNotSupported = function () {\n  //  var msg, error, errorInfo;\n  //  msg = \"time zone is not supported\";\n  //  error = new Error(msg);\n  //  errorInfo = {\n  //    'errorCode': 'timeZoneNotSupported'\n  //  };\n  //  error['errorInfo'] = errorInfo;\n  //  throw error;\n  // };\n\n  OraI18nUtils._isLeapYear = function (y) {\n    if (y % 400 === 0) {\n      return true;\n    } else if (y % 100 === 0) {\n      return false;\n    } else if (y % 4 === 0) {\n      return true;\n    }\n    return false;\n  };\n\n  // Get days in month depending on month and leap year\n  OraI18nUtils._getDaysInMonth = function (y, m) {\n    switch (m) {\n      case 0:\n      case 2:\n      case 4:\n      case 6:\n      case 7:\n      case 9:\n      case 11:\n        return 31;\n      case 1:\n        if (OraI18nUtils._isLeapYear(y)) {\n          return 29;\n        }\n        return 28;\n      default:\n        return 30;\n    }\n  };\n\n  // throws RangeError(message: string, options?: {cause?: {code?:string, parameterMap?: Record<string, string>}})\n  OraI18nUtils._throwInvalidISOStringRange = function (\n    isoStr,\n    name,\n    displayValue,\n    displayLow,\n    displayHigh\n  ) {\n    var msg =\n      'The string ' +\n      isoStr +\n      ' is not a valid ISO 8601 string: ' +\n      displayValue +\n      ' is out of range.  Enter a value between ' +\n      displayLow +\n      ' and ' +\n      displayHigh +\n      ' for ' +\n      name;\n    const errorInfo = {\n      cause: {\n        code: 'isoStringOutOfRange',\n        parameterMap: {\n          isoStr: isoStr,\n          value: displayValue,\n          minValue: displayLow,\n          maxValue: displayHigh,\n          propertyName: name\n        }\n      }\n    };\n    const rangeError = new RangeError(msg, errorInfo);\n    throw rangeError;\n  };\n\n  // throws Error(message: string, options?: {cause?: {code?:string, parameterMap?: Record<string, string>}})\n  OraI18nUtils._throwInvalidISOStringSyntax = function (str) {\n    var msg = 'The string ' + str + ' is not a valid ISO 8601 string syntax.';\n    const e = new Error(msg, { cause: { code: 'invalidISOString', parameterMap: { isoStr: str } } });\n    throw e;\n  };\n\n  OraI18nUtils.trim = function (value) {\n    return (value + '').replace(OraI18nUtils.regexTrim, '');\n  };\n\n  OraI18nUtils.trimRightZeros = function (value) {\n    return (value + '').replace(OraI18nUtils.regexTrimRightZeros, '');\n  };\n\n  OraI18nUtils.trimNumber = function (value) {\n    var s = (value + '').replace(OraI18nUtils.regexTrimNumber, '');\n    return s;\n  };\n\n  OraI18nUtils.startsWith = function (value, pattern) {\n    return value.indexOf(pattern) === 0;\n  };\n\n  OraI18nUtils.toUpper = function (value) {\n    // \"he-IL\" has non-breaking space in weekday names.\n    return value.split('\\u00A0').join(' ').toUpperCase();\n  };\n\n  OraI18nUtils.padZeros = function (num, c) {\n    var s = num + '';\n    var isNegative = false;\n    if (num < 0) {\n      s = s.substr(1);\n      isNegative = true;\n    }\n    if (c > 1 && s.length < c) {\n      s = OraI18nUtils.zeros[c - 2] + s;\n      s = s.substr(s.length - c, c);\n    }\n    if (isNegative) {\n      s = '-' + s;\n    }\n    return s;\n  };\n\n  OraI18nUtils.zeroPad = function (str, count, left) {\n    var result = '' + str;\n\n    for (var l = result.length; l < count; l += 1) {\n      result = left ? '0' + result : result + '0';\n    }\n    return result;\n  };\n\n  /**\n   * @memberof oj.OraI18nUtils\n   * @method getTimeStringFromOffset\n   */\n  OraI18nUtils.getTimeStringFromOffset = function (prefix, offset, reverseSign, alwaysMinutes) {\n    var isNegative = reverseSign ? offset > 0 : offset < 0;\n    var absOffset = Math.abs(offset);\n    var hours = Math.floor(absOffset / 60);\n    var minutes = absOffset % 60;\n    var sign = isNegative ? '-' : '+';\n\n    if (alwaysMinutes) {\n      hours = OraI18nUtils.zeroPad(hours, 2, true);\n    }\n    var str = prefix + sign + hours;\n    if (minutes > 0 || alwaysMinutes) {\n      str += ':' + OraI18nUtils.zeroPad(minutes, 2, true);\n    }\n    return str;\n  };\n\n  /**\n   * get the numbering system key from the locale's unicode extension.\n   * Verify that the locale data has a numbers entry for it, if not return latn as default.\n   * @memberof oj.OraI18nUtils\n   * @method getNumberingSystemKey\n   */\n  OraI18nUtils.getNumberingSystemKey = function (localeElements, locale) {\n    if (locale === undefined) {\n      return 'latn';\n    }\n    var numberingSystemKey = OraI18nUtils.getNumberingExtension(locale);\n    var symbols = 'symbols-numberSystem-' + numberingSystemKey;\n    if (localeElements.numbers[symbols] === undefined) {\n      numberingSystemKey = 'latn';\n    }\n    return numberingSystemKey;\n  };\n\n  /**\n   * return the language part\n   * @memberof oj.OraI18nUtils\n   * @method getBCP47Lang\n   */\n  OraI18nUtils.getBCP47Lang = function (tag) {\n    var arr = tag.split('-');\n    return arr[0];\n  };\n\n  // return the region part. tag is lang or lang-region or lang-script or\n  // lang-script-region\n  OraI18nUtils.getBCP47Region = function (tag) {\n    var arr = tag.split('-');\n    if (arr.length === 3) {\n      return arr[2];\n    }\n    if (arr.length === 2) {\n      if (arr[1].length === 2) {\n        return arr[1];\n      }\n    }\n    return '001';\n  };\n\n  // get the unicode numbering system extension.\n  OraI18nUtils.getNumberingExtension = function (_locale) {\n    var locale = _locale || 'en-US';\n    var idx = locale.indexOf('-u-nu-');\n    var numbering = 'latn';\n    if (idx !== -1) {\n      numbering = locale.substr(idx + 6, 4);\n    }\n    return numbering;\n  };\n\n  OraI18nUtils.haveSamePropertiesLength = function (obj) {\n    return Object.keys(obj).length;\n  };\n\n  // cldr locale data start with \"main\" node.\n  // return the subnode under main.\n  OraI18nUtils.getLocaleElementsMainNode = function (bundle) {\n    var mainNode = bundle.main;\n    var keys = Object.keys(mainNode);\n    return mainNode[keys[0]];\n  };\n\n  // get the locale which is a subnode of \"main\".\n  OraI18nUtils.getLocaleElementsMainNodeKey = function (bundle) {\n    var mainNode = bundle.main;\n    var keys = Object.keys(mainNode);\n    return keys[0];\n  };\n\n  OraI18nUtils._toBoolean = function (value) {\n    if (typeof value === 'string') {\n      var s = value.toLowerCase().trim();\n      switch (s) {\n        case 'true':\n        case '1':\n          return true;\n        case 'false':\n        case '0':\n          return false;\n        default:\n          return value;\n      }\n    }\n    return value;\n  };\n  // Return a function getOption.\n  // The getOption function extracts the value of the property named\n  // property from the provided options object, converts it to the required type,\n  // checks whether it is one of a List of allowed values, and fills in a\n  // fallback value if necessary.\n  OraI18nUtils.getGetOption = function (options, getOptionCaller) {\n    if (options === undefined) {\n      throw new Error('Internal ' + getOptionCaller + ' error. Default options missing.');\n    }\n\n    var getOption = function (property, type, values, defaultValue) {\n      if (options[property] !== undefined) {\n        var value = options[property];\n        switch (type) {\n          case 'boolean':\n            value = OraI18nUtils._toBoolean(value);\n            break;\n          case 'string':\n            value = String(value);\n            break;\n          case 'number':\n            value = Number(value);\n            break;\n          default:\n            throw new Error('Internal error. Wrong value type.');\n        }\n        if (values !== undefined && values.indexOf(value) === -1) {\n          var expectedValues = [];\n          for (var i = 0; i < values.length; i++) {\n            expectedValues.push(values[i]);\n          }\n          var msg =\n            \"The value '\" +\n            options[property] +\n            \"' is out of range for '\" +\n            getOptionCaller +\n            \"' options property '\" +\n            property +\n            \"'. Valid values: \" +\n            expectedValues;\n          var rangeError = new RangeError(msg);\n          var errorInfo = {\n            errorCode: 'optionOutOfRange',\n            parameterMap: {\n              propertyName: property,\n              propertyValue: options[property],\n              propertyValueValid: expectedValues,\n              caller: getOptionCaller\n            }\n          };\n          rangeError.errorInfo = errorInfo;\n          throw rangeError;\n        }\n\n        return value;\n      }\n      return defaultValue;\n    };\n\n    return getOption;\n  };\n\n  /**\n   * matches a string to a reference string and returns the start and end indexes\n   * of the match in the referensed string. The locale and options arguments let\n   * applications specify the language whose sort order should be used and customize\n   * the behavior of the function.\n   *\n   * @param {string} str the reference string\n   * @param {string} pat The string against which the reference string is compared\n   * @param {string} locale a BCP 47 language tag\n   * @param {Object=} options Optional. An object with the following property:\n   * sensitivity:\n   *   Which differences in the strings should lead to non-zero result values. Possible values are:\n   *   \"base\": Only strings that differ in base letters compare as unequal. Examples: a ? b,  a = A.\n   *   \"accent\": Only strings that differ in base letters or accents and other diacritic marks compare as unequal. Examples: a ? b, , a = A.\n   *   \"case\": Only strings that differ in base letters or case compare as unequal. Examples: a ? b, a ? A.\n   *   \"variant\": Strings that differ in base letters, accents and other diacritic marks, or case compare as unequal.\n   *   The default is base.\n   * @return {Array|null} an array containing the start and end indexes of the match or null if there is no match.\n   */\n  OraI18nUtils.matchString = function (str, pat, locale, options) {\n    if (options === undefined) {\n      // eslint-disable-next-line no-param-reassign\n      options = { sensitivity: 'base', usage: 'sort' };\n    }\n    var getOption = OraI18nUtils.getGetOption(options, 'OraI18nUtils.matchString');\n    // eslint-disable-next-line no-param-reassign\n    options.usage = getOption('usage', 'string', ['sort', 'search'], 'sort');\n    // eslint-disable-next-line no-param-reassign\n    options.sensitivity = getOption(\n      'sensitivity',\n      'string',\n      ['base', 'accent', 'case', 'variant'],\n      'base'\n    );\n    var len = str.length;\n    var patLen = pat.length - 1;\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < 3; j++) {\n        var len2 = len - i;\n        len2 = Math.min(len2, patLen + j);\n        var str2 = str.substr(i, len2);\n        var res = str2.localeCompare(pat, locale, options);\n        if (res === 0) {\n          var end = i + (len2 - 1);\n          var ret = [i, end];\n          return ret;\n        }\n      }\n    }\n    return null;\n  };\n\n  var _DEFAULT_TIME_PORTION = 'T00:00:00.000';\n  var _DATE_TIME_KEYS = {\n    fullYear: { pos: 0, pad: 4 },\n    month: { pos: 1, pad: 2 },\n    date: { pos: 2, pad: 2 },\n    hours: { pos: 3, pad: 2 },\n    minutes: { pos: 4, pad: 2 },\n    seconds: { pos: 5, pad: 2 },\n    milliseconds: { pos: 6, pad: 3 },\n    timeZone: { pos: 7 }\n  };\n\n  /**\n   * Parses the isoString and returns a JavaScript Date object\n   *\n   * @param {string} isoString isoString to parse and to return Date of\n   * @return {Date} the parsed JavaScript Date Object\n   * @method isoToDate\n   * @ignore\n   */\n  OraI18nUtils.isoToDate = function (isoString) {\n    // note new Date w/ isoString in IE fails so need to use parsing from momentjs support\n    return new Date(this._normalizeIsoString(isoString));\n  };\n\n  /**\n   * Will return an updated toIsoString using the timePortion from the fromIsoString or from the default\n   * OraI18nUtils.DEFAULT_TIME_PORTION\n   *\n   * @private\n   * @param {string} fromIsoString isoString that may not be a complete isoString\n   * @param {string} toIsoString isoString that may not be a complete isoString\n   * @returns {string} modified toIsoString with original date portion and the time portion from the fromIsoString\n   * @since 1.1\n   * @method _copyTimeOver\n   */\n  OraI18nUtils._copyTimeOver = function (fromIsoString, toIsoString) {\n    if (!fromIsoString || !toIsoString) {\n      throw new Error('Provided invalid arguments');\n    }\n\n    // need to only normalize toIsoString, since copying only time from fromIsoString\n    var normalizedToIsoString = this._normalizeIsoString(toIsoString);\n\n    var fromTimeIndex = fromIsoString.indexOf('T');\n    var toTimeIndex = normalizedToIsoString.indexOf('T');\n    var toDatePortion = normalizedToIsoString.substring(0, toTimeIndex);\n    var fromTimePortion =\n      fromTimeIndex !== -1 ? fromIsoString.substring(fromTimeIndex) : _DEFAULT_TIME_PORTION;\n\n    return toDatePortion + fromTimePortion;\n  };\n\n  /**\n   * Clears the time portion of the isoString\n   *\n   * @private\n   * @param {string} isoString isoString that may not be a complete isoString\n   * @returns {string} an updated isoString\n   * @since 1.1\n   * @method _clearTime\n   */\n  OraI18nUtils._clearTime = function (isoString) {\n    return this._dateTime(isoString, { hours: 0, minutes: 0, seconds: 0, milliseconds: 0 });\n  };\n\n  /**\n   * Will accept an isoString and perform a get operation or a set operation depending on whether param is an Array\n   * or a JSON\n   *\n   * The keys for the get and set operation are defined in _DATE_TIME_KEYS.\n   *\n   * Note the handling of month starting with 0 in Date object and being 1 based in isoString will be handled by the function\n   * with the usage of doParseValue. Meaning when you doParseValue and you are getting the value it will automatically\n   * decrement the value and when you are setting the param it will check if the value is of number and if so will\n   * increment it.\n   *\n   * @private\n   * @param {string} isoString isoString that may not be a complete isoString\n   * @param {Array|Object} actionParam if an Array will be a get operation, if a JSON will be a set operation\n   * @param {boolean=} doParseValue whether one should parseInt the value during the get request\n   * @returns {Object|string} an Object when a get operation and a string when a set operation\n   * @since 1.1\n   * @method _dateTime\n   */\n  OraI18nUtils._dateTime = function (isoString, actionParam, doParseValue) {\n    if (!isoString || !actionParam) {\n      throw new Error('Invalid argument invocation');\n    }\n\n    var pos;\n    var value;\n    var retVal = null;\n    var dateTimeKeys = _DATE_TIME_KEYS;\n    var oraUtilsPadZero = this.padZeros;\n    var isoStringNormalized = this._normalizeIsoString(isoString); // note intentionally normalizing\n    var captured = /(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):?(\\d{2})?\\.?(\\d{3})?(.*)?/.exec(\n      isoStringNormalized\n    );\n\n    if (!captured) {\n      throw new Error('Unable to capture anything');\n    }\n\n    captured = captured.slice(1);\n\n    if (Array.isArray(actionParam)) {\n      retVal = {};\n\n      // means an array so perform a get operation\n      for (var i = 0, len = actionParam.length; i < len; i++) {\n        var key = actionParam[i];\n\n        if (key in dateTimeKeys) {\n          pos = dateTimeKeys[key].pos;\n          value = captured[pos];\n\n          if (doParseValue && key === 'timeZone') {\n            throw new Error('Dude you tried to ask timezone to be parsed');\n          }\n\n          if (doParseValue) {\n            var parsed = parseInt(value, 10);\n            retVal[key] = pos === 1 ? parsed - 1 : parsed; // since month is 0 based, though about having a callback but month only special\n          } else {\n            retVal[key] = value;\n          }\n        }\n      }\n    } else if ($.isPlainObject(actionParam)) {\n      var objKeys = Object.keys(actionParam);\n      for (var k = 0; k < objKeys.length; k++) {\n        var objKey = objKeys[k];\n        var dtKey = dateTimeKeys[objKey];\n        pos = dtKey.pos;\n        value = actionParam[objKey];\n\n        // special case for month again, 0 based so check if number and if so increment it\n        if (pos === 1 && typeof value === 'number') {\n          value += 1;\n        }\n        captured[pos] = dtKey.pad ? oraUtilsPadZero(value, dtKey.pad) : value;\n      }\n      // \"2015-02-02T21:12:30.255Z\"\n      retVal =\n        captured[0] +\n        '-' +\n        captured[1] +\n        '-' +\n        captured[2] +\n        'T' +\n        captured[3] +\n        ':' +\n        captured[4] +\n        ':' +\n        captured[5] +\n        (captured.length > 6 && captured[6]\n          ? '.' + captured[6] + (captured.length === 8 && captured[7] ? captured[7] : '')\n          : '');\n    }\n\n    return retVal;\n  };\n\n  /**\n   * So the problem is Jet uses incomplete isoString which causes issues in different browsers.\n   *\n   * For instance for a new Date().toISOString() => 2015-02-02T18:00:37.007Z\n   * ojInputDate stores 2015-02-02\n   * ojInputTime stores T18:00:37.007Z\n   *\n   * yet constructing new Date(val) on above causes different results or errors in different browsers, so\n   * this function is to normalize them. Note it is assumed that the point is creating the Date object from the\n   * normalized isoString. Meaning if both contain only the time portion today's date will appended to it.\n   *\n   * Here are the use cases\n   *\n   * @private\n   * @param {string} isoString isoString that may not be a complete isoString\n   * @returns {string} a normalized isoString\n   * @since 1.1\n   * @method _normalizeIsoString\n   */\n  OraI18nUtils._normalizeIsoString = function (isoString) {\n    if (!isoString) {\n      throw new Error('Provided invalid arguments');\n    }\n\n    var checkTime = function (timeValue) {\n      var splitted = timeValue.split(':');\n      if (splitted.length > 1) {\n        return timeValue;\n      }\n      // need at least hour + minute for proper parsing on browser except IE\n      return timeValue + ':00';\n    };\n\n    var todayIsoString = new Date().toISOString();\n    var todayDatePortion = todayIsoString.substring(0, todayIsoString.indexOf('T'));\n    var timeIndex = isoString.indexOf('T');\n    var datePortion = timeIndex === -1 ? isoString : isoString.substring(0, timeIndex);\n    var timePortion =\n      timeIndex !== -1 ? checkTime(isoString.substring(timeIndex)) : _DEFAULT_TIME_PORTION;\n\n    datePortion = datePortion || todayDatePortion;\n\n    return datePortion + timePortion;\n  };\n\n  /**\n   * formats a parameterized string\n   *\n   * @param {string} str string to be formatted. EX: \"{0} bytes\"\n   * @param {Array} params array of parameters to be substituted in the string\n   * @returns {string} The formatted string\n   * @since 4.0.0\n   */\n  OraI18nUtils.formatString = function (str, params) {\n    var len = params.length;\n    var result = str;\n\n    for (var i = 0; i < len; i++) {\n      var token = '{' + i + '}';\n      result = result.replace(token, params[i]);\n    }\n    return result;\n  };\n\n  /**\n   * converts an ISO string based on isoStrFormat and local system's time zone.\n   * if isoStrFormat is offset, it appends the local system's offset to the iso string.\n   * If isoStrFormat is zulu, it converts the ISO string to UTC and appends 'Z' to it.\n   * if isoStrFormat is local, it returns as is.\n   * For example if local system's timezone is America/Los_Angeles\n   * convertISOString('2021-01-01T13:00:00', 'offset') -->  2021-01-01T13:00:00-08:00\n   * convertISOString('2021-06-01T13:00:00', 'offset') -->  2021-06-01T13:00:00-07:00\n   * convertISOString('2021-01-01T13:00:00', 'zulu') -->  2021-01-01T21:00:00Z\n   * convertISOString('2021-06-01T13:00:00', 'zulu') -->  2021-06-01T20:00:00Z\n   * @param {string} iso  string to be formatted.\n   * @param {string} isoStrFormat, possible values: 'offset', 'zulu' or 'local'\n   * @returns {string} The formatted iso string\n   * @since 12.0.0\n   */\n  OraI18nUtils.convertISOString = function (isoStr, isoStrFormat) {\n    var formattedIsoStr = isoStr;\n    if (isoStrFormat === 'offset') {\n      var localOffset;\n      if (isoStr.startsWith('T')) {\n        localOffset = new Date().getTimezoneOffset();\n      } else {\n        localOffset = new Date(isoStr).getTimezoneOffset();\n      }\n      localOffset = OraI18nUtils.getTimeStringFromOffset('', localOffset, true, true);\n      formattedIsoStr += localOffset;\n    } else if (isoStrFormat === 'zulu') {\n      var parts = OraI18nUtils._IsoStrParts(isoStr);\n      var date = new Date(parts[0], parts[1] - 1, parts[2], parts[3], parts[4], parts[5], parts[6]);\n      formattedIsoStr =\n        OraI18nUtils.padZeros(date.getUTCFullYear(), 4) +\n        '-' +\n        OraI18nUtils.padZeros(date.getUTCMonth() + 1, 2) +\n        '-' +\n        OraI18nUtils.padZeros(date.getUTCDate(), 2) +\n        'T' +\n        OraI18nUtils.padZeros(date.getUTCHours(), 2) +\n        ':' +\n        OraI18nUtils.padZeros(date.getUTCMinutes(), 2) +\n        ':' +\n        OraI18nUtils.padZeros(date.getUTCSeconds(), 2);\n      if (date.getMilliseconds() > 0) {\n        formattedIsoStr +=\n          '.' + OraI18nUtils.trimRightZeros(OraI18nUtils.padZeros(date.getUTCMilliseconds(), 3));\n      }\n      formattedIsoStr += 'Z';\n    }\n    return formattedIsoStr;\n  };\n\n  /**\n   * Returns a person's initials\n   *\n   * @param {string=} firstName first name\n   * @param {string=} lastName last name or surname\n   * @returns {string|undefined} uppercase concatenation of first letter of first name and first letter\n   * of last name.\n   * There are the following special cases:\n   * - If the name is Arabic characters, it returns empty string.\n   * - If the name is Hindi characters, it returns the first letter of the first name.\n   * - If the name is Thai characters, it returns the first letter of the first name.\n   * - If the name is Korean characters, it returns the first name.\n   * - If the name is Japanese or Chinese characters, it returns the last name.\n   *\n   * @since 4.0.0\n   * @method getInitials\n   * @ignore\n   */\n  OraI18nUtils.getInitials = function (firstName, lastName) {\n    // We assume the names are valid. We test the first character only.\n    var c = 0;\n    var c1 = 0;\n    var u;\n    if (firstName !== undefined && firstName.length > 0) {\n      c = firstName.charCodeAt(0);\n    }\n\n    // Arabic characters. Return empty string\n    if (c >= 0x0600 && c <= 0x06ff) {\n      return '';\n    }\n\n    // Hindi characters. Return first letter of the first name\n    if (c >= 0x0900 && c <= 0x097f) {\n      return firstName.charAt(0);\n    }\n\n    // Thai characters. Return first letter of the first name\n    if (c >= 0x0e00 && c <= 0x0e7f) {\n      return firstName.charAt(0);\n    }\n\n    // Korean characters. Return first name\n    if (\n      (c >= 0x1100 && c <= 0x11ff) ||\n      (c >= 0x3130 && c <= 0x318f) ||\n      (c >= 0xa960 && c <= 0xa97f) ||\n      (c >= 0xac00 && c <= 0xd7ff)\n    ) {\n      return firstName;\n    }\n\n    // Japanese and Chinese characters. Return last name\n    if (lastName !== undefined && lastName.length > 0) {\n      c = lastName.charCodeAt(0);\n    }\n    if (\n      (c >= 0x2e80 && c <= 0x2fdf) ||\n      (c >= 0x3000 && c <= 0x312f) ||\n      (c >= 0x3190 && c <= 0x31ff) ||\n      (c >= 0x3300 && c <= 0x4dbf) ||\n      (c >= 0x4e00 && c <= 0x9fff) ||\n      (c >= 0xf900 && c <= 0xfaff)\n    ) {\n      return lastName;\n    }\n\n    // Handle surrogate characters for Japanese and Chinese characters.\n    if (c >= 0xd800 && c <= 0xdbff) {\n      if (lastName && lastName.length < 2) {\n        return '';\n      }\n      c1 = lastName.charCodeAt(1);\n      // c1 must be in DC00-DFFF range\n      if (c1 < 0xdc00 || c1 > 0xdfff) {\n        return '';\n      }\n      // Convert high and low surrogates into unicode scalar.\n      u = (c - 0xd800) * 0x400 + (c1 - 0xdc00) + 0x10000;\n      // test the blocks\n      if (\n        (u >= 0x1b000 && u <= 0x1b0ff) ||\n        (u >= 0x1f200 && u <= 0x1f2ff) ||\n        (u >= 0x20000 && u <= 0x2a6df) ||\n        (u >= 0x2a700 && u <= 0x2b73f) ||\n        (u >= 0x2b740 && u <= 0x2b81f) ||\n        (u >= 0x2b820 && u <= 0x2ceaf) ||\n        (u >= 0x2f800 && u <= 0x2fa1f)\n      ) {\n        return lastName;\n      }\n    }\n\n    // return default\n    c = '';\n    c1 = '';\n    if (firstName !== undefined && firstName.length > 0) {\n      c = firstName.charAt(0).toUpperCase();\n    }\n    if (lastName !== undefined && lastName.length > 0) {\n      c1 = lastName.charAt(0).toUpperCase();\n    }\n    return c + c1;\n  };\n\n  /**\n   * @export\n   * @classdesc Utility function for converters\n   * @hideconstructor\n   * @since 0.7.0\n   * @namespace oj.IntlConverterUtils\n   * @ojtsimport {module: \"ojconverter\", type:\"AMD\", importName: \"Converter\"}\n   * @ojtsimport {module: \"ojvalidationfactory-base\", type: \"AMD\", imported:[\"Validation\"]}\n   */\n  const IntlConverterUtils = {};\n\n  /**\n   * Parses the isoString and returns a JavaScript Date object\n   *\n   * @export\n   * @param {string} isoString isoString to parse and to return Date of\n   * @return {Date} the parsed JavaScript Date Object\n   * @memberof oj.IntlConverterUtils\n   * @method isoToDate\n   */\n  IntlConverterUtils.isoToDate = function (isoString) {\n    return OraI18nUtils.isoToDate(isoString);\n  };\n\n  /**\n   * Returns a local Date object from a local ISO string. This method is only meant\n   * to work with local ISO strings. If the input ISO string contain Z or offset,\n   * they will be ignored.\n   *\n   * @param {string} isoString an ISO 8601 string\n   * @returns {Date} localDate\n   * @export\n   * @since 0.7.0\n   * @memberof oj.IntlConverterUtils\n   * @method isoToLocalDate\n   */\n  IntlConverterUtils.isoToLocalDate = function (isoString) {\n    return OraI18nUtils.isoToLocalDate(isoString);\n  };\n\n  /**\n   * <p>Returns a local ISO string provided a Date object.\n   * This method can be used to convert a moment in time or a local ISO string into\n   * a local ISO string. It can also be used to convert any Date object into local ISO\n   * string.</p>\n   * Examples below are where the local (user's system) time zone is UTC-06:00<br>\n   * dateToLocalIso(new Date('2021-06-04T00:00:00-04:00')); -->'2021-06-03T22:00:00'<br>\n   * dateToLocalIso(new Date('2021-06-04T02:30:00Z')); -->'2021-06-03T20:30:00'<br>\n   * In this example the input ISO string is local, the output is the same:<br>\n   * dateToLocalIso(new Date('2021-06-04T02:30:00')); -->'2021-06-04T02:30:00'<br>\n   * In this example we just want to convert a Date object:<br>\n   * dateToLocalIso(new Date());<br>\n   *\n   * @param {Date} date\n   * @returns {string} isoString\n   * @export\n   * @since 0.7.0\n   * @memberof oj.IntlConverterUtils\n   * @method dateToLocalIso\n   */\n  IntlConverterUtils.dateToLocalIso = function (date) {\n    return OraI18nUtils.dateToLocalIso(date);\n  };\n\n  /**\n   * <p>Returns the date only portion of a local ISO string provided a Date object.\n   * This method can be used to convert a moment in time ISO string into a local\n   * ISO string and get the date part of it. This method is useful if you are storing\n   * your dates as a moment in time and you want to use it in a date only component,\n   * like oj-input-date, that shows the date in the timezone of the user's local system.</p>\n   * Examples where local time zone offset is UTC-06:00<br>\n   * dateToLocalIsoDateString(new Date('2021-06-04T00:00:00-04:00')); -->'2021-06-03'<br>\n   * dateToLocalIsoDateString(new Date('2021-06-04T02:30:00Z')); -->'2021-06-03'<br>\n   *\n   * @param {Date} date\n   * @returns {string} date portion only of the ISO String\n   * @export\n   * @since 12.0.0\n   * @memberof oj.IntlConverterUtils\n   * @method dateToLocalIsoDateString\n   */\n  IntlConverterUtils.dateToLocalIsoDateString = function (date) {\n    return OraI18nUtils.dateToLocalIsoDateString(date);\n  };\n\n  // This private method is not called, commenting out for now to remove it from code coverage calculations\n  // oj.IntlConverterUtils._getTimeZone = function(isoString)\n  // {\n  //  return OraI18nUtils._getTimeZone(isoString);\n  // };\n\n  /**\n   * Returns the timezone offset between UTC and the local time in Etc/GMT[+-]h syntax.\n   * The offset is positive if the local timezone is behind UTC and negative if\n   * it is ahead. The offset range is between Etc/GMT-14 and Etc/GMT+12 (UTC-12 and UTC+14)\n   *\n   * @example <caption>The local time is UTC-7 (Pacific Daylight Time)</caption>\n   * oj.IntlConverterUtils.getLocalTimeZoneOffset() will return the string \"Etc/GMT+7\"\n   *\n   * @example <caption>The local time is UTC+1 (Central European Standard Time)</caption>\n   * oj.IntlConverterUtils.getLocalTimeZoneOffset() will return the string \"Etc/GMT-1\"\n   * <p>\n   * NOTE: Since JET v12.0.0, the IntlDateTimeConverter will fallback to the local system time zone\n   * if no timeZone is in the options.\n   * So instead of using this API to get a local timezone offset to pass the converter,\n   * you should not set any timeZone in the converter options.\n   * </p>\n   * @export\n   * @param {Date=} date If date is undefined, it returns the local timezone offset of the current\n   * date, otherwise it returns the local timezone offset at that given date.\n   * @returns {string}\n   * @memberof oj.IntlConverterUtils\n   * @method getLocalTimeZoneOffset\n   */\n  IntlConverterUtils.getLocalTimeZoneOffset = function (date) {\n    return OraI18nUtils.getLocalTimeZoneOffset(date);\n  };\n\n  /**\n   * Given either an Object literal representing a 'converter' option (used in components) or a\n   * converter instance of type Converter, this method returns the converter instance.\n   * You can also pass in a string. In this case, it will return you an instance of a converter\n   * registered with that type.\n   * @ojdeprecated {since: '8.0.0', description: 'Create a converter using its constructor.'}\n   * @param {string| Object} converterOption\n   * @returns {Object|null} converterInstance or null if a converter cannot be determined\n   * @ojsignature {\n   *        target: \"Type\", value: \"<T>(converterOption: string|Validation.RegisteredConverter|Converter<T>): Converter<T>|null\"}\n   * @export\n   * @since 0.6.0\n\n   * @memberof oj.IntlConverterUtils\n   * @method getConverterInstance\n   */\n  IntlConverterUtils.getConverterInstance = function (converterOption) {\n    return ConverterUtils.getConverterInstance(converterOption);\n  };\n\n  /**\n   * So the requirement is if min or max lacks date portion and value contains it, then min + max should use\n   * value's date portion\n   *\n   * @param {string} minMax date in isoString format\n   * @param {string} value date in isoString format\n   * @returns {string} merged date in isoString format\n   * @export\n   * @ignore\n   * @since 1.2\n   * @memberof oj.IntlConverterUtils\n   * @method _minMaxIsoString\n   */\n  IntlConverterUtils._minMaxIsoString = function (minMax, value) {\n    if (minMax) {\n      // eslint-disable-next-line no-param-reassign\n      value = value || this.dateToLocalIso(new Date());\n\n      var vTindex = value.indexOf('T');\n\n      if (minMax.indexOf('T') === 0 && vTindex > 0) {\n        // meaning only time exists for minMax and value contains date\n        // eslint-disable-next-line no-param-reassign\n        minMax = value.substring(0, vTindex) + minMax;\n      }\n    }\n\n    return minMax;\n  };\n\n  // PACKAGE PRIVATE\n  /**\n   * Returns the format type of the isoStr: 'local', 'zulu' or 'offset'.\n   *\n   * @param {string} isoStr isoString\n   * @returns {'local'|'zulu'|'offset'} isoString format: 'local', 'zulu', or 'offset'\n   * @throws Error\n   * @export\n   * @ignore\n   * @since 11.0.0\n   * @memberof oj.IntlConverterUtils\n   * @method _getISOStrFormatType\n   * @private\n   */\n  IntlConverterUtils._getISOStrFormatType = function (isoStr) {\n    return OraI18nUtils.getISOStrFormatType(isoStr);\n  };\n\n  /**\n   * Checks that min and max and value are parseable isoStrings,\n   * Logs a warning if value, min, max are not all iso strings.\n   *\n   * @throws {Error} if value, min, max are not all iso strings, or are not of the same type.\n   * @param {string} value\n   * @param {string} min\n   * @param {string} max\n   * @export\n   * @ignore\n   * @since 11.0.0\n   * @memberof oj.IntlConverterUtils\n   * @method _verifyValueMinMax\n   * @private\n   */\n  IntlConverterUtils._verifyValueMinMax = function (value, min, max) {\n    // If value or min or max is not an iso string (say 'abc' or '2021/03/03'),\n    // the datepicker renders, but you see an inline converter error meant only for an application\n    // developer under the field, 'Please provide valid ISO 8601 string'.\n    // This is inconsistent with other component attributes** that are not set to the correct type\n    // ** e.g., set oj-input-number value='abc' and an error is thrown in the console.\n    // In v11 we logged the warning and monitored FA tests for this warning. After six months or so\n    // we saw no warnings and so now in v12 we will throw an error.\n\n    Object.entries({ value, min, max }).forEach(([k, v]) => {\n      if (v) {\n        try {\n          IntlConverterUtils._getISOStrFormatType(v);\n        } catch (e) {\n          // We weren't checking this in pre-v11.\n          throw new Error(`${k} must be an iso string: ${e}`);\n        }\n      }\n    });\n  };\n\n  /**\n   * Returns the current date on the browser's local system in iso string format. E.g., '2021-10-13'\n   * @return {str} isoStr\n   * @export\n   * @ignore\n   * @since 12.0.0\n   * @memberof oj.IntlConverterUtils\n   * @method _getTodaysDateIsoStr\n   * @private\n   */\n  IntlConverterUtils._getTodaysDateIsoStr = function () {\n    const now = new Date();\n    const localDateIsoStr =\n      OraI18nUtils.padZeros(now.getFullYear(), 4) +\n      '-' +\n      OraI18nUtils.padZeros(now.getMonth() + 1, 2) +\n      '-' +\n      OraI18nUtils.padZeros(now.getDate(), 2);\n    return localDateIsoStr;\n  };\n\n  /**\n   * Takes two iso strings and returns two iso strings that can be passed\n   * into new Date() so they can be compared.\n   * This function makes sure they are both in a date or date+time\n   * format. new Date does not accept time only, like T00:00:00.\n   * @param {string} isoStr1 first iso string\n   * @param {string} isoStr2 second iso string\n   * @returns {Array.<string>} an array with two iso strings that can be compared with Date.\n   * @export\n   * @ignore\n   * @since 12.0.0\n   * @memberof oj.IntlConverterUtils\n   * @method _makeIsoDateStringsDateComparable\n   * @private\n   */\n  IntlConverterUtils._makeIsoDateStringsDateComparable = function (isoStr1, isoStr2) {\n    const isoStr1TimeOnly = isoStr1.startsWith('T'); // e.g., T02:00:20\n    const isoStr2TimeOnly = isoStr2.startsWith('T');\n    const isoStr1ContainsDateOnly = !isoStr1.includes('T');\n    const isoStr2ContainsDateOnly = !isoStr2.includes('T');\n    let comparableIsoStr1 = isoStr1;\n    let comparableIsoStr2 = isoStr2;\n\n    // We may have time-only iso strings which new Date() does not like.\n    // So check for that and convert.\n    if (isoStr1TimeOnly || isoStr2TimeOnly) {\n      const datePart = IntlConverterUtils._getTodaysDateIsoStr();\n      if (isoStr1TimeOnly) {\n        comparableIsoStr1 = datePart + isoStr1;\n      }\n      if (isoStr2TimeOnly) {\n        comparableIsoStr2 = datePart + isoStr2;\n      }\n    }\n\n    // at this point comparableIsoStrs will contain date-only or date+time.\n    // if one has date-only, add a time piece.\n    if (!(isoStr1ContainsDateOnly && isoStr2ContainsDateOnly)) {\n      if (isoStr1ContainsDateOnly) {\n        comparableIsoStr1 = `${isoStr1}T00:00:00`;\n      }\n      if (isoStr2ContainsDateOnly) {\n        comparableIsoStr2 = `${isoStr2}T00:00:00`;\n      }\n    }\n    return [comparableIsoStr1, comparableIsoStr2];\n  };\n\n  /**\n   * Compares 2 ISO 8601 strings, returning the time difference between the two.\n   * The two values MUST be valid iso strings, and in the same format:\n   * local, zulu, or offset before calling this method.\n   * They should be in the same date/time format like time only or date only, etc., when used\n   * in JET's date/time components.\n   * For backward compatibility we coerce to the same date/time if they are not.\n   * This is an replacement for the deprecated IntlDateTimeConverter.compareISODates.\n   * @param {string} isoStr1 first iso string\n   * @param {string} isoStr2 second iso string\n   * @return {number} the time difference between isoStr and isoStr2 in ms.\n   * @export\n   * @ignore\n   * @since 12.0.0\n   * @memberof oj.IntlConverterUtils\n   * @method _compareISODates\n   * @private\n   */\n  IntlConverterUtils._compareISODates = function (isoStr1, isoStr2) {\n    // Sometimes people use oj-input-date with min/max that contain date and time, which is not advised,\n    // but is currently allowed. It should only accept dates, no time.\n    // This method needs to handle if one of the strings is date only, and the other is date/time;\n    // if one is time only and the other is datetime, etc.\n    const comparableIsoStrings = IntlConverterUtils._makeIsoDateStringsDateComparable(\n      isoStr1,\n      isoStr2\n    );\n\n    return new Date(comparableIsoStrings[0]) - new Date(comparableIsoStrings[1]);\n  };\n\n  /**\n   * Processes an converter option error and returns a oj.ConverterERror instance.\n   * @param {string} errorCode\n   * @param {Object} parameterMap\n   * @return {Object} an ConverterError instance\n   * @private\n   * @memberof oj.IntlConverterUtils\n   */\n  IntlConverterUtils.__getConverterOptionError = function (errorCode, parameterMap) {\n    oj.Assert.assertObject(parameterMap);\n    var summary = '';\n    var detail = '';\n    var propName = parameterMap.propertyName;\n    var propValueValid;\n\n    if (errorCode === 'optionTypesMismatch') {\n      var reqPropName = parameterMap.requiredPropertyName;\n      propValueValid = parameterMap.requiredPropertyValueValid;\n      // Summary: A value for the property '{requiredPropertyName}' is required when the property\n      // '{propertyName}' is set to '{propertyValue}'.\n      summary = Translations.getTranslatedString('oj-converter.optionTypesMismatch.summary', {\n        propertyName: propName,\n        propertyValue: parameterMap.propertyValue,\n        requiredPropertyName: reqPropName\n      });\n\n      detail = IntlConverterUtils._getOptionValueDetailMessage(reqPropName, propValueValid);\n    } else if (errorCode === 'optionTypeInvalid') {\n      // Summary: A value of the expected type was not provided for '{propertyName}'.\n      propName = parameterMap.propertyName;\n      propValueValid = parameterMap.propertyValueValid;\n      summary = Translations.getTranslatedString('oj-converter.optionTypeInvalid.summary', {\n        propertyName: propName\n      });\n\n      detail = IntlConverterUtils._getOptionValueDetailMessage(propName, propValueValid);\n    } else if (errorCode === 'optionOutOfRange') {\n      // The value {propertyValue} is out of range for the option '{propertyName}'.\n      summary = Translations.getTranslatedString('oj-converter.optionOutOfRange.summary', {\n        propertyName: propName,\n        propertyValue: parameterMap.propertyValue\n      });\n\n      propValueValid = parameterMap.propertyValueValid;\n      detail = IntlConverterUtils._getOptionValueDetailMessage(propName, propValueValid);\n    } else if (errorCode === 'optionValueInvalid') {\n      // An invalid value '{propertyValue}' was specified for the option '{propertyName}'..\n      summary = Translations.getTranslatedString('oj-converter.optionValueInvalid.summary', {\n        propertyName: propName,\n        propertyValue: parameterMap.propertyValue\n      });\n\n      propValueValid = parameterMap.propertyValueHint;\n      detail = IntlConverterUtils._getOptionValueDetailMessage(propName, propValueValid);\n    }\n\n    return new ojvalidationError.ConverterError(summary, detail);\n  };\n\n  /**\n   * Returns a oj.ConverterERror instance.\n   * @param {string} summary\n   * @param {string} detail\n   * @return {Object} an ConverterError instance\n   * @private\n   * @memberof oj.IntlConverterUtils\n   */\n  IntlConverterUtils.__getConverterError = function (summary, detail) {\n    return new ojvalidationError.ConverterError(summary, detail);\n  };\n\n  /**\n   * Builds the detail message for possible converter option values. Only applicable when errorInfo is\n   * returned from JET converter implementation.\n   *\n   * @param {string} propName name of the property\n   * @param {Array|string} propValueValid valid value or values expected.\n   *\n   * @return {string} the localized message\n   * @private\n   * @memberof oj.IntlConverterUtils\n   */\n  IntlConverterUtils._getOptionValueDetailMessage = function (propName, propValueValid) {\n    // Detail: An accepted value for '{propertyName}' is '{propertyValueValid}'. or\n    // Accepted values for '{propertyName}' are '{propertyValueValid}'.\n    var resourceKey;\n\n    if (propValueValid) {\n      if (typeof propValueValid === 'string') {\n        resourceKey = 'oj-converter.optionHint.detail';\n      } else {\n        // we have an array of values\n        resourceKey = 'oj-converter.optionHint.detail-plural';\n        // eslint-disable-next-line no-param-reassign\n        propValueValid = propValueValid.join(\n          Translations.getTranslatedString('oj-converter.plural-separator')\n        );\n      }\n      return Translations.getTranslatedString(resourceKey, {\n        propertyName: propName,\n        propertyValueValid: propValueValid\n      });\n    }\n\n    return '';\n  };\n\n  /**\n   * Will return an updated toIsoString using the timePortion from the fromIsoString or from the default\n   * oj.OraI18nUtils.DEFAULT_TIME_PORTION\n   *\n   * @private\n   * @expose\n   * @param {string} fromIsoString isoString that may not be a complete isoString\n   * @param {string} toIsoString isoString that may not be a complete isoString\n   * @returns {string} modified toIsoString with original date portion and the time portion from the fromIsoString\n   * @since 1.1\n   * @memberof oj.IntlConverterUtils\n   * @method _copyTimeOver\n   */\n  IntlConverterUtils._copyTimeOver = function (fromIsoString, toIsoString) {\n    return OraI18nUtils._copyTimeOver(fromIsoString, toIsoString);\n  };\n\n  /**\n   * Clears the time portion of the isoString\n   *\n   * @private\n   * @expose\n   * @param {string} isoString isoString that may not be a complete isoString\n   * @returns {string} an updated isoString\n   * @since 1.1\n   * @memberof oj.IntlConverterUtils\n   * @method _clearTime\n   */\n  IntlConverterUtils._clearTime = function (isoString) {\n    return OraI18nUtils._clearTime(isoString);\n  };\n\n  /**\n   * Will accept an isoString and perform a get operation or a set operation depending on whether param is an Array\n   * or a JSON\n   *\n   * The keys for the get and set operation are defined in OraI18nUtils's _DATE_TIME_KEYS.\n   *\n   * Note the handling of month starting with 0 in Date object and being 1 based in isoString will be handled by the function\n   * with the usage of doParseValue. Meaning when you doParseValue and you are getting the value it will automatically\n   * decrement the value and when you are setting the param it will check if the value is of number and if so will\n   * increment it.\n   *\n   * @private\n   * @expose\n   * @param {string} isoString isoString that may not be a complete isoString\n   * @param {Array|Object} actionParam if an Array will be a get operation, if a JSON will be a set operation\n   * @param {boolean=} doParseValue whether one should parseInt the value during the get request\n   * @returns {Object|string} an Object when a get operation and a string when a set operation\n   * @since 1.1\n   * @memberof oj.IntlConverterUtils\n   * @method _dateTime\n   */\n  IntlConverterUtils._dateTime = function (isoString, actionParam, doParseValue) {\n    return OraI18nUtils._dateTime(isoString, actionParam, doParseValue);\n  };\n\n  /**\n   * So the problem is Jet uses incomplete isoString which causes issues in different browsers.\n   *\n   * For instance for a new Date().toISOString() => 2015-02-02T18:00:37.007Z\n   * ojInputDate stores 2015-02-02\n   * ojInputTime stores T18:00:37.007Z\n   *\n   * yet constructing new Date(val) on above causes different results or errors in different browsers, so\n   * this function is to normalize them. Note it is assumed that the point is creating the Date object from the\n   * normalized isoString. Meaning if both contain only the time portion today's date will appended to it.\n   *\n   * @private\n   * @expose\n   * @param {string} isoString isoString that may not be a complete isoString\n   * @returns {string} a normalized isoString\n   * @since 1.1\n   * @memberof oj.IntlConverterUtils\n   * @method _normalizeIsoString\n   */\n  IntlConverterUtils._normalizeIsoString = function (isoString) {\n    return OraI18nUtils._normalizeIsoString(isoString);\n  };\n\n  /**\n   * Returns a person's initials\n   *\n   * @param {string=} firstName first name\n   * @param {string=} lastName last name\n   * @returns {string|undefined} uppercase concatenation of first letter of first name and first letter\n   * of last name.\n   * There are the following special cases:\n   * - If the name is Arabic characters, it returns empty string.\n   * - If the name is Hindi characters, it returns the first letter of the first name.\n   * - If the name is Thai characters, it returns the first letter of the first name.\n   * - If the name is Korean characters, it returns the first name.\n   * - If the name is Japanese or Chinese characters, it returns the last name.\n   *\n   * @export\n   * @since 4.0.0\n   * @memberof oj.IntlConverterUtils\n   * @method getInitials\n   */\n  IntlConverterUtils.getInitials = function (firstName, lastName) {\n    return OraI18nUtils.getInitials(firstName, lastName);\n  };\n\n  exports.IntlConverterUtils = IntlConverterUtils;\n  exports.OraI18nUtils = OraI18nUtils;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n});\n","/**\n * @license\n * Copyright (c) 2014, 2023, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\ndefine(['ojs/ojcore-base', 'ojs/ojlogger'], function (oj, Logger) { 'use strict';\n\n    oj = oj && Object.prototype.hasOwnProperty.call(oj, 'default') ? oj['default'] : oj;\n\n    class ConverterUtils {\n    }\n    ConverterUtils.getConverterInstance = function (converterOption) {\n        let cTypeStr = '';\n        let cOptions = {};\n        let converterInstance = null;\n        if (converterOption) {\n            if (typeof converterOption === 'object') {\n                if ((converterOption.parse && typeof converterOption.parse === 'function') ||\n                    (converterOption.format && typeof converterOption.format === 'function')) {\n                    converterInstance = converterOption;\n                }\n                else {\n                    cTypeStr = converterOption.type;\n                    cOptions = converterOption.options || {};\n                }\n            }\n            if (!converterInstance) {\n                cTypeStr = cTypeStr || converterOption;\n                if (cTypeStr && typeof cTypeStr === 'string') {\n                    if (oj.Validation && oj.Validation.converterFactory) {\n                        var cf = oj.Validation.converterFactory(cTypeStr);\n                        return cf.createConverter(cOptions);\n                    }\n                    else {\n                        Logger.error('oj.Validation.converterFactory is not available and it is needed to support the deprecated json format for the converters property. Please include the backward compatibility \"ojvalidation-base\" module.');\n                    }\n                }\n            }\n        }\n        return converterInstance;\n    };\n\n    return ConverterUtils;\n\n});\n","/**\n * @license\n * Copyright (c) 2014, 2023, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\ndefine(['exports', 'ojs/ojcore-base', 'ojs/ojcore'], function (exports, oj$1, oj$2) { 'use strict';\n\n  oj$1 = oj$1 && Object.prototype.hasOwnProperty.call(oj$1, 'default') ? oj$1['default'] : oj$1;\n  oj$2 = oj$2 && Object.prototype.hasOwnProperty.call(oj$2, 'default') ? oj$2['default'] : oj$2;\n\n  /**\n   * @preserve Copyright 2013 jQuery Foundation and other contributors\n   * Released under the MIT license.\n   * http://jquery.org/license\n   */\n\n  /* jslint browser: true*/\n\n  /**\n   * @export\n   * @class DataSource\n   * @extends EventSource\n   * @classdesc Object representing data used by table and grid components\n   * @param {Object} data data supported by the components\n   * @constructor\n   * @final\n   * @since 1.0\n   * @abstract\n   * @ojdeprecated {since: '5.0.0', description: 'Use DataProvider instead.'}\n   * @ojtsignore\n   */\n  const DataSource = function (data) {\n    this.data = data;\n    this.Init();\n  };\n  oj$1._registerLegacyNamespaceProp('DataSource', DataSource);\n  /**\n   * Subclass from oj.Object\n   * @private\n   */\n  oj$1.Object.createSubclass(DataSource, oj$1.EventSource, 'oj.DataSource');\n\n  /**\n   * Initializes the instance.\n   * @export\n   * @memberof DataSource\n   * @return {undefined}\n   * @ojtsignore\n   */\n  DataSource.prototype.Init = function () {\n    DataSource.superclass.Init.call(this);\n  };\n\n  /**\n   * Determines whether this DataSource supports the specified feature.\n   * @method\n   * @name getCapability\n   * @memberof DataSource\n   * @instance\n   * @param {string} feature the feature in which its capabilities is inquired.\n   * @return {string|null} the capability of the specified feature.  Returns null if the feature is not recognized.\n   */\n\n  /**\n   * @class DataGridDataSource\n   * @classdesc The base class for DataGridDataSource.<br>\n   * DataGridDataSource implementations must implement all of the functions documented here.\n   * @export\n   * @extends DataSource\n   * @constructor\n   * @final\n   * @since 1.0\n   * @ojtsignore\n   */\n  const DataGridDataSource = function (data) {\n    // DataSource would calls Init\n    DataGridDataSource.superclass.constructor.call(this, data);\n  };\n  oj$2._registerLegacyNamespaceProp('DataGridDataSource', DataGridDataSource);\n  /**\n   * Subclass DataGridDataSource to DataSource\n   * @private\n   */\n  oj$2.Object.createSubclass(DataGridDataSource, oj$2.DataSource, 'oj.DataGridDataSource');\n\n  /**\n   * Returns the total number of rows or columns.  If the value return is not >= 0 then it is automatically assumed\n   * that the total count is unknown.\n   * @param {string} axis the axis in which we inquire for the total count.  Valid values are \"row\" and \"column\".\n   * @return {number} the total number of rows/columns.\n   * @method\n   * @name getCount\n   * @memberof DataGridDataSource\n   * @instance\n   */\n\n  /**\n   * Returns whether the total count returned in getCount function is an actual or an estimate.\n   * @param {string} axis the axis in which we inquire whether the total count is an estimate.  Valid values are\n   *        \"row\" and \"column\".\n   * @return {string} \"exact\" if the count returned in getCount function is the actual count, \"estimate\" if the\n   *         count returned in getCount function is an estimate.  The default value is \"exact\".\n   * @method\n   * @name getCountPrecision\n   * @memberof DataGridDataSource\n   * @instance\n   */\n\n  /**\n   * Fetch a range of headers from the data source.\n   * @export\n   * @method\n   * @name fetchHeaders\n   * @memberof DataGridDataSource\n   * @instance\n   * @param {Object} headerRange information about the header range, it must contain the following properties:\n   *        axis, start, count.\n   * @property {string} headerRange.axis the axis of the header that are fetched.  Valid values are \"row\" and \"column\".\n   * @property {number} headerRange.start the start index of the range in which the header data are fetched.\n   * @property {number} headerRange.count the size of the range in which the header data are fetched.\n   * @param {Object} callbacks the callbacks to be invoke when fetch headers operation is completed.\n   * @property {function({startHeaderSet: Object}, {headerRange: Object}, {endHeaderSet: Object}):undefined} callbacks.success the callback to invoke when fetch headers completed successfully.\n   *        The function takes three parameters: HeaderSet object representing start headers, headerRange object passed into the original fetchHeaders call,\n   *        and a HeaderSet object representing the end headers along the axis.\n   * @property {function({status: Object}):undefined} callbacks.error the callback to invoke when fetch cells failed.\n   * @param {Object=} callbackObjects the object in which the callback function is invoked on.\n   * @property {Object=} callbackObjects.success\n   * @property {Object=} callbackObjects.error\n   * @return {undefined}\n   */\n\n  /**\n   * Fetch a range of cells from the data source.\n   * @method\n   * @name fetchCells\n   * @memberof DataGridDataSource\n   * @instance\n   * @param {Array.<Object>} cellRanges Information about the cell range.  A cell range is defined by an array\n   *        of range info for each axis, where each range contains three properties: axis, start, count.\n   * @property {string} cellRanges.axis the axis associated with this range where cells are fetched.  Valid\n   *        values are \"row\" and \"column\".\n   * @property {number} cellRanges.start the start index of the range for this axis in which the cells are fetched.\n   * @property {number} cellRanges.count the size of the range for this axis in which the cells are fetched.\n   * @param {Object} callbacks the callbacks to be invoke when fetch cells operation is completed.\n   * @property {function({cellSet: Object}, {cellRanges: Array.<Object>}):undefined} callbacks.success the callback to invoke when fetch cells completed successfully.\n   * @property {function({status: Object}):undefined} callbacks.error the callback to invoke when fetch cells failed.\n   * @param {Object=} callbackObjects the object in which the callback function is invoked on.\n   * @property {Object=} callbackObjects.success\n   * @property {Object=} callbackObjects.error\n   * @return {undefined}\n   */\n\n  /**\n   * Returns the keys based on the indexes.\n   * @method\n   * @name keys\n   * @memberof DataGridDataSource\n   * @instance\n   * @param {Object} indexes the index for each axis\n   * @property {number|null} indexes.row the index for the row axis\n   * @property {number|null} indexes.column the index for the column axis\n   * @return {Promise.<Object>} a Promise object which when resolved returns an object containing the keys for each axis\n   */\n\n  /**\n   * Returns the row and column index based on the keys.\n   * @method\n   * @name indexes\n   * @memberof DataGridDataSource\n   * @instance\n   * @param {Object} keys the key for each axis\n   * @property {any} keys.row the key for the row axis\n   * @property {any} keys.column the key for the column axis\n   * @return {Promise.<Object>} a Promise object which when resolved returns an object containing the index for each axis\n   */\n\n  /**\n   * Performs a sort on the data source.\n   * @method\n   * @name sort\n   * @memberof DataGridDataSource\n   * @instance\n   * @param {Object|null} criteria the sort criteria.\n   * @property {string} criteria.axis The axis in which the sort is performed, valid values are \"row\", \"column\"\n   * @property {any} criteria.key The key that identifies which header to sort\n   * @property {string} criteria.direction the sort direction, valid values are \"ascending\", \"descending\", \"none\" (default)\n   * @param {Object=} callbacks the callbacks to be invoke upon completion of the sort operation.\n   * @property {function():undefined=} callbacks.success the callback to invoke when the sort completed successfully.\n   * @property {function({status: Object}):undefined=} callbacks.error the callback to invoke when sort failed.\n   * @param {Object=} callbackObjects the object in which the callback function is invoked on.\n   * @property {Object=} callbackObjects.success\n   * @property {Object=} callbackObjects.error\n   * @return {undefined}\n   */\n\n  /**\n   * Moves a row from one location to another.\n   * @method\n   * @name move\n   * @memberof DataGridDataSource\n   * @instance\n   * @param {any} rowToMove the key of the row to move\n   * @param {any} referenceRow the key of the reference row which combined with position are used to determine\n   *        the destination of where the row should moved to.\n   * @param {string} position The position of the moved row relative to the reference row.\n   *        Valid values are: \"before\", \"after\"\n   * @param {Object=} callbacks the callbacks to be invoke upon completion of the move operation.\n   * @property {function():undefined=} callbacks.success the callback to invoke when the sort completed successfully.\n   * @property {function({status: Object}):undefined=} callbacks.error the callback to invoke when sort failed.\n   * @param {Object=} callbackObjects the object in which the callback function is invoked on.\n   * @property {Object=} callbackObjects.success\n   * @property {Object=} callbackObjects.error\n   * @return {undefined}\n   */\n\n  /**\n   * Checks whether a move operation is valid.\n   * @param {any} rowToMove the key of the row to move\n   * @param {any} referenceRow the key of the reference row which combined with position are used to determine\n   *        the destination of where the row should moved to.\n   * @param {string} position the position of the moved row relative to the reference row.\n   * @return {string} returns \"valid\" if the move is valid, \"invalid\" otherwise.\n   * @method\n   * @name moveOK\n   * @memberof DataGridDataSource\n   * @instance\n   */\n\n  /**\n   * Determines whether this DataGridDataSource supports certain feature.\n   * @method\n   * @name getCapability\n   * @memberof DataGridDataSource\n   * @instance\n   * @param {string} feature the feature in which its capabilities is inquired.  Currently the only valid feature is \"sort\".\n   * @return {string|null} the name of the feature.  For \"sort\", the valid return values are: \"full\", \"none\", \"row\", \"column\".\n   *         For \"move\", the valid return values are: \"row\", \"none\".\n   *         Returns null if the feature is not recognized.\n   */\n\n  /**\n   * @class DiagramDataSource\n   * @classdesc Base class for Diagram DataSource.  Implementations must implement all of the functions documented here.\n   * @param {Object} data data required by the DiagramDataSource implementation\n   * @export\n   * @extends DataSource\n   * @constructor\n   * @final\n   * @since 3.0\n   * @ojtsignore\n   * @ojdeprecated {since: '14.0.0', description: 'DiagramDataSource has been deprecated with the oj-diagram data property,\n   * use DataProvider on nodeData and linkData oj-diagram attributes instead.'}\n   */\n  const DiagramDataSource = function (data) {\n    DiagramDataSource.superclass.constructor.call(this, data);\n  };\n  oj$1._registerLegacyNamespaceProp('DiagramDataSource', DiagramDataSource);\n\n  /**\n   * Subclass DiagramDataSource to DataSource\n   * @private\n   */\n  oj$1.Object.createSubclass(DiagramDataSource, oj$1.DataSource, 'oj.DiagramDataSource');\n\n  /**\n   * Object that defines diagram node. The object might also have additional custom properties that can be\n   * mapped to node styles (see {@link oj.ojDiagram#nodeProperties})\n   * or used during Diagram layout (see {@link oj.DvtDiagramLayoutContextNode#getData}).\n   * @typedef {Object} NodeObject\n   * @memberof DiagramDataSource\n   * @property {string} id Node id\n   * @property {Array.<string>=} categories An optional array of additional category strings corresponding to the node.\n   * @property {string=} label The label for the node. If the string contains new line characters, a multi-line label will be rendered.\n   * @property {Array.<Object>=} nodes An array of objects with properties for the child nodes.\n   *                     Set value to null to indicate leaf node, if child nodes could be fetched on container disclosure.\n   *                     Set value to 'undefined' to indicate potential child nodes, if the child nodes should be fetched on container disclosure.\n   * @property {string=} selectable Specifies whether or not the node will be selectable. Acceptable values are 'off' and 'auto'. Default value is 'auto'\n   * @property {string=} draggable  Specifies whether or not the node will be draggable. Acceptable values are 'off' and 'auto'. Default value is 'auto'\n   * @property {string=} shortDesc  The description of the node. This is used for accessibility and also for customizing the tooltip text.\n   */\n\n  /**\n   * Object that defines diagram link. The object might also have additional custom properties that can be\n   * mapped to link styles (see {@link oj.ojDiagram#linkProperties})\n   * or used during Diagram layout (see {@link oj.DvtDiagramLayoutContextLink#getData}).\n   * @typedef {Object} LinkObject\n   * @memberof DiagramDataSource\n   * @property {string} id Link id\n   * @property {string} startNode Start node id.\n   * @property {string} endNode End node id.\n   * @property {Array.<string>=} categories An optional array of additional category strings corresponding to the link.\n   * @property {string=} label The label for the link. If the string contains new line characters, a multi-line label will be rendered.\n   * @property {string=} selectable Specifies whether or not the node will be selectable. Acceptable values are 'off' and 'auto'. Default value is 'auto'\n   * @property {string=} shortDesc  The description of the node. This is used for accessibility and also for customizing the tooltip text.\n   */\n\n  /**\n   * Returns child data for the given parent.\n   * The data include all immediate child nodes along with links whose endpoints\n   * both descend from the current parent node.\n   * If all the links are available upfront, they can be returned as part of the\n   * top-level data (since all nodes descend from the diagram root).\n   * If lazy-fetching links is desirable, the most\n   * optimal way to return links is as part of the data of the\n   * nearest common ancestor of the link's endpoints.\n   *\n   * @param {Object|null} parentData An object that contains data for the parent node. See {@link DiagramDataSource.NodeObject} section.\n   *                     If parentData is null, the method retrieves data for top level nodes.\n   * @return {Promise} Promise resolves to a component object with the following structure:<p>\n   * <table>\n   * <tbody>\n   * <tr><td><b>nodes</b></td><td>An array of objects for the child nodes for the given parent.\n   *              See {@link DiagramDataSource.NodeObject} section.</td></tr>\n   * <tr><td><b>links</b></td><td>An array of objects for the links for the given parent.\n   *              See {@link DiagramDataSource.LinkObject} section.</td></tr>\n   * </tbody>\n   * </table>\n   * @method\n   * @name getData\n   * @memberof DiagramDataSource\n   * @instance\n   */\n\n  /**\n   * Retrieves number of child nodes\n   * @param {Object} nodeData A data object for the node in question.\n   *                          See {@link DiagramDataSource.NodeObject} section.\n   * @return {number} Number of child nodes if child count is available.\n   *                  The method returns 0 for leaf nodes.\n   *                  The method returns -1 if the child count is unknown\n   *                  (e.g. if the children have not been fetched).\n   * @method\n   * @name getChildCount\n   * @memberof DiagramDataSource\n   * @instance\n   */\n\n  /**\n   * Indicates whether the specified object contains links\n   * that should be discovered in order to display promoted links.\n   *\n   * @param {Object} nodeData A data object for the container node in question.\n   *                          See {@link DiagramDataSource.NodeObject} section\n   * @return {string} the valid values are \"connected\", \"disjoint\", \"unknown\"\n   * @method\n   * @name getDescendantsConnectivity\n   * @memberof DiagramDataSource\n   * @instance\n   */\n\n  /**\n   * @export\n   * Event types\n   * @enum {string}\n   * @memberof DiagramDataSource\n   */\n  DiagramDataSource.EventType = {\n    /**\n     * Triggered when nodes or links are added to DiagramDataSource.<p>\n     * The event payload contains.<p>\n     *\n     * <table cellspacing=\"0\" style=\"border-collapse: collapse;\">\n     * <tbody>\n     * <tr><td><b>data</b></td><td>Object</td><td>An object with the following properties:\n     *  <ul>\n     *    <li>nodes: An array of node objects. See {@link DiagramDataSource.NodeObject} section.</li>\n     *    <li>links: An array of link objects. See {@link DiagramDataSource.LinkObject} section.</li>\n     *  </ul>\n     * </td></tr>\n     * <tr><td><b>parentId</b></td><td>string</td><td>parent id for nodes and links</td></tr>\n     * <tr><td><b>index</b></td><td>number</td><td>An index where the nodes should be added</td></tr>\n     * </tbody>\n     * </table>\n     */\n    ADD: 'add',\n    /**\n     * Triggered when nodes or links are removed from DiagramDataSource.\n     * The event payload contains:<p>\n     *\n     * <table cellspacing=\"0\" style=\"border-collapse: collapse;\">\n     * <tbody>\n     * <tr><td><b>data</b></td><td>Object</td><td>An object with the following properties:\n     *  <ul>\n     *    <li>nodes: An array of node objects. See {@link DiagramDataSource.NodeObject} section.</li>\n     *    <li>links: An array of link objects. See {@link DiagramDataSource.LinkObject} section.</li>\n     *  </ul>\n     * </td></tr>\n     * <tr><td><b>parentId</b></td><td>string</td><td>parent id for nodes and links</td></tr>\n     * </tbody>\n     * </table>\n     */\n    REMOVE: 'remove',\n    /**\n     * Triggered when nodes or links are removed from DiagramDataSource.\n     * The event payload contains:<p>\n     *\n     * <table cellspacing=\"0\" style=\"border-collapse: collapse;\">\n     * <tbody>\n     * <tr><td><b>data</b></td><td>Object</td><td>An object with the following properties:\n     *  <ul>\n     *    <li>nodes: An array of node objects. See {@link DiagramDataSource.NodeObject} section.</li>\n     *    <li>links: An array of link objects. See {@link DiagramDataSource.LinkObject} section.</li>\n     *  </ul>\n     * </td></tr>\n     * </tbody>\n     * </table>\n     */\n    CHANGE: 'change'\n  };\n\n  /**\n   * @preserve Copyright 2013 jQuery Foundation and other contributors\n   * Released under the MIT license.\n   * http://jquery.org/license\n   */\n\n  /* jslint browser: true,devel:true*/\n\n  /**\n   * @export\n   * @class TableDataSource\n   * @abstract\n   * @classdesc Abstract class representing tabular data that can be used by different components such as [ListView]{@link oj.ojListView}, [NavigationList]{@link oj.ojNavigationList},\n   * [PagingControl]{@link oj.ojPagingControl}, [TabBar]{@link oj.ojTabBar}, and [Table]{@link oj.ojTable}.<br><br>\n   * This class is not used directly and is used as the base to implement other subclasses.  Implementations of TableDataSource must implement all of the methods documented here.<br><br>\n   * JET provides the following implementations:<br><br>\n   * <table class=\"generic-table\">\n   *   <thead>\n   *     <th>Subclass</th>\n   *     <th>When to Use</th>\n   *     <th>Use with</th>\n   *   </thead>\n   *   <tbody>\n   *     <tr>\n   *       <td>{@link ArrayTableDataSource}</td>\n   *       <td>When the data is available from an array.</td>\n   *       <td>ListView<br>NavigationList<br>TabBar<br>Table<br></td>\n   *     </tr>\n   *     <tr>\n   *       <td>{@link CollectionTableDataSource}</td>\n   *       <td>When the data is available from an {@link Collection} object, such as an external data source.</td>\n   *       <td>ListView<br>NavigationList<br>TabBar<br>Table<br></td>\n   *     </tr>\n   *     <tr>\n   *       <td>{@link oj.FlattenedTreeTableDataSource}</td>\n   *       <td>When the data has a tree-like structure that is displayed in a Table with RowExpander.</td>\n   *       <td>Table (with RowExpander)<br></td>\n   *     </tr>\n   *     <tr>\n   *       <td>{@link PagingTableDataSource}</td>\n   *       <td>When paging functionality is needed on top of other TableDataSource implementations.</td>\n   *       <td>ListView<br>PagingControl<br>Table<br></td>\n   *     </tr>\n   *   </tbody>\n   * </table>\n   * <br>Refer to the documentation and demos of individual components for more information on how to use them with the TableDataSource subclasses.</br><br>\n   * In case specialized behavior is needed, new subclass can be created by using [oj.Object.createSubclass]{@link oj.Object.createSubclass}.  New subclass can be based on\n   * TableDataSource, in which case all methods must be implemented, or it can be based on an existing subclass, in which case only methods that require different behavior need\n   * to be overridden.\n   *\n   * @extends DataSource\n   * @param {Object} data data supported by the components\n   * @param {Object=} options Options for the TableDataSource\n   * @constructor\n   * @final\n   * @since 1.0\n   * @ojdeprecated {since: '5.0.0', description: 'Use DataProvider instead.'}\n   * @ojtsignore\n   */\n  const TableDataSource = function (data, options) {\n    if (this.constructor === TableDataSource) {\n      // This should only be called by the constructors of the subclasses. If you need\n      // to initialize a new TableDataSource then call the constructors of the subclasses such\n      // as oj.ArrayTableDataSource or oj.CollectionTableDataSource.\n      var errSummary = TableDataSource._LOGGER_MSG._ERR_TABLE_DATASOURCE_INSTANTIATED_SUMMARY;\n      var errDetail = TableDataSource._LOGGER_MSG._ERR_TABLE_DATASOURCE_INSTANTIATED_DETAIL;\n      throw new Error(errSummary + '\\n' + errDetail);\n    }\n    // Initialize\n    this.data = data;\n    this.options = options;\n    this.isFetching = false;\n    this._startIndex = 0;\n    this.Init();\n  };\n  oj$2._registerLegacyNamespaceProp('TableDataSource', TableDataSource);\n\n  /**\n   * Subclass from oj.DataSource\n   * @private\n   */\n  oj$2.Object.createSubclass(TableDataSource, oj$2.DataSource, 'oj.TableDataSource');\n\n  /**\n   * Initializes the instance.\n   * @memberof TableDataSource\n   * @instance\n   * @override\n   * @protected\n   */\n  TableDataSource.prototype.Init = function () {\n    TableDataSource.superclass.Init.call(this);\n  };\n\n  /**\n   * @export\n   * @expose\n   * @memberof TableDataSource\n   * @desc The sort criteria. Whenever sort() is called with the criteria parameter, that value is copied to this\n   * property. If sort() is called with empty sort criteria then the criteria set in this property is used.\n   *\n   * @type {Object}\n   * @property {any} criteria.key The key that identifies which field to sort\n   * @property {'ascending'|'descending'|'none'} criteria.direction the sort direction, valid values are \"ascending\", \"descending\", \"none\" (default)\n   */\n  TableDataSource.prototype.sortCriteria = null;\n\n  /**\n   * Return the row data found at the given index.\n   *\n   * @param {number} index Index for which to return the row data.\n   * @param {Object=} options Options to control the at.\n   * @return {Promise.<null|TableDataSource.RowData>} Promise resolves to a compound object which has the structure below. If the index is out of range, Promise resolves to null.<p>\n   * <table>\n   * <tbody>\n   * <tr><td><b>data</b></td><td>The raw row data</td></tr>\n   * <tr><td><b>index</b></td><td>The index for the row</td></tr>\n   * <tr><td><b>key</b></td><td>The key value for the row</td></tr>\n   * </tbody>\n   * </table>\n   * @method\n   * @name at\n   * @memberof TableDataSource\n   * @instance\n   */\n\n  /**\n   * Fetch the row data.\n   * @param {Object=} options Options to control fetch\n   * @property {number} [options.startIndex] The index at which to start fetching records.\n   * @property {boolean} [options.silent] If set, do not fire a sync event.\n   * @return {Promise.<null|TableDataSource.RowDatas>} Promise object resolves to a compound object which contains an array of row data objects, an array of ids, and the startIndex triggering done when complete.<p>\n   *         The structure of the resolved compound object is:<p>\n   * <table>\n   * <tbody>\n   * <tr><td><b>data</b></td><td>An array of raw row data</td></tr>\n   * <tr><td><b>keys</b></td><td>An array of key values for the rows</td></tr>\n   * <tr><td><b>startIndex</b></td><td>The startIndex for the returned set of rows</td></tr>\n   * </tbody>\n   * </table>\n   * @method\n   * @name fetch\n   * @memberof TableDataSource\n   * @instance\n   */\n\n  /**\n   * Return the first row data whose id value is the given id\n   * @param {string} id ID for which to return the row data, if found.\n   * @param {Object=} options Options to control the get.\n   * @return {Promise.<null|TableDataSource.RowData>} Promise which resolves to a compound object which has the structure below where the id matches the given id. If none are found, resolves to null.<p>\n   * <table>\n   * <tbody>\n   * <tr><td><b>data</b></td><td>The raw row data</td></tr>\n   * <tr><td><b>index</b></td><td>The index for the row</td></tr>\n   * <tr><td><b>key</b></td><td>The key value for the row</td></tr>\n   * </tbody>\n   * </table>\n   * @method\n   * @name get\n   * @memberof TableDataSource\n   * @instance\n   */\n\n  /**\n   * Determines whether this TableDataSource supports certain feature.\n   * @param {string} feature the feature in which its capabilities is inquired.  Currently the only valid feature is \"sort\".\n   * @return {string|null} the name of the feature.  For \"sort\", the valid return values are: \"full\", \"none\".\n   *         Returns null if the feature is not recognized.\n   * @memberof TableDataSource\n   * @instance\n   * @method\n   * @name getCapability\n   */\n\n  /**\n   * Performs a sort on the data source. Null criteria clears the existing sort.\n   * @param {Object} [criteria] the sort criteria.\n   * @property {any} criteria.key The key that identifies which field to sort\n   * @property {'ascending'|'descending'|'none'} criteria.direction the sort direction, valid values are \"ascending\", \"descending\", \"none\" (default)\n   * @return {Promise.<null>} promise object triggering done when complete.\n   * @method\n   * @name sort\n   * @memberof TableDataSource\n   * @instance\n   */\n\n  /**\n   * Return the total size of data available, including server side if not local.\n   * @returns {number} total size of data\n   * @method\n   * @name totalSize\n   * @memberof TableDataSource\n   * @instance\n   */\n\n  /**\n   * Returns the confidence for the totalSize value.\n   * @return {string} \"actual\" if the totalSize is the time of the fetch is an exact number\n   *                  \"estimate\" if the totalSize is an estimate\n   *                  \"atLeast\" if the totalSize is at least a certain number\n   *                  \"unknown\" if the totalSize is unknown\n   * @ojsignature {target: \"Type\", for: \"returns\", value: \"'actual'|'estimate'|'atLeast'|'unknown'\"}\n   * @export\n   * @expose\n   * @memberof TableDataSource\n   * @instance\n   */\n  TableDataSource.prototype.totalSizeConfidence = function () {\n    return 'actual';\n  };\n\n  /**\n   * Row Data returned by methods like, at/get.\n   * @typedef {Object} TableDataSource.RowData\n   * @property {Object} data The raw row data.\n   * @property {number} index The index for the row.\n   * @property {any} key The key value for the row.\n   */\n\n  /**\n   * Row Datas returned by fetch method.\n   * @typedef {Object} TableDataSource.RowDatas\n   * @property {Array.<Object>} data An array of raw row data.\n   * @property {Array.<any>} keys An array of key values for the rows.\n   * @property {number} startIndex The startIndex for the returned set of rows.\n   */\n\n  /**\n   * Events which are published by TableDataSource. Any custom TableDataSource\n   * implementation must publish the corresponding events.\n   * @export\n   * Event types\n   * @enum {string}\n   * @memberof TableDataSource\n   */\n  TableDataSource.EventType = {\n    /** Triggered when a Row has been added to a TableDataSource<p>\n     * The event payload contains:<p>\n     * <table cellspacing=\"0\" style=\"border-collapse: collapse;\">\n     * <tbody>\n     * <tr><td><b>data</b></td><td>An array of raw row data</td></tr>\n     * <tr><td><b>keys</b></td><td>An array of key values for the rows</td></tr>\n     * <tr><td><b>indexes</b></td><td>An array of index values for the rows in post-insert sorted order</td></tr>\n     * </tbody>\n     * </table>\n     */\n    ADD: 'add',\n    /** Triggered when a Row has been removed from a TableDataSource<p>\n     * The event payload contains:<p>\n     * <table cellspacing=\"0\" style=\"border-collapse: collapse;\">\n     * <tbody>\n     * <tr><td><b>data</b></td><td>An array of raw row data</td></tr>\n     * <tr><td><b>keys</b></td><td>An array of key values for the rows</td></tr>\n     * <tr><td><b>indexes</b></td><td>An array of index values for the rows in pre-remove sorted order</td></tr>\n     * </tbody>\n     * </table>\n     */\n    REMOVE: 'remove',\n    /** Triggered when a TableDataSource has been reset */\n    RESET: 'reset',\n    /** Triggered when a TableDataSource has been refreshed */\n    REFRESH: 'refresh',\n    /** Triggered when a TableDataSource has been sorted<p>\n     * The event payload contains:<p>\n     * <table cellspacing=\"0\" style=\"border-collapse: collapse;\">\n     * <tbody>\n     * <tr><td><b>header</b></td><td>the key of the header which was sorted on</td></tr>\n     * <tr><td><b>direction</b></td><td>the direction of the sort ascending/descending</td></tr>\n     * </tbody>\n     * </table>\n     */\n    SORT: 'sort',\n    /** Triggered when a Row's attributes have been changed<p>\n     * The event payload contains:<p>\n     * <table cellspacing=\"0\" style=\"border-collapse: collapse;\">\n     * <tbody>\n     * <tr><td><b>data</b></td><td>An array of raw row data</td></tr>\n     * <tr><td><b>keys</b></td><td>An array of key values for the rows</td></tr>\n     * <tr><td><b>indexes</b></td><td>An array of index values for the rows</td></tr>\n     * </tbody>\n     * </table>\n     */\n    CHANGE: 'change',\n    /** Triggered when a TableDataSource has sent a fetch request. It is expected that\n     * a component using TableDataSource will go into a busy state upon receiving\n     * this event.\n     * The event payload contains:<p>\n     * <table cellspacing=\"0\" style=\"border-collapse: collapse;\">\n     * <tbody>\n     * <tr><td><b>startIndex</b></td><td>The start index at which the fetch was invoked</td></tr>\n     * </tbody>\n     * </table>\n     */\n    REQUEST: 'request',\n    /** Triggered when a TableDataSource has been updated by a fetch. It is expected that\n     * a component using TableDataSource will exit busy state upon completion of rendering\n     * after receiving this event.<p>\n     * The event payload contains:<p>\n     * <table cellspacing=\"0\" style=\"border-collapse: collapse;\">\n     * <tbody>\n     * <tr><td><b>data</b></td><td>An array of raw row data</td></tr>\n     * <tr><td><b>keys</b></td><td>An array of key values for the rows</td></tr>\n     * <tr><td><b>startIndex</b></td><td>The start index at which the fetch occurred</td></tr>\n     * </tbody>\n     * </table>\n     */\n    SYNC: 'sync',\n    /** Triggered when an error occurred on the TableDataSource */\n    ERROR: 'error'\n  };\n\n  /**\n   * @private\n   */\n  TableDataSource._LOGGER_MSG = {\n    _ERR_TABLE_DATASOURCE_INSTANTIATED_SUMMARY: 'oj.TableDataSource constructor called.',\n    _ERR_TABLE_DATASOURCE_INSTANTIATED_DETAIL:\n      'Please do not instantiate oj.TableDataSource. Please use one of the subclasses instead such as oj.ArrayTableDataSource or oj.CollectionTableDataSource.',\n    _ERR_DATA_INVALID_TYPE_SUMMARY: 'Invalid data type.',\n    _ERR_DATA_INVALID_TYPE_DETAIL: 'Please specify the appropriate data type.'\n  };\n\n  /**\n   * @class TreeDataSource\n   * @classdesc Abstract class representing hierarchical (tree) data that can be used by different components such as [Indexer]{@link oj.ojIndexer}, [ListView]{@link oj.ojListView}, [NavigationList]{@link oj.ojNavigationList},\n   * and [TreeView]{@link oj.ojTreeView}.<br><br>\n   * This class is not used directly and is used as the base to implement other subclasses.  Implementations of TreeDataSource must implement all of the methods documented here.<br><br>\n   * JET provides the following implementations:<br><br>\n   * <table class=\"generic-table\">\n   *   <thead>\n   *     <th>Subclass</th>\n   *     <th>When to Use</th>\n   *     <th>Use with</th>\n   *   </thead>\n   *   <tbody>\n   *     <tr>\n   *       <td>{@link CollectionTreeDataSource}</td>\n   *       <td>When the data is available from an {@link Collection} object, such as an external data source.</td>\n   *       <td>ListView<br>NavigationList<br>TreeView<br></td>\n   *     </tr>\n   *     <tr>\n   *       <td>{@link IndexerModelTreeDataSource}</td>\n   *       <td>When the data has a tree-like structure that is displayed in a ListView with Indexer.</td>\n   *       <td>ListView (with Indexer)<br></td>\n   *     </tr>\n   *     <tr>\n   *       <td>{@link JsonTreeDataSource}</td>\n   *       <td>When the data is available from an array of JSON objects that represent tree nodes.</td>\n   *       <td>ListView<br>NavigationList<br>TreeView<br></td>\n   *     </tr>\n   *   </tbody>\n   * </table>\n   * <br>Refer to the documentation and demos of individual components for more information on how to use them with the TreeDataSource subclasses.</br><br>\n   * In case specialized behavior is needed, new subclass can be created by using [oj.Object.createSubclass]{@link oj.Object.createSubclass}.  New subclass can be based on\n   * TreeDataSource, in which case all methods must be implemented, or it can be based on an existing subclass, in which case only methods that require different behavior need\n   * to be overridden.\n   *\n   * @param {Object} data data supported by the component\n   * @export\n   * @extends DataSource\n   * @abstract\n   * @constructor\n   * @final\n   * @since 1.0\n   * @ojdeprecated {since: '6.0.0', description: 'Use TreeDataProvider instead.'}\n   * @ojtsignore\n   */\n\n  const TreeDataSource = function (data) {\n    TreeDataSource.superclass.constructor.call(this, data);\n  };\n  oj$2._registerLegacyNamespaceProp('TreeDataSource', TreeDataSource);\n  /**\n   * Subclass TreeDataSource to DataSource\n   * @private\n   */\n  oj$2.Object.createSubclass(TreeDataSource, oj$2.DataSource, 'oj.TreeDataSource');\n\n  /**\n   * Returns the number of children for a specified parent.  If the value returned is not >= 0 then it is automatically assumed\n   * that the child count is unknown.\n   * @param {any} parent the parent key.  Specify null if inquiring child count of the root.\n   * @return {number} the number of children for the specified parent.\n   * @method\n   * @name getChildCount\n   * @memberof TreeDataSource\n   * @instance\n   */\n\n  /**\n   * Fetch the children\n   * @param {any} parent the parent key.  Specify null if fetching children from the root.\n   * @param {Object} range information about the range, it must contain the following properties: start, count\n   * @property {number} range.start the start index of the range in which the children are fetched\n   * @property {number} range.count the size of the range in which the children are fetched\n   * @param {Object} callbacks the callbacks to be invoke when fetch children operation is completed.  The valid callback\n   *        types are \"success\" and \"error\"\n   * @property {function(oj.NodeSet)} callbacks.success the callback to invoke when fetch completed successfully.\n   * @property {function({status: *})=} callbacks.error the callback to invoke when fetch children failed.\n   * @param {Object=} options optional parameters for this operation\n   * @property {boolean=} options.queueOnly true if this fetch request is to be queued and not execute yet.  The implementation must maintain\n   *        the order of the fetch operations.  When queueOnly is false/null/undefined, any queued fetch operations are then\n   *        flushed and executed in the order they are queued.  This flag is ignored if the datasource does not support batching\n   * @return {void}\n   * @method\n   * @name fetchChildren\n   * @memberof TreeDataSource\n   * @instance\n   */\n\n  /**\n   * Fetch all children and their children recursively from a specified parent.\n   * @param {any} parent the parent key.  Specify null to fetch everything from the root (i.e. expand all)\n   * @param {Object} callbacks the callbacks to be invoke when fetch children operation is completed.  The valid callback\n   *        types are \"success\" and \"error\"\n   * @property {function(oj.NodeSet)} callbacks.success the callback to invoke when fetch completed successfully.\n   * @property {function({status: *})=} callbacks.error the callback to invoke when fetch children failed.\n   * @param {Object=} options optional parameters for this operation\n   * @property {number=} options.start the index related to parent in which to begin fetching descendants from.  If this is not specified, then value zero will be used\n   * @property {number=} options.maxCount the maximum number of children to fetch.  If a non-positive number is specified, then the value is ignored and\n   *        there is no maximum fetch count\n   * @return {void}\n   * @method\n   * @name fetchDescendants\n   * @memberof TreeDataSource\n   * @instance\n   */\n\n  /**\n   * Performs a sort operation on the tree data.\n   * @param {Object} criteria the sort criteria.  It must contain the following properties: key, direction\n   * @property {any} criteria.key the key identifying the attribute (column) to sort on\n   * @property {'ascending'|'descending'|'none'} criteria.direction the sort direction, valid values are \"ascending\", \"descending\", \"none\" (default)\n   * @param {Object} callbacks callbacks for the sort operation\n   * @property {function():void} callbacks.success the callback to invoke when the sort completed successfully\n   * @property {function({status: *})=} callbacks.error the callback to invoke when sort failed.\n   * @return {void}\n   * @method\n   * @name sort\n   * @memberof TreeDataSource\n   * @instance\n   */\n\n  /**\n   * Returns the current sort criteria of the tree data.\n   * @return {Object} the current sort criteria.  It should contain the following properties: key, direction where\n   *         criteria.key the key identifying the attribute (column) to sort on.  Value is null if it's not sorted.\n   *         criteria.direction the sort direction, valid values are \"ascending\", \"descending\", \"none\" (default)\n   * @ojsignature {target: \"Type\",\n   *               value: \"{key: any, direction: 'ascending'|'descending'|'none'}\",\n   *               for: \"returns\"}\n   * @method\n   * @name getSortCriteria\n   * @memberof TreeDataSource\n   * @instance\n   */\n\n  /**\n   * Moves a row from one location to another (different position within the same parent or a completely different parent)\n   * @param {any} rowToMove the key of the row to move\n   * @param {any} referenceRow the key of the reference row which combined with position are used to determine\n   *        the destination of where the row should moved to.\n   * @param {number|string} position The position of the moved row relative to the reference row.\n   *        This can be a string: \"before\", \"after\", \"inside\", \"first\", \"last\", or the zero based index to position\n   *        the element at a specific point among the reference row's current children.\n   * @param {Object} callbacks the callbacks for the move function\n   * @property {function():void} callbacks.success the callback to invoke when the move completed successfully\n   * @property {function({status: *})=} callbacks.error the callback to invoke when move failed.\n   * @return {void}\n   * @method\n   * @name move\n   * @memberof TreeDataSource\n   * @instance\n   */\n\n  /**\n   * Checks whether a move operation is valid.\n   * @param {any} rowToMove the key of the row to move\n   * @param {any} referenceRow the key of the reference row which combined with position are used to determine\n   *        the destination of where the row should moved to.\n   * @param {number|string} position The position of the moved row relative to the reference row.\n   *        This can be a string: \"before\", \"after\", \"inside\", \"first\", \"last\", or the zero based index to position\n   *        the element at a specific point among the reference row's current children.\n   * @return {string} returns \"valid\" if the move is valid, \"invalid\" otherwise.\n   * @ojsignature {target: \"Type\",\n   *               value: \"'valid'|'invalid'\",\n   *               for: \"returns\"}\n   * @method\n   * @name moveOK\n   * @memberof TreeDataSource\n   * @instance\n   */\n\n  /**\n   * Determines whether this TreeDataSource supports the specified feature.\n   * @param {string} feature the feature in which its capabilities is inquired.  Currently the valid features \"sort\",\n   *        \"move\", \"fetchDescendants\", \"batchFetch\"\n   * @return {string|null} the name of the feature.  Returns null if the feature is not recognized.\n   *         For \"sort\", the valid return values are: \"default\", \"none\".\n   *         For \"fetchDescendants\", the valid return values are: \"enable\", \"disable\", \"suboptimal\".\n   *         For \"move\", the valid return values are: \"default\", \"none\".\n   *         For \"batchFetch\", the valid return values are: \"enable\", \"disable\".\n   * @method\n   * @name getCapability\n   * @memberof TreeDataSource\n   * @instance\n   */\n\n  // Define a mapping variable that maps the return value of the module to the name used in the callback function of a require call.\n  var DataSourceCommon = {};\n  DataSourceCommon.DataGridDataSource = oj.DataGridDataSource;\n\n  exports.DataGridDataSource = DataGridDataSource;\n  exports.DataSource = DataSource;\n  exports.DataSourceCommon = DataSourceCommon;\n  exports.DiagramDataSource = DiagramDataSource;\n  exports.TableDataSource = TableDataSource;\n  exports.TreeDataSource = TreeDataSource;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n});\n","/**\n * @license\n * Copyright (c) 2014, 2023, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\ndefine(['ojs/ojpopupcore', 'ojs/ojbutton', 'jqueryui-amd/widgets/mouse', 'jqueryui-amd/widgets/draggable', 'jquery', 'ojs/ojcore-base', 'ojs/ojdomutils', 'ojs/ojthemeutils', 'ojs/ojcomponentcore', 'ojs/ojanimation', 'ojs/ojfocusutils', 'ojs/ojcustomelement-utils', 'ojs/ojconfig'], function (ojpopupcore, ojbutton, mouse, draggable, $, oj, DomUtils, ThemeUtils, Components, AnimationUtils, FocusUtils, ojcustomelementUtils, Config) { 'use strict';\n\n  $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n  oj = oj && Object.prototype.hasOwnProperty.call(oj, 'default') ? oj['default'] : oj;\n  FocusUtils = FocusUtils && Object.prototype.hasOwnProperty.call(FocusUtils, 'default') ? FocusUtils['default'] : FocusUtils;\n\n  (function () {\n    const OJ_RESIZABLE_HANDLE_SELECTOR = '.oj-resizable-handle';\n    const OJ_RESIZABLE_RESIZE = 'oj-resizable-alsoresize';\n\n    $.widget('oj.ojResizable', {\n      version: '1.0.0',\n      widgetEventPrefix: 'oj',\n      options: {\n        // ///////////////////////////////////////////////////////////////////////////////////\n        //\n        // Mouse Options (copied)\n        //\n        // ///////////////////////////////////////////////////////////////////////////////////\n\n        /**\n         *\n         * @private\n         * @expose\n         * @memberof! oj.ojResizable\n         * @instance\n         *\n         */\n        cancel: 'input,textarea,button,select,option',\n        /**\n         *\n         * @private\n         * @expose\n         * @memberof! oj.ojResizable\n         * @instance\n         *\n         */\n        distance: 1,\n        /**\n         *\n         * @private\n         * @expose\n         * @memberof! oj.ojResizable\n         * @instance\n         *\n         */\n        delay: 0,\n        // ///////////////////////////////////////////////////////////////////////////////////\n        //\n        // Resize Options\n        //\n        // ///////////////////////////////////////////////////////////////////////////////////\n\n        /**\n         *\n         * @private\n         * @expose\n         * @memberof! oj.ojResizable\n         * @instance\n         *\n         */\n        maxHeight: null,\n        /**\n         *\n         * @private\n         * @expose\n         * @memberof! oj.ojResizable\n         * @instance\n         *\n         */\n        maxWidth: null,\n        /**\n         *\n         * @private\n         * @expose\n         * @memberof! oj.ojResizable\n         * @instance\n         *\n         */\n        minHeight: 10,\n        /**\n         *\n         * @private\n         * @expose\n         * @memberof! oj.ojResizable\n         * @instance\n         *\n         */\n        minWidth: 10,\n        /**\n         *\n         * @private\n         * @expose\n         * @memberof! oj.ojResizable\n         * @instance\n         *\n         */\n        alsoResize: false,\n        /**\n         *\n         * @private\n         * @expose\n         * @memberof! oj.ojResizable\n         * @instance\n         *\n         */\n        animate: false,\n        /**\n         *\n         * @private\n         * @expose\n         * @memberof! oj.ojResizable\n         * @instance\n         *\n         */\n        animateDuration: 'slow',\n        /**\n         *\n         * @private\n         * @expose\n         * @memberof! oj.ojResizable\n         * @instance\n         *\n         */\n        animateEasing: 'swing',\n        /**\n         *\n         * @private\n         * @expose\n         * @memberof! oj.ojResizable\n         * @instance\n         *\n         */\n        containment: false,\n        /**\n         *\n         * @private\n         * @expose\n         * @memberof! oj.ojResizable\n         * @instance\n         *\n         */\n        ghost: false,\n        /**\n         *\n         * @private\n         * @expose\n         * @memberof! oj.ojResizable\n         * @instance\n         *\n         */\n        grid: false,\n        /**\n         *\n         * @private\n         * @expose\n         * @memberof! oj.ojResizable\n         * @instance\n         *\n         */\n        handles: 'e,s,se',\n        /**\n         *\n         * @private\n         * @expose\n         * @memberof! oj.ojResizable\n         * @instance\n         *\n         */\n        helper: false,\n        // See #7960\n        // zIndex: 90,\n\n        // ///////////////\n        // callbacks\n        // ///////////////\n\n        /**\n         * Triggered when the ojResizable is resized.\n         *\n         * @private\n         * @expose\n         * @event\n         * @name resize\n         * @memberof! oj.ojResizable\n         * @instance\n         * @property {Event} event <code class=\"prettyprint\">jQuery</code> event object\n         * @property {Object} ui Empty object included for consistency with other events\n         *\n         * @example <caption>Initialize the resizable with the <code class=\"prettyprint\">resize</code> callback specified:</caption>\n         * $( \".selector\" ).ojResizable({\n         *     \"resize\": function( event, ui ) {}\n         * });\n         *\n         * @example <caption>Bind an event listener to the <code class=\"prettyprint\">ojresize</code> event:</caption>\n         * $( \".selector\" ).on( \"ojresize\", function( event, ui ) {} );\n         */\n        resize: null,\n        /**\n         * Triggered on the start of a resize operation.\n         *\n         * @private\n         * @expose\n         * @event\n         * @name start\n         * @memberof! oj.ojResizable\n         * @instance\n         * @property {Event} event <code class=\"prettyprint\">jQuery</code> event object\n         * @property {Object} ui Empty object included for consistency with other events\n         *\n         * @example <caption>Initialize the resizable with the <code class=\"prettyprint\">start</code> callback specified:</caption>\n         * $( \".selector\" ).ojResizable({\n         *     \"start\": function( event, ui ) {}\n         * });\n         *\n         * @example <caption>Bind an event listener to the <code class=\"prettyprint\">ojstart</code> event:</caption>\n         * $( \".selector\" ).on( \"ojstart\", function( event, ui ) {} );\n         */\n        // note - jqui doc has .on(\"resizestart\"\n        start: null,\n        /**\n         * Triggered on the end of a resize operation.\n         *\n         * @private\n         * @expose\n         * @event\n         * @name stop\n         * @memberof! oj.ojResizable\n         * @instance\n         * @property {Event} event <code class=\"prettyprint\">jQuery</code> event object\n         * @property {Object} ui Empty object included for consistency with other events\n         *\n         * @example <caption>Initialize the resizable with the <code class=\"prettyprint\">stop</code> callback specified:</caption>\n         * $( \".selector\" ).ojResizable({\n         *     \"stop\": function( event, ui ) {}\n         * });\n         *\n         * @example <caption>Bind an event listener to the <code class=\"prettyprint\">ojstop</code> event:</caption>\n         * $( \".selector\" ).on( \"ojstop\", function( event, ui ) {} );\n         */\n        // note - jqui doc has .on(\"resizestop\"\n        stop: null\n      },\n      // ///////////////////////////////////////////////////////////////////////////////////\n      //\n      // Original Resize Functions\n      //\n      // ///////////////////////////////////////////////////////////////////////////////////\n\n      _num: function (value) {\n        return parseInt(value, 10) || 0;\n      },\n      _isNumber: function (value) {\n        return !isNaN(parseInt(value, 10));\n      },\n      _hasScroll: function (_el, a) {\n        var el = _el;\n        if ($(el).css('overflow') === 'hidden') {\n          return false;\n        }\n\n        var scroll = a && a === 'left' ? 'scrollLeft' : 'scrollTop';\n        var has = false;\n\n        if (el[scroll] > 0) {\n          return true;\n        }\n\n        // TODO: determine which cases actually cause this to happen\n        // if the element doesn't have the scroll set, see if it's possible to\n        // set the scroll\n        el[scroll] = 1;\n        has = el[scroll] > 0;\n        el[scroll] = 0;\n        return has;\n      },\n      /**\n       * Triggered when the ojResizable is created.\n       *\n       * @private\n       * @expose\n       * @event\n       * @name create\n       * @memberof! oj.ojResizable\n       * @instance\n       * @property {Event} event <code class=\"prettyprint\">jQuery</code> event object\n       * @property {Object} ui Empty object included for consistency with other events\n       *\n       * @example <caption>Initialize the resizable with the <code class=\"prettyprint\">create</code> callback specified:</caption>\n       * $( \".selector\" ).ojResizable({\n       *     \"create\": function( event, ui ) {}\n       * });\n       *\n       * @example <caption>Bind an event listener to the <code class=\"prettyprint\">ojcreate</code> event:</caption>\n       * $( \".selector\" ).on( \"ojcreate\", function( event, ui ) {} );\n       */\n      // note - jqui has on(\"resizecreate\", ... need to verify if we need some form of \"ojcreate\".\n      _create: function () {\n        this._super();\n\n        var n;\n        var i;\n        var handle;\n        var axis;\n        var hname;\n        var that = this;\n        var o = this.options;\n\n        //\n        // Create an instance of the 3rd party jqueryui mouse widget.\n        //\n\n        var mouseConstructor = this.element.mouse.bind(this.element);\n        mouseConstructor();\n        this.mouse = mouseConstructor('instance');\n\n        //\n        // Because we aggregating the mouse widget (and not extending it),\n        // we override the protected methods of this mouse instance.\n        //\n\n        this.mouse._mouseCapture = function (event) {\n          return that._mouseCapture(event);\n        };\n\n        this.mouse._mouseStart = function (event) {\n          return that._mouseStart(event);\n        };\n\n        this.mouse._mouseDrag = function (event) {\n          return that._mouseDrag(event);\n        };\n\n        this.mouse._mouseStop = function (event) {\n          if (this.element) {\n            this.element.focus();\n          }\n          return that._mouseStop(event);\n        };\n\n        this.element.addClass('oj-resizable');\n\n        $.extend(this, {\n          originalElement: this.element,\n          _proportionallyResizeElements: [],\n          // _helper: o.helper || o.ghost || o.animate ? o.helper || \"oj-resizable-helper\" : null\n          _helper: null\n        });\n\n        this._initialResize = true;\n\n        this.handles =\n          o.handles ||\n          (!$(OJ_RESIZABLE_HANDLE_SELECTOR, this.element).length\n            ? 'e,s,se'\n            : {\n                n: '.oj-resizable-n',\n                e: '.oj-resizable-e',\n                s: '.oj-resizable-s',\n                w: '.oj-resizable-w',\n                se: '.oj-resizable-se',\n                sw: '.oj-resizable-sw',\n                ne: '.oj-resizable-ne',\n                nw: '.oj-resizable-nw'\n              });\n\n        if (this.handles.constructor === String) {\n          if (this.handles === 'all') {\n            this.handles = 'n,e,s,w,se,sw,ne,nw';\n          }\n\n          n = this.handles.split(',');\n          this.handles = {};\n\n          for (i = 0; i < n.length; i++) {\n            handle = $.trim(n[i]);\n            hname = 'oj-resizable-' + handle;\n            axis = $(\"<div class='oj-resizable-handle \" + hname + \"'></div>\");\n\n            this.handles[handle] = '.oj-resizable-' + handle;\n            this.element.append(axis); // @HTMLUpdateOK\n          }\n        }\n\n        var keys = Object.keys(this.handles);\n        for (i = 0; i < keys.length; i++) {\n          var k = keys[i];\n          if (this.handles[k].constructor === String) {\n            this.handles[k] = this.element.children(this.handles[k]).first().show();\n          }\n        }\n\n        this._handles = $(OJ_RESIZABLE_HANDLE_SELECTOR, this.element);\n\n        this._handles.mouseover(function () {\n          if (!that.resizing) {\n            if (this.className) {\n              axis = this.className.match(/oj-resizable-(se|sw|ne|nw|n|e|s|w)/i);\n            }\n            that.axis = axis && axis[1] ? axis[1] : 'se';\n          }\n        });\n\n        this.mouse._mouseInit();\n      },\n      /**\n       * Remove the ojResizable functionality completely.\n       * This will return the element back to its pre-init state.\n       *\n       * <p>This method does not accept any arguments.\n       *\n       * @private\n       * @expose\n       * @method\n       * @name oj.ojResizable#destroy\n       * @memberof! oj.ojResizable\n       * @instance\n       *\n       * @example <caption>Invoke the <code class=\"prettyprint\">destroy</code> method:</caption>\n       * var destroy = $( \".selector\" ).ojResizable( \"destroy\" );\n       */\n\n      _destroy: function () {\n        if (this.mouse) {\n          this.mouse._mouseDestroy();\n        }\n\n        try {\n          this.mouse.destroy();\n          this.mouse = null;\n        } catch (e) {\n          // ignore\n        }\n\n        var _destroy = function (exp) {\n          $(exp)\n            .removeClass('oj-resizable oj-resizable-disabled oj-resizable-resizing')\n            .removeData('resizable')\n            .removeData('oj-resizable')\n            .unbind('.resizable')\n            .find(OJ_RESIZABLE_HANDLE_SELECTOR)\n            .remove();\n        };\n\n        _destroy(this.originalElement);\n\n        return this;\n      },\n      _mouseCapture: function (event) {\n        var capture = false;\n        var keys = Object.keys(this.handles);\n\n        for (var i = 0; i < keys.length; i++) {\n          var handle = $(this.handles[keys[i]])[0];\n          if (handle === event.target || $.contains(handle, event.target)) {\n            capture = true;\n          }\n        }\n\n        return !this.options.disabled && capture;\n      },\n      _mouseStart: function (event) {\n        var curleft;\n        var curtop;\n        var cursor;\n        var o = this.options;\n        var iniPos = this.element.position();\n        var el = this.element;\n\n        this.resizing = true;\n\n        // Bugfix for http://bugs.jqueryui.com/ticket/1749\n        if (/absolute/.test(el.css('position'))) {\n          el.css({ position: 'absolute', top: el.css('top'), left: el.css('left') });\n        } else if (el.is('.oj-draggable')) {\n          el.css({ position: 'absolute', top: iniPos.top, left: iniPos.left });\n        }\n\n        this._renderProxy();\n\n        curleft = this._num(this.helper.css('left'));\n        curtop = this._num(this.helper.css('top'));\n\n        if (o.containment) {\n          curleft += $(o.containment).scrollLeft() || 0;\n          curtop += $(o.containment).scrollTop() || 0;\n        }\n\n        this.offset = this.helper.offset();\n        this.position = { left: curleft, top: curtop };\n        this.size = { width: el.width(), height: el.height() };\n        this.originalSize = { width: el.width(), height: el.height() };\n        this.originalPosition = { left: curleft, top: curtop };\n        this.sizeDiff = {\n          width: el.outerWidth() - el.width(),\n          height: el.outerHeight() - el.height()\n        };\n        this.originalMousePosition = { left: event.pageX, top: event.pageY };\n\n        this.aspectRatio = this.originalSize.width / this.originalSize.height || 1;\n\n        cursor = /** @type string */ ($('.oj-resizable-' + this.axis).css('cursor'));\n        $('body').css('cursor', cursor === 'auto' ? this.axis + '-resize' : cursor);\n\n        el.addClass('oj-resizable-resizing');\n\n        this._propagate('start', event);\n\n        this._alsoresize_start(event);\n        this._containment_start(event);\n\n        return true;\n      },\n      _mouseDrag: function (event) {\n        var data;\n        var el = this.helper;\n        var props = {};\n        var smp = this.originalMousePosition;\n        var a = this.axis;\n        var dx = event.pageX - smp.left || 0;\n        var dy = event.pageY - smp.top || 0;\n        var trigger = this._change[a];\n\n        this.prevPosition = {\n          top: this.position.top,\n          left: this.position.left\n        };\n        this.prevSize = {\n          width: this.size.width,\n          height: this.size.height\n        };\n\n        if (!trigger) {\n          return false;\n        }\n\n        data = trigger.apply(this, [event, dx, dy]);\n\n        this._updateVirtualBoundaries(event.shiftKey);\n        if (event.shiftKey) {\n          data = this._updateRatio(data, event);\n        }\n\n        data = this._respectSize(data, event);\n\n        this._updateCache(data);\n\n        this._propagate('resize', event);\n\n        this._alsoresize_resize(event, this.ui());\n        this._containment_resize(event, this.ui());\n\n        if (this.position.top !== this.prevPosition.top) {\n          props.top = this.position.top + 'px';\n        }\n        if (this.position.left !== this.prevPosition.left) {\n          props.left = this.position.left + 'px';\n        }\n        if (this.size.width !== this.prevSize.width) {\n          props.width = this.size.width + 'px';\n        }\n        if (this.size.height !== this.prevSize.height) {\n          props.height = this.size.height + 'px';\n        }\n        el.css(props);\n\n        if (!this._helper && this._proportionallyResizeElements.length) {\n          this._proportionallyResize();\n        }\n\n        if (!$.isEmptyObject(props)) {\n          this._trigger('resize', event, this.ui());\n        }\n\n        return false;\n      },\n      _mouseStop: function (event) {\n        this.resizing = false;\n        $('body').css('cursor', 'auto');\n\n        this.element.removeClass('oj-resizable-resizing');\n\n        this._propagate('stop', event);\n\n        this._alsoresize_stop(event);\n        this._containment_stop(event);\n\n        return false;\n      },\n      _updateVirtualBoundaries: function (forceAspectRatio) {\n        var pMinWidth;\n        var pMaxWidth;\n        var pMinHeight;\n        var pMaxHeight;\n        var b;\n        var o = this.options;\n\n        b = {\n          minWidth: this._isNumber(o.minWidth) ? o.minWidth : 0,\n          maxWidth: this._isNumber(o.maxWidth) ? o.maxWidth : Infinity,\n          minHeight: this._isNumber(o.minHeight) ? o.minHeight : 0,\n          maxHeight: this._isNumber(o.maxHeight) ? o.maxHeight : Infinity\n\n          /*\n             minWidth: 0,\n             maxWidth: Infinity,\n             minHeight: 0,\n             maxHeight: Infinity\n             */\n        };\n\n        if (forceAspectRatio) {\n          pMinWidth = b.minHeight * this.aspectRatio;\n          pMinHeight = b.minWidth / this.aspectRatio;\n          pMaxWidth = b.maxHeight * this.aspectRatio;\n          pMaxHeight = b.maxWidth / this.aspectRatio;\n\n          if (pMinWidth > b.minWidth) {\n            b.minWidth = pMinWidth;\n          }\n          if (pMinHeight > b.minHeight) {\n            b.minHeight = pMinHeight;\n          }\n          if (pMaxWidth < b.maxWidth) {\n            b.maxWidth = pMaxWidth;\n          }\n          if (pMaxHeight < b.maxHeight) {\n            b.maxHeight = pMaxHeight;\n          }\n        }\n        this._vBoundaries = b;\n      },\n      _updateCache: function (data) {\n        this.offset = this.helper.offset();\n        if (this._isNumber(data.left)) {\n          this.position.left = data.left;\n        }\n        if (this._isNumber(data.top)) {\n          this.position.top = data.top;\n        }\n        if (this._isNumber(data.height)) {\n          this.size.height = data.height;\n        }\n        if (this._isNumber(data.width)) {\n          this.size.width = data.width;\n        }\n      },\n      _updateRatio: function (_data) {\n        var data = _data;\n        var cpos = this.position;\n        var csize = this.size;\n        var a = this.axis;\n\n        if (this._isNumber(data.height)) {\n          data.width = data.height * this.aspectRatio;\n        } else if (this._isNumber(data.width)) {\n          data.height = data.width / this.aspectRatio;\n        }\n\n        if (a === 'sw') {\n          data.left = cpos.left + (csize.width - data.width);\n          data.top = null;\n        }\n        if (a === 'nw') {\n          data.top = cpos.top + (csize.height - data.height);\n          data.left = cpos.left + (csize.width - data.width);\n        }\n\n        return data;\n      },\n      _respectSize: function (_data) {\n        var data = _data;\n        var o = this._vBoundaries;\n        var a = this.axis;\n        var ismaxw = this._isNumber(data.width) && o.maxWidth && o.maxWidth < data.width;\n        var ismaxh = this._isNumber(data.height) && o.maxHeight && o.maxHeight < data.height;\n        var isminw = this._isNumber(data.width) && o.minWidth && o.minWidth > data.width;\n        var isminh = this._isNumber(data.height) && o.minHeight && o.minHeight > data.height;\n        var dw = this.originalPosition.left + this.originalSize.width;\n        var dh = this.position.top + this.size.height;\n        var cw = /sw|nw|w/.test(a);\n        var ch = /nw|ne|n/.test(a);\n\n        if (isminw) {\n          data.width = o.minWidth;\n        }\n        if (isminh) {\n          data.height = o.minHeight;\n        }\n        if (ismaxw) {\n          data.width = o.maxWidth;\n        }\n        if (ismaxh) {\n          data.height = o.maxHeight;\n        }\n\n        if (isminw && cw) {\n          data.left = dw - o.minWidth;\n        }\n        if (ismaxw && cw) {\n          data.left = dw - o.maxWidth;\n        }\n        if (isminh && ch) {\n          data.top = dh - o.minHeight;\n        }\n        if (ismaxh && ch) {\n          data.top = dh - o.maxHeight;\n        }\n\n        // Fixing jump error on top/left \n        if (!data.width && !data.height && !data.left && data.top) {\n          data.top = null;\n        } else if (!data.width && !data.height && !data.top && data.left) {\n          data.left = null;\n        }\n\n        return data;\n      },\n      _proportionallyResize: function () {\n        if (!this._proportionallyResizeElements.length) {\n          return;\n        }\n\n        var i;\n        var j;\n        var borders;\n        var paddings;\n        var prel;\n        var element = this.helper || this.element;\n\n        for (i = 0; i < this._proportionallyResizeElements.length; i++) {\n          prel = this._proportionallyResizeElements[i];\n\n          if (!this.borderDif) {\n            this.borderDif = [];\n            borders = [\n              prel.css('borderTopWidth'),\n              prel.css('borderRightWidth'),\n              prel.css('borderBottomWidth'),\n              prel.css('borderLeftWidth')\n            ];\n            paddings = [\n              prel.css('paddingTop'),\n              prel.css('paddingRight'),\n              prel.css('paddingBottom'),\n              prel.css('paddingLeft')\n            ];\n\n            for (j = 0; j < borders.length; j++) {\n              this.borderDif[j] = (parseInt(borders[j], 10) || 0) + (parseInt(paddings[j], 10) || 0);\n            }\n          }\n\n          prel.css({\n            height: element.height() - this.borderDif[0] - this.borderDif[2] || 0,\n            width: element.width() - this.borderDif[1] - this.borderDif[3] || 0\n          });\n        }\n      },\n      _renderProxy: function () {\n        var el = this.element;\n        this.elementOffset = el.offset();\n\n        this.helper = this.element;\n      },\n      _change: {\n        e: function (event, dx) {\n          return { width: this.originalSize.width + dx };\n        },\n        w: function (event, dx) {\n          var cs = this.originalSize;\n          var sp = this.originalPosition;\n          return { left: sp.left + dx, width: cs.width - dx };\n        },\n        n: function (event, dx, dy) {\n          var cs = this.originalSize;\n          var sp = this.originalPosition;\n          return { top: sp.top + dy, height: cs.height - dy };\n        },\n        s: function (event, dx, dy) {\n          return { height: this.originalSize.height + dy };\n        },\n        se: function (event, dx, dy) {\n          return $.extend(\n            this._change.s.apply(this, arguments),\n            this._change.e.apply(this, [event, dx, dy])\n          );\n        },\n        sw: function (event, dx, dy) {\n          return $.extend(\n            this._change.s.apply(this, arguments),\n            this._change.w.apply(this, [event, dx, dy])\n          );\n        },\n        ne: function (event, dx, dy) {\n          return $.extend(\n            this._change.n.apply(this, arguments),\n            this._change.e.apply(this, [event, dx, dy])\n          );\n        },\n        nw: function (event, dx, dy) {\n          return $.extend(\n            this._change.n.apply(this, arguments),\n            this._change.w.apply(this, [event, dx, dy])\n          );\n        }\n      },\n      _propagate: function (n, event) {\n        //\n        // Propage resizeStart and resizeStop events.\n        // (resize is propagated internally by drag)\n        //\n\n        // $.ui.plugin.call(this, n, [event, this.ui()]);\n        if (n !== 'resize') {\n          this._trigger(n, event, this.ui());\n        }\n      },\n      // ////////////////////////////////////////////////////////////////////////////////\n      //\n      // Code block that implements functionality formerly in defined as a plugin.\n      // (note: plugin code is deprecated)\n      //\n      // The alsoResize functionality \"also resizes\" the dialog body.\n      // This approach allows the footer area to remain at a fixed height\n      // the dialog is resized.\n      //\n      // $.ui.plugin.add(\"resizable\", \"alsoResize\", {\n      //\n      // ///////////////////////////////////////////////////////////////////////////////\n\n      _alsoresize_start: function () {\n        // var that = $(this).resizable( \"instance\" ),\n        // var that = $(this).data(\"oj-resizable\"), // w\n        var that = this;\n        var o = that.options;\n\n        var _store = function (exp) {\n          $(exp).each(function () {\n            var el = $(this);\n\n            el.data(OJ_RESIZABLE_RESIZE, {\n              width: parseInt(el.width(), 10),\n              height: parseInt(el.height(), 10),\n              left: parseInt(el.css('left'), 10),\n              top: parseInt(el.css('top'), 10)\n            });\n          });\n        };\n\n        if (typeof o.alsoResize === 'object' && !o.alsoResize.parentNode) {\n          if (o.alsoResize.length) {\n            o.alsoResize = o.alsoResize[0];\n            _store(o.alsoResize);\n          } else {\n            $.each(o.alsoResize, function (exp) {\n              _store(exp);\n            });\n          }\n        } else {\n          _store(o.alsoResize);\n        }\n      },\n      _alsoresize_resize: function (event, ui) {\n        // var that = $(this).resizable( \"instance\" ),\n        // var that = $(this).data(\"oj-resizable\"), // v\n        var that = this;\n\n        var o = that.options;\n        var os = that.originalSize;\n        var op = that.originalPosition;\n\n        var delta = {\n          height: that.size.height - os.height || 0,\n          width: that.size.width - os.width || 0,\n          top: that.position.top - op.top || 0,\n          left: that.position.left - op.left || 0\n        };\n        var _alsoResize = function (exp, c) {\n          $(exp).each(function () {\n            var el = $(this);\n            var start = $(this).data(OJ_RESIZABLE_RESIZE);\n            var style = {};\n            var css;\n            if (c && c.length) {\n              css = c;\n            } else if (el.parents(ui.originalElement[0]).length) {\n              css = ['width', 'height'];\n            } else {\n              css = ['width', 'height', 'top', 'left'];\n            }\n\n            $.each(css, function (i, prop) {\n              var sum = (start[prop] || 0) + (delta[prop] || 0);\n              if (sum && sum >= 0) {\n                style[prop] = sum;\n              }\n            });\n\n            el.css(style);\n          });\n        };\n\n        if (typeof o.alsoResize === 'object' && !o.alsoResize.nodeType) {\n          $.each(o.alsoResize, function (exp, c) {\n            _alsoResize(exp, c);\n          });\n        } else {\n          _alsoResize(o.alsoResize, null);\n        }\n      },\n      _alsoresize_stop: function () {\n        $(this).removeData(OJ_RESIZABLE_RESIZE);\n      },\n      // ///////////////////////////////////////////////////////////////////////////////\n      //\n      // Code block for containment functionality (formerly defined as a plugin)\n      //\n      // $.ui.plugin.add( \"resizable\", \"containment\", {\n      //\n      // ///////////////////////////////////////////////////////////////////////////////\n\n      _containment_start: function () {\n        var element;\n        var p;\n        var co;\n        var ch;\n        var cw;\n        var width;\n        var height;\n\n        var that = this;\n\n        var o = that.options;\n        var el = that.element;\n        var oc = o.containment;\n        var ce;\n        if (oc instanceof $) {\n          ce = oc.get(0);\n        } else if (/parent/.test(oc)) {\n          ce = el.parent().get(0);\n        } else {\n          ce = oc;\n        }\n\n        if (!ce) {\n          return;\n        }\n\n        that.containerElement = $(ce);\n\n        if (/document/.test(oc) || oc === document) {\n          that.containerOffset = {\n            left: 0,\n            top: 0\n          };\n          that.containerPosition = {\n            left: 0,\n            top: 0\n          };\n\n          that.parentData = {\n            element: $(document),\n            left: 0,\n            top: 0,\n            width: $(document).width(),\n            height: $(document).height() || document.body.parentNode.scrollHeight\n          };\n        } else {\n          element = $(ce);\n          p = [];\n          $(['Top', 'Right', 'Left', 'Bottom']).each(function (i, name) {\n            p[i] = that._num(element.css('padding' + name));\n          });\n\n          that.containerOffset = element.offset();\n          that.containerPosition = element.position();\n          that.containerSize = {\n            height: element.innerHeight() - p[3],\n            width: element.innerWidth() - p[1]\n          };\n\n          co = that.containerOffset;\n          ch = that.containerSize.height;\n          cw = that.containerSize.width;\n          width = that._hasScroll(ce, 'left') ? ce.scrollWidth : cw;\n          height = that._hasScroll(ce) ? ce.scrollHeight : ch;\n\n          that.parentData = {\n            element: ce,\n            left: co.left,\n            top: co.top,\n            width: width,\n            height: height\n          };\n        }\n      },\n      _containment_resize: function (event, ui) {\n        var woset;\n        var hoset;\n        var isParent;\n        var isOffsetRelative;\n\n        // var that = $(this).data(\"oj-resizable\");\n        var that = this;\n\n        var o = that.options;\n        var co = that.containerOffset;\n        var cp = that.position;\n        var pRatio = event.shiftKey;\n        var cop = {\n          top: 0,\n          left: 0\n        };\n        var ce = that.containerElement;\n        var continueResize = true;\n\n        if (ce[0] !== document && /static/.test(ce.css('position'))) {\n          cop = co;\n        }\n\n        if (cp.left < (that._helper ? co.left : 0)) {\n          that.size.width += that._helper\n            ? that.position.left - co.left\n            : that.position.left - cop.left;\n          if (pRatio) {\n            that.size.height = that.size.width / that.aspectRatio;\n            continueResize = false;\n          }\n          that.position.left = o.helper ? co.left : 0;\n        }\n\n        if (cp.top < (that._helper ? co.top : 0)) {\n          that.size.height += that._helper ? that.position.top - co.top : that.position.top;\n          if (pRatio) {\n            that.size.width = that.size.height * that.aspectRatio;\n            continueResize = false;\n          }\n          that.position.top = that._helper ? co.top : 0;\n        }\n\n        that.offset.left = that.parentData.left + that.position.left;\n        that.offset.top = that.parentData.top + that.position.top;\n\n        woset = Math.abs(\n          (that._helper ? that.offset.left - cop.left : that.offset.left - co.left) +\n            that.sizeDiff.width\n        );\n        hoset = Math.abs(\n          (that._helper ? that.offset.top - cop.top : that.offset.top - co.top) + that.sizeDiff.height\n        );\n\n        isParent = that.containerElement.get(0) === that.element.parent().get(0);\n        isOffsetRelative = /relative|absolute/.test(that.containerElement.css('position'));\n\n        if (isParent && isOffsetRelative) {\n          woset -= Math.abs(that.parentData.left);\n        }\n\n        if (woset + that.size.width >= that.parentData.width) {\n          that.size.width = that.parentData.width - woset;\n          if (pRatio) {\n            that.size.height = that.size.width / that.aspectRatio;\n            continueResize = false;\n          }\n        }\n\n        if (hoset + that.size.height >= that.parentData.height) {\n          that.size.height = that.parentData.height - hoset;\n          if (pRatio) {\n            that.size.width = that.size.height * that.aspectRatio;\n            continueResize = false;\n          }\n        }\n\n        if (!continueResize) {\n          that.position.left = ui.prevPosition.left;\n          that.position.top = ui.prevPosition.top;\n          that.size.width = ui.prevSize.width;\n          that.size.height = ui.prevSize.height;\n        }\n      },\n      _containment_stop: function () {\n        var that = this;\n        var o = that.options;\n        var co = that.containerOffset;\n        var cop = that.containerPosition;\n        var ce = that.containerElement;\n        var helper = $(that.helper);\n        var ho = helper.offset();\n        var w = helper.outerWidth() - that.sizeDiff.width;\n        var h = helper.outerHeight() - that.sizeDiff.height;\n\n        if (that._helper && !o.animate && /relative/.test(ce.css('position'))) {\n          $(this).css({\n            left: ho.left - cop.left - co.left,\n            width: w,\n            height: h\n          });\n        }\n\n        if (that._helper && !o.animate && /static/.test(ce.css('position'))) {\n          $(this).css({\n            left: ho.left - cop.left - co.left,\n            width: w,\n            height: h\n          });\n        }\n      },\n      ui: function () {\n        return {\n          originalElement: this.originalElement,\n          element: this.element,\n          helper: this.helper,\n          position: this.position,\n          size: this.size,\n          originalSize: this.originalSize,\n          originalPosition: this.originalPosition,\n          prevSize: this.prevSize,\n          prevPosition: this.prevPosition\n        };\n      }\n    });\n  })();\n\n  (function () {\n    // class name constants\n    var /** @const */ OJD_BODY = 'oj-dialog-body';\n    var /** @const */ OJD_CONTAINER = 'oj-dialog-container';\n    var /** @const */ OJD_CONTENT = 'oj-dialog-content';\n    var /** @const */ OJD_FOOTER = 'oj-dialog-footer';\n    var /** @const */ OJD_HEADER = 'oj-dialog-header';\n    var /** @const */ OJD_HEADER_CLOSE = 'oj-dialog-header-close';\n    var /** @const */ OJD_HEADER_CLOSE_WRAPPER = 'oj-dialog-header-close-wrapper';\n    var /** @const */ OJD_OPTION_DEFAULTS = 'oj-dialog-option-defaults';\n    var /** @const */ OJD_HELPER_ELEMENT_DIALOG = 'oj-helper-element-in-dialog-with-accesskey';\n    var /** @const */ OJD_ACCESS_KEY = 'data-ojAccessKey';\n\n    var /** @const */ OJD_TITLE_CLASS = '.oj-dialog-title';\n    var /** @const */ OJD_FOOTER_CLASS = '.oj-dialog-footer';\n    var /** @const */ OJD_HEADER_CLASS = '.oj-dialog-header';\n    var /** @const */ OJD_BODY_CLASS = '.oj-dialog-body';\n    var /** @const */ OJD_CONTENT_CLASS = '.oj-dialog-content';\n    var /** @const */ OJD_CONTAINER_CLASS = '.oj-dialog-container';\n\n    var /** @const */ OJ_RESIZABLE = 'oj-resizable';\n    var /** @const */ OJ_RESIZABLE_N = 'oj-resizable-n';\n    var /** @const */ OJ_RESIZABLE_E = 'oj-resizable-e';\n    var /** @const */ OJ_RESIZABLE_S = 'oj-resizable-s';\n    var /** @const */ OJ_RESIZABLE_W = 'oj-resizable-w';\n    var /** @const */ OJ_RESIZABLE_SE = 'oj-resizable-se';\n    var /** @const */ OJ_RESIZABLE_SW = 'oj-resizable-sw';\n    var /** @const */ OJ_RESIZABLE_NE = 'oj-resizable-ne';\n    var /** @const */ OJ_RESIZABLE_NW = 'oj-resizable-nw';\n\n    var /** @const */ OJ_DRAGGABLE = 'oj-draggable';\n\n    var /** @const */ SLOT_BODY = 'body';\n    var /** @const */ SLOT_DEFAULT = '';\n    var /** @const */ SLOT_HEADER = 'header';\n    var /** @const */ SLOT_FOOTER = 'footer';\n    var /** @const */ SLOT_CONTEXTMENU = 'contextMenu';\n\n    /**\n     * @typedef {Object} oj.ojDialog.PositionAlign\n     * @property {\"top\"|\"bottom\"|\"center\"} [vertical] Vertical alignment.\n     * @property {\"start\"|\"end\"|\"left\"|\"center\"|\"right\"} [horizontal] Horizontal alignment. <p>\n     * <ul>\n     *  <li><b>\"start\"</b> evaluates to \"left\" in LTR mode and \"right\" in RTL mode.</li>\n     *  <li><b>\"end\"</b> evaluates to \"right\" in LTR mode and \"left\" in RTL mode.</li>\n     * </ul>\n     *\n     */\n\n    /**\n     * @typedef {Object} oj.ojDialog.PositionPoint\n     * @property {number} [x] Horizontal alignment offset.\n     * @property {number} [y] Vertical alignment offset.\n     */\n\n    /**\n     * @typedef {Object} oj.ojDialog.Position\n     * @property {Object} [my] Defines which edge on the popup to align with the target (\"of\") element.\n     * @property {Object} [at] Defines which position on the target element (\"of\") to align the positioned element\n     *                                  against.\n     * @property {Object} [offset] Defines a point offset in pixels from the (\"my\") alignment.\n     * @property {string|Object} [of] Which element to position the popup against.\n     *\n     * If the value is a string, it should be a selector or the literal string value\n     * of <code class=\"prettyprint\">window</code>.  Otherwise, a point of x,y.  When a point\n     * is used, the values are relative to the whole document.  Page horizontal and vertical\n     * scroll offsets need to be factored into this point - see UIEvent\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/pageX\">pageX</a>,\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/pageY\">pageY</a>.\n     *\n     * @property {\"flip\"|\"fit\"|\"flipfit\"|\"none\"} [collision] Rule for alternate alignment. <p>\n     * <ul>\n     *  <li><b>\"flip\"</b> the element to the opposite side of the target and the\n     *             collision detection is run again to see if it will fit. Whichever side\n     *             allows more of the element to be visible will be used. </li>\n     * <li><b>\"fit\"</b> shift the element away from the edge of the window. </li>\n     * <li><b>\"flipfit\"</b> first applies the flip logic, placing the element\n     *  on whichever side allows more of the element to be visible. Then the fit logic\n     *  is applied to ensure as much of the element is visible as possible.</li>\n     * <li><b>\"none\"</b> no collision detection.</li>\n     * </ul>\n     * @ojsignature [{target:\"Type\", value:\"oj.ojDialog.PositionAlign\", for:\"my\", jsdocOverride:true},\n     *               {target:\"Type\", value:\"oj.ojDialog.PositionAlign\", for:\"at\", jsdocOverride:true},\n     *               {target:\"Type\", value:\"oj.ojDialog.PositionPoint\", for:\"offset\", jsdocOverride:true},\n     *               {target:\"Type\", value:\"string|oj.ojDialog.PositionPoint\", for:\"of\", jsdocOverride:true}]\n     */\n\n    /**\n     * @ojcomponent oj.ojDialog\n     * @augments oj.baseComponent\n     * @since 0.6.0\n     * @ojrole dialog\n     * @ojdisplayname Dialog\n     * @ojshortdesc A dialog displays a popup window that provides information and gathers input from the application user.\n     *\n     * @ojpropertylayout {propertyGroup: \"common\", items: [\"dialogTitle\", \"initialVisibility\", \"style\", \"modality\", \"dragAffordance\", \"cancelBehavior\", \"resizeBehavior\"]}\n     * @ojvbdefaultcolumns 12\n     * @ojvbmincolumns 12\n     *\n     * @ojoracleicon 'oj-ux-ico-dialog'\n     * @ojuxspecs ['dialog']\n     *\n     * @classdesc\n     * <h3 id=\"dialogOverview-section\">\n     *   JET Dialog Component\n     *   <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#dialogOverview-section\"></a>\n     * </h3>\n     * <p>Description: Themeable, WAI-ARIA-compliant dialog component.\n     * A dialog is a floating window that typically contains a title bar and a content area.\n     * The dialog window can be moved by dragging on the title area, and closed with the 'x' icon (by default). Dialogs can also be resized by dragging on edges or corners of the dialog component. </p>\n     *\n     *<p>If the content length exceeds the maximum height, a scrollbar will automatically appear.</p>\n     *\n     *<p>A bottom button bar and semi-transparent modal overlay layer are common options that can be added.</p>\n     *\n     *\n     * <h3 id=\"focus-section\">\n     *   Focus\n     *   <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#focus-section\"></a>\n     * </h3>\n     *\n     *<p>Upon opening a dialog, focus is automatically moved to the first item that matches the following:</p>\n     *<ol>\n     *  <li>The first element within the dialog with the <code>autofocus</code> attribute</li>\n     *  <li>The first <code>:tabbable</code> element within the dialog body</li>\n     *  <li>The first <code>:tabbable</code> element within the dialog footer</li>\n     *  <li>The dialog's close button</li>\n     *  <li>The dialog itself</li>\n     *</ol>\n     *<p>While open, the dialog widget ensures that tabbing cycles focus between elements within the dialog itself, not elements outside of it. Modal dialogs additionally prevent mouse users from clicking on elements outside of the dialog.</p>\n     *\n     *<p>Upon closing a dialog, focus is automatically returned to the element that had focus when the dialog was opened.</p>\n     *\n     * <h3 id=\"touch-section\">\n     *   Touch End User Information\n     *   <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#touch-section\"></a>\n     * </h3>\n     *\n     * {@ojinclude \"name\":\"touchDoc\"}\n     *\n     *\n     * <h3 id=\"keyboard-section\">\n     *   Keyboard End User Information\n     *   <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#keyboard-section\"></a>\n     * </h3>\n     *\n     * {@ojinclude \"name\":\"keyboardDoc\"}\n     *\n     *<p>\n     *<h3>Sizing</h3>\n     *\n     * <p> Dialog dimensions, including <code class=\"prettyprint\"> height, width, min-width, max-width, min-height</code> and <code class=\"prettyprint\">max-height</code> are defined with css variables. The default dialog dimensions are the following:\n     *\n     *<ul>\n     *  <li> <code class=\"prettyprint\">height: auto</code> </li>\n     *  <li> <code class=\"prettyprint\">width: 600px</code> </li>\n     *  <li> <code class=\"prettyprint\">min-width: 200px</code> </li>\n     *  <li> <code class=\"prettyprint\">max-width: 100vw - 3rem</code> </li>\n     *  <li> <code class=\"prettyprint\">max-height: 100vh - 3rem</code> </li>\n     *</ul>\n     *\n     * In most cases, you will want to use the default <code class=\"prettyprint\">height:auto</code>, since this will automatically adjust the height based on the content.\n     * Users can change the dialog dimensions using style attributes:\n     *\n     * <pre class=\"prettyprint\">\n     * <code>\n     * &lt;oj-dialog id=\"wideDialog\" title=\"Wide Dialog\" style=\"width: 400px; min-width: 100px; max-width 500px;\"&gt;\n     *    &lt;div slot=\"body\"&gt;\n     *       &lt;p&gt; Dialog Text\n     *    &lt;/div&gt;\n     * &lt;/oj-dialog&gt;\n     * </code></pre>\n     *\n     * <h3 id=\"a11y-section\">\n     *   Accessibility\n     *   <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#a11y-section\"></a>\n     * </h3>\n     * <h4> role </h4>\n     * By default, the role will be set to dialog.\n     * This can be observed by inspecting the DOM:\n     *\n     * <pre class=\"prettyprint\">\n     * <code>\n     *  &lt;div class=\"ojdialog ...\" role=\"dialog\"&gt;\n     * </code></pre>\n     *\n     * This can be changed using the role attribute. WAI-ARIA recommends that role=\"dialog\" be used if the dialog expects input (such as text input),\n     * otherwise, use the role attribute to assign role=\"alertdialog\".\n     *\n     * <h4> aria-labelledby </h4>\n     *\n     * For both default and user-defined headers, the dialog component takes care of aria-labelledby for you.\n     * The <code class=\"prettyprint\">aria-labelledby</code> attribute is generated automatically (and set to the id of the header's title).\n     * For user-defined headers, the title div is identified by the div that has the <code class=\"prettyprint\">oj-dialog-title</code> class.\n     * Note that user-defined headers must have a title div (in order to meet accesibility requirements).\n     *\n     * <h4> aria-describedby </h4>\n     *\n     * If the dialog contains additional descriptive text besides the dialog title, this text can be associated\n     * with the dialog using the <code class=\"prettyprint\">aria-describedby</code> attribute. Unlike the\n     * <code class=\"prettyprint\">aria-labelledby</code> association, the <code class=\"prettyprint\">aria-describedby</code>\n     * attribute is not generated and set automatically. It is up to the user to specify the attribute\n     * on <code class=\"prettyprint\">oj-dialog</code> and link it to the element containing the additional description:\n     *\n     * <pre class=\"prettyprint\">\n     * <code>\n     * &lt;oj-dialog id=\"dialog\" title=\"Accessible Title\" aria-describedby=\"desc\"&gt;\n     *    &lt;div slot=\"body\"&gt;\n     *       &lt;p id=\"desc\"&gt; This is a dialog with accessible description.\n     *    &lt;/div&gt;\n     * &lt;/oj-dialog&gt;\n     * </code></pre>\n     *\n     * <h3 id=\"reparenting-section\">\n     *   Reparenting\n     *   <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#reparenting-section\"></a>\n     * </h3>\n     *\n     *  <p id=\"reparenting-strategy\">\n     *     When dialogs are open, they will be reparented into a common container in the\n     *     document body and reparented back when closed.  Within this container in the body,\n     *     dialogs will always be top rooted but other types of dialogs used within an open\n     *     dialog will be reparented within the dialog's layer. The dialog's layer defines its\n     *     z-index weight \"stacking context\" and marked by the \"oj-dialog-layer\" style.\n     *     The goal of this design is to maintain as much of the page author's document structure\n     *     while avoiding most of the clipping and positioning issues of a completely inline design.\n     *     Dialogs are assigned the same z-index values  The layering between dialog peers reflect the\n     *     opening order.  In addition, the dialog that has active focus will be assigned a greater z-index\n     *     by way of the \"oj-focus-within\" pseudo selector applied with \"oj-dialog-layer\" selector.\n     *     The page author has control over z-index weights by way of the \"oj-dialog-layer\" selector.\n     *  </p>\n     *  <p>\n     *     There are known caveats with this design. However, these scenarios are considered \"bad use\"\n     *     based on our JET dialog/popup strategy.\n     *  </p>\n     *  <ol>\n     *    <li>Events raised within the dialog will not bubble up to the dialog's original ancestors.  Instead, listeners for menu events should\n     *        be applied to either the dialog's root element, or the document.</li>\n     *    <li>Likewise, developers should not use CSS descendant selectors, or similar logic, that assumes that the dialog will remain a child\n     *        of its original parent.</li>\n     *    <li>Dialogs containing iframes are problematic.  The iframe elements \"may\" fire a HTTP GET request for its src attribute\n     *        each time the iframe is reparented in the document.</li>\n     *    <li>If an iframe is added to the dialog's body, it must not be the first or last tab stop within the dialog or keyboard and VoiceOver\n     *        navigation will not remain within the dialog.</li>\n     *    <li>In some browsers, reparenting a dialog that contains elements having overflow, will cause these overflow elements to\n     *        reset their scrollTop.</li>\n     *  </ol>\n     *\n     * <h3 id=\"rtl-section\">\n     *   Reading direction\n     *   <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#rtl-section\"></a>\n     * </h3>\n     *\n     * <p> Setting the reading direction (LTR or RTL) is supported by setting the <code class=\"prettyprint\">\"dir\"</code> attribute on the\n     * <code class=\"prettyprint\">&lt;html></code> element of the page.  As with any JET component, in the unusual case that the reading direction\n     * is changed post-init, the dialog must be <code class=\"prettyprint\">refresh()</code>ed, or the page must be reloaded.\n     *\n     *<h3>Additional Examples</h3>\n     *\n     * <p> The following defines a basic dialog, with an ok button in the footer:\n     *\n     * <pre class=\"prettyprint\">\n     * <code>\n     * &lt;oj-dialog id=\"dialogWithFooter\" dialog-title=\"Dialog with Footer\" style=\"width: 400px; min-width: 100px; max-width 500px;\"&gt;\n     *    &lt;div slot=\"body\"&gt;\n     *       &lt;p&gt; Dialog Text\n     *    &lt;/div&gt;\n     *    &lt;div slot=\"footer\"&gt;\n     *       &lt;oj-button id=\"okButton\"&gt; OK &lt;/oj-button&gt;\n     *    &lt;/div&gt;\n     * &lt;/oj-dialog&gt;\n     *\n     * </code></pre>\n     *\n     * Note that you will need to define your own event handlers for the ok and close buttons (see the demos for examples of this).\n     *\n     * <p> A dialog with user-defined header is shown next. Arbitrary header content can be defined using a user-defined header.\n     *\n     * <pre class=\"prettyprint\">\n     * <code>\n     * &lt;oj-dialog id=\"dialog\" dialog-title=\"Dialog Title\"&gt;\n     *    &lt;div slot=\"header\"&gt;\n     *       &lt;span id=\"dialog-title-id\" class=\"oj-dialog-title\"&gt; User Defined Header&lt;/span&gt;\n     *    &lt;/div&gt;\n     *    &lt;div slot=\"body\"&gt;\n     *       &lt;p&gt; Dialog Text\n     *    &lt;/div&gt;\n     * &lt;/oj-dialog&gt;\n     * </code></pre>\n     */\n    //-----------------------------------------------------\n    //                   Slots\n    //-----------------------------------------------------\n    /**\n     * <p>The default slot is the dialog's body. The <code class=\"prettyprint\">&lt;oj-dialog></code>\n     * element accepts DOM nodes as children for the default slot.\n     * The default slot can also be named with \"body\".\n     * For styling, the default body slot will be rendered with the <code class=\"prettyprint\">oj-dialog-body</code> class.\n     *\n     * @ojchild Default\n     * @ojshortdesc The default slot is the dialog's body. It is the same as the named \"body\" slot.\n     * @memberof oj.ojDialog\n     * @since 4.0.0\n     *\n     * @example <caption>Initialize the Dialog with body content (using the default slot name):</caption>\n     * &lt;oj-dialog>\n     *   &lt;div>Dialog Content&lt;/div>\n     * &lt;/oj-dialog>\n     *\n     */\n\n    /**\n     * <p>The <code class=\"prettyprint\">header</code> slot is for the dialog's header area.\n     * The  <code class=\"prettyprint\">&lt;oj-dialog></code> element accepts DOM nodes as children\n     * with the header slot.\n     * For styling, the header slot will be rendered with the <code class=\"prettyprint\">oj-dialog-header</code> class.\n     * </p>\n     * If a header slot is not specified by the user, a header will automatically be created.\n     * The automatically generated header will contain a close button, and the header title will be set\n     * to the dialog title.\n     *\n     * @ojslot header\n     * @ojshortdesc The header slot is for the dialog's header area. See the Help documentation for more information.\n     * @memberof oj.ojDialog\n     * @since 4.0.0\n     *\n     * @example <caption>Initialize the Dialog with header and body content:</caption>\n     * &lt;oj-dialog>\n     *   &lt;div slot='header'>Header Content&lt;/div>\n     *   &lt;div>Dialog Content&lt;/div>\n     * &lt;/oj-dialog>\n     */\n\n    /**\n     * <p>The <code class=\"prettyprint\">body</code> slot is for the dialog's body area.\n     * The <code class=\"prettyprint\">&lt;oj-dialog></code> element accepts DOM nodes as children\n     * with the body slot.\n     * For styling, the body slot will be rendered with the <code class=\"prettyprint\">oj-dialog-body</code> class.\n     * Note that \"body\" is the default slot.\n     *\n     * @ojslot body\n     * @ojshortdesc The body slot is for the dialog's body area. See the Help documentation for more information.\n     * @memberof oj.ojDialog\n     * @since 4.0.0\n     *\n     * @example <caption>Initialize the Dialog with body content:</caption>\n     * &lt;oj-dialog>\n     *   &lt;div slot=\"body\">Dialog Content&lt;/div>\n     * &lt;/oj-dialog>\n     */\n\n    /**\n     * <p>The <code class=\"prettyprint\">footer</code> slot is for the dialog's footer area.\n     * The <code class=\"prettyprint\">&lt;oj-dialog></code> element accepts DOM nodes as children\n     * with the footer slot.\n     * For styling, the footer slot will be rendered with the <code class=\"prettyprint\">oj-dialog-footer</code> class.\n     *\n     * @ojslot footer\n     * @ojshortdesc The footer slot is for the dialog's footer area. See the Help documentation for more information.\n     * @memberof oj.ojDialog\n     * @since 4.0.0\n     *\n     * @example <caption>Initialize the Dialog with body and footer content:</caption>\n     * &lt;oj-dialog>\n     *   &lt;div>Dialog Content&lt;/div>\n     *   &lt;div slot='footer'>Footer Content&lt;/div>\n     * &lt;/oj-dialog>\n     */\n    //-----------------------------------------------------\n    //                   Fragments\n    //-----------------------------------------------------\n    /**\n     * <table class=\"keyboard-table\">\n     *   <thead>\n     *     <tr>\n     *       <th>Target</th>\n     *       <th>Gesture</th>\n     *       <th>Action</th>\n     *     </tr>\n     *   </thead>\n     *   <tbody>\n     *     <tr>\n     *       <td>Dialog Close Icon</td>\n     *       <td><kbd>Tap</kbd></td>\n     *       <td>Close the dialog.</td>\n     *     </tr>\n     *   </tbody>\n     * </table>\n     *\n     * @ojfragment touchDoc - Used in touch gesture section of classdesc, and standalone gesture doc\n     * @memberof oj.ojDialog\n     */\n\n    /**\n     * The JET Dialog can be closed with keyboard actions:\n     *\n     * <p>\n     * <table class=\"keyboard-table\">\n     *   <thead>\n     *     <tr>\n     *       <th>Target</th>\n     *       <th>Key</th>\n     *       <th>Action</th>\n     *     </tr>\n     *   </thead>\n     *   <tbody>\n     *     <tr>\n     *       <td>Dialog</td>\n     *       <td><kbd>Esc</kbd></td>\n     *       <td>Close the dialog.</td>\n     *     </tr>\n     *     <tr>\n     *       <td>Dialog Close Icon</td>\n     *       <td><kbd>Enter</kbd> or <kbd>Space</kbd></td>\n     *       <td>Close the dialog.</td>\n     *     </tr>\n     *   </tbody>\n     * </table>\n     *\n     * @ojfragment keyboardDoc - Used in keyboard section of classdesc, and standalone gesture doc\n     * @memberof oj.ojDialog\n     */\n\n    //-----------------------------------------------------\n    //                   Sub-ids\n    //-----------------------------------------------------\n    /**\n     * <p>Sub-ID for the dialog header.</p>\n     *\n     * @ojsubid oj-dialog-header\n     * @memberof oj.ojDialog\n     *\n     * @example <caption>Get the node for the dialog header:</caption>\n     * var node = myComponent.getNodeBySubId({'subId': 'oj-dialog-header'});\n     */\n\n    /**\n     * <p>Sub-ID for the dialog footer.</p>\n     *\n     * @ojsubid oj-dialog-footer\n     * @memberof oj.ojDialog\n     *\n     * @example <caption>Get the node for the dialog footer:</caption>\n     * var node = myComponent.getNodeBySubId({'subId': 'oj-dialog-footer'});\n     */\n\n    /**\n     * <p>Sub-ID for the dialog body.</p>\n     *\n     * @ojsubid oj-dialog-body\n     * @memberof oj.ojDialog\n     * @ojdeprecated {since:\"1.2.0\", description:\"This sub-ID is not needed.  Since the application supplies this element, it can supply a unique ID by which the element can be accessed.\"}\n     *\n     * @example <caption>Get the node for the dialog body:</caption>\n     * var node = myComponent.getNodeBySubId({'subId': 'oj-dialog-body'});\n     */\n\n    /**\n     * <p>Sub-ID for the dialog content.</p>\n     *\n     * @ojsubid oj-dialog-content\n     * @memberof oj.ojDialog\n     *\n     * @example <caption>Get the node for the dialog content:</caption>\n     * var node = myComponent.getNodeBySubId({'subId': 'oj-dialog-content'});\n     */\n\n    /**\n     * <p>Sub-ID for the dialog header-close-wrapper.</p>\n     *\n     * @ojsubid oj-dialog-header-close-wrapper\n     * @memberof oj.ojDialog\n     *\n     * @example <caption>Get the node for the dialog header-close-wrapper:</caption>\n     * var node = myComponent.getNodeBySubId({'subId': 'oj-dialog-header-close-wrapper'});\n     */\n\n    /**\n     * <p>Sub-ID for the dialog close-icon.</p>\n     *\n     * @ojsubid oj-dialog-close-icon\n     * @memberof oj.ojDialog\n     * @ojdeprecated {since: \"1.2.0\", description: \"This sub-ID is deprecated.\"}\n     *\n     * @example <caption>Get the node for the dialog close-icon:</caption>\n     * var node = myComponent.getNodeBySubId({'subId': 'oj-dialog-close-icon'});\n     */\n\n    /**\n     * <p>Sub-ID for the dialog close affordance.</p>\n     *\n     * @ojsubid oj-dialog-close\n     * @memberof oj.ojDialog\n     * @ojdeprecated {since: \"2.1.0\", description: \"This sub-ID is deprecated.\"}\n     *\n     * @example <caption>Get the node for the dialog close affordance:</caption>\n     * var node = myComponent.getNodeBySubId({'subId': 'oj-dialog-close'});\n     */\n\n    /**\n     * <p>Sub-ID for the dialog resizable handle at the north location.</p>\n     *\n     * @ojsubid oj-resizable-n\n     * @memberof oj.ojDialog\n     *\n     * @example <caption>Get the node for the dialog header:</caption>\n     * var node = myComponent.getNodeBySubId({'subId': 'oj-resizable-n'});\n     */\n\n    /**\n     * <p>Sub-ID for the dialog resizable handle at the south location.</p>\n     *\n     * @ojsubid oj-resizable-s\n     * @memberof oj.ojDialog\n     *\n     * @example <caption>Get the node for the dialog header:</caption>\n     * var node = myComponent.getNodeBySubId({'subId': 'oj-resizable-s'});\n     */\n\n    /**\n     * <p>Sub-ID for the dialog resizable handle at the east location.</p>\n     *\n     * @ojsubid oj-resizable-e\n     * @memberof oj.ojDialog\n     *\n     * @example <caption>Get the node for the dialog header:</caption>\n     * var node = myComponent.getNodeBySubId({'subId': 'oj-resizable-e'});\n     */\n\n    /**\n     * <p>Sub-ID for the dialog resizable handle at the west location.</p>\n     *\n     * @ojsubid oj-resizable-w\n     * @memberof oj.ojDialog\n     *\n     * @example <caption>Get the node for the dialog header:</caption>\n     * var node = myComponent.getNodeBySubId({'subId': 'oj-resizable-w'});\n     */\n\n    /**\n     * <p>Sub-ID for the dialog resizable handle at the northeast location.</p>\n     *\n     * @ojsubid oj-resizable-ne\n     * @memberof oj.ojDialog\n     *\n     * @example <caption>Get the node for the dialog header:</caption>\n     * var node = myComponent.getNodeBySubId({'subId': 'oj-resizable-ne'});\n     */\n\n    /**\n     * <p>Sub-ID for the dialog resizable handle at the northwest location.</p>\n     *\n     * @ojsubid oj-resizable-nw\n     * @memberof oj.ojDialog\n     *\n     * @example <caption>Get the node for the dialog header:</caption>\n     * var node = myComponent.getNodeBySubId({'subId': 'oj-resizable-nw'});\n     */\n\n    /**\n     * <p>Sub-ID for the dialog resizable handle at the southwest location.</p>\n     *\n     * @ojsubid oj-resizable-sw\n     * @memberof oj.ojDialog\n     *\n     * @example <caption>Get the node for the dialog header:</caption>\n     * var node = myComponent.getNodeBySubId({'subId': 'oj-resizable-sw'});\n     */\n\n    /**\n     * <p>Sub-ID for the dialog resizable handle at the southeast location.</p>\n     *\n     * @ojsubid oj-resizable-se\n     * @memberof oj.ojDialog\n     *\n     * @example <caption>Get the node for the dialog header:</caption>\n     * var node = myComponent.getNodeBySubId({'subId': 'oj-resizable-se'});\n     */\n\n    //-----------------------------------------------------\n    //                   Styling\n    //-----------------------------------------------------\n\n    // ----------------------------------- oj-dialog-title--------------\n    /**\n     * Class used to format the dialog title. Automatically created headers use oj-dialog-title to format the title.<br/>\n     * For user-defined headers, you may want to use the oj-dialog-title class so that the title in your user-defined header\n     * is stylistically similar to a default title.<br/>\n     * @ojstyleclass oj-dialog-title\n     * @ojdisplayname Dialog Title\n     * @ojstyleselector oj-dialog *\n     * @ojshortdesc Class used to format the dialog title. See the Help documentation for more information.\n     * @memberof oj.ojDialog\n     */\n    // ----------------------------------- oj-dialog-footer-separator--------------\n    /**\n     * Class that works with the <code class=\"prettyprint\">oj-dialog-footer</code> class to specify a separator between the dialog body and the dialog footer.</br>\n     * This class should be applied to the div that specifies <code class=\"prettyprint\">slot=\"footer\"</code> for the dialog.<br/>\n     * Note that for themes that have a built-in footer separator (specifically the iOS theme), this class has no effect.<br/>\n     * @ojstyleclass oj-dialog-footer-separator\n     * @ojdisplayname Footer Separator\n     * @ojstyleselector oj-dialog > div\n     * @ojshortdesc Class used to specify a separator between the dialog body and the dialog footer. See the Help documentation for more information.\n     * @memberof oj.ojDialog\n     */\n    // ----------------------------------- oj-progress-bar-embedded--------------\n    /**\n     * Optional class used to format a progress bar when embedded in the dialog.<br/>\n     * @ojstyleclass oj-progress-bar-embedded\n     * @ojdisplayname Embedded Progress Bar\n     * @memberof oj.ojDialog\n     */\n    // ----------------------------------- oj-focus-highlight -------------\n    /**\n     * Under normal circumstances this class is applied automatically. It is documented here for the rare cases that an app developer needs per-instance control.<br/><br/>\n     * The oj-focus-highlight class applies focus styling that may not be desirable when the focus results from pointer interaction (touch or mouse), but which is needed for accessibility when the focus occurs by a non-pointer mechanism, for example keyboard or initial page load.<br/><br/>\n     * The application-level behavior for this component is controlled in the theme by the <code class=\"prettyprint\"><span class=\"pln\">$focusHighlightPolicy </span></code>SASS variable; however, note that this same variable controls the focus highlight policy of many components and patterns. The values for the variable are:<br/><br/>\n     * <code class=\"prettyprint\"><span class=\"pln\">nonPointer: </span></code>oj-focus-highlight is applied only when focus is not the result of pointer interaction. Most themes default to this value.<br/>\n     * <code class=\"prettyprint\"><span class=\"pln\">all: </span></code> oj-focus-highlight is applied regardless of the focus mechanism.<br/>\n     * <code class=\"prettyprint\"><span class=\"pln\">none: </span></code> oj-focus-highlight is never applied. This behavior is not accessible, and is intended for use when the application wishes to use its own event listener to precisely control when the class is applied (see below). The application must ensure the accessibility of the result.<br/><br/>\n     * To change the behavior on a per-instance basis, the application can set the SASS variable as desired and then use event listeners to toggle this class as needed.<br/>\n     * @ojstyleclass oj-focus-highlight\n     * @ojdisplayname Focus Styling\n     * @ojshortdesc Allows per-instance control of the focus highlight policy (not typically required). See the Help documentation for more information.\n     * @memberof oj.ojDialog\n     */\n    /**\n     * @ojstylevariableset oj-dialog-css-set1\n     * @ojstylevariable oj-dialog-border-radius {description: \"Dialog border radius\", formats: [\"length\",\"percentage\"], help: \"#css-variables\"}\n     * @ojstylevariable oj-dialog-bg-color {description: \"Dialog background color\", formats: [\"color\"], help: \"#css-variables\"}\n     * @ojstylevariable oj-dialog-border-color {description: \"Dialog border color\", formats: [\"color\"], help: \"#css-variables\"}\n     * @ojstylevariable oj-dialog-box-shadow {description: \"Dialog box shadow\", help: \"#css-variables\"}\n     * @ojstylevariable oj-dialog-header-bg-color {description: \"Dialog header background color\", formats: [\"color\"],help: \"#css-variables\"}\n     * @ojstylevariable oj-dialog-header-border-color {description: \"Border color between the dialog header and body\", formats: [\"color\"], help: \"#css-variables\"}\n     * @ojstylevariable oj-dialog-header-padding {description: \"Dialog header padding\", formats: [\"length\"], help: \"#css-variables\"}\n     * @ojstylevariable oj-dialog-body-padding {description: \"Dialog body padding\", formats: [\"length\"], help: \"#css-variables\"}\n     * @ojstylevariable oj-dialog-footer-padding {description: \"Dialog footer padding\", formats: [\"length\"], help: \"#css-variables\"}\n     * @memberof oj.ojDialog\n     */\n    /**\n     * @ojstylevariableset oj-dialog-css-set2\n     * @ojdisplayname Title\n     * @ojstylevariable oj-dialog-title-font-size {description: \"Dialog title font size\", formats: [\"length\"], help: \"#oj-dialog-css-set2\"}\n     * @ojstylevariable oj-dialog-title-line-height {description: \"Dialog title line height\", formats: [\"number\"], help: \"#oj-dialog-css-set2\"}\n     * @ojstylevariable oj-dialog-title-font-weight {description: \"Dialog title font weight\", formats: [\"font_weight\"], help: \"#oj-dialog-css-set2\"}\n     * @ojstylevariable oj-dialog-title-text-color {description: \"Dialog title text color\", formats: [\"color\"], help: \"#oj-dialog-css-set2\"}\n     * @memberof oj.ojDialog\n     */\n\n    /**\n     * @ojstylevariableset oj-dialog-css-set3\n     * @ojdisplayname Cancel icon\n     * @ojstylevariable oj-dialog-cancel-icon-margin-top {description: \"Dialog cancel icon margin top\", formats: [\"length\"], help: \"#oj-dialog-css-set3\"}\n     * @ojstylevariable oj-dialog-cancel-icon-margin-end {description: \"Dialog cancel icon margin end\", formats: [\"length\"], help: \"#oj-dialog-css-set3\"}\n     * @memberof oj.ojDialog\n     */\n    // ------------------------------------------------ oj-dialog Styling end ------------------------------------------------\n\n    oj.__registerWidget('oj.ojDialog', $.oj.baseComponent, {\n      version: '1.0.0',\n      widgetEventPrefix: 'oj',\n      options: {\n        /**\n         * Specifies the cancel behavior of the dialog.\n         * The default value depends on the theme.\n         * In the Redwood theme, the default is <code class=\"prettyprint\">\"none\"</code>.\n         * In the deprecated Alta web theme, the default is <code class=\"prettyprint\">\"icon\"</code>.\n         * In the deprecated Alta mobile themes (Android, iOS, Windows), the default is <code class=\"prettyprint\">\"none\"</code>.\n         *\n         * <p> Note that the cancelBehavior applies to both automatic and user-defined headers.\n         * So, a user-defined header will use the cancelBehavior setting or a theme-specific default.\n         *\n         * @expose\n         * @memberof oj.ojDialog\n         * @ojshortdesc Specifies the cancel behavior of the dialog. See the Help documentation for more information.\n         * @instance\n         * @type {string}\n         * @ojvalue {string} \"icon\" A close icon will automatically be created. The dialog will close when it has focus and user presses the escape (ESC) key.\n         * @ojvalue {string} \"escape\" The dialog will close when it has focus and user presses the escape (ESC) key. A close icon will not be created.\n         * @ojvalue {string} \"none\" A close icon will not be created. No actions will be associated with the escape key.\n         *\n         * @example <caption>Initialize the dialog to disable the default <code class=\"prettyprint\">cancelBehavior</code></caption>\n         * &lt;oj-dialog cancel-behavior=\"none\" &gt;&lt;/oj-dialog&gt;\n         *\n         * @example <caption>Get or set the <code class=\"prettyprint\">cancelBehavior</code> property, after initialization:</caption>\n         * // getter\n         * var cancelBehavior = myDialog.cancelBehavior;\n         *\n         * // setter\n         * myDialog.cancelBehavior = \"icon\";\n         *\n         * @example <caption>Set the default in the theme (SCSS) :</caption>\n         * $dialogCancelBehaviorOptionDefault: icon !default;\n         *\n         */\n        cancelBehavior: 'icon',\n        /**\n         * Specifies the drag affordance.\n         * The default value depends on the theme.\n         * In the Redwood theme, the default is <code class=\"prettyprint\">\"none\"</code>.\n         * In the deprecated Alta web theme, the default is <code class=\"prettyprint\">\"title-bar\"</code>.\n         * In the deprecated Alta mobile themes (Android, iOS, Windows), the default is <code class=\"prettyprint\">\"none\"</code>.\n         *\n         * @expose\n         * @memberof oj.ojDialog\n         * @ojshortdesc Specifies the drag affordance. See the Help documentation for more information.\n         * @instance\n         * @type {string}\n         * @ojvalue {string} \"title-bar\" The dialog will be draggable by the title bar.\n         * @ojvalue {string} \"none\" The dialog will not be draggable.\n         *\n         * @example <caption>Initialize the dialog to enable dragging <code class=\"prettyprint\">dragAffordance</code></caption>\n         * &lt;oj-dialog drag-affordance=\"title-bar\" &gt;&lt;/oj-dialog&gt;\n         *\n         * @example <caption>Get or set the <code class=\"prettyprint\">dragAffordance</code> property, after initialization:</caption>\n         * // getter\n         * var dragAffordance = myDialog.dragAffordance;\n         *\n         * // setter\n         * myDialog.dragAffordance = \"title-bar\";\n         */\n        dragAffordance: 'title-bar',\n        /**\n         * Set the initial visibility of the dialog.\n         *\n         * @expose\n         * @memberof oj.ojDialog\n         * @instance\n         * @type {string}\n         * @default \"hide\"\n         * @ojvalue {string} \"hide\" The dialog will stay hidden until the <a href=\"#open\"><code class=\"prettyprint\">open()</code></a> method is called.\n         * @ojvalue {string} \"show\" The dialog will automatically open upon initialization.\n         *\n         * @example <caption>Initialize the dialog with the <code class=\"prettyprint\">initialVisibility</code> property:</caption>\n         * &lt;oj-dialog initial-visibility=\"show\" &gt;&lt;/oj-dialog&gt;\n         *\n         * @example <caption>Get or set the <code class=\"prettyprint\">initialVisibility</code> property, after initialization:</caption>\n         * // getter\n         * var initialVisibility = myDialog.initialVisibility;\n         *\n         * // setter\n         * myDialog.initialVisibility = \"show\";\n         */\n        initialVisibility: 'hide',\n        /**\n         *\n         * Defines the modality of the dialog.\n         *\n         * @expose\n         * @memberof oj.ojDialog\n         * @instance\n         * @default \"modal\"\n         * @type {string}\n         * @ojvalue {string} \"modal\" The dialog is modal. Interactions with other page elements are disabled. Modal dialogs overlay other page elements.\n         * @ojvalue {string} \"modeless\" Defines a modeless dialog.\n         *\n         * @example <caption>Initialize the dialog to a specific modality <code class=\"prettyprint\">modality</code></caption>\n         * &lt;oj-dialog modality=\"modeless\" &gt;&lt;/oj-dialog&gt;\n         *\n         * @example <caption>Get or set the <code class=\"prettyprint\">modality</code> property, after initialization:</caption>\n         * // getter\n         * var modality = myDialog.modality;\n         *\n         * // setter\n         * myDialog.modality = \"modeless\";\n         */\n        modality: 'modal',\n        /**\n         * <p>Position object is used to establish the location the dialog will appear relative to\n         * another element. {@link oj.ojDialog.Position} defines \"my\" alignment \"at\" the alignment\n         * \"of\" some other thing which can be \"offset\" by so many pixels.</p>\n         *\n         * <p>The \"my\" and \"at\" properties define alignment points relative to the dialog and other\n         * element.  The \"my\" property represents the dialog's alignment where the \"at\" property\n         * represents the other element that can be identified by \"of\". The values of these properties\n         * describe horizontal and vertical alignments.</p>\n         *\n         * <p>If none of the <code class=\"prettyprint\">position</code> properties are specified,\n         * the default dialog position is \"center\" on desktop and \"bottom\" on phone.</p>\n         *\n         * <b>Deprecated v3.0.0 jQuery UI position syntax; Use of a percent unit with\n         * \"my\" or \"at\" is not supported.</b>\n         *\n         * @expose\n         * @memberof oj.ojDialog\n         * @ojshortdesc Establishes the location that the dialog will appear relative to another element. See the Help documentation for more information.\n         * @instance\n         * @type {Object}\n         * @ojsignature { target: \"Type\",\n         *                value: \"oj.ojDialog.Position\",\n         *                jsdocOverride: true}\n         * @name position\n         * @example <caption>Initialize the dialog with <code class=\"prettyprint\">position</code>\n         *           property specified:</caption>\n         * &lt;oj-dialog position.my.horizontal=\"left\"\n         *           position.my.vertical=\"top\"\n         *           position.at.horizontal=\"right\"\n         *           position.at.vertical=\"top\" &gt;&lt;/oj-dialog&gt;\n         *\n         * @example <caption>Get or set the <code class=\"prettyprint\">position</code> property,\n         *          after initialization:</caption>\n         * // getter\n         * var position = myDialog.position;\n         *\n         * // setter\n         * myDialog.position =\n         *    {\"my\": {\"horizontal\": \"start\", \"vertical\": \"bottom\"},\n         *     \"at\": {\"horizontal\": \"end\", \"vertical\": \"top\" },\n         *     \"offset\": {\"x\": 0, \"y\":5}};\n         */\n        position: {\n          /**\n           * Defines which edge on the dialog to align with the target (\"of\") element.\n           *\n           * @expose\n           * @memberof! oj.ojDialog\n           * @instance\n           * @name position.my\n           * @name position.my\n           * @type {{horizontal:string, vertical:string}}\n           */\n          my: {\n            /**\n             * @expose\n             * @memberof! oj.ojDialog\n             * @instance\n             * @name position.my.horizontal\n             * @name position.my.horizontal\n             * @type {string}\n             * @ojvalue {string} \"start\" evaluates to \"left\" in LTR mode and \"right\" in RTL mode.\n             * @ojvalue {string} \"end\" evaluates to \"right\" in LTR mode and \"left\" in RTL mode.\n             * @ojvalue {string} \"left\"\n             * @ojvalue {string} \"center\"\n             * @ojvalue {string} \"right\"\n             * @default \"center\"\n             */\n            horizontal: 'center',\n            /**\n             * @expose\n             * @memberof! oj.ojDialog\n             * @instance\n             * @name position.my.vertical\n             * @name position.my.vertical\n             * @type {string}\n             * @ojvalue {string} \"top\"\n             * @ojvalue {string} \"center\"\n             * @ojvalue {string} \"bottom\"\n             * @default \"center\"\n             */\n            vertical: 'center'\n          },\n          /**\n           * Defines a point offset in pixels from the (\"my\") alignment.\n           * @expose\n           * @memberof! oj.ojDialog\n           * @instance\n           * @name position.offset\n           * @name position.offset\n           * @type {{x:number, y:number}}\n           */\n          offset: {\n            /**\n             * Horizontal alignment offset.\n             * @expose\n             * @memberof! oj.ojDialog\n             * @instance\n             * @name position.offset.x\n             * @name position.offset.x\n             * @type {number}\n             * @default 0\n             */\n            x: 0,\n            /**\n             * Vertical alignment offset.\n             * @expose\n             * @memberof! oj.ojDialog\n             * @instance\n             * @name position.offset.y\n             * @name position.offset.y\n             * @type {number}\n             * @default 0\n             */\n            y: 0\n          },\n          /**\n           * Defines which position on the target element (\"of\") to align the positioned element\n           * against.\n           *\n           * @expose\n           * @memberof! oj.ojDialog\n           * @instance\n           * @name position.at\n           * @name position.at\n           * @type {{horizontal:string, vertical:string}}\n           */\n          at: {\n            /**\n             * @expose\n             * @memberof! oj.ojDialog\n             * @instance\n             * @name position.at.horizontal\n             * @name position.at.horizontal\n             * @type {string}\n             * @ojvalue {string} \"start\" evaluates to \"left\" in LTR mode and \"right\" in RTL mode.\n             * @ojvalue {string} \"end\" evaluates to \"right\" in LTR mode and \"left\" in RTL mode.\n             * @ojvalue {string} \"left\"\n             * @ojvalue {string} \"center\"\n             * @ojvalue {string} \"right\"\n             * @default \"center\"\n             */\n            horizontal: 'center',\n            /**\n             * @expose\n             * @memberof! oj.ojDialog\n             * @instance\n             * @name position.at.vertical\n             * @name position.at.vertical\n             * @type {string}\n             * @ojvalue {string} \"top\"\n             * @ojvalue {string} \"center\"\n             * @ojvalue {string} \"bottom\"\n             * @default \"center\"\n             */\n            vertical: 'center'\n          },\n          /**\n           * Which element to position the dialog against.\n           * If the value is a string, it should be a selector or the literal string value\n           * of <code class=\"prettyprint\">window</code>.  Otherwise, a point of x,y.  When a point\n           * is used, the values are relative to the whole document.  Page horizontal and vertical\n           * scroll offsets need to be factored into this point - see UIEvent\n           * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/pageX\">pageX</a>,\n           * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/pageY\">pageY</a>.\n           *\n           * @example <caption>Finding the point for an svg element:</caption>\n           * var rect = svgDom.getBoundingClientRect();\n           * var position = {of:{x:rect.left + window.pageXOffset, y:rect.top + window.pageYOffset}};\n           *\n           * @expose\n           * @memberof! oj.ojDialog\n           * @ojshortdesc Specifies which element to position the dialog against. See the Help documentation for more information.\n           * @instance\n           * @name position.of\n           * @name position.of\n           * @type {string|{x: number, y: number}}\n           * @default \"window\"\n           */\n          of: 'window',\n          /**\n           * Rule for alternate alignment.\n           *\n           * @expose\n           * @memberof! oj.ojDialog\n           * @instance\n           * @name position.collision\n           * @name position.collision\n           * @type {string}\n           * @ojvalue {string} \"flip\" Flip the element to the opposite side of the target and the\n           *  collision detection is run again to see if it will fit. Whichever side\n           *  allows more of the element to be visible will be used.\n           * @ojvalue {string} \"fit\" Shift the element away from the edge of the window.\n           * @ojvalue {string} \"flipfit\" First applies the flip logic, placing the element\n           *  on whichever side allows more of the element to be visible. Then the fit logic\n           *  is applied to ensure as much of the element is visible as possible.\n           * @ojvalue {string} \"none\" No collision detection.\n           * @default \"fit\"\n           */\n          collision: 'fit',\n          // Ensure the titlebar is always visible\n          using: function (pos) {\n            var topOffset = $(this).css(pos).offset().top;\n            if (topOffset < 0) {\n              $(this).css('top', pos.top - topOffset);\n            }\n          }\n        },\n        /**\n         *\n         * Specifies the resizeBehavior of the dialog.\n         * The default value depends on the theme.\n         * In the Redwood theme, the default is <code class=\"prettyprint\">\"none\"</code>.\n         * In the deprecated Alta web theme, the default is <code class=\"prettyprint\">\"resizable\"</code>.\n         * In the deprecated Alta mobile themes (Android, iOS, Windows), the default is <code class=\"prettyprint\">\"none\"</code>.\n         *\n         * @expose\n         * @memberof oj.ojDialog\n         * @ojshortdesc Specifies the resizeBehavior of the dialog. See the Help documentation for more information.\n         * @instance\n         * @type {string}\n         * @ojvalue {string} \"resizable\" The dialog will be interactively resizable.\n         * @ojvalue {string} \"none\" The dialog will not be interactively resizable.\n         *\n         * @example <caption>Initialize the dialog to a specific resizeBehavior <code class=\"prettyprint\">resizeBehavior</code></caption>\n         * &lt;oj-dialog resize-behavior=\"resizable\" &gt;&lt;/oj-dialog&gt;\n         *\n         * @example <caption>Get or set the <code class=\"prettyprint\">resizeBehavior</code> property, after initialization:</caption>\n         *\n         * // getter\n         * var resizeBehavior = myDialog.resizeBehavior;\n         *\n         * // setter\n         * myDialog.resizeBehavior = \"resizable\";\n         * @example <caption>Set the default in the theme (SCSS) :</caption>\n         * $dialogResizeBehaviorOptionDefault: resizable !default;\n         */\n        resizeBehavior: 'resizable',\n        /**\n         *\n         * The WAI-ARIA role of the dialog. By default, role=\"dialog\" is added to the generated HTML markup that surrounds the dialog.\n         * When used as an alert dialog, the user should set role to \"alertdialog\".\n         *\n         * @ignore\n         * @memberof oj.ojDialog\n         * @ojshortdesc The WAI-ARIA role of the dialog. See the Help documentation for more information.\n         * @instance\n         * @type {string}\n         * @default \"dialog\"\n         *\n         * @example <caption>Initialize the dialog with the <code class=\"prettyprint\">role</code></caption> property specified:</caption>\n         * &lt;oj-dialog role=\"alertdialog\" &gt;&lt;/oj-dialog&gt;\n         *\n         * @example <caption>Get or set the <code class=\"prettyprint\">role</code> property, after initialization:</caption>\n         * // getter\n         * var role = myDialog.role;\n         *\n         * // setter\n         * myDialog.role = \"alertdialog\";\n         */\n        role: 'dialog',\n        /**\n         *\n         * Specify the title of the dialog. null is the default.\n         *\n         * @expose\n         * @memberof oj.ojDialog\n         * @ojtranslatable\n         * @instance\n         * @type {string|null}\n         *\n         * @example <caption>Initialize the <code class=\"prettyprint\">dialogTitle</code> property.</caption>\n         * &lt;oj-dialog dialog-title=\"Title of Dialog\" &gt;&lt;/oj-dialog&gt;\n         *\n         * @example <caption>Get or set the <code class=\"prettyprint\">dialogTitle</code> property, after initialization:</caption>\n         * // getter\n         * var dialogTitle = myDialog.dialogTitle;\n         *\n         * // setter\n         * myDialog.dialogTitle = \"Title of Dialog\";\n         */\n        dialogTitle: null,\n        /**\n         *\n         * Specify the title of the dialog. null is the default.\n         *\n         * @expose\n         * @ignore\n         * @memberof oj.ojDialog\n         * @instance\n         * @type {string|null}\n         *\n         * @example <caption>Initialize the dialog to a specific title <code class=\"prettyprint\">title</code></caption>\n         * &lt;oj-dialog dialog-title=\"Title of Dialog\" &gt;&lt;/oj-dialog&gt;\n         *\n         * @example <caption>Get or set the <code class=\"prettyprint\">title</code> property, after initialization:</caption>\n         * // getter\n         * var title = myDialog.title;\n         *\n         * // setter\n         * myDialog.title = \"Title of Dialog\";\n         */\n        title: null,\n        // /////////////////////////////////////////////////////\n        // events\n        // /////////////////////////////////////////////////////\n\n        /**\n         * Triggered before the dialog is dismissed via the\n         * <code class=\"prettyprint\">close()</code> method. The close can be cancelled by calling\n         * <code class=\"prettyprint\">event.preventDefault()</code>.\n         *\n         * @expose\n         * @event\n         * @memberof oj.ojDialog\n         * @instance\n         * @ojcancelable\n         * @ojbubbles\n         * @property {Event} event a custom event\n         */\n        beforeClose: null,\n        /**\n         * Triggered before the dialog is launched via the <code class=\"prettyprint\">open()</code>\n         * method. The open can be cancelled by calling\n         * <code class=\"prettyprint\">event.preventDefault()</code>.\n         *\n         * @expose\n         * @event\n         * @memberof oj.ojDialog\n         * @instance\n         * @ojcancelable\n         * @ojbubbles\n         * @property {Event} event a custom event\n         */\n        beforeOpen: null,\n        /**\n         * Triggered after the dialog is dismissed via the\n         * <code class=\"prettyprint\">close()</code> method.\n         *\n         * @expose\n         * @event\n         * @memberof oj.ojDialog\n         * @instance\n         * @ojbubbles\n         * @ojeventgroup common\n         * @property {Event} event a custom event\n         */\n        close: null,\n        /**\n         * Triggered after focus has been transferred to the dialog.\n         *\n         * @expose\n         * @event\n         * @memberof oj.ojDialog\n         * @instance\n         * @ojbubbles\n         * @property {Event} event a custom event\n         */\n        focus: null,\n        /**\n         * Triggered after the dialog is launched via the <code class=\"prettyprint\">open()</code>\n         * method.\n         *\n         * @expose\n         * @event\n         * @memberof oj.ojDialog\n         * @instance\n         * @ojcancelable\n         * @ojbubbles\n         * @property {Event} event a custom event\n         */\n        open: null,\n        /**\n         * Triggered when the dialog is being resized.\n         *\n         * @expose\n         * @event\n         * @memberof oj.ojDialog\n         * @ojshortdesc Triggered when the dialog is being resized. See the Help documentation for more information.\n         * @instance\n         * @ojbubbles\n         * @property {Object} originalEvent the underlying UI <a href=\"http://api.jqueryui.com/resizable/#event-resize\">Event</a> object\n         * @property {Object} originalPosition the original CSS position of the dialog\n         * @property {Object} originalSize the original size of the dialog\n         * @property {Object} position the current CSS position of the dialog\n         * @property {Object} size the current size of the dialog\n         */\n        resize: null,\n        /**\n         * Triggered when the user starts resizing the dialog.\n         *\n         * @expose\n         * @event\n         * @memberof oj.ojDialog\n         * @ojshortdesc Triggered when the user starts resizing the dialog. See the Help documentation for more information.\n         * @instance\n         * @ojcancelable\n         * @ojbubbles\n         * @property {Object} originalEvent the underlying UI <a href=\"http://api.jqueryui.com/resizable/#event-resize\">Event</a> object\n         * @property {Object} originalPosition the original CSS position of the dialog\n         * @property {Object} originalSize the original size of the dialog\n         * @property {Object} position the current CSS position of the dialog\n         * @property {Object} size the current size of the dialog\n         */\n        resizeStart: null,\n        /**\n         * Triggered when the user stops resizing the dialog.\n         *\n         * @expose\n         * @event\n         * @memberof oj.ojDialog\n         * @ojshortdesc Triggered when the user stops resizing the dialog. See the Help documentation for more information.\n         * @instance\n         * @ojcancelable\n         * @ojbubbles\n         * @property {Object} originalEvent the underlying UI <a href=\"http://api.jqueryui.com/resizable/#event-resize\">Event</a> object\n         * @property {Object} originalPosition the original CSS position of the dialog\n         * @property {Object} originalSize the original size of the dialog\n         * @property {Object} position the current CSS position of the dialog\n         * @property {Object} size the current size of the dialog\n         */\n        resizeStop: null,\n        /**\n         * Triggered when a default animation is about to start, such as when the component is\n         * being opened/closed or a child item is being added/removed. The default animation can\n         * be cancelled by calling <code class=\"prettyprint\">event.preventDefault</code>.\n         * @ojdeprecated {since: \"12.1.0\", description: \"This web component no longer supports this event.\"}\n         *\n         * @expose\n         * @event\n         * @memberof oj.ojDialog\n         * @ojshortdesc Triggered when a default animation is about to start, such as when the component is being opened/closed or a child item is being added/removed.\n         * @instance\n         * @ojcancelable\n         * @ojbubbles\n         * @property {\"open\"|\"close\"} action The action that triggers the animation.<br><br>\n         *            The number of actions can vary from component to component.\n         *            Suggested values are:\n         *                    <ul>\n         *                      <li>\"open\" - when a dialog component is opened</li>\n         *                      <li>\"close\" - when a dialog component is closed</li>\n         *                    </ul>\n         * @property {!Element} element target of animation\n         * @property {!function():void} endCallback If the event listener calls\n         *            event.preventDefault to cancel the default animation, It must call the\n         *            endCallback function when it finishes its own animation handling and any\n         *            custom animation has ended.\n         *\n         *\n         * @example <caption>Add a listener for the\n         *          <code class=\"prettyprint\">ojAnimateStart</code> event to override the default\n         *          \"close\" animation:</caption>\n         * myDialog.addEventListener(\"ojAnimateStart\", function( event )\n         *   {\n         *     // verify that the component firing the event is a component of interest and action\n         *      is close\n         *     if (event.detail.action == \"close\") {\n         *       event.preventDefault();\n         *       oj.AnimationUtils.slideOut(event.detail.element).then(event.detail.endCallback);\n         *   });\n         *\n         * @example <caption>The default open and close animations are controlled via the theme\n         *          (SCSS) :</caption>\n         * $dialogOpenAnimation: ((effect: \"zoomIn\"), \"fadeIn\")  !default;\n         * $dialogCloseAnimation: ((effect: \"zoomOut\"), \"fadeOut\")  !default;\n         */\n\n        animateStart: null,\n        /**\n         * Triggered when a default animation has ended, such as when the component is being\n         * opened/closed or a child item is being added/removed. This event is not triggered if\n         * the application has called preventDefault on the animateStart\n         * event.\n         * @ojdeprecated {since: \"12.1.0\", description: \"This web component no longer supports this event.\"}\n         *\n         * @expose\n         * @event\n         * @memberof oj.ojDialog\n         * @ojshortdesc Triggered when a default animation has ended, such as when the component is being opened/closed or a child item is being added/removed.\n         * @instance\n         * @ojcancelable\n         * @ojbubbles\n         * @property {!Element} element target of animation\n         * @property {\"open\"|\"close\"} action The action that triggered the animation.<br><br>\n         *                   The number of actions can vary from component to component.\n         *                   Suggested values are:\n         *                    <ul>\n         *                      <li>\"open\" - when a dialog component is opened</li>\n         *                      <li>\"close\" - when a dialog component is closed</li>\n         *                    </ul>\n         *\n         * @example <caption>Add a listener for the\n         *          <code class=\"prettyprint\">ojAnimateEnd</code> event to listen for the \"close\"\n         *          ending animation:</caption>\n         * myDialog.addEventListener(\"ojAnimateEnd\", function( event )\n         *   {\n         *     // verify that the component firing the event is a component of interest and action\n         *      is close\n         *     if (event.detail.action == \"close\") {}\n         *   });\n         *\n         * @example <caption>The default open and close animations are controlled via the theme\n         *          (SCSS) :</caption>\n         * $dialogOpenAnimation: (effect: \"zoomIn\", fade: true)  !default;\n         * $dialogCloseAnimation: (effect: \"zoomOut\", fade: true)  !default;\n         */\n        animateEnd: null\n      },\n      /**\n       * @memberof oj.ojDialog\n       * @instance\n       * @protected\n       * @override\n       * @return {void}\n       */\n\n      _ComponentCreate: function () {\n        this._super();\n        var self = this;\n\n        this.originalCss = {\n          display: this.element[0].style.display,\n          width: this.element[0].style.width,\n          height: this.element[0].style.height\n        };\n        this.originalPosition = {\n          parent: this.element.parent(),\n          index: this.element.parent().children().index(this.element)\n        };\n\n        // For the widget syntax, pull the title attribute from the root element moving to an option\n        if (!this._IsCustomElement()) {\n          this.originalTitle = this.element.attr('title');\n          this.options.title = this.options.title || this.originalTitle;\n          this.element.removeAttr('title');\n        }\n\n        this.element.hide();\n        this.element.uniqueId();\n        this.element.addClass('oj-dialog oj-component');\n        this.element.attr({\n          // Setting tabIndex makes the div focusable\n          tabIndex: -1\n        });\n\n        if (!this._IsCustomElement() || !this.element[0].hasAttribute('role')) {\n          this.element.attr('role', this.options.role);\n        }\n\n        this._on(this.element, { keydown: this._keydownHandler.bind(this) });\n\n        // fixup references to header, body and footer.  assumption is they will be immediate children\n        // of the root node.\n        this.userDefinedDialogHeader = false;\n\n        this._createContainer();\n\n        if (!this._IsCustomElement()) {\n          var children = this.element.children();\n          for (var i = 0; i < children.length; i++) {\n            var child = $(children[i]);\n            if (child.is(OJD_HEADER_CLASS)) {\n              this.userDefinedDialogHeader = true;\n              this._userDefinedHeader = child;\n              this._userDefinedHeaderDiv = children[i];\n              this._dialogContainer.appendChild(this._userDefinedHeader[0]); // @HTMLUpdateOK\n              Components.subtreeAttached(this._userDefinedHeader);\n            } else if (child.is(OJD_BODY_CLASS)) {\n              this._createContentDiv();\n              this._uiDialogContent = $(this._contentDiv);\n\n              this._contentDiv.appendChild(children[i]); // @HTMLUpdateOK\n              Components.subtreeAttached(children[i]);\n\n              this._dialogContainer.appendChild(this._contentDiv); // @HTMLUpdateOK\n              Components.subtreeAttached(this._contentDiv);\n\n              this._uiDialogBody = child;\n              this._uiDialogBodyDiv = children[i];\n            } else if (child.is(OJD_FOOTER_CLASS)) {\n              this._uiDialogFooter = child;\n              this._uiDialogFooterDiv = children[i];\n              this._dialogContainer.appendChild(this._uiDialogFooter[0]); // @HTMLUpdateOK\n              Components.subtreeAttached(this._uiDialogFooter);\n            }\n          }\n        }\n\n        if (this._IsCustomElement()) {\n          this._processSlottedChildren();\n        }\n\n        this.element[0].appendChild(this._dialogContainer); // @HTMLUpdateOK\n        Components.subtreeAttached(this._dialogContainer);\n\n        // fixup dialog header\n        if (this.userDefinedDialogHeader) {\n          this._userDefinedTitleDiv = this._userDefinedHeaderDiv.querySelector(OJD_TITLE_CLASS);\n          this._userDefinedTitle = $(this._userDefinedTitleDiv);\n\n          if (this._userDefinedTitleDiv !== null && this._userDefinedTitleDiv !== undefined) {\n            // create an id for the user-defined title\n            this._userDefinedTitle.uniqueId();\n            // to meet accessibility requirements for user-defined headers,\n            // associate the title id with the .oj-dialog aria-labelledby.\n            this.element.attr({ 'aria-labelledby': this._userDefinedTitle.attr('id') });\n          }\n        } else {\n          this._createTitlebar();\n        }\n\n        // body was not provided. insert the content between the header and footer\n        if (!this._uiDialogContent) {\n          this._createContentDiv();\n          this._uiDialogContent = $(this._contentDiv);\n\n          if (this._userDefinedHeader) {\n            // prettier-ignore\n            this._dialogContainer.insertBefore( // @HTMLUpdateOK\n              this._contentDiv,\n              this._userDefinedHeaderDiv.nextSibling\n            );\n          } else {\n            // prettier-ignore\n            this._dialogContainer.insertBefore( // @HTMLUpdateOK\n              this._contentDiv,\n              this._uiDialogTitlebarDiv.nextSibling\n            );\n          }\n          Components.subtreeAttached(this._contentDiv);\n        }\n\n        this._setupFocus(this.element);\n\n        // fixup the position option set via the widget constructor\n        var options = this.options;\n        options.position = oj.PositionUtils.coerceToJet(options.position);\n\n        // For custom element dialogs, detect changes to the 'title' attribute using a mutation observer.\n        // Update the dialog title DOM on 'title' attribute change.\n        if (this._IsCustomElement()) {\n          this._titleMutationObserver = new MutationObserver(function (mutations) {\n            mutations.forEach(function (mutation) {\n              if (mutation.type === 'attributes') {\n                if (mutation.attributeName === 'title') {\n                  self._uiDialogTitleDiv.textContent = mutation.target.getAttribute(\n                    mutation.attributeName\n                  );\n                }\n              }\n            });\n          });\n          // Start observing the dialog element for changes to the title attribute.\n          this._titleMutationObserver.observe(this.element[0], {\n            attributes: true,\n            attributeFilter: ['title']\n          });\n        }\n      },\n\n      _createContainer: function () {\n        this._dialogContainer = document.createElement('div');\n        this._dialogContainer.classList.add(OJD_CONTAINER);\n      },\n\n      _createHeaderSlot: function () {\n        this._headerSlot = document.createElement('div');\n        this._headerSlot.classList.add(OJD_HEADER);\n\n        this._dialogContainer.appendChild(this._headerSlot); // @HTMLUpdateOK\n        Components.subtreeAttached(this._headerSlot);\n\n        this.userDefinedDialogHeader = true;\n        this._userDefinedHeaderDiv = this._headerSlot;\n        this._userDefinedHeader = $(this._headerSlot);\n      },\n\n      // Create the footer slot element.\n      _createFooterSlot: function () {\n        this._footerSlot = document.createElement('div');\n\n        this._dialogContainer.appendChild(this._footerSlot); // @HTMLUpdateOK\n        Components.subtreeAttached(this._footerSlot);\n        this._uiDialogFooterDiv = this._footerSlot;\n        this._uiDialogFooter = $(this._footerSlot);\n      },\n\n      _createContentDiv: function () {\n        this._contentDiv = document.createElement('div');\n        this._contentDiv.classList.add(OJD_CONTENT, 'oj-dialog-default-content');\n      },\n\n      // Create the body slot element\n      _createBodySlot: function () {\n        this._createContentDiv();\n\n        this._dialogContainer.appendChild(this._contentDiv); // @HTMLUpdateOK\n        Components.subtreeAttached(this._contentDiv);\n\n        this._bodySlot = document.createElement('div');\n        this._bodySlot.classList.add('oj-dialog-body-wrapper');\n\n        this._contentDiv.appendChild(this._bodySlot); // @HTMLUpdateOK\n        this._uiDialogContent = $(this._contentDiv);\n\n        this._uiDialogBodyDiv = this._bodySlot;\n        this._uiDialogBody = $(this._bodySlot);\n      },\n\n      // override in order to return the reparented location of the context menu slot\n      _GetContextMenu: function () {\n        if (this._IsCustomElement()) {\n          if (this._contextmenuSlot && this._contextmenuSlot.length > 0) {\n            return this._contextmenuSlot[0];\n          }\n          return this._super();\n        }\n        return null;\n      },\n\n      // Process any slotted children and move them into the correct location\n      _processSlottedChildren: function () {\n        if (this._footerSlot != null) {\n          this.element[0].removeChild(this._footerSlot);\n        }\n        if (this._headerSlot != null) {\n          this.element[0].removeChild(this._headerSlot);\n        }\n        if (this._bodySlot != null) {\n          this.element[0].removeChild(this._bodySlot);\n        }\n        if (this._contextmenuSlot != null) {\n          this.element[0].removeChild(this._contextmenuSlot);\n        }\n\n        var slotMap = ojcustomelementUtils.CustomElementUtils.getSlotMap(this.element[0]);\n        var slots = Object.keys(slotMap);\n        var slot;\n        var s;\n\n        for (s = 0; s < slots.length; s++) {\n          slot = slots[s];\n          if (\n            slot !== SLOT_HEADER &&\n            slot !== SLOT_FOOTER &&\n            slot !== SLOT_BODY &&\n            slot !== SLOT_DEFAULT &&\n            slot !== SLOT_CONTEXTMENU\n          ) {\n            // silently remove as per custom component slot behavior\n            slotMap[slot].parentNode.removeChild(slotMap[slot]);\n          }\n        }\n\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\n        if (hasOwnProperty.call(slotMap, SLOT_HEADER)) {\n          this._createHeaderSlot();\n        }\n\n        // Note that the default slot is the body slot.\n        if (hasOwnProperty.call(slotMap, SLOT_BODY) || hasOwnProperty.call(slotMap, SLOT_DEFAULT)) {\n          this._createBodySlot();\n        }\n\n        if (hasOwnProperty.call(slotMap, SLOT_FOOTER)) {\n          this._createFooterSlot();\n        }\n\n        // save the location of the context menu slot.\n        if (hasOwnProperty.call(slotMap, SLOT_CONTEXTMENU)) {\n          this._contextmenuSlot = slotMap[SLOT_CONTEXTMENU];\n        }\n\n        var slotParent = this._bodySlot;\n        for (s = 0; s < slots.length; s++) {\n          slot = slots[s];\n          switch (slot) {\n            case SLOT_HEADER:\n              // Note - the header is wrapped with the title for accessibility,\n              // so we add the oj-dialog-header class during wrap process.\n              slotParent = this._headerSlot;\n              break;\n            case SLOT_FOOTER:\n              slotParent = this._footerSlot;\n              break;\n            case SLOT_BODY:\n            case SLOT_DEFAULT:\n              slotParent = this._bodySlot;\n              break;\n            default:\n              break;\n          }\n\n          var slotElements = slotMap[slot];\n          if (slotElements != null) {\n            for (var i = 0; i < slotElements.length; i++) {\n              slotParent.appendChild(slotElements[i]); // @HTMLUpdateOK\n              switch (slot) {\n                case SLOT_HEADER:\n                  break;\n                case SLOT_FOOTER:\n                  slotParent = this._footerSlot;\n                  slotMap[slot][i].classList.add(OJD_FOOTER);\n                  break;\n                case SLOT_BODY:\n                case SLOT_DEFAULT:\n                  slotParent = this._bodySlot;\n                  slotMap[slot][i].classList.add(OJD_BODY);\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        }\n      },\n\n      /**\n       * @memberof oj.ojDialog\n       * @instance\n       * @protected\n       * @override\n       */\n      _AfterCreateEvent: function () {\n        if (this.options.initialVisibility === 'show') {\n          this.open();\n        }\n      },\n      /**\n       * @memberof oj.ojDialog\n       * @instance\n       * @protected\n       * @override\n       */\n      _destroy: function () {\n        this._off(this.element, 'keydown');\n\n        if (oj.ZOrderUtils.getStatus(this.element) === oj.ZOrderUtils.STATUS.OPEN) {\n          this._closeImplicitly();\n        }\n\n        this._setWhenReady('none');\n\n        this._destroyResizable();\n\n        if (this.element.hasClass(OJ_DRAGGABLE)) {\n          this.element.draggable('destroy');\n          this.element.removeClass(OJ_DRAGGABLE);\n        }\n\n        this._destroyCloseButton();\n\n        if (this.userDefinedDialogHeader) {\n          // remove any unique id from the user-defined header's title\n          this._userDefinedTitle.removeUniqueId();\n        }\n\n        if (this._uiDialogBody) {\n          // unwrap the dialog body from the content element.\n          this._uiDialogBody.insertAfter(this._uiDialogContent); // @HTMLUpdateOK safe manipulation\n        }\n        this._uiDialogContent.remove();\n        this._uiDialogBody = null;\n        this._uiDialogContent = null;\n\n        this.element.removeUniqueId().removeClass('oj-dialog oj-component').css(this.originalCss);\n\n        this.element.stop(true, true);\n\n        if (!this._IsCustomElement()) {\n          if (this.originalTitle) {\n            this.element.attr('title', this.originalTitle);\n          }\n        }\n\n        if (this._uiDialogTitlebar) {\n          this._uiDialogTitlebar.remove();\n          this._uiDialogTitlebar = null;\n        }\n\n        delete this._popupServiceEvents;\n        this._super();\n      },\n      disable: $.noop,\n      enable: $.noop,\n      /**\n       * Closes the dialog.\n       *\n       * @expose\n       * @name oj.ojDialog#close\n       * @method\n       * @memberof oj.ojDialog\n       * @instance\n       * @return {void}\n       * @fires oj.ojDialog#beforeClose\n       * @fires oj.ojDialog#close\n       *\n       * @example <caption>Invoke the <code class=\"prettyprint\">close</code> method:</caption>\n       * myDialog.close();\n       */\n      close: function (event) {\n        if (this._isOperationPending('close', [event])) {\n          return;\n        }\n\n        // can only close an open dialog.\n        var status = oj.ZOrderUtils.getStatus(this.element);\n        if (status !== oj.ZOrderUtils.STATUS.OPEN) {\n          return;\n        }\n\n        // Status toggle is needed to prevent a recursive closed callled from a\n        // beforeClose handler. The _isOperationPending gatekeeper isn't activated\n        // until after the _setWhenReady('close'|'open') call.\n        oj.ZOrderUtils.setStatus(this.element, oj.ZOrderUtils.STATUS.BEFORE_CLOSE);\n        if (this._trigger('beforeClose', event) === false && !this._ignoreBeforeCloseResultant) {\n          oj.ZOrderUtils.setStatus(this.element, status);\n          return;\n        }\n\n        // activates the _isOperationPending gatekeeper\n        this._setWhenReady('close');\n        this._focusedElement = null;\n\n        // if dialog modality is modal, check if we need\n        // to restore the disabled accesskey attributes\n        if (this.options.modality === 'modal') {\n          var forEach = Array.prototype.forEach;\n          // Find elements within dialog that have accesskey and remove marker added during open\n          var elementsInDialogWithAccesskey = this.element[0].querySelectorAll(\n            '.oj-helper-element-in-dialog-with-accesskey'\n          );\n          forEach.call(elementsInDialogWithAccesskey, function (element) {\n            element.classList.remove(OJD_HELPER_ELEMENT_DIALOG);\n          });\n          // Find elements with oj-helper-element-with-accesskey class, get accesskey value from data attr, set accesskey attr, remove class\n          var elementsInDOMWithAccesskey = document.querySelectorAll(\n            '.oj-helper-element-with-accesskey'\n          );\n          forEach.call(elementsInDOMWithAccesskey, function (element) {\n            element.setAttribute('accesskey', element.getAttribute(OJD_ACCESS_KEY));\n            element.removeAttribute(OJD_ACCESS_KEY);\n            element.classList.remove('oj-helper-element-with-accesskey');\n          });\n        }\n\n        /** @type {!Object.<oj.PopupService.OPTION, ?>} */\n        var psOptions = {};\n        psOptions[oj.PopupService.OPTION.POPUP] = this.element;\n        psOptions[oj.PopupService.OPTION.CONTEXT] = { closeEvent: event };\n        oj.PopupService.getInstance().close(psOptions);\n      },\n      /**\n       * Before callback is invoked while the dialog is still visible and still parented in the zorder container.\n       * Close animation is performed here.\n       * @memberof oj.ojDialog\n       * @instance\n       * @private\n       * @param {!Object.<oj.PopupService.OPTION, ?>} psOptions property bag for closing the popup\n       * @return {Promise|void}\n       */\n      _beforeCloseHandler: function (psOptions) {\n        var rootElement = psOptions[oj.PopupService.OPTION.POPUP];\n        var isFull = this._isFullDisplay();\n        var isSheet = this._isSheetDisplay();\n\n        this._unregisterResizeListener(rootElement[0]);\n\n        this._destroyResizable();\n        if (isSheet) {\n          // turn off body overflow for animation duration in 'sheet' mode\n          this._disableBodyOverflow();\n        }\n\n        var animationOptions = (ThemeUtils.parseJSONFromFontFamily(OJD_OPTION_DEFAULTS) || {})\n          .animation;\n        var closeAnimation;\n        if (animationOptions) {\n          if (isSheet && !isFull && animationOptions.sheet) {\n            closeAnimation = animationOptions.sheet.close;\n          } else if (animationOptions.normal) {\n            closeAnimation = animationOptions.normal.close;\n          } else if (animationOptions.close) {\n            // compatibility with older themes\n            closeAnimation = animationOptions.close;\n          }\n        }\n        if (!this._ignoreBeforeCloseResultant && closeAnimation) {\n          // eslint-disable-next-line no-undef\n          return AnimationUtils.startAnimation(rootElement[0], 'close', closeAnimation, this).then(\n            function () {\n              rootElement.hide();\n            }\n          );\n        }\n\n        rootElement.hide();\n        return undefined;\n      },\n      /**\n       * Close finalization callback.\n       *\n       * @memberof oj.ojDialog\n       * @instance\n       * @private\n       * @param {!Object.<oj.PopupService.OPTION, ?>} psOptions property bag for closing the popup\n       * @return {void}\n       */\n      _afterCloseHandler: function (psOptions) {\n        var context = psOptions[oj.PopupService.OPTION.CONTEXT];\n        this._restoreBodyOverflow();\n\n        // Moved from close(). Don't want to move focus until the close animation completed.\n        // If the launcher is not focusable, find the closet focuable ancestor\n        if (!this.opener.filter(':focusable').focus().length) {\n          var launcher = this.opener.parents().filter(':focusable');\n          if (launcher.length > 0) {\n            launcher[0].focus();\n          } else {\n            // Hiding a focused element doesn't trigger blur in WebKit\n            // so in case we have nothing to focus on, explicitly blur the active element\n            // https://bugs.webkit.org/show_bug.cgi?id=47182\n            $(this.document[0].activeElement).blur();\n          }\n        }\n\n        var event;\n        if (context) {\n          event = context.closeEvent;\n        }\n\n        this._trigger('close', event);\n      },\n      /**\n       * <p>Returns true if the dialog is currently open. This method does not accept any arguments.\n       * </p>\n       *\n       * The \"open\" state reflects the period of time the dialog is visible, including open and\n       * close animations.\n       *\n       * @expose\n       * @method\n       * @name oj.ojDialog#isOpen\n       * @ojshortdesc Returns true if the dialog is currently open.\n       * @memberof oj.ojDialog\n       * @instance\n       * @return {boolean} <code>true</code> if the dialog is open.\n       *\n       * @example <caption>Invoke the <code class=\"prettyprint\">isOpen</code> method:</caption>\n       * var isOpen = myDialog.isOpen();\n       */\n      isOpen: function () {\n        var status = oj.ZOrderUtils.getStatus(this.element);\n        // the window is visible and reparented to the zorder container for these statuses\n        return (\n          status === oj.ZOrderUtils.STATUS.OPENING ||\n          status === oj.ZOrderUtils.STATUS.OPEN ||\n          status === oj.ZOrderUtils.STATUS.BEFORE_CLOSE ||\n          status === oj.ZOrderUtils.STATUS.CLOSING\n        );\n      },\n      /**\n       * Opens the dialog.\n       *\n       * @expose\n       * @method\n       * @name oj.ojDialog#open\n       * @memberof oj.ojDialog\n       * @instance\n       * @return {void}\n       * @fires oj.ojDialog#beforeOpen\n       * @fires oj.ojDialog#open\n       *\n       * @example <caption>Invoke the <code class=\"prettyprint\">open</code> method:</caption>\n       * var open = myDialog.open();\n       */\n      open: function (event) {\n        if (this._isOperationPending('open', [event])) {\n          return;\n        }\n\n        // calling open on a dialog in an open state will result in calling the\n        // beforeOpen followed by resetting inital focus. This is different behavior\n        // than the popup which forces a sync close follwed by a reopen - dialog\n        // doesn't have accessiblity launcher requirements.\n        var status = oj.ZOrderUtils.getStatus(this.element);\n        if (\n          !(\n            status === oj.ZOrderUtils.STATUS.OPEN ||\n            status === oj.ZOrderUtils.STATUS.UNKNOWN ||\n            status === oj.ZOrderUtils.STATUS.CLOSE\n          )\n        ) {\n          return;\n        }\n\n        this._isDefaultPosition = !this._hasPositionAttribute();\n\n        // status change is needed to prevent calling open from an on before open\n        // handler.  The _isOperationPending doens't gurard until this._setWhenReady('open');\n        oj.ZOrderUtils.setStatus(this.element, oj.ZOrderUtils.STATUS.BEFORE_OPEN);\n        if (this._trigger('beforeOpen', event) === false) {\n          oj.ZOrderUtils.setStatus(this.element, status);\n          return;\n        }\n\n        // open was called on a open dialog, just establish intial focus\n        if (status === oj.ZOrderUtils.STATUS.OPEN) {\n          oj.ZOrderUtils.setStatus(this.element, status);\n          this._focusTabbable();\n          return;\n        }\n\n        // activates the isOperationPending gate keeper\n        this._setWhenReady('open');\n\n        if (this.userDefinedDialogHeader) {\n          // Add close button to user-defined header\n          if (\n            (this.closeButton === undefined || this.closeButton === null) &&\n            this.options.cancelBehavior === 'icon'\n          ) {\n            this._createCloseButton(this._userDefinedHeaderDiv);\n          }\n        } else {\n          this._createTitlebarCloseButton();\n        }\n\n        this.opener = $(this.document[0].activeElement);\n\n        var isSheetDisplay = this._isSheetDisplay();\n\n        if (isSheetDisplay) {\n          this.element[0].classList.add('oj-dialog-sheet');\n        }\n\n        if (!isSheetDisplay && this.options.dragAffordance === 'title-bar' && $.fn.draggable) {\n          this._makeDraggable();\n        }\n        // normalize alignments, so that start and end keywords work as expected.\n        var isRtl = this._GetReadingDirection() === 'rtl';\n        var position = this.options.position;\n        if (isSheetDisplay) {\n          position = this._setSheetPosition(this.options.position);\n        }\n        position = oj.PositionUtils.coerceToJqUi(position);\n        position = oj.PositionUtils.normalizeHorizontalAlignment(position, isRtl);\n\n        // if modality is set to modal, prevent accesskey events\n        // from being triggered while dialog is open\n        if (this.options.modality === 'modal') {\n          var forEach = Array.prototype.forEach;\n          // Mark elements within the dialog that have an accesskey attr. Those shouldn't have accesskey attr removed\n          var elementsInDialogWithAccesskey = this.element[0].querySelectorAll('[accesskey]');\n          forEach.call(elementsInDialogWithAccesskey, function (element) {\n            element.classList.add(OJD_HELPER_ELEMENT_DIALOG);\n          });\n          // Mark elements with accesskey attr, move accesskey value to data attr, remove accesskey attr from elements\n          var elementsInDOMWithAccesskey = document.querySelectorAll('[accesskey]');\n          forEach.call(elementsInDOMWithAccesskey, function (element) {\n            if (!element.classList.contains(OJD_HELPER_ELEMENT_DIALOG)) {\n              element.classList.add('oj-helper-element-with-accesskey');\n              element.setAttribute(OJD_ACCESS_KEY, element.getAttribute('accesskey')); // @HTMLUpdateOK\n              element.removeAttribute('accesskey');\n            }\n          });\n        }\n\n        /** @type {!Object.<oj.PopupService.OPTION, ?>} */\n        var psOptions = {};\n        psOptions[oj.PopupService.OPTION.POPUP] = this.element;\n        psOptions[oj.PopupService.OPTION.LAUNCHER] = this.opener;\n        psOptions[oj.PopupService.OPTION.POSITION] = position;\n        psOptions[oj.PopupService.OPTION.MODALITY] = this.options.modality;\n        psOptions[oj.PopupService.OPTION.EVENTS] = this._getPopupServiceEvents();\n        psOptions[oj.PopupService.OPTION.LAYER_SELECTORS] = 'oj-dialog-layer';\n        psOptions[oj.PopupService.OPTION.LAYER_LEVEL] = oj.PopupService.LAYER_LEVEL.TOP_LEVEL;\n        psOptions[oj.PopupService.OPTION.CUSTOM_ELEMENT] = this._IsCustomElement();\n        oj.PopupService.getInstance().open(psOptions);\n      },\n      /**\n       * Before open callback is called after the dialog has been reparented into the\n       * zorder container. Open animation is performed here.\n       * @memberof oj.ojDialog\n       * @instance\n       * @private\n       * @param {!Object.<oj.PopupService.OPTION, ?>} psOptions property bag for opening the popup\n       * @return {Promise|void}\n       */\n      _beforeOpenHandler: function (psOptions) {\n        var rootElement = psOptions[oj.PopupService.OPTION.POPUP];\n        var position = psOptions[oj.PopupService.OPTION.POSITION];\n\n        var isSheet = this._isSheetDisplay();\n        if (isSheet) {\n          // turn off overflow before animating in 'sheet' mode\n          this._disableBodyOverflow();\n        }\n\n        rootElement.show();\n\n        var isFull = this._isFullDisplay();\n        if (isFull) {\n          this.element[0].classList.add('oj-dialog-full');\n        }\n\n        rootElement.position(position);\n\n        // note the initial dialog width/height\n        this._initialWidth = rootElement.width();\n        this._initialHeight = rootElement.height();\n\n        this._registerResizeListener(this.element[0]);\n\n        // We add .oj-animate-open when the dialog is animating on open.\n        // This supports maintaing the visibility of a nested dialog during animation open.\n        rootElement.parent().addClass('oj-animate-open');\n\n        var animationOptions = (ThemeUtils.parseJSONFromFontFamily(OJD_OPTION_DEFAULTS) || {})\n          .animation;\n        var openAnimation;\n        if (animationOptions) {\n          if (isSheet && !isFull && animationOptions.sheet) {\n            openAnimation = animationOptions.sheet.open;\n          } else if (animationOptions.normal) {\n            openAnimation = animationOptions.normal.open;\n          } else if (animationOptions.open) {\n            // compatibility with older themes\n            openAnimation = animationOptions.open;\n          }\n        }\n        if (openAnimation) {\n          // eslint-disable-next-line no-undef\n          return AnimationUtils.startAnimation(rootElement[0], 'open', openAnimation, this);\n        }\n\n        return undefined;\n      },\n      /**\n       * Called after the dialog is shown. Perform open finalization.\n       * @memberof oj.ojDialog\n       * @instance\n       * @private\n       * @param {!Object.<oj.PopupService.OPTION, ?>} psOptions property bag for opening the popup\n       * @return {void}\n       */\n      _afterOpenHandler: function (psOptions) {\n        var rootElement = psOptions[oj.PopupService.OPTION.POPUP];\n        rootElement.parent().removeClass('oj-animate-open');\n\n        // JET-44685: iOS may reveal address bar during open animation, need to make sure the position is set\n        // properly after the animation completes\n        if (oj.AgentUtils.getAgentInfo().os === oj.AgentUtils.OS.IOS) {\n          this._adjustPosition();\n        } else if (\n          this._initialWidth !== rootElement.width() ||\n          this._initialHeight !== rootElement.height()\n        ) {\n          this._adjustPosition();\n        }\n        delete this._initialWidth;\n        delete this._initialHeight;\n\n        this._restoreBodyOverflow();\n        this._makeResizable();\n        this._trigger('open');\n        this._focusTabbable();\n      },\n      /**\n       * Refresh the dialog.\n       * Typically used after dynamic content is added to a dialog.\n       * @expose\n       * @method\n       * @name oj.ojDialog#refresh\n       * @memberof oj.ojDialog\n       * @instance\n       * @return {void}\n       * @example <caption>Invoke the <code class=\"prettyprint\">refresh</code> method:</caption>\n       * myDialog.refresh();\n       */\n      refresh: function () {\n        this._super();\n      },\n\n      /**\n       * Unregister event listeners for resize the dialog element.\n       * @param {Element} element  DOM element\n       * @private\n       */\n      _unregisterResizeListener: function (element) {\n        if (element && this._resizeHandler) {\n          // remove existing listener\n          DomUtils.removeResizeListener(element, this._resizeHandler);\n          this._resizeHandler = null;\n        }\n      },\n\n      /**\n       * Register event listeners for resize the dialog element.\n       * @param {Element} element  DOM element\n       * @private\n       */\n      _registerResizeListener: function (element) {\n        if (element) {\n          if (this._resizeHandler == null) {\n            this._resizeHandler = this._handleResize.bind(this);\n          }\n          DomUtils.addResizeListener(element, this._resizeHandler, 100, true);\n        }\n      },\n\n      /**\n       * Resize handler to adjust dialog position when the size changes after\n       * initial render.\n       *\n       * @memberof oj.ojDialog\n       * @instance\n       * @private\n       */\n      _handleResize: function () {\n        if (oj.ZOrderUtils.getStatus(this.element) === oj.ZOrderUtils.STATUS.OPEN) {\n          this._adjustPosition();\n        }\n      },\n\n      /**\n       * @memberof oj.ojDialog\n       * @instance\n       * @private\n       */\n      _focusTabbable: function () {\n        var hasFocus = this.GetFocusElement();\n        hasFocus.focus();\n        this._trigger('focus');\n      },\n\n      /**\n       * Returns the current focusable element for this component which can be the root custom element\n       * or an HTML element like an input or select.\n       * @return {Element}\n       * @memberof oj.ojDialog\n       * @instance\n       * @protected\n       * @override\n       */\n      GetFocusElement: function () {\n        var hasFocus = null;\n\n        // Set focus to the outer dialog if the title-bar is clicked (or dragged).\n        if (this._titleBarMousedown === true) {\n          return this.element[0];\n        }\n\n        // Set focus to the first match:\n        // 1. First element inside the dialog matching [autofocus]\n        // 2. Tabbable element inside the content element\n        // 3. Tabbable element inside the footer\n        // 4. The close button\n        // 5. The dialog itself\n\n        hasFocus = this.element.find('[autofocus]');\n\n        if (hasFocus == null || !hasFocus.length) {\n          hasFocus = FocusUtils.getFirstTabStop(this._contentDiv);\n          if (hasFocus != null) return hasFocus;\n        }\n        if (hasFocus == null || !hasFocus.length) {\n          if (this._uiDialogFooter && this._uiDialogFooter.length) {\n            hasFocus = FocusUtils.getFirstTabStop(this._uiDialogFooterDiv);\n            if (hasFocus != null) return hasFocus;\n          }\n        }\n        if (hasFocus == null || !hasFocus.length) {\n          if (this.closeButton) {\n            hasFocus = this.closeButton;\n          }\n        }\n        if (hasFocus == null || !hasFocus.length) {\n          hasFocus = this.element;\n        }\n        return hasFocus[0];\n      },\n\n      _keydownHandler: function (event) {\n        if (\n          this.options.cancelBehavior !== 'none' &&\n          !event.isDefaultPrevented() &&\n          event.keyCode &&\n          event.keyCode === $.ui.keyCode.ESCAPE\n        ) {\n          event.preventDefault();\n          event.stopImmediatePropagation();\n          this.close(event);\n          return;\n        }\n\n        if (event.keyCode !== $.ui.keyCode.TAB) {\n          return;\n        }\n\n        // prevent tabbing out of dialogs\n        var focusItem;\n\n        // Note that we check document.activeElement instead of event.target since\n        // descendant elements such as ojTable may change focus when handling Tab key.\n        // This aligns with browser behavior because it determines next tabstop\n        // based on activeElement.\n        if (!event.shiftKey) {\n          // For TAB, we cycle when we are on the last element.\n          if (\n            FocusUtils.isLastActiveElement(this.element) ||\n            document.activeElement === this.element[0]\n          ) {\n            focusItem = FocusUtils.getFirstTabStop(this.element);\n            if (focusItem != null) {\n              focusItem.focus();\n              event.preventDefault();\n            }\n          }\n        } else if (\n          FocusUtils.isFirstActiveElement(this.element) ||\n          document.activeElement === this.element[0]\n        ) {\n          // For SHIFT-TAB, we cycle when we are on the first element.\n          focusItem = FocusUtils.getLastTabStop(this.element);\n          if (focusItem != null) {\n            focusItem.focus();\n            event.preventDefault();\n          }\n        }\n      },\n\n      //\n      // Invoke focusable on the passed element.\n      // Called on two distinct elements - the outer dialog,\n      // and the closeWrapper (assuming that there is an x-icon in the dialog)\n      //\n      _setupFocus: function (elem) {\n        var self = this;\n        this._focusable({\n          applyHighlight: true,\n          setupHandlers: function (focusInHandler, focusOutHandler) {\n            self._on(elem, {\n              focus: function (event) {\n                focusInHandler($(event.currentTarget));\n              },\n              blur: function (event) {\n                focusOutHandler($(event.currentTarget));\n              }\n            });\n          }\n        });\n      },\n\n      _disableBodyOverflow: function () {\n        var body = document.body;\n        body.classList.add('oj-dialog-sheet-animating');\n      },\n\n      _restoreBodyOverflow: function () {\n        var body = document.body;\n        body.classList.remove('oj-dialog-sheet-animating');\n      },\n\n      _destroyCloseButton: function () {\n        if (this.closeButtonDiv !== null && this.closeButtonDiv !== undefined) {\n          if (this.closeButtonDiv.parentElement) {\n            Components.subtreeDetached(this.closeButtonDiv);\n            this.closeButtonDiv.parentElement.removeChild(this.closeButtonDiv);\n          }\n\n          this.closeButton = null;\n        }\n\n        if (this._headerSlot) {\n          this._headerSlot.classList.remove(OJD_HEADER_CLOSE);\n        }\n        if (this._uiDialogTitlebarDiv) {\n          this._uiDialogTitlebarDiv.classList.remove(OJD_HEADER_CLOSE);\n        }\n      },\n\n      //\n      // Create a close button.\n      // Needed for user-defined headers.\n      //\n      _createCloseButton: function (divParentElement) {\n        // use oj-button for custom element implementations\n        if (this._IsCustomElement()) {\n          this.closeButtonDiv = document.createElement('oj-button');\n          this.closeButtonDiv.classList.add(OJD_HEADER_CLOSE_WRAPPER);\n          this.closeButtonDiv.setAttribute('data-oj-binding-provider', 'none');\n          this.closeButtonDiv.setAttribute('display', 'icons');\n          this.closeButtonDiv.setAttribute('chroming', 'half');\n\n          var closeButtonLabel = document.createElement('span');\n          closeButtonLabel.textContent = this.getTranslatedString('labelCloseIcon');\n\n          var closeButtonStartIcon = document.createElement('span');\n          closeButtonStartIcon.className = 'oj-fwk-icon oj-fwk-icon-cross';\n          closeButtonStartIcon.setAttribute('slot', 'startIcon');\n\n          this.closeButtonDiv.appendChild(closeButtonStartIcon);\n          this.closeButtonDiv.appendChild(closeButtonLabel);\n\n          divParentElement.appendChild(this.closeButtonDiv); // @HTMLUpdateOK\n          Components.subtreeAttached(this.closeButtonDiv);\n\n          this.closeButton = $(this.closeButtonDiv);\n        }\n\n        if (!this._IsCustomElement()) {\n          this.closeButton = $('<button><\\button>').addClass(OJD_HEADER_CLOSE_WRAPPER);\n\n          this.closeButton\n            .ojButton({\n              display: 'icons',\n              chroming: 'half',\n              label: this.getTranslatedString('labelCloseIcon'),\n              icons: { start: 'oj-component-icon oj-fwk-icon-cross' }\n            })\n            .appendTo(divParentElement); // @HTMLUpdateOK\n\n          this.closeButtonDiv = this.closeButton[0];\n        }\n\n        this._on(this.closeButton, {\n          click: function (event) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            this.close(event);\n          }\n        });\n\n        // When the close button is present, add a class to the title bar.\n        // This is used to conditionally apply style changes to the title div.\n        if (this._headerSlot) {\n          this._headerSlot.classList.add(OJD_HEADER_CLOSE);\n        }\n        if (this._uiDialogTitlebarDiv) {\n          this._uiDialogTitlebarDiv.classList.add(OJD_HEADER_CLOSE);\n        }\n\n        // no need to do this - buttons handle focus on their own.\n        // var hasFocus = this.closeButton;\n        // this._setupFocus(hasFocus);\n      },\n\n      //\n      // Create the close button and the titlebar's mousedown handler.\n      //\n      _createTitlebarCloseButton: function () {\n        if (\n          (this.closeButton === undefined || this.closeButton === null) &&\n          this.options.cancelBehavior === 'icon'\n        ) {\n          this._createCloseButton(this._uiDialogTitlebarDiv);\n        }\n\n        this._on(this._uiDialogTitlebar, {\n          mousedown: function (event) {\n            // Don't prevent click on close button (#8838)\n            // Focusing a dialog that is partially scrolled out of view\n            // causes the browser to scroll it into view, preventing the click event\n            // Note that the implementation will search for the dialog close wrapper class\n            // in parent, grandparent, etc., in order to handle custom element vs. widget syntax,\n            // as well as handle the differences in browser event implementions (e.g. IE reports\n            // a shallower button stack for button click events).\n            //\n            var isCloseButton = DomUtils.isAncestorOrSelf(this.closeButtonDiv, event.target);\n            this._titleBarMousedown = true;\n            if (!isCloseButton) {\n              // Set focus to the dialog if we are dragging by the header\n              this.element.focus();\n            }\n          },\n          mouseup: function () {\n            this._titleBarMousedown = null;\n          }\n        });\n      },\n\n      _createTitlebar: function () {\n        this._uiDialogTitlebarDiv = document.createElement('div');\n        this._uiDialogTitlebarDiv.classList.add(OJD_HEADER);\n\n        // prettier-ignore\n        this._dialogContainer.insertBefore( // @HTMLUpdateOK\n          this._uiDialogTitlebarDiv,\n          this._dialogContainer.firstChild\n        );\n\n        Components.subtreeAttached(this._uiDialogTitlebarDiv);\n\n        this._uiDialogTitlebar = $(this._uiDialogTitlebarDiv);\n\n        this._uiDialogTitleDiv = document.createElement('h1');\n        this._uiDialogTitleDiv.classList.add('oj-dialog-title');\n        $(this._uiDialogTitleDiv).uniqueId();\n        this._uiDialogTitlebarDiv.appendChild(this._uiDialogTitleDiv); // @HTMLUpdateOK\n        Components.subtreeAttached(this._uiDialogTitleDiv);\n\n        this._title(this._uiDialogTitleDiv);\n\n        this.element.attr({\n          'aria-labelledby': this._uiDialogTitleDiv.id\n        });\n      },\n\n      _title: function (_title) {\n        var title = _title;\n\n        // Set the content of the title.\n        if (!this._IsCustomElement()) {\n          if (!this.options.title) {\n            title.innerHTML = '&#160;'; // @HTMLUpdateOK\n          }\n          title.textContent = this.options.title;\n        } else if (this._IsCustomElement()) {\n          if (this.options.dialogTitle) {\n            title.textContent = this.options.dialogTitle;\n          } else if (this.element.attr('title')) {\n            title.textContent = this.element.attr('title');\n          } else {\n            title.innerHTML = '&#160;'; // @HTMLUpdateOK\n          }\n        }\n      },\n\n      _makeDraggable: function () {\n        var that = this;\n        var options = this.options;\n\n        function filteredUi(ui) {\n          return {\n            position: ui.position,\n            offset: ui.offset\n          };\n        }\n\n        this.element.draggable({\n          addClasses: false,\n          handle: '.oj-dialog-header',\n          containment: 'document',\n          start: function (event, ui) {\n            $(this).addClass('oj-dialog-dragging');\n            that._positionDescendents();\n            that._trigger('dragStart', event, filteredUi(ui));\n          },\n          drag: function (event, ui) {\n            //\n            // call positionDescendents so that any descendents,\n            // such as a pulldown menu, will be repositioned as the dialog is dragged.\n            //\n            that._positionDescendents();\n            that._trigger('drag', event, filteredUi(ui));\n          },\n          stop: function (event, ui) {\n            var left = ui.offset.left - that.document.scrollLeft();\n            var top = ui.offset.top - that.document.scrollTop();\n\n            options.position = {\n              my: { horizontal: 'left', vertical: 'top' },\n              at: { horizontal: 'left', vertical: 'top' },\n              offset: { x: left >= 0 ? left : 0, y: top >= 0 ? top : 0 },\n              of: window\n            };\n\n            $(this).removeClass('oj-dialog-dragging');\n            that._positionDescendents();\n            that._trigger('dragStop', event, filteredUi(ui));\n          }\n        });\n\n        this.element.addClass(OJ_DRAGGABLE);\n      },\n      _destroyResizable: function () {\n        if (this._resizableComponent && this._resizableComponent('instance')) {\n          this._resizableComponent('destroy');\n          delete this._resizableComponent;\n        }\n      },\n      _makeResizable: function () {\n        this._destroyResizable();\n        if (this.options.resizeBehavior !== 'resizable') {\n          return;\n        }\n        var that = this;\n        var resizeHandles = 'n,e,s,w,se,sw,ne,nw';\n\n        function filteredUi(ui) {\n          return {\n            originalPosition: ui.originalPosition,\n            originalSize: ui.originalSize,\n            position: ui.position,\n            size: ui.size\n          };\n        }\n\n        this._resizableComponent = this.element.ojResizable.bind(this.element);\n\n        var minWidth = Math.max(DomUtils.getCSSLengthAsFloat(this.element.css('min-width')), 10);\n        var minHeight = Math.max(DomUtils.getCSSLengthAsFloat(this.element.css('min-height')), 10);\n        var maxWidth = DomUtils.getCSSLengthAsFloat(this.element.css('max-width'));\n        var maxHeight = DomUtils.getCSSLengthAsFloat(this.element.css('max-height'));\n        maxWidth = maxWidth === 0 ? null : maxWidth;\n        maxHeight = maxHeight === 0 ? null : maxHeight;\n\n        this._resizableComponent({\n          minWidth: minWidth,\n          minHeight: minHeight,\n          maxWidth: maxWidth,\n          maxHeight: maxHeight,\n          cancel: OJD_CONTENT_CLASS,\n          containment: 'document',\n          handles: resizeHandles,\n          start: function (event, ui) {\n            that._isResizing = true;\n\n            $(this).addClass('oj-dialog-resizing');\n            // fire resizestart\n            that._trigger('resizeStart', event, filteredUi(ui));\n          },\n          resize: function (event, ui) {\n            that._trigger('resize', event, filteredUi(ui));\n          },\n          stop: function (event, ui) {\n            that._isResizing = false;\n\n            $(this).removeClass('oj-dialog-resizing');\n            that._trigger('resizeStop', event, filteredUi(ui));\n          }\n        });\n      },\n      _position: function () {\n        //\n        // Extended position objects with better names to support RTL.\n        //\n        var isRtl = this._GetReadingDirection() === 'rtl';\n        var position = this.options.position;\n        if (this._isSheetDisplay()) {\n          position = this._setSheetPosition(position);\n        }\n        position = oj.PositionUtils.coerceToJqUi(position);\n        position = oj.PositionUtils.normalizeHorizontalAlignment(position, isRtl);\n        this.element.position(position);\n\n        this._positionDescendents();\n      },\n      _positionDescendents: function () {\n        // trigger refresh of descendents\n        oj.PopupService.getInstance().triggerOnDescendents(\n          this.element,\n          oj.PopupService.EVENT.POPUP_REFRESH\n        );\n      },\n      _adjustPosition: function () {\n        var isDraggable = this.element.hasClass(OJ_DRAGGABLE);\n        var isResizable = this.element.hasClass(OJ_RESIZABLE);\n        // do not adjust position for resizable, movable and big dialogs\n        if (\n          isDraggable ||\n          isResizable ||\n          this.element.width() > window.innerWidth ||\n          this.element.height() > window.innerHeight\n        ) {\n          this._positionDescendents();\n        } else {\n          this._position();\n        }\n      },\n      _isSheetDisplay: function () {\n        if (this._isDefaultPosition) {\n          var behavior = ThemeUtils.parseJSONFromFontFamily('oj-theme-json').behavior;\n          var isPhone = Config.getDeviceRenderMode() === 'phone';\n          if (behavior.includes('redwood') && isPhone) {\n            return true;\n          }\n        }\n        return false;\n      },\n      _isFullDisplay: function () {\n        if (!this._isSheetDisplay()) {\n          // full display supported on Reddwood mobile only\n          return false;\n        }\n        var height = window.innerHeight;\n        var width = window.innerWidth;\n        var elemHeight = this.element[0].offsetHeight;\n        var elemWidth = this.element[0].offsetWidth;\n        if (elemHeight >= height * 0.95 && elemWidth >= width * 0.95) {\n          return true;\n        }\n        return false;\n      },\n      _hasPositionAttribute: function () {\n        var attrs = this.element[0].attributes;\n        for (var i = 0; i < attrs.length; i++) {\n          if (attrs[i].name.startsWith('position')) {\n            return true;\n          }\n        }\n        return false;\n      },\n      _setSheetPosition: function (position) {\n        var pos = $.extend({}, position);\n        pos.my.vertical = 'bottom';\n        pos.at.vertical = 'bottom';\n        pos.of = window;\n        return pos;\n      },\n      _setOption: function (key, value, flags) {\n        /* jshint maxcomplexity:15*/\n        var isDraggable;\n\n        // don't allow a dialog to be disabled.\n        if (key === 'disabled') {\n          return;\n        }\n\n        this._super(key, value, flags);\n\n        switch (key) {\n          case 'dragAffordance':\n            isDraggable = this.element.hasClass(OJ_DRAGGABLE);\n\n            if (isDraggable && value === 'none') {\n              this.element.draggable('destroy');\n              this.element.removeClass(OJ_DRAGGABLE);\n            }\n\n            if (!this._isSheetDisplay() && !isDraggable && value === 'title-bar') {\n              this._makeDraggable();\n            }\n\n            break;\n\n          case 'position':\n            // convert to the internal position format and reevaluate the position.\n            this._isDefaultPosition = false;\n            var options = this.options;\n            options.position = oj.PositionUtils.coerceToJet(value, options.position);\n            this._position();\n\n            // setting the option is handled here.  don't call on super.\n            return;\n\n          case 'resizeBehavior':\n            if (oj.ZOrderUtils.getStatus(this.element) === oj.ZOrderUtils.STATUS.OPEN) {\n              this._makeResizable();\n            }\n            break;\n\n          case 'title':\n          case 'dialogTitle':\n            if (this.userDefinedDialogHeader) {\n              this._title(this._userDefinedHeaderDiv.querySelector(OJD_TITLE_CLASS));\n            } else {\n              this._title(this._uiDialogTitlebarDiv.querySelector(OJD_TITLE_CLASS));\n            }\n            break;\n          case 'role':\n            this.element.attr('role', value);\n            break;\n\n          case 'modality':\n            if (oj.ZOrderUtils.getStatus(this.element) === oj.ZOrderUtils.STATUS.OPEN) {\n              /** @type {!Object.<oj.PopupService.OPTION, ?>} */\n              var psOptions = {};\n              psOptions[oj.PopupService.OPTION.POPUP] = this.element;\n              psOptions[oj.PopupService.OPTION.MODALITY] = value;\n              oj.PopupService.getInstance().changeOptions(psOptions);\n            }\n            break;\n\n          case 'cancelBehavior':\n            if (value === 'none' || value === 'escape') {\n              this._destroyCloseButton();\n            } else if (value === 'icon') {\n              if (this.userDefinedDialogHeader) {\n                this._destroyCloseButton();\n                this._createCloseButton(this._userDefinedHeaderDiv);\n\n                //\n                // Insert oj-dialog-title between oj-dialog-header and oj-dialog-header-close-wrapper\n                //\n                this._userDefinedTitleDiv = this._userDefinedHeaderDiv.querySelector(OJD_TITLE_CLASS);\n                this._userDefinedTitle = $(this._userDefinedTitleDiv);\n              } else {\n                this._destroyCloseButton();\n                this._createCloseButton(this._uiDialogTitlebarDiv);\n\n                this.standardTitleDiv = this._uiDialogTitlebarDiv.querySelector(OJD_TITLE_CLASS);\n                this.standardTitle = $(this.standardTitleDiv);\n              }\n            }\n            break;\n          default:\n            break;\n        }\n      },\n\n      getNodeBySubId: function (locator) {\n        if (locator === null) {\n          return this.element ? this.element[0] : null;\n        }\n\n        function _escapeId(id) {\n          var targetId = [];\n          var regex = /\\w|_|-/;\n\n          for (var i = 0; i < id.length; i++) {\n            var c = id.substring(i, i + 1);\n            if (regex.test(c)) {\n              targetId.push(c);\n            } else {\n              targetId.push('\\\\' + c);\n            }\n          }\n          return targetId.join('');\n        }\n\n        var subId = locator.subId;\n\n        //\n        // Use slot structure to return body and footer subids.\n        //\n        if (this._IsCustomElement() && (subId === OJD_FOOTER || subId === OJD_BODY)) {\n          if (subId === OJD_BODY) {\n            return this._uiDialogBodyDiv.querySelector(OJD_BODY_CLASS);\n          } else if (subId === OJD_FOOTER) {\n            return this._uiDialogFooterDiv.querySelector(OJD_FOOTER_CLASS);\n          }\n        } else {\n          // General case\n          var selector;\n          var node;\n\n          switch (subId) {\n            case OJD_HEADER:\n            case OJD_CONTENT:\n            case OJD_FOOTER:\n              selector =\n                this.element[0].nodeName +\n                '[id=\"' +\n                _escapeId(this.element.attr('id')) +\n                '\"] > ' +\n                OJD_CONTAINER_CLASS +\n                ' > ';\n              selector += '.' + subId;\n              node = this.element.parent().find(selector);\n              if (!node || node.length === 0) {\n                return null;\n              }\n\n              return node[0];\n\n            case OJ_RESIZABLE_N:\n            case OJ_RESIZABLE_E:\n            case OJ_RESIZABLE_S:\n            case OJ_RESIZABLE_W:\n            case OJ_RESIZABLE_SE:\n            case OJ_RESIZABLE_SW:\n            case OJ_RESIZABLE_NE:\n            case OJ_RESIZABLE_NW:\n              selector =\n                this.element[0].nodeName + '[id=\"' + _escapeId(this.element.attr('id')) + '\"] > ';\n              selector += '.' + subId;\n              node = this.element.parent().find(selector);\n              if (!node || node.length === 0) {\n                return null;\n              }\n\n              return node[0];\n\n            // \"oj-dialog-close-icon\" is deprecated as of 1.2\n            // use \"oj-dialog-close\" instead.\n            // \"oj-dialog-close\" is deprecated as of 2.1.*\n            case 'oj-dialog-close-icon':\n            case 'oj-dialog-close':\n              return null;\n\n            // \"oj-dialog-body\" is deprecated as of 1.2\n            case OJD_BODY:\n              selector =\n                this.element[0].nodeName + '[id=\"' + _escapeId(this.element.attr('id')) + '\"] > ';\n              selector += OJD_CONTAINER_CLASS + ' > ' + OJD_CONTENT_CLASS + ' > ';\n              selector += '.' + subId;\n              node = this.element.parent().find(selector);\n              if (!node || node.length === 0) {\n                return null;\n              }\n\n              return node[0];\n\n            case OJD_HEADER_CLOSE_WRAPPER:\n              selector =\n                this.element[0].nodeName + '[id=\"' + _escapeId(this.element.attr('id')) + '\"] > ';\n              selector += OJD_CONTAINER_CLASS + ' > ' + OJD_HEADER_CLASS + ' > ';\n              selector += '.' + subId;\n              node = this.element.parent().find(selector);\n              if (!node || node.length === 0) {\n                return null;\n              }\n\n              return node[0];\n\n            default:\n              break;\n          }\n        }\n\n        // Non-null locators have to be handled by the component subclasses\n        return null;\n      },\n\n      getSubIdByNode: function (node) {\n        if (node != null) {\n          var nodeCached = $(node);\n\n          if (nodeCached.hasClass(OJD_HEADER)) {\n            return { subId: OJD_HEADER };\n          }\n          if (nodeCached.hasClass(OJD_FOOTER)) {\n            return { subId: OJD_FOOTER };\n          }\n          if (nodeCached.hasClass(OJD_CONTENT)) {\n            return { subId: OJD_CONTENT };\n          }\n          if (nodeCached.hasClass(OJD_HEADER_CLOSE_WRAPPER)) {\n            return { subId: OJD_HEADER_CLOSE_WRAPPER };\n          }\n          if (nodeCached.hasClass(OJ_RESIZABLE_N)) {\n            return { subId: OJ_RESIZABLE_N };\n          }\n          if (nodeCached.hasClass(OJ_RESIZABLE_E)) {\n            return { subId: OJ_RESIZABLE_E };\n          }\n          if (nodeCached.hasClass(OJ_RESIZABLE_S)) {\n            return { subId: OJ_RESIZABLE_S };\n          }\n          if (nodeCached.hasClass(OJ_RESIZABLE_W)) {\n            return { subId: OJ_RESIZABLE_W };\n          }\n          if (nodeCached.hasClass(OJ_RESIZABLE_SE)) {\n            return { subId: OJ_RESIZABLE_SE };\n          }\n          if (nodeCached.hasClass(OJ_RESIZABLE_SW)) {\n            return { subId: OJ_RESIZABLE_SW };\n          }\n          if (nodeCached.hasClass(OJ_RESIZABLE_NE)) {\n            return { subId: OJ_RESIZABLE_NE };\n          }\n          if (nodeCached.hasClass(OJ_RESIZABLE_NW)) {\n            return { subId: OJ_RESIZABLE_NW };\n          }\n        }\n\n        return null;\n      },\n      /**\n       * @memberof oj.ojDialog\n       * @instance\n       * @private\n       * @return {void}\n       */\n      _surrogateRemoveHandler: function () {\n        // In all cases except when the dialog is already open, removal of the\n        // surrogate during opening or closing will result in implicit removal.\n        // 1) CLOSING: Handled in oj.ZOrderUtils.removeFromAncestorLayer.  If the\n        //    surrogate doesn't exist the layer containing the popup dom is detached.\n        // 2) OPENING: in the PopupServiceImpl#open _finalize, if the surrogate doesn't\n        //    exist after in the open state, this remove callback is invoked.\n        //\n        // Custom element will call _NotifyDetached after element.remove but\n        // but jquery UI instances will invoke the _destory method.\n\n        var element = this.element;\n        var status = oj.ZOrderUtils.getStatus(element);\n        if (status === oj.ZOrderUtils.STATUS.OPEN) {\n          element.remove();\n        }\n      },\n      /**\n       * @memberof oj.ojDialog\n       * @instance\n       * @private\n       * @return {!Object.<oj.PopupService.EVENT, function(...)>}\n       */\n      _getPopupServiceEvents: function () {\n        if (!this._popupServiceEvents) {\n          /** @type {!Object.<oj.PopupService.EVENT, function(...)>} **/\n          var events = {};\n\n          events[oj.PopupService.EVENT.POPUP_CLOSE] = this._closeImplicitly.bind(this);\n          events[oj.PopupService.EVENT.POPUP_REMOVE] = this._surrogateRemoveHandler.bind(this);\n          events[oj.PopupService.EVENT.POPUP_REFRESH] = this._adjustPosition.bind(this);\n          events[oj.PopupService.EVENT.POPUP_BEFORE_OPEN] = this._beforeOpenHandler.bind(this);\n          events[oj.PopupService.EVENT.POPUP_AFTER_OPEN] = this._afterOpenHandler.bind(this);\n          events[oj.PopupService.EVENT.POPUP_BEFORE_CLOSE] = this._beforeCloseHandler.bind(this);\n          events[oj.PopupService.EVENT.POPUP_AFTER_CLOSE] = this._afterCloseHandler.bind(this);\n\n          this._popupServiceEvents = events;\n        }\n        return this._popupServiceEvents;\n      },\n      /**\n       * @memberof oj.ojDialog\n       * @instance\n       * @private\n       */\n      _closeImplicitly: function () {\n        this._ignoreBeforeCloseResultant = true;\n        this.close();\n        delete this._ignoreBeforeCloseResultant;\n      },\n\n      /**\n       * Creates a Promise exposed by the {@link oj.ojDialog#whenReady} method.\n       *\n       * @param {string} operation valid values are \"open\", \"close\" or \"none\"\n       * @memberof oj.ojDialog\n       * @instance\n       * @private\n       */\n      _setWhenReady: function (operation) {\n        /** @type {PopupWhenReadyMediator} */\n        var mediator = this._whenReadyMediator;\n        if (mediator) {\n          mediator.destroy();\n          delete this._whenReadyMediator;\n        }\n\n        // operation === none\n        if (['open', 'close'].indexOf(operation) < 0) {\n          return;\n        }\n\n        this._whenReadyMediator = new ojpopupcore.PopupWhenReadyMediator(\n          this.element,\n          operation,\n          'ojDialog',\n          this._IsCustomElement()\n        );\n      },\n\n      /**\n       * Checks to see if there is a pending \"open\" or \"close\" operation.  If pending and it\n       * is the same as the requested operation, the request silently fails.  If the current\n       * operation is the inverse operation, we queue the current operation after the pending\n       * operation is resolved.\n       *\n       * @memberof oj.ojDialog\n       * @instance\n       * @private\n       * @param {string} operation currently requested\n       * @param {Array} args passed to a queue operation\n       * @returns {boolean} <code>true</code> if a \"close\" or \"open\" operation is pending completion.\n       */\n      _isOperationPending: function (operation, args) {\n        /** @type {oj.PopupWhenReadyMediator} **/\n        var mediator = this._whenReadyMediator;\n        if (mediator) {\n          return mediator.isOperationPending(this, operation, operation, args);\n        }\n        return false;\n      },\n      /**\n       * Notifies the component that its subtree has been removed from the document\n       * programmatically after the component has been created.\n       *\n       * @memberof oj.ojDialog\n       * @instance\n       * @protected\n       * @override\n       */\n      _NotifyDetached: function () {\n        // detaching an open popup results in implicit dismissal\n        if (oj.ZOrderUtils.getStatus(this.element) === oj.ZOrderUtils.STATUS.OPEN) {\n          this._closeImplicitly();\n        }\n\n        this._super();\n      }\n    });\n\n    Components.setDefaultOptions({\n      ojDialog: {\n        resizeBehavior: Components.createDynamicPropertyGetter(function () {\n          return (ThemeUtils.parseJSONFromFontFamily(OJD_OPTION_DEFAULTS) || {}).resizeBehavior;\n        }),\n        cancelBehavior: Components.createDynamicPropertyGetter(function () {\n          return (ThemeUtils.parseJSONFromFontFamily(OJD_OPTION_DEFAULTS) || {}).cancelBehavior;\n        }),\n        dragAffordance: Components.createDynamicPropertyGetter(function () {\n          return (ThemeUtils.parseJSONFromFontFamily(OJD_OPTION_DEFAULTS) || {}).dragAffordance;\n        })\n      }\n    });\n  })();\n\n  (function () {\nvar __oj_dialog_metadata = \n{\n  \"properties\": {\n    \"cancelBehavior\": {\n      \"type\": \"string\",\n      \"enumValues\": [\n        \"escape\",\n        \"icon\",\n        \"none\"\n      ]\n    },\n    \"dialogTitle\": {\n      \"type\": \"string\"\n    },\n    \"dragAffordance\": {\n      \"type\": \"string\",\n      \"enumValues\": [\n        \"none\",\n        \"title-bar\"\n      ]\n    },\n    \"initialVisibility\": {\n      \"type\": \"string\",\n      \"enumValues\": [\n        \"hide\",\n        \"show\"\n      ],\n      \"value\": \"hide\"\n    },\n    \"modality\": {\n      \"type\": \"string\",\n      \"enumValues\": [\n        \"modal\",\n        \"modeless\"\n      ],\n      \"value\": \"modal\"\n    },\n    \"position\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"at\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"horizontal\": {\n              \"type\": \"string\",\n              \"enumValues\": [\n                \"center\",\n                \"end\",\n                \"left\",\n                \"right\",\n                \"start\"\n              ],\n              \"value\": \"center\"\n            },\n            \"vertical\": {\n              \"type\": \"string\",\n              \"enumValues\": [\n                \"bottom\",\n                \"center\",\n                \"top\"\n              ],\n              \"value\": \"center\"\n            }\n          }\n        },\n        \"collision\": {\n          \"type\": \"string\",\n          \"enumValues\": [\n            \"fit\",\n            \"flip\",\n            \"flipfit\",\n            \"none\"\n          ],\n          \"value\": \"fit\"\n        },\n        \"my\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"horizontal\": {\n              \"type\": \"string\",\n              \"enumValues\": [\n                \"center\",\n                \"end\",\n                \"left\",\n                \"right\",\n                \"start\"\n              ],\n              \"value\": \"center\"\n            },\n            \"vertical\": {\n              \"type\": \"string\",\n              \"enumValues\": [\n                \"bottom\",\n                \"center\",\n                \"top\"\n              ],\n              \"value\": \"center\"\n            }\n          }\n        },\n        \"of\": {\n          \"type\": \"string|object\",\n          \"value\": \"window\"\n        },\n        \"offset\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"x\": {\n              \"type\": \"number\",\n              \"value\": 0\n            },\n            \"y\": {\n              \"type\": \"number\",\n              \"value\": 0\n            }\n          }\n        }\n      }\n    },\n    \"resizeBehavior\": {\n      \"type\": \"string\",\n      \"enumValues\": [\n        \"none\",\n        \"resizable\"\n      ]\n    },\n    \"translations\": {\n      \"type\": \"object\",\n      \"value\": {},\n      \"properties\": {\n        \"labelCloseIcon\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  },\n  \"methods\": {\n    \"close\": {},\n    \"getProperty\": {},\n    \"isOpen\": {},\n    \"open\": {},\n    \"refresh\": {},\n    \"setProperties\": {},\n    \"setProperty\": {},\n    \"getNodeBySubId\": {},\n    \"getSubIdByNode\": {}\n  },\n  \"events\": {\n    \"ojAnimateEnd\": {},\n    \"ojAnimateStart\": {},\n    \"ojBeforeClose\": {},\n    \"ojBeforeOpen\": {},\n    \"ojClose\": {},\n    \"ojFocus\": {},\n    \"ojOpen\": {},\n    \"ojResize\": {},\n    \"ojResizeStart\": {},\n    \"ojResizeStop\": {}\n  },\n  \"extension\": {}\n};\n    __oj_dialog_metadata.extension._WIDGET_NAME = 'ojDialog';\n    __oj_dialog_metadata.extension._CONTROLS_SUBTREE_HIDDEN = true;\n    oj.CustomElementBridge.register('oj-dialog', { metadata: __oj_dialog_metadata });\n  })();\n\n});\n","/**\n * @license\n * Copyright (c) 2014, 2023, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\ndefine(['exports', 'ojs/ojcore-base', 'ojs/ojcomponentcore', 'jquery', 'ojs/ojlabel', 'ojs/ojthemeutils', 'ojs/ojfocusutils', 'ojs/ojcontext', 'ojs/ojlogger', 'ojs/ojvalidator-required', 'ojs/ojlabelledbyutils', 'ojs/ojtranslation', 'ojs/ojmessaging', 'ojs/ojconverterutils', 'ojs/ojvalidation-error', 'ojs/ojpopup', 'hammerjs', 'ojs/ojjquery-hammer', 'ojs/ojdomutils', 'ojs/ojanimation'], function (exports, oj, Components, $, ojlabel, ojthemeutils, FocusUtils, Context, Logger, RequiredValidator, LabelledByUtils, Translations, Message, ConverterUtils, ojvalidationError, ojpopup, Hammer, ojjqueryHammer, DomUtils, AnimationUtils) { 'use strict';\n\n  oj = oj && Object.prototype.hasOwnProperty.call(oj, 'default') ? oj['default'] : oj;\n  $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n  FocusUtils = FocusUtils && Object.prototype.hasOwnProperty.call(FocusUtils, 'default') ? FocusUtils['default'] : FocusUtils;\n  Context = Context && Object.prototype.hasOwnProperty.call(Context, 'default') ? Context['default'] : Context;\n  RequiredValidator = RequiredValidator && Object.prototype.hasOwnProperty.call(RequiredValidator, 'default') ? RequiredValidator['default'] : RequiredValidator;\n  LabelledByUtils = LabelledByUtils && Object.prototype.hasOwnProperty.call(LabelledByUtils, 'default') ? LabelledByUtils['default'] : LabelledByUtils;\n  Message = Message && Object.prototype.hasOwnProperty.call(Message, 'default') ? Message['default'] : Message;\n  ConverterUtils = ConverterUtils && Object.prototype.hasOwnProperty.call(ConverterUtils, 'default') ? ConverterUtils['default'] : ConverterUtils;\n\n  /**\n   * Base class for rendering the 'inside' labels. This is so InsideLabelStrategy\n   * and InsideFormControlLabelStrategy can share code.\n   * Extends the MessagingStrategy which does more now than messages. It now\n   * is also for rendering the form component's label in one of many positions.\n   *\n   * @extends {oj.MessagingStrategy}\n   * @protected\n   * @constructor\n   * @since 8.0.0\n   * @class BaseInsideLabelStrategy\n   * @ignore\n   * @ojtsignore\n   * @param {Array.<string>} options an array of messaging artifacts that are\n   * displayed as an inside label for non-text field form controls.\n   * For LabelStrategies this is always only labelEdge.\n   */\n  const BaseInsideLabelStrategy = function (options) {\n    this.Init(options);\n  };\n\n  // Subclass from oj.MessagingStrategy\n  oj.Object.createSubclass(BaseInsideLabelStrategy, oj.MessagingStrategy, 'BaseInsideLabelStrategy');\n\n  /**\n   * Adds a hook for subclass to use its own styleclass on root dom element.\n   * @memberof BaseInsideLabelStrategy\n   * @instance\n   * @protected\n   */\n  BaseInsideLabelStrategy.prototype._GetFormControlLabelStyleClass = function () {\n    return 'oj-form-control-label-inside';\n  };\n\n  /**\n   * Creates the label adding associated event listeners for applying\n   * marker selectors to the root and responding to label-hint\n   * and other component property changes.\n   * @memberof BaseInsideLabelStrategy\n   * @instance\n   * @protected\n   */\n  BaseInsideLabelStrategy.prototype._CreateLabel = function () {\n    var component = this.GetComponent();\n    var container = this._GetContainer(component); // could be overwritten. InsideLabelStrategy.\n    if (!container) return;\n\n    var options = component.options;\n    var element = component._getRootElement();\n    // could be overwritten ,e.g., _getBaseLabelSelector\n    var labelStyleClass = this._GetFormControlLabelStyleClass();\n    element.classList.add(labelStyleClass);\n    this.GenerateIdIfNeeded(element);\n\n    this._showUserAssistanceNotInline = component._showUserAssistanceNotInline();\n    let renderRequiredIcon = options.required && this._showUserAssistanceNotInline;\n    // for 'inside labels' we do not show help on the label.\n    this._createOjLabelElement(\n      element,\n      component,\n      container,\n      options.labelHint,\n      renderRequiredIcon,\n      options.helpHints,\n      this._showUserAssistanceNotInline\n    );\n  };\n\n  /**\n   * @memberof BaseInsideLabelStrategy\n   * @instance\n   * @private\n   * @param {Element} label oj-label element\n   * @param {CustomEvent} event requiredChanged event\n   */\n  BaseInsideLabelStrategy.prototype._createOjLabelElement = function (\n    element,\n    component,\n    container,\n    labelHint,\n    showRequired,\n    helpHintsAttrValue,\n    showUserAssistanceOnLabel\n  ) {\n    var ojlabel = document.createElement('oj-label');\n    ojlabel.id = BaseInsideLabelStrategy._getLabelId(element);\n    ojlabel.setAttribute('data-oj-binding-provider', 'none');\n    ojlabel.setAttribute('data-oj-internal', '');\n\n    // associate with form component\n    ojlabel.setAttribute('for', element.id);\n    var defaultLabelStyleClass = [component._GetDefaultStyleClass(), 'label'].join('-');\n    ojlabel.classList.add(defaultLabelStyleClass);\n    if (showRequired) {\n      ojlabel.setAttribute('show-required', showRequired);\n    }\n    if (showUserAssistanceOnLabel && helpHintsAttrValue) {\n      ojlabel.help = helpHintsAttrValue;\n    }\n\n    // add labelHint\n    var span = document.createElement('span');\n    span.id = [element.id, '|hint'].join('');\n    span.textContent = labelHint;\n\n    // add to dom and create event handlers\n    ojlabel.appendChild(span);\n    this._InsertOjLabel(ojlabel, container, component);\n    this._CreateEventHandlers(span, element, ojlabel, component);\n  };\n\n  /**\n   * Gets the form component's container. Could be overwritten to have more\n   * logic to get the container.\n   * @memberof BaseInsideLabelStrategy\n   * @instance\n   * @protected\n   */\n  BaseInsideLabelStrategy.prototype._GetContainer = function (component) {\n    return component._GetFormControlContainer();\n  };\n\n  /**\n   * Creates event handlers\n   * Override if there are more event listeners to create\n   * Components with label-hint and label-edge of none or inside create\n   * their own labels in this strategy, and when they do we listen for\n   * attribute changes so we can deal with them and update the label accordingly.\n   * If the oj-form-layout creates the label (top/start), then similar event listeners\n   * are created there in ojformlayout.\n   * @param {Element} span span around the label where we use innerText to set the labelHint\n   * @param {Element} element root custom element\n   * @param {Element} ojlabel ojlabel custom element\n   * @param {Element} component form component\n   * @memberof BaseInsideLabelStrategy\n   * @instance\n   * @protected\n   */\n  BaseInsideLabelStrategy.prototype._CreateEventHandlers = function (\n    span,\n    element,\n    ojlabel,\n    component\n  ) {\n    this._labelHintChangedCallback = BaseInsideLabelStrategy._labelHintChangedHandler.bind(\n      this,\n      span\n    );\n    element.addEventListener('labelHintChanged', this._labelHintChangedCallback);\n    this._requiredChangedCallback = BaseInsideLabelStrategy._requiredChangedHandler.bind(\n      this,\n      ojlabel,\n      component\n    );\n    element.addEventListener('requiredChanged', this._requiredChangedCallback);\n    this._helpHintsChangedCallback = BaseInsideLabelStrategy._helpHintsChangedHandler.bind(\n      this,\n      ojlabel,\n      component\n    );\n    element.addEventListener('helpHintsChanged', this._helpHintsChangedCallback);\n  };\n\n  /**\n   * Removes the fixed label unregistering associated event listeners.\n   * @memberof BaseInsideLabelStrategy\n   * @instance\n   * @private\n   */\n  BaseInsideLabelStrategy.prototype._DestroyLabel = function () {\n    var component = this.GetComponent();\n    var options = component.options;\n    var element = component._getRootElement();\n    var labelStyleClass = this._GetFormControlLabelStyleClass(); // override\n    element.classList.remove(labelStyleClass);\n\n    var labelId = BaseInsideLabelStrategy._getLabelId(element); // no need to override\n    // find inside label. inside labels are rendered inside the form element, so\n    // start the query there. We were using document.getElementById to find the label,\n    // but in the case where we toggle from top to inside, we find the top label\n    // that has not yet been destroyed by the oj-form-layout at this point.\n    const ojlabel = element.querySelector(`[id='${labelId}']`);\n    if (ojlabel) {\n      ojlabel.for = ''; // Triggers code to unlink the oj-label from its form component\n      ojlabel.parentElement.removeChild(ojlabel);\n    }\n    options.labelledBy = undefined;\n    this._DeleteEventHandlers(element);\n  };\n\n  /**\n   * Removes the event handlers\n   * Override if there are more event handlers to delete\n   * @param {Element} element root custom element\n   * @memberof BaseInsideLabelStrategy\n   * @instance\n   * @protected\n   */\n  BaseInsideLabelStrategy.prototype._DeleteEventHandlers = function (element) {\n    element.removeEventListener('labelHintChanged', this._labelHintChangedCallback);\n    element.removeEventListener('requiredChanged', this._requiredChangedCallback);\n    element.removeEventListener('helpHintsChanged', this._helpHintsChangedCallback);\n    delete this._helpHintsChangedCallback;\n    delete this._labelHintChangedCallback;\n    delete this._requiredChangedCallback;\n  };\n\n  /**\n   * @static\n   * @private\n   * @param {Element} element root custom element\n   * @return {string} fixed label id\n   */\n  BaseInsideLabelStrategy._getLabelId = function (element) {\n    return [element.id, '-labelled-by'].join('');\n  };\n\n  /**\n   * @static\n   * @private\n   * @param {Element} span holding label text\n   * @param {CustomEvent} event labelChanged event\n   */\n  BaseInsideLabelStrategy._labelHintChangedHandler = function (span, event) {\n    // eslint-disable-next-line no-param-reassign\n    span.textContent = event.detail.value;\n  };\n\n  /**\n   * @static\n   * @private\n   * @param {Element} label oj-label element\n   * @param {CustomEvent} event requiredChanged event\n   */\n  BaseInsideLabelStrategy._requiredChangedHandler = function (label, component, event) {\n    // we show required on label if compact and not when inline, for example.\n    // get it here and cache it if it doesn't exist.\n    if (this._showUserAssistanceNotInline == null) {\n      this._showUserAssistanceNotInline = component._showUserAssistanceNotInline();\n    }\n    // eslint-disable-next-line no-param-reassign\n    label.showRequired = event.detail.value && this._showUserAssistanceNotInline;\n  };\n\n  /**\n   * helpHints attribute changed on form component, so update help icon on label if it is there.\n   * (it could be inline to the component and not on label, if so, see InlineHelpHintsStrategy)\n   * @static\n   * @private\n   * @param {Element} label oj-label element\n   * @param {CustomEvent} event helpHintsChanged event\n   */\n  BaseInsideLabelStrategy._helpHintsChangedHandler = function (label, component, event) {\n    this._showUserAssistanceNotInline = component._showUserAssistanceNotInline();\n    if (this._showUserAssistanceNotInline) {\n      // eslint-disable-next-line no-param-reassign\n      label.help = event.detail.value;\n    }\n  };\n\n  /**\n   * @class oj.EditableValueUtils\n   * @classdesc JET Editable Component Utils\n   * @export\n   * @since 0.6.0\n   * @hideconstructor\n   * @ignore\n   *\n   */\n  const EditableValueUtils = {};\n\n  // S T A T I C    V A R S\n  /**\n   * The various contexts under which validation can be run by component.\n   * @ignore\n   */\n  EditableValueUtils.validationContext = {\n    COMPONENT_CREATE: 1,\n    CONVERTER_OPTION_CHANGE: 2,\n    DISABLED_OPTION_CHANGE: 3,\n    READONLY_OPTION_CHANGE: 4,\n    REFRESH_METHOD: 5,\n    REQUIRED_OPTION_CHANGE: 6,\n    RESET_METHOD: 7,\n    USER_ACTION: 8,\n    VALIDATE_METHOD: 9,\n    VALIDATORS_OPTION_CHANGE: 10,\n    VALUE_OPTION_CHANGE: 11\n  };\n\n  /**\n   * Default validation options used by validate method.\n   * @ignore\n   */\n  EditableValueUtils.validateMethodOptions = {\n    doValueChangeCheck: false,\n    validationContext: EditableValueUtils.validationContext.VALIDATE_METHOD\n  };\n\n  /**\n   * Default validation options used when converter option changes\n   * @ignore\n   */\n  EditableValueUtils.converterOptionOptions = {\n    doValueChangeCheck: false,\n    doNotClearMessages: true,\n    validationContext: EditableValueUtils.validationContext.CONVERTER_OPTION_CHANGE\n  };\n\n  /**\n   * Default validation options used when disabled option changes\n   * @ignore\n   */\n  EditableValueUtils.disabledOptionOptions = {\n    doValueChangeCheck: false,\n    doNotClearMessages: true,\n    validationContext: EditableValueUtils.validationContext.DISABLED_OPTION_CHANGE\n  };\n\n  /**\n   * Default validation options used when required option changes\n   * @ignore\n   */\n  EditableValueUtils.requiredOptionOptions = {\n    doValueChangeCheck: false,\n    doNotClearMessages: true,\n    validationContext: EditableValueUtils.validationContext.REQUIRED_OPTION_CHANGE\n  };\n\n  /**\n   * Default validation options used when readOnly option changes\n   * @ignore\n   */\n  EditableValueUtils.readOnlyOptionOptions = {\n    doValueChangeCheck: false,\n    doNotClearMessages: true,\n    validationContext: EditableValueUtils.validationContext.READONLY_OPTION_CHANGE\n  };\n\n  /**\n   * Default validation options used when refresh method is called.\n   * @ignore\n   */\n  EditableValueUtils.refreshMethodOptions = {\n    doValueChangeCheck: false,\n    doNotClearMessages: true,\n    validationContext: EditableValueUtils.validationContext.REFRESH_METHOD\n  };\n  /**\n   * Default validation options used when validators option changes\n   * @ignore\n   *  */\n  EditableValueUtils.validatorsOptionOptions = {\n    doValueChangeCheck: false,\n    doNotClearMessages: true,\n    validationContext: EditableValueUtils.validationContext.VALIDATORS_OPTION_CHANGE\n  };\n\n  /**\n   * String used in the id on the span that surrounds the help icon.\n   * @const\n   * @private\n   * @ignore\n   * @type {string}\n   */\n  var _REQUIRED_ICON_ID = '_requiredIcon';\n\n  /**\n   * Enum for validate() return values\n   * @const\n   * @ignore\n   */\n  EditableValueUtils.VALIDATE_VALUES = {\n    VALID: 'valid',\n    INVALID: 'invalid'\n  };\n\n  /**\n   * This method is called during _InitOptions() to initialize a component option value from DOM. This\n   * uusally is the case when the option value is undefined,\n   * i.e., this.options.optionName === undefined.\n   * <br/>\n   * Returns the attribute value for the given attribute on the element appropriately converted, or\n   * the default, if the attribute isn't set on the element.<br/>\n   *\n   * @param {Object} element the element the component is initialized with.\n   * @param {string} attribute the name of the element's attribtue. Example, value, disabled etc.\n   *\n   * @returns {Object} a JSON object containing the following properties - <br/>\n   * <ul>\n   * <li><b>fromDom</b> - whether the option value was initialized from DOM. When true the option's\n   * value is written back (to observable).</li>\n   * <li><b>value</b> - the option value. the attribute value or the default if the attribute isn't\n   * set on the element.</li>\n   * </ul>\n   *\n   * @private\n   */\n  EditableValueUtils.getAttributeValue = function (element, attribute) {\n    var result;\n    var returnVal = {};\n\n    if (element && attribute) {\n      var elem = element[0];\n      switch (attribute) {\n        case 'disabled':\n          result = elem.hasAttribute('disabled') ? !!elem.disabled : undefined;\n          break;\n\n        case 'pattern':\n          result = elem.pattern || undefined;\n          break;\n\n        case 'placeholder':\n          result = elem.placeholder || undefined;\n          break;\n\n        case 'readonly':\n          result = elem.hasAttribute('readonly') ? !!elem.readOnly : undefined;\n          break;\n\n        case 'required':\n          // If attribute is present\n          //   - if the required property is undefined then return true since the attribute is set.\n          //   - Otherwise set to !!propVal\n          if (elem.hasAttribute('required')) {\n            var propVal = elem.required;\n            if (propVal !== undefined) {\n              result = !!propVal;\n            } else {\n              result = true; // any attribute value indicates true, even required='false'\n            }\n          } else {\n            result = undefined;\n          }\n          break;\n\n        case 'title':\n          result = elem.hasAttribute('title') ? elem.title : undefined;\n          break;\n\n        case 'value':\n          // element attribute may not be set, in which case default to null\n          result = element.val() || undefined;\n          break;\n\n        case 'min':\n        case 'max':\n        default:\n          // same logic for min + max as in default\n          result = elem.getAttribute(attribute) || undefined;\n          break;\n      }\n    }\n\n    if (result !== undefined) {\n      returnVal.fromDom = true;\n      returnVal.value = result;\n    } else {\n      returnVal.fromDom = false;\n      // returnVal.value = defaultValue;\n    }\n    return returnVal;\n  };\n\n  /**\n   * NOTE: This is unnecessary to call for custom elements.\n   * Called from component._InitOptions() with an array of options\n   * that the component might need to initialize from DOM (e.g.,\n   * disabled, required, title, etc). This function loops through each of these and if the\n   * constructorOptions[option] is undefined, it tries to get the option from DOM.\n   * The constructorOptions hold the options that the page author sets on the component, usually via\n   * knockout bindings, and that takes precedence over DOM.\n   * e.g., <input id=\"id\" type=\"text\" required data-bind=\"ojComponent: {component: 'ojInputText',\n                                    value: value}\"/>\n   * value is a constructorOption and required is a DOM option in this example. If you have:\n   * e.g., <input id=\"id\" type=\"text\" required data-bind=\"ojComponent: {component: 'ojInputText',\n                                    value: value, required: false}\"/>\n   * required is both a constructorOption of false and a DOM of true. The constructorOption takes\n   * precedence.\n   * <p>\n   * IMPORTANT: Do not call this method after component has been created, since option values are\n   * mutated directly after that point.</p>\n   *\n   * The 'final' value an option uses/initializes from, can come from these places (in order of least\n   * to most likely) - <br/>\n   * <ol>\n   * <li>component default - this is the widget default </li><br/>\n   * <li>app default - this is what a page author defines for the value in the page/app</li> <br/>\n   * <li>dom value - if your option also has a dom attribute, this is the value set on element for\n   * component. </li> <br/>\n   * <li>constructor value - this is the value page author sets on the component binding </li><br/>\n   * </ol>\n   *\n   * At the time _InitOptions is called, (1), (2) and (4) are merged, but this may not be the value a\n   * component wants for the option, especially when (4) is undefined. For example, if these values\n   * were set for a component - <br/>\n   * (1) - 'foo'<br/>\n   * (2) - 'bar'<br/>\n   * (3) - 'lucy'<br/>\n   * (4) - undefined<br/>\n   * <p>\n   * at the time _InitOptions is called, this.options.option is set to 'bar'. But because DOM value\n   * wins over app default or component default, the component needs to check if the constructor value was\n   * undefined and if so, set option to the dom value which is 'lucy' in this example. This is what\n   * this function does.<br/>\n   * This method always defaults the value to be - this.options.option -\n   * because we think if neither (3) nor (4) is set, then the value from (2) should win. <br/>\n   * </p>\n   *\n   * @param {Object} props Array holding Object-literal that a component provides\n   * with the following properties that helps determine the final value for one or more options.\n   *\n   * @property {string} props.attribute - name of DOM attribute\n   * @property {string|undefined} props.option - name of the option if different from attribute name.\n   *\n   * @property {Function|boolean|undefined} props.coerceDomValue - if the DOM value is set and\n   * coercing the dom value is needed, then either set to boolean true, which uses the default\n   * coercion rules for common attributes (a), or provide a custom callback (b). <p>\n   * E.g., 'value' option for input number, input date etc. have special rules for coercing the value,\n   *  so thse provide a custom callback. For common attributes like required and disabled, set the\n   *  value to true so the default oj.EditableValueUtils#coerceDomValueForOption method gets used.\n   *\n   * @property {boolean|undefined} props.validateOption - if set to true, then it calls\n   * EditableValueUtils.validateValueForOption method to validate the option.\n   *\n   * @param {Object} constructorOptions the options set on the component instance, often using\n   * component binding. (this is the value page author sets on the component binding)\n   * @param {Object} comp component instance.\n   * @param {Function=} postprocessCallback - optional callback that will receive a map of initialized\n   * options for post-processing\n   * @ignore\n   * @public\n   */\n  EditableValueUtils.initializeOptionsFromDom = function (\n    props,\n    constructorOptions,\n    comp,\n    postprocessCallback\n  ) {\n    var initializedOptions = {};\n\n    // Loop through props to initialize option\n    for (var i = 0; i < props.length; i++) {\n      var finalValue;\n      var result;\n      var prop = props[i];\n      var attribute = prop.attribute;\n      var option = prop.option || attribute;\n      var coerceDomValue = prop.coerceDomValue;\n      var validateOption = prop.validateOption;\n      var element = comp.element;\n      var previousValue = comp.options[option];\n\n      /* The precedence for the value that an option uses is as follows from lowest to highest -\n       *\n       * (1) component default - this is the widget default, already merged in to comp.options\n       * (2) app default - this is what a page author defines for the value in the page / app,\n       * already merged in to comp.options\n       * (3) dom value - if your option also has a dom attribute, this is the value set on element.\n       * (4) constructor value - this is the value page author sets on the component binding, already\n       * merged in to comp.options.\n       *\n       * When (4) is undefined then attempt to default from (3).\n       */\n\n      // Step 1: use DOM value\n      if (constructorOptions[option] === undefined) {\n        previousValue = comp.options[option];\n        result = EditableValueUtils.getAttributeValue(element, attribute);\n\n        // if we are using domValue then coerce the dom value before writing to options and trigegr\n        // option change so the value is written back (to ko)\n        if (result.fromDom) {\n          finalValue = result.value;\n\n          // only required needs coercing so not bad\n          if (coerceDomValue) {\n            if (typeof coerceDomValue === 'boolean') {\n              finalValue = EditableValueUtils.coerceDomValueForOption(option, finalValue);\n            } else if (typeof coerceDomValue === 'function') {\n              finalValue = coerceDomValue.call(comp, finalValue);\n            }\n          }\n          initializedOptions[option] = finalValue;\n        }\n      }\n\n      var valueToValidate = option in initializedOptions ? initializedOptions[option] : previousValue;\n\n      // Step 2: validate the option value if needed\n      if (validateOption) {\n        if (typeof validateOption === 'boolean') {\n          EditableValueUtils.validateValueForOption(option, valueToValidate);\n        }\n      }\n    }\n\n    if (postprocessCallback != null) {\n      postprocessCallback(initializedOptions);\n    }\n\n    comp.option(initializedOptions, { _context: { writeback: true, internalSet: true } });\n  };\n\n  /**\n   * Validates value set for the option and throws error if invalid.\n   *\n   * @param {string} option name of the option. Validates options common to all edtiableValue\n   * holders.\n   * @param {string|Object|boolean|number|undefined} value of the option that is validated\n   *\n   * @throws {Error} if option value is invalid\n   * @public\n   * @ignore\n   */\n  EditableValueUtils.validateValueForOption = function (option, value) {\n    var error = false;\n\n    switch (option) {\n      case 'required':\n        if (value !== null && typeof value !== 'boolean') {\n          error = true;\n        }\n        break;\n\n      case 'readOnly':\n      case 'disabled':\n        if (value !== null && typeof value !== 'boolean') {\n          error = true;\n        }\n        break;\n      default:\n        break;\n    }\n\n    if (error) {\n      throw new Error(\"Option '\" + option + \"' has invalid value set: \" + value);\n    }\n  };\n\n  /**\n   * Coerces the dom value being used for the option, and throws error if invalid.\n   *\n   * @param {string} option name of the option.\n   * @param {string|Object|boolean|number|null} domValue dom value that is being coerced to the\n   * option value\n   * @throws {Error} if domValue cannot be coerced appropriately\n   * @public\n   * @ignore\n   */\n  EditableValueUtils.coerceDomValueForOption = function (option, domValue) {\n    var coerced = domValue;\n    switch (option) {\n      case 'required':\n        coerced = !!domValue;\n        break;\n      default:\n        break;\n    }\n\n    return coerced;\n  };\n\n  /**\n   * set pickerAttributes on a popup picker\n   *\n   * @param {jQuery} picker popup picker\n   * @param {Object} pickerAttributes supported attributes are class and style, which are appended to the picker class and style, if any.\n   *\n   * @ignore\n   */\n  EditableValueUtils.setPickerAttributes = function (picker, pickerAttributes) {\n    //  - let the popup picker accept the custom css class name from the component\n    if (picker && pickerAttributes) {\n      var classValue = pickerAttributes.class;\n      if (classValue) {\n        var classes = classValue.split(' ');\n        // IE11 doesn't support destructured parameters so we need to iterate across the list\n        // of classes\n        for (var i = 0, len = classes.length; i < len; ++i) {\n          picker[0].classList.add(classes[i]);\n        }\n      }\n\n      var styleValue = pickerAttributes.style;\n      if (styleValue) {\n        Logger.error(`picker-attributes.style attribute violates the recommended\n        Content Security Policy which disallows inline styles and is therefore ignored.\n        Use the picker-attributes.class attribute instead.`);\n      }\n    }\n  };\n\n  /**\n   * Helper to see if a special property was set to indicate we definitely have no label.\n   * This is a performance enhancement for the corner case where input components are rendered in a\n   * ojTable. Input components rendered in an ojTable have no label so we don't need to waste time\n   * looking for labels.\n   * @param {jQuery} widget The component widget.\n   * @return {boolean}\n   * @ignore\n   * @private\n   */\n  EditableValueUtils.hasNoLabelFlag = function (widget) {\n    return widget[0].hasAttribute('data-oj-no-labelledby');\n  };\n\n  /**\n   * Given the labelledBy (e.g., this.options.labelledBy), use this to\n   * get the oj-label's label element's id when there is a for/id relationship\n   * between the oj-label and the form component, but the form component wants to\n   * write aria-labelledby on a div instead of using the for/id relationship in dom.\n   * Some components need this information to\n   * use as their aria-labelledby on their dom element(s) that takes focus. An example\n   * is oj-switch and oj-slider which put display:none on its input and uses aria-labelledby\n   * on its thumb.\n   * This is the preferred way rather than using a 'for' attribute search to find the oj-label.\n   * @param labelledBy\n   * @param defaultLabelId\n   * @return {string|null} return the string to use as the aria-labelledby on the form component's\n   * focusable element. If oj-label doesn't exist, this will return null.\n   * @ignore\n   * @private\n   */\n  EditableValueUtils._getOjLabelAriaLabelledBy = function (labelledBy, defaultLabelId) {\n    var ariaLabelledBy;\n    var ojlabels = EditableValueUtils._getCustomOjLabelElements(labelledBy);\n    if (ojlabels) {\n      ariaLabelledBy = '';\n      for (var j = 0; j < ojlabels.length; j++) {\n        var ojlabel = ojlabels[j];\n        var oneLabelElementId = ojlabel.getAttribute('label-id');\n        if (!oneLabelElementId) {\n          var labelElement = ojlabel.querySelector('label');\n          if (labelElement) {\n            oneLabelElementId = labelElement.getAttribute('id');\n          } else {\n            // this is the case where the form component has\n            // labelled-by pointing to oj-label that hasn't been\n            // upgraded yet and doesn't have label-id on it.\n            // this isn't the way the form component and its label\n            // should be linked, but it is possible.\n            ojlabel.setAttribute('label-id', defaultLabelId);\n            oneLabelElementId = defaultLabelId;\n          }\n        }\n        ariaLabelledBy += oneLabelElementId;\n        if (j + 1 < ojlabels.length) {\n          ariaLabelledBy += ' ';\n        }\n      }\n    }\n    return ariaLabelledBy;\n  };\n\n  /**\n   * @ignore\n   * @private\n   */\n  EditableValueUtils._getCustomOjLabelElements = function (labelledBy) {\n    var labelElements = [];\n\n    if (labelledBy) {\n      // split into individual ids\n      var split = labelledBy.split(/\\s+/);\n      for (var i = 0; i < split.length; i++) {\n        var labelId = split[i];\n        var labelElement = document.getElementById(labelId);\n        // don't push any null elements. it's possible labelled-by element can't be found.\n        if (labelElement) {\n          labelElements.push(labelElement);\n        } else {\n          Logger.info('Cannot find oj-label with id ' + labelElement);\n        }\n      }\n    }\n    return labelElements;\n  };\n\n  /**\n   * Called during component initialization for Custom form components so that\n   * they will be associated with their oj-label element correctly.\n   * It links oj-label and form control for accessibility reasons.\n   *\n   * Background of how oj-label and 'input' components are linked together for accessibility:\n   * --------------------------------------------------------------------------------------\n   * An application developer links oj-label with a 'form' component like this:\n   * <oj-label id='foo' for='myinput'> to <oj-input-text id='myinput'>\n   *\n   * We render the aria and data-oj- attributes on the correct dom like this:\n   * <oj-label id='foo' for='myinput' data-oj-input-id='myinput|input'>\n   * <span id=\"foo|label_helpIcon\"<label id='foo|label' for='myinput|input'>\n   * <oj-input-text id='myinput' labelled-by='foo' described-by='foo|label_helpIcon'>\n   * <input aria-describedby='foo|label_helpIcon'>\n   * ---------------------------------------------------------------------------------------\n   * Note: See also _labelledByUpdatedForInputComp. We need both this function\n   * and that one because\n   * we cannot guarantee the upgrade order of the oj-label and form component.\n   * If oj-label is not upgraded at the time the form component is, then it is\n   * possible that the labels cannot be found. If that's the case, then the oj-label will\n   * write labelledBy on the form component, and the  _labelledByUpdatedForInputComp\n   * will get called which calls _setDataOjInputIdAttrOnLabel.\n   * @ignore\n   * @private\n   */\n  EditableValueUtils._initInputIdLabelForConnection = function (\n    contentElement,\n    componentId,\n    labelledBy\n  ) {\n    if (componentId) {\n      contentElement.setAttribute('id', componentId + '|input');\n      if (labelledBy) {\n        this._linkLabelForInputComp(labelledBy, contentElement.id);\n      }\n    }\n    if (labelledBy) {\n      this._setReadonlyDivLabelledBy(labelledBy);\n    }\n  };\n\n  /**\n   * This function is called when labelledBy option is changed\n   * on the form components with inputs, like\n   * oj-input-text. It links oj-label's internal for and input form control's id\n   * without relying on property dom searches.\n   * Note: See also _initInputIdLabelForConnection. We need both this function\n   * and that one because\n   * we cannot guarantee the upgrade order of the oj-label and form component.\n   * @ignore\n   * @private\n   */\n  EditableValueUtils._labelledByUpdatedForInputComp = function (labelledBy, contentElementId) {\n    if (labelledBy) {\n      if (contentElementId) {\n        this._linkLabelForInputComp(labelledBy, contentElementId);\n      }\n      this._setReadonlyDivLabelledBy(labelledBy);\n    }\n    // update the required translation text since it could use label text\n    // and if labelledBy changes, label text would have changed.\n    if (this._IsRequired() && this.options.translations.required) {\n      this._implicitReqValidator = null;\n      this._getImplicitRequiredValidator();\n    }\n  };\n\n  /**\n   * @ignore\n   * @private\n   */\n  EditableValueUtils._linkLabelForInputComp = function (labelledBy, contentElementId) {\n    var ojlabels = EditableValueUtils._getCustomOjLabelElements(labelledBy);\n    if (ojlabels) {\n      EditableValueUtils._setDataOjInputIdAttrOnLabel(contentElementId, ojlabels);\n    }\n  };\n\n  /**\n   * This function is called when labelledBy option is changed\n   * on the form components with inputs, like\n   * oj-input-text, and during component init, to set aria-labelledby\n   * on the readonly div, if the component has a readonly div.\n   * @ignore\n   * @private\n   */\n  EditableValueUtils._setReadonlyDivLabelledBy = function (labelledBy) {\n    // don't call this function if labelledBy doesn't have a value.\n    oj.Assert.assert(labelledBy);\n    let readonlyElem = this._getReadonlyDiv();\n    if (readonlyElem) {\n      readonlyElem.setAttribute('aria-labelledby', labelledBy + '|label');\n    }\n  };\n\n  /**\n   * This function is called when readonly option changes from false to true\n   * for readonly input components, or when the component is created.\n   * @ignore\n   * @private\n   */\n  EditableValueUtils._createOrUpdateReadonlyDiv = function (input, createConditions = true) {\n    // create readonly div if it doesn't exist.\n    let readonlyElem = this._getReadonlyDiv();\n    if (!readonlyElem && createConditions) {\n      readonlyElem = this._createReadonlyDiv(input);\n      if (!readonlyElem) {\n        return;\n      }\n      if (this.options.labelledBy) {\n        this._setReadonlyDivLabelledBy(this.options.labelledBy);\n      }\n      this._setAriaLabelFromLabelHint();\n    }\n\n    if (readonlyElem) {\n      readonlyElem.textContent = this._GetDisplayValue();\n      EditableValueUtils._setTabIndex(input, readonlyElem);\n    }\n  };\n\n  /**\n   * @ignore\n   * @private\n   */\n  EditableValueUtils._setTabIndex = function (input, readonlyElem) {\n    let tabIndex = input.tabIndex;\n    let readonlyElemToSet = readonlyElem;\n    if (tabIndex !== null) {\n      readonlyElemToSet.tabIndex = tabIndex;\n    }\n  };\n\n  /**\n   * @ignore\n   * @private\n   */\n  EditableValueUtils._setDataOjInputIdAttrOnLabel = function (contentElementId, ojlabels) {\n    if (ojlabels) {\n      for (var i = 0; i < ojlabels.length; i++) {\n        var ojlabel = ojlabels[i];\n        // setting this will cause ojlabel to set its internal label element's for to this id.\n        ojlabel.setAttribute('data-oj-input-id', contentElementId);\n      }\n    }\n  };\n\n  /**\n   * Validates the component's display value using the converter and all validators registered on\n   * the component and updates the <code class=\"prettyprint\">value</code> option by performing the\n   * following steps.\n   *\n   * <p>\n   * <ol>\n   * <li>All messages are cleared, including custom messages added by the app. </li>\n   * <li>If no converter is present then processing continues to next step. If a converter is\n   * present, the UI value is first converted (i.e., parsed). If there is a parse error then\n   * messages are shown.</li>\n   * <li>If there are no validators setup for the component the <code class=\"prettyprint\">value</code>\n   * option is updated using the display value. Otherwise all\n   * validators are run in sequence using the parsed value from the previous step. The implicit\n   * required validator is run first if the component is marked required. When a validation error is\n   * encountered it is remembered and the next validator in the sequence is run. </li>\n   * <li>At the end of validation if there are errors, the messages are shown.\n   * If there were no errors, then the\n   * <code class=\"prettyprint\">value</code> option is updated.</li>\n   * </ol>\n   *\n   * @example <caption>Validate component using its current value.</caption>\n   * myComp.validate();\n   *\n   * @example <caption>Validate component and use the Promise's resolved state.</caption>\n   * myComp.validate().then(\n   *  function(result) {\n   *    if(result === \"valid\")\n   *    {\n   *      submitForm();\n   *    }\n   *  });\n   *\n   *\n   * @return {Promise} Promise resolves to \"valid\" if there were no converter parse errors and\n   * the component passed all validations.\n   * The Promise resolves to \"invalid\" if there were converter parse errors or\n   * if there were validation errors.\n   *\n   * @ignore\n   * @private\n   */\n  EditableValueUtils.validate = function () {\n    var returnValue;\n\n    // clear all messages; run full validation on display value\n    // _SetValue returns boolean or Promise that resolves to a Boolean.\n    returnValue = this._SetValue(this._GetDisplayValue(), null, this._VALIDATE_METHOD_OPTIONS);\n\n    if (returnValue === false && !this._CanSetValue()) {\n      // FIX JET-45885, validate() returns 'invalid' for readonly or disabled on valid value.\n      // In _SetValue/_AsyncValidate, validation is skipped when !this._CanSetValue(), and _SetValue returns false.\n      // We want validate() to return 'valid' when validation is skipped.\n      returnValue = true;\n    }\n\n    if (this._IsCustomElement()) {\n      if (!(returnValue instanceof Promise)) {\n        returnValue = Promise.resolve(returnValue ? 'valid' : 'invalid');\n      } else {\n        // convert true to 'valid' and false to 'invalid'\n        return returnValue.then(function (booleanSetValueReturn) {\n          return Promise.resolve(booleanSetValueReturn ? 'valid' : 'invalid');\n        });\n      }\n    } else if (returnValue instanceof Promise) {\n      return returnValue.then(function (booleanSetValueReturn) {\n        return Promise.resolve(booleanSetValueReturn ? 'valid' : 'invalid');\n      });\n    }\n    return returnValue;\n  };\n\n  /**\n   * Refresh everything that needs refreshing when the required option is toggled:\n   * refreshes theming, aria-required, label.\n   *\n   * Used by EditableValue components that support the required option.\n   * The component links to this function like this:\n   *   _refreshRequired : EditableValueUtils._refreshRequired,\n   * @param {Object=} value the current value of the required option\n   * @private\n   * @ignore\n   */\n  EditableValueUtils._refreshRequired = function (value) {\n    var id;\n    var contentNode;\n    var ariaValue;\n    var ariaRequiredUnsupported = this._AriaRequiredUnsupported();\n\n    this._refreshTheming('required', value);\n    // refresh aria-required\n    // Most inputs/selects need aria-required on the input element (aka 'content')\n    // But it is not legal to have aria-required on radio/checkboxes.\n    if (!ariaRequiredUnsupported) {\n      contentNode = this._GetContentElement();\n\n      ariaValue = value; // (value == \"required\") ? true : false;\n      if (ariaValue && contentNode) {\n        contentNode[0].setAttribute('aria-required', ariaValue);\n      } else {\n        contentNode[0].removeAttribute('aria-required');\n      }\n    }\n\n    if (!this._IsCustomElement()) {\n      if (!this.$label) {\n        this._createOjLabel();\n      }\n\n      // need to keep the label's required in sync with the input's required\n      if (this.$label) {\n        this.$label.ojLabel('option', 'showRequired', value);\n        // in most cases aria-required is supported and that is what we do to get JAWS to say\n        // \"Required\" on focus of the input. But in the case of a 'set' of items where one is required,\n        // say radioset/checkboxset, what do we do? aria-required doesn't make sense (nor is it valid\n        // as it fails validation in some accessibility validators) on each input, when really it is\n        // one in the set that is required, not each one. This is what we are doing from v1 on: we\n        // put aria-describedby to point to the required icon text.\n        if (ariaRequiredUnsupported) {\n          // if aria-labelledby is set,\n          // add/remove aria-describedby to the inputs pointing to\n          // the label+\"_requiredIcon\".\n          var ariaLabelledByElem = this._getAriaLabelledByElement(this.element);\n          if (ariaLabelledByElem !== null && ariaLabelledByElem.length !== 0) {\n            id = ariaLabelledByElem[0].getAttribute('id');\n          }\n\n          if (id) {\n            let ariaId = id + _REQUIRED_ICON_ID;\n            if (value) {\n              // adds\n              this._describedByUpdated(null, ariaId);\n            } else {\n              // removes\n              this._describedByUpdated(ariaId, null);\n            }\n          }\n        }\n      }\n    }\n  };\n\n  /**\n   * Performs post processing after required option is set by taking the following steps.\n   *\n   * - if component is invalid and has messgesShown -> required: false/true -> clear component errors;\n   * run full validation with UI value (we don't know if the UI error is from a required validator\n   * or something else);<br/>\n   * &nbsp;&nbsp;- if there are validation errors, then value not pushed to model; messagesShown is\n   * updated<br/>\n   * &nbsp;&nbsp;- if no errors result from the validation, push value to model; author needs to\n   * listen to optionChange(value) to clear custom errors.<br/>\n   *\n   * - if component is invalid and has messagesHidden -> required: false -> clear component\n   * errors; no deferred validation is run.<br/>\n   * - if component has no error -> required: true -> run deferred validation (we don't want to flag\n   * errors unnecessarily)<br/>\n   * - messagesCustom is never cleared<br/>\n   *\n   * @param {string} option\n   *\n   * @private\n   * @ignore\n   */\n  // eslint-disable-next-line no-unused-vars\n  EditableValueUtils._AfterSetOptionRequired = function (option) {\n    // refresh hints, theming and aria to reflect new state\n    this._refreshRequired(this._IsRequired());\n    this._runMixedValidationAfterSetOption(EditableValueUtils.requiredOptionOptions);\n  };\n\n  /**\n   * When validators option changes, take the following steps.\n   *\n   * - Clear the cached normalized list of all validator instances. push new hints to messaging.<br/>\n   * - if component is valid -> validators changes -> no change<br/>\n   * - if component is invalid has messagesShown -> validators changes -> clear all component\n   * messages and re-run full validation on displayValue. if there are no errors push value to\n   * model;<br/>\n   * - if component is invalid has messagesHidden -> validators changes -> do nothing; doesn't change\n   * the required-ness of component <br/>\n   * - messagesCustom is not cleared.<br/>\n   *\n   * NOTE: The behavior applies to any option that creates implicit validators - min, max, pattern,\n   * etc. Components can call this method when these options change.\n   *\n   * @returns {undefined}\n   * @private\n   * @ignore\n   */\n  EditableValueUtils._AfterSetOptionValidators = function () {\n    var displayValue;\n    // resets all validators and pushes new hints to messaging\n    this._ResetAllValidators();\n\n    if (this._hasInvalidMessagesShowing()) {\n      this._clearComponentMessages();\n      displayValue = this._GetDisplayValue();\n      // runs full validation on the display value. May be async\n      this._SetValue(displayValue, null, EditableValueUtils.validatorsOptionOptions);\n    }\n  };\n\n  /**\n   * When async-validators property changes, take the following steps.\n   *\n   * - Clear the cached normalized list of all async and sync validator instances.\n   *  push new hints to messaging.<br/>\n   * - if component is valid -> validators changes -> no change<br/>\n   * - if component is invalid has messagesShown -> validators changes -> clear all component\n   * messages and re-run full validation on displayValue. if there are no errors push value to\n   * model;<br/>\n   * - if component is invalid has messagesHidden -> validators changes -> do nothing; doesn't change\n   * the required-ness of component <br/>\n   * - messagesCustom is not cleared.<br/>\n   *\n   *\n   * @returns {undefined}\n   * @private\n   * @ignore\n   */\n  EditableValueUtils._AfterSetOptionAsyncValidators = function () {\n    // resets validators and pushes new hints to messaging\n    this._AfterSetOptionValidators();\n  };\n\n  /**\n   * Performs post processing after converter option changes by taking the following steps.\n   *\n   * - always push new converter hint to messaging <br/>\n   * - if component has no errors -> refresh UI value<br/>\n   * - if component is invalid has messagesShown -> clear all component errors and run full\n   * validation using display value. <br/>\n   * &nbsp;&nbsp;- if there are validation errors, value is not pushed to model; messagesShown is\n   * updated.<br/>\n   * &nbsp;&nbsp;- if no errors result from the validation, push value to model; author needs to\n   * listen to optionChange(value) to clear custom errors.<br/>\n   * - if component is invalid has messagesHidden -> refresh UI value. no need to run deferred\n   * validations. <br/>\n   * - messagesCustom is never cleared<br/>\n   *\n   * @param {String} option\n   *\n   * @returns {undefined}\n   * @private\n   * @ignore\n   */\n  // called when 'converter' option changed, usually from option/setOption calls\n  EditableValueUtils._AfterSetOptionConverter = function () {\n    // clear the cached converter instance and push new hint to messaging\n    this._converter = null;\n    this._converterChangedCounter += 1;\n\n    var converter = this._GetConverter();\n    if (converter instanceof Promise) {\n      var self = this;\n      this._setBusyStateAsyncConverterLoading();\n      var converterCounter = this._converterChangedCounter;\n      this._loadingConverter(converter).then(function () {\n        if (converterCounter === self._converterChangedCounter) {\n          self._ResetConverter();\n        }\n        self._clearBusyStateAsyncConverterLoading();\n      });\n    } else {\n      this._ResetConverter();\n    }\n  };\n\n  /**\n   * Performs post processing after we have the loaded converter\n   * during component initialization.\n   *\n   * @returns {undefined}\n   * @private\n   * @ignore\n   */\n  EditableValueUtils._AfterCreateConverterCached = function () {\n    // we do this here for a couple reasons\n    // 1. because here we have the final value; an empty placeholder\n    // shows up if data changed after first binding. \n    // 2. we do not want the placeholder displayed while the loading\n    // indication is showing.\n    if (this._HasPlaceholderSet()) {\n      // update element placeholder\n      this._SetPlaceholder(this.options.placeholder);\n      this._customPlaceholderSet = true;\n    }\n    // can't show validator hints or converter hints until we have the converter\n    // because some validators have the converter as an option.\n    this._initComponentMessaging(this._MESSAGING_CONTENT_UPDATE_TYPE.ALL);\n    // need a converter to format the value\n    this._Refresh('value', this.options.value, false);\n    // trigger messagesShownChanged for messagesShown if it's non-empty.\n    // this.options['messagesShown'] would have been\n    // updated in _ComponentCreate if messagesCustom was non-empty. Because we are setting\n    // the 'changed' flag to true, the messagesShownChanged event will be fired, and that's what we want.\n    if (this.options.messagesShown.length > 0) {\n      this._setMessagesOption('messagesShown', this.options.messagesShown, null, true);\n    }\n  };\n  /**\n   * Called when converter option changes and we have the new converter.\n   *\n   * @private\n   * @ignore\n   */\n  EditableValueUtils._ResetConverter = function () {\n    var displayValue;\n\n    this._getComponentMessaging().update(\n      this._getMessagingContent(this._MESSAGING_CONTENT_UPDATE_TYPE.CONVERTER_HINT)\n    );\n\n    if (this._hasInvalidMessagesShowing()) {\n      this._clearComponentMessages();\n      displayValue = this._GetDisplayValue();\n      // runs full validation on the display value. May be async\n      this._SetValue(displayValue, null, EditableValueUtils.converterOptionOptions);\n    } else {\n      // refresh UI display value when there was no need to run full validation\n      this._Refresh('converter', this.options.converter, true);\n    }\n  };\n\n  /**\n   * Returns an array of all validators built by merging the validators option set on the component\n   * and the implicit validators setup by the component. <br/>\n   * This does not include the implicit required validator. Components can override to add to this\n   * array of validators.\n   *\n   * @return {Array} of validators\n   *\n   * @private\n   * @ignore\n   */\n  EditableValueUtils._GetNormalizedValidatorsFromOption = function () {\n    var i;\n    var isValidatorInstance = true;\n    var normalizedValidators = [];\n    var validator;\n    var validatorsOption;\n    var vOptions;\n    var vType;\n    var vTypeStr;\n\n    validatorsOption = this.options.validators;\n\n    if (validatorsOption) {\n      // Normalize validators\n      for (i = 0; i < validatorsOption.length; i++) {\n        validator = validatorsOption[i];\n        if (typeof validator === 'object') {\n          // check if we have an actual validator instance that implements the validate() method\n          // oj.Validation.__doImplementsCheck(validator, oj.Validator);\n          if (!(validator.validate && typeof validator.validate === 'function')) {\n            isValidatorInstance = false;\n          }\n\n          if (!isValidatorInstance) {\n            // we maybe dealing with an object literal\n            // {'type': 'numberRange', 'options': { 'min': 100, 'max': 1000,\n            //                                    'hint': {'min': 'some hint about min'}}}\n            vTypeStr = validator.type;\n            if (vTypeStr && typeof vTypeStr === 'string') {\n              if (oj.Validation && oj.Validation.validatorFactory) {\n                vType = oj.Validation.validatorFactory(vTypeStr);\n              } else {\n                Logger.error(\n                  'oj.Validation.validatorFactory is not available and it is needed to support the deprecated json format for validators property. Please include the backward compatibility \"ojvalidation-base\" module.'\n                );\n              }\n              if (vType) {\n                vOptions = oj.CollectionUtils.copyInto({}, validator.options) || {};\n                // we push converter into the options if not provided explicitly. This is to allow\n                // validators to format values shown in the hint and messages\n                vOptions.converter = vOptions.converter || this._GetConverter();\n                vOptions.label = vOptions.label || this._getLabelText();\n                validator = vType.createValidator(vOptions);\n              }\n            }\n          }\n\n          normalizedValidators.push(validator);\n        } else {\n          Logger.error('Unable to parse the validator provided:' + validator);\n        }\n      }\n    }\n    return normalizedValidators;\n  };\n  /**\n   * Returns an array of all async validators built by the async-validators attribute\n   * set on the component. In this release, Objects that have validate method (\n   * and also they could have a hint property) are considered AsyncValidators and\n   * AsyncValidator Objects. In future releases we will allow Objects with types, like\n   * {'type': 'numberRange',\n   * 'options': { 'min': 100, 'max': 1000, 'hint': {'min': 'some hint about min'}}}\n   *\n   * @return {Array} of async validators\n   *\n   * @private\n   * @ignore\n   */\n  EditableValueUtils._GetNormalizedAsyncValidatorsFromOption = function () {\n    var i;\n    var normalizedValidators = [];\n    var validator;\n    var validatorsOption;\n\n    validatorsOption = this.options.asyncValidators;\n\n    // Normalize validators\n    for (i = 0; i < validatorsOption.length; i++) {\n      validator = validatorsOption[i];\n      if (typeof validator === 'object') {\n        // check if we have an actual asyncvalidator object that implements the validate() method\n        if (validator.validate && typeof validator.validate === 'function') {\n          normalizedValidators.push(validator);\n        }\n      } else {\n        Logger.error('Unable to parse the validator provided:' + validator);\n      }\n    }\n\n    return normalizedValidators;\n  };\n  /**\n   * Returns the normalized converter instance.\n   * This could return a Promise during component initialization or when changing the\n   * component's converter property.\n   *\n   * @return {Object|null|Promise<Object>|Promise<null>} a converter instance or null\n   * or a Promise to a converter instance or null.\n   *\n   * @private\n   * @ignore\n   */\n  EditableValueUtils._GetConverter = function () {\n    var converterOption;\n    var converterInstanceReturn;\n    var self = this;\n    var converterPromise;\n\n    // this._converter holds the instance\n    if (!this._converter) {\n      converterOption = this.options.converter;\n      if (converterOption instanceof Promise) {\n        converterPromise = converterOption;\n      } else {\n        converterInstanceReturn = ConverterUtils.getConverterInstance(converterOption);\n      }\n\n      if (converterPromise) {\n        return converterPromise.then(function (ci) {\n          self._converter = ci;\n          return self._converter || null;\n        });\n      }\n      this._converter = converterInstanceReturn;\n    }\n\n    return this._converter || null;\n  };\n\n  /**\n   * Set busy state for component for async validators for the displayValue.\n   * We want to clear busy state for the same displayValue, not for a different displayValue.\n   * I suppose if they type in 111, then 222, then 111, we may clear for second 111 before first,\n   * but that seems incredibly unlikely.\n   * @param {string} displayValue the displayValue busystate we want to set\n   *\n   * @private\n   * @ignore\n   */\n  EditableValueUtils._SetBusyState = function (displayValue) {\n    if (this._resolveBusyStateAsyncMap === undefined) {\n      // eslint-disable-next-line no-undef\n      this._resolveBusyStateAsyncMap = new Map();\n    }\n\n    var resolveBusyStateAsync = this._resolveBusyStateAsyncMap.get(displayValue);\n\n    // Set a page-level busy state if not already set for this displayValue\n    if (!resolveBusyStateAsync) {\n      var domElem = this.element[0];\n      var busyContext = Context.getContext(domElem).getBusyContext();\n      var description = 'The page is waiting for async validators for displayValue ' + displayValue;\n\n      if (domElem && domElem.id) {\n        description += ' for \"' + domElem.id + '\" ';\n      }\n      description += 'to finish.';\n\n      resolveBusyStateAsync = busyContext.addBusyState({ description: description });\n      this._resolveBusyStateAsyncMap.set(displayValue, resolveBusyStateAsync);\n    }\n  };\n\n  /**\n   * Clear busy state for async validators for the displayValue.\n   * @param {string} displayValue the displayValue busystate we want to clear\n   * @private\n   * @ignore\n   */\n  EditableValueUtils._ClearBusyState = function (displayValue) {\n    var resolveBusyStateAsync;\n    if (this._resolveBusyStateAsyncMap !== undefined) {\n      resolveBusyStateAsync = this._resolveBusyStateAsyncMap.get(displayValue);\n      if (resolveBusyStateAsync) {\n        resolveBusyStateAsync();\n        this._resolveBusyStateAsyncMap.delete(displayValue);\n      }\n    }\n  };\n\n  /**\n   * Set busy state for component for async validators hint.\n   * We want to clear busy state for the same hint not for a different hint.\n   * I use a counter here.\n   * @param {number} counter the counter for the busystate we want to set\n   *\n   * @private\n   * @ignore\n   */\n  EditableValueUtils._SetBusyStateAsyncValidatorHint = function (counter) {\n    if (this._resolveBusyStateAsyncValidatorHintMap === undefined) {\n      // eslint-disable-next-line no-undef\n      this._resolveBusyStateAsyncValidatorHintMap = new Map();\n    }\n\n    var resolveBusyStateAsyncHint = this._resolveBusyStateAsyncValidatorHintMap.get(counter);\n\n    // Set a page-level busy state if not already set for this counter\n    if (!resolveBusyStateAsyncHint) {\n      var domElem = this.element[0];\n      var busyContext = Context.getContext(domElem).getBusyContext();\n      var description = 'The page is waiting for async validator hint for counter ' + counter;\n\n      if (domElem && domElem.id) {\n        description += ' for \"' + domElem.id + '\" ';\n      }\n      description += 'to finish.';\n\n      resolveBusyStateAsyncHint = busyContext.addBusyState({ description: description });\n      this._resolveBusyStateAsyncValidatorHintMap.set(counter, resolveBusyStateAsyncHint);\n    }\n  };\n\n  /**\n   * Clear busy state for async validators hint for the counter\n   * @param {number} counter the counter for the busystate we want to clear\n   * @private\n   * @ignore\n   */\n  EditableValueUtils._ClearBusyStateAsyncValidatorHint = function (counter) {\n    var resolveBusyStateAsyncHint;\n    if (this._resolveBusyStateAsyncValidatorHintMap !== undefined) {\n      resolveBusyStateAsyncHint = this._resolveBusyStateAsyncValidatorHintMap.get(counter);\n      if (resolveBusyStateAsyncHint) {\n        resolveBusyStateAsyncHint();\n        this._resolveBusyStateAsyncValidatorHintMap.delete(counter);\n      }\n    }\n  };\n\n  /**\n   * Set busy state for component for async converter loading.\n   *\n   * @private\n   * @ignore\n   */\n  EditableValueUtils._SetBusyStateAsyncConverterLoading = function () {\n    // Set a page-level busy state if not already set for async converter loading\n    if (!this._resolveBusyStateAsyncConverterLoading) {\n      var domElem = this.element[0];\n      var busyContext = Context.getContext(domElem).getBusyContext();\n      var description = 'The page is waiting for async converter loading ';\n\n      if (domElem && domElem.id) {\n        description += 'for \"' + domElem.id + '\" ';\n      }\n      description += 'to finish.';\n\n      this._resolveBusyStateAsyncConverterLoading = busyContext.addBusyState({\n        description: description\n      });\n    }\n  };\n\n  /**\n   * Clear busy state for async converter loading\n   * @private\n   * @ignore\n   */\n  EditableValueUtils._ClearBusyStateAsyncConverterLoading = function () {\n    if (this._resolveBusyStateAsyncConverterLoading !== undefined) {\n      this._resolveBusyStateAsyncConverterLoading();\n      delete this._resolveBusyStateAsyncConverterLoading;\n    }\n  };\n\n  /**\n   * Retrieve the delay before showing status\n   * @return {number} the delay in ms\n   * @private\n   * @ignore\n   */\n  EditableValueUtils._getShowLoadingDelay = function () {\n    if (this._defaultOptions == null) {\n      this._defaultOptions = ojthemeutils.parseJSONFromFontFamily('oj-form-control-option-defaults');\n    }\n    var delay = parseInt(this._defaultOptions.showIndicatorDelay, 10);\n\n    return isNaN(delay) ? 0 : delay;\n  };\n\n  /**\n   * Set the type of the input element based on virtualKeyboard option.\n   *\n   * @param {Array.<string>} allowedTypes an array of allowed types\n   *\n   * @protected\n   * @ignore\n   */\n  EditableValueUtils._SetInputType = function (allowedTypes) {\n    // Default input type is text\n    var inputType = 'text';\n    var agentInfo = oj.AgentUtils.getAgentInfo();\n\n    // Only change the type on mobile browsers\n    if (\n      agentInfo.os === oj.AgentUtils.OS.ANDROID ||\n      agentInfo.os === oj.AgentUtils.OS.IOS ||\n      agentInfo.os === oj.AgentUtils.OS.WINDOWSPHONE\n    ) {\n      // Get input type from component's virtualKeyboard option\n      if (allowedTypes.indexOf(this.options.virtualKeyboard) >= 0) {\n        inputType = this.options.virtualKeyboard;\n      } else {\n        // Get input type from converter's virtualKeyboardHint option\n        var converter = this._GetConverter();\n        if (converter && converter.resolvedOptions) {\n          var resOptions = converter.resolvedOptions();\n          if (allowedTypes.indexOf(resOptions.virtualKeyboardHint) >= 0) {\n            inputType = resOptions.virtualKeyboardHint;\n          }\n        }\n      }\n    }\n\n    if (inputType == null) {\n      this.element[0].removeAttribute('type');\n    } else {\n      this.element[0].setAttribute('type', inputType);\n    }\n  };\n\n  /**\n   * Draw a readonly div. When readonly, this div is shown and\n   * the input has display:none on it through theming, and vice versa.\n   * We set the textContent in _SetDisplayValue() if readonly\n   * @param {HTMLElement} pass in this.element[0]\n   * @return {HTMLElement|null} the readonlyDivElem or null if we don't want\n   * to use a readonly div.\n   * @private\n   * @ignore\n   */\n  EditableValueUtils._createReadonlyDiv = function (element) {\n    if (this._UseReadonlyDiv()) {\n      var readonlyElem = document.createElement('div');\n      readonlyElem.classList.add('oj-text-field-readonly-div');\n\n      // create this inner element that holds the text.  This is needed\n      // so that we can put flexbox styles on the oj-text-field-readonly-div\n      // to have the text vertically centered in the div.\n      var readonlyInnerElem = document.createElement('div');\n      readonlyInnerElem.classList.add('oj-text-field-readonly');\n      readonlyInnerElem.setAttribute('role', 'textbox');\n      readonlyInnerElem.setAttribute('aria-readonly', true);\n\n      readonlyElem.appendChild(readonlyInnerElem);\n\n      element.parentNode.insertBefore(readonlyElem, element); // @HTMLUpdateOK\n      // return the element that we need to set textContent, aria-labelledby, etc.\n      return readonlyInnerElem;\n    }\n    return null;\n  };\n\n  /**\n   * Returns the inner readonly div HTMLElement that we need to set textContent,\n   * aria-labelledby, etc.\n   * @private\n   * @ignore\n   */\n  EditableValueUtils._getReadonlyDiv = function () {\n    return this.widget()[0].querySelector('.oj-text-field-readonly');\n  };\n\n  /**\n   * The various validation modes\n   * @ignore\n   */\n\n  var _sValidationMode = {\n    FULL: 1,\n    VALIDATORS_ONLY: 2,\n    REQUIRED_VALIDATOR_ONLY: 3\n  };\n\n  /**\n   * The displayOptions property default options when theme is Redwood\n   * @ignore\n   */\n  var _sDisplayOptionsRedwoodDefaults = {\n    MESSAGES: 'display',\n    VALIDATOR_HINT: 'display',\n    CONVERTER_HINT: 'display'\n  };\n\n  /**\n   * The displayOptions property default options when theme is Alta\n   * As of v9.0, the Alta theme is deprecated.\n   * @ignore\n   */\n  var _sDisplayOptionsAltaDefaults = {\n    MESSAGES: ['inline'],\n    VALIDATOR_HINT: ['notewindow'],\n    CONVERTER_HINT: ['placeholder', 'notewindow']\n  };\n\n  /**\n   * String used in the id on the span that surrounds the help icon.\n   * @const\n   * @private\n   * @type {string}\n   */\n  var _HELP_ICON_ID = '_helpIcon';\n\n  /**\n   * valid state constants\n   * @const\n   * @private\n   * @type {string}\n   */\n  var _VALID = 'valid';\n\n  /**\n   * valid state constants\n   * @const\n   * @private\n   * @type {string}\n   */\n  var _INVALID_HIDDEN = 'invalidHidden';\n\n  /**\n   * valid state constants\n   * @const\n   * @private\n   * @type {string}\n   */\n  var _INVALID_SHOWN = 'invalidShown';\n\n  /**\n   * valid state constants\n   * @const\n   * @private\n   * @type {string}\n   */\n  var _PENDING = 'pending';\n\n  // E D I T A B L E V A L U E    A B S T R A C T   W I D G E T\n  /**\n   * @ojcomponent oj.editableValue\n   * @augments oj.baseComponent\n   * @ojsignature [{\n   *                target: \"Type\",\n   *                value: \"abstract class editableValue<V, SP extends editableValueSettableProperties<V, SV, RV>, SV= V, RV= V> extends baseComponent<SP>\"\n   *               },\n   *               {\n   *                target: \"Type\",\n   *                value: \"editableValueSettableProperties<V, SV=V, RV=V> extends baseComponentSettableProperties\",\n   *                for: \"SettableProperties\"\n   *               }\n   *              ]\n   * @ojtsimport {module: \"ojmessaging\", type:\"AMD\", importName: \"Message\"}\n   * @abstract\n   * @since 0.6.0\n   * @ojshortdesc Abstract EditableValue element\n   * @ojrole input\n   * @hideconstructor\n   *\n   * @classdesc\n   * Abstract base class for all editable components that are value holders and that require\n   * validation and messaging capabilities. <br/>\n   *\n   * {@ojinclude \"name\":\"validationAndMessagingDoc\"}\n   *  * <p>\n   * Note: The <code class=\"prettyprint\">required</code>, <code class=\"prettyprint\">validators</code>,\n   * <code class=\"prettyprint\">converter</code> properties and the <code class=\"prettyprint\">validate</code>\n   * method are not on all EditableValue components so they are not on the EditableValue class.\n   * See the EditableValue subclasses for which ones have which of these properties. For example,\n   * oj-switch, oj-slider, oj-color-palette, and oj-color-spectrum do not have the\n   * <code class=\"prettyprint\">validate</code> method nor do they have the\n   * <code class=\"prettyprint\">required</code>, <code class=\"prettyprint\">validators</code>,\n   * <code class=\"prettyprint\">converter</code> properties since the components\n   * wouldn't do anything with these properties anyway. A user can't type into these components and there\n   * is no visual representation for 'nothing is set' on these components. Whereas InputBase, inputNumber,\n   * inputSearch and combobox do have these properties since a user can type into the field (so you may\n   * need to convert it and validate it) and also blank it out (so you may need to mark it required and\n   * run the required validator).\n   * </p>\n\n   * <p>\n   * <h3 id=\"declarative-binding-section\">\n   * Declarative Binding\n   * <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#declarative-binding-section\"></a>\n   * </h3>\n   * When the component's <code class=\"prettyprint\">value</code> property is bound to a Knockout\n   * observable and when the value changes, whether the observable is updated or not, and whether a\n   * 'writeback' to the observable happens or not, depends on the action that caused the value to\n   * change.\n   * <ul>\n   * <li>when the value changes as a result of user interaction </li>\n   * <li>when the value changes because normal validation was run as a result of these properties\n   * being changed by the app - <code class=\"prettyprint\">converter</code>, <code class=\"prettyprint\">disabled</code>,\n   * <code class=\"prettyprint\">required</code>, <code class=\"prettyprint\">validators</code>, then the\n   * value is written to the observable. See the specific property docs for details.</li>\n   * <li>when the value changes because normal validation was run as a result of these methods being\n   * called by the app -\n   * <code class=\"prettyprint\">refresh</code>, <code class=\"prettyprint\">validate</code>,\n   * then the value is written to the observable. See the specific method docs for details.</li>\n   * <li>when the value changes due to programmatic intervention by app then the value is not written\n   * back to observable. This is based on the assumption that the app has mutated the observable\n   * already. In this case updating the component's <code class=\"prettyprint\">value</code> property\n   * alone will not propagate the change automatically to the observable. Updating the observable is\n   * recommended as this will propagate the change automatically to the component.\n   * </li>\n   * </ul>\n   * </p>\n   *\n   * @example <caption>Initialize component</caption>\n   * &lt;oj-input-text id=\"foo\" value=\"abc\"/&gt;\n   * @example <caption>Initialize component value using two way data binding</caption>\n   * &lt;oj-input-text id=\"foo\" value=\"{{salary}}\"/&gt;\n   * &lt;script&gt;\n   * &nbsp;&nbsp;var salary = ko.observable('abc');\n   * &lt;/script&gt;\n   */\n  oj.__registerWidget(\n    'oj.editableValue',\n    $.oj.baseComponent,\n    {\n      widgetEventPrefix: 'oj',\n\n      options: {\n        /**\n         * The oj-label sets the described-by attribute programmatically on the form component.\n         * This attribute is not meant to be set by an application developer directly.\n         * The described-by is copied to the aria-describedby\n         * attribute on the component's inner dom element, and it is needed\n         * for accessibility.\n         * @example <caption>Initialize component with the <code class=\"prettyprint\">described-by</code> attribute specified:</caption>\n         * &lt;oj-some-element described-by=\"someId\">&lt;/oj-some-element>\n         *\n         * @example <caption>Get or set the <code class=\"prettyprint\">describedBy</code> property after initialization:</caption>\n         * // getter\n         * var descById = myComp.describedBy;\n         *\n         * // setter\n         * myComp.describedBy = \"someId\";\n         *\n         * @ojshortdesc The form component's oj-label automatically sets described-by\n         * to make it accessible. It is not meant to be set by application developer.\n         * @expose\n         * @type {?string}\n         * @public\n         * @instance\n         * @memberof oj.editableValue\n         * @since 4.0.0\n         */\n        describedBy: null,\n        /**\n         * Whether the component is disabled. The default is false.\n         *\n         * <p>\n         * When the <code class=\"prettyprint\">disabled</code> property changes due to programmatic\n         * intervention, the component may clear messages and run validation in some cases. </br>\n         * <ul>\n         * <li>when a required component is initialized as disabled\n         * <code class=\"prettyprint\">value=\"{{currentValue}}\" required disabled</code>,\n         * deferred validation is skipped.</li>\n         * <li>when a disabled component is enabled,\n         *  <ul>\n         *  <li>if component is invalid and showing messages then all component messages are cleared,\n         *  and full validation run using the display value.\n         *   <ul>\n         *    <li>if there are validation errors, they are shown.</li>\n         *    <li>if no errors result from the validation, the <code class=\"prettyprint\">value</code>\n         *    property is updated. Page authors can listen to the <code class=\"prettyprint\">valueChanged</code>\n         *    event to clear custom errors.</li>\n         *   </ul>\n         *  </li>\n         *\n         *  <li>if component is valid and has no errors then deferred validation is run.\n         *    <ul>\n         *    <li>if there is a deferred validation error, then the valid property is updated. </li>\n         *    </ul>\n         *  </li>\n         *  <li>if component is invalid and deferred errors then component messages are cleared and\n         *  deferred validation re-run.\n         *    <ul>\n         *    <li>if there is a deferred validation error, then the valid property is updated.</li>\n         *    </ul>\n         *  </li>\n         *  </ul>\n         * </li>\n         * <li>when enabled component is disabled then no validation is run and the component appears\n         * disabled.</li>\n         * </ul>\n         * </p>\n         *\n         * @example <caption>Initialize component with <code class=\"prettyprint\">disabled</code> attribute:</caption>\n         * &lt;oj-some-element disabled>&lt;/oj-some-element>\n         *\n         * @example <caption>Get or set the <code class=\"prettyprint\">disabled</code> property after initialization:</caption>\n         * // getter\n         * var disabled = myComp.disabled;\n         *\n         * // setter\n         * myComp.disabled = false;\n         *\n         * @ojshortdesc Specifies whether the component is disabled. The default is false.\n         * @expose\n         * @type {boolean}\n         * @default false\n         * @public\n         * @instance\n         * @memberof oj.editableValue\n         * @since 0.7.0\n         */\n        disabled: false,\n        displayOptions: {},\n        /**\n         * Form component help information.\n         * @expose\n         * @memberof oj.editableValue\n         * @instance\n         * @public\n         * @type {Object}\n         * @since 0.7.0\n         */\n        help: undefined,\n        /**\n         * <p>help definition text.  See the top-level <code class=\"prettyprint\">help</code> option for details.\n         *\n         * @expose\n         * @name help.definition\n         * @memberof! oj.editableValue\n         * @instance\n         * @type {?string}\n         * @ignore\n         * @default null\n         *\n         * @example <caption>Get or set the <code class=\"prettyprint\">help.definition</code> sub-option, after initialization:</caption>\n         * // getter\n         * var definitionText = myInputComp.help.definition;\n         *\n         * // setter:\n         * myInputComp.help.definition = \"Enter your name\";\n         */\n        /**\n         * <p>help source url.  See the top-level <code class=\"prettyprint\">help</code> option for details.\n         *\n         * @expose\n         * @name help.source\n         * @memberof! oj.editableValue\n         * @instance\n         * @ignore\n         * @type {?string}\n         * @default null\n         *\n         * @example <caption>Get or set the <code class=\"prettyprint\">help.source</code> sub-option, after initialization:</caption>\n         * // getter\n         * var helpSource = myInputComp.help.source;\n         *\n         * // setter:\n         * myInputComp.help.source = \"www.abc.com\";\n         */\n        /**\n         * <p>\n         * The helpHints object contains a definition property and a source property.\n         * </p>\n         * <ul>\n         * <li><code class=\"prettyprint\">definition</code> - hint for help definition text.</li>\n         * <li><code class=\"prettyprint\">source</code> - hint for help source URL.</li>\n         * </ul>\n         *\n         * @example <caption>Initialize the component with help hints:</caption>\n         * &lt;!-- Using dot notation -->\n         * &lt;oj-some-element help-hints.definition='some value' help-hints.source='some-url'>&lt;/oj-some-element>\n         *\n         * &lt;!-- Using JSON notation -->\n         * &lt;oj-some-element help-hints='{\"definition\":\"some value\", \"source\":\"some-url\"}'>&lt;/oj-some-element>\n         *\n         * @example <caption>Get or set the <code class=\"prettyprint\">helpHints</code> property after\n         * initialization:</caption>\n         *\n         * // Get one\n         * var value = myComponent.helpHints.definition;\n         *\n         * // Set one, leaving the others intact. Always use the setProperty API for\n         * // subproperties rather than setting a subproperty directly.\n         * myComponent.setProperty('helpHints.definition', 'some new value');\n         *\n         * // Get all\n         * var values = myComponent.helpHints;\n         *\n         * // Set all.  Must list every subproperty, as those not listed are lost.\n         * myComponent.helpHints = {\n         *     definition: 'some new value',\n         *     source: 'some-new-url'\n         * };\n         *\n         * @ojshortdesc Represents hints for an oj-form-layout element to render help information on the label of the editable component.\n         * @expose\n         * @access public\n         * @memberof oj.editableValue\n         * @ojtranslatable\n         * @instance\n         * @type {Object}\n         * @since 4.1.0\n         */\n        helpHints: {\n          /**\n           * A type of user assistance text. User assistance text is used to provide\n           * guidance to help the user understand what data to enter or select. help-hints could\n           * come from a help system.\n           * <p>In the Redwood theme for clarity only one user assistance text shows to the user.\n           * The precedence rules are:\n           * <ul>\n           * <li>help.instruction shows;</li>\n           * <li>if no help.instruction, then validator hint shows;</li>\n           * <li>if no help.instruction or validator hint, then help-hints.definition shows;</li>\n           * <li>if no help.instruction, validator hint, or help-hints.definition, then converter hint shows.</li>\n           * <li>help-hints.source always shows along side the above.</li>\n           * </ul>\n           * </p>\n           * <p>\n           * In the Redwood theme, by default all user assistance text shows inline.\n           * For input components, it shows when the field takes focus. In other components it\n           * shows all the time. See the user-assistance-density property for other ways the user\n           * assistance text can render.\n           * </p>\n           * <p>In the Alta theme the help-hint.definition shows up when\n           * the user hovers over the help icon on the label,\n           * or tabs into the help icon, or press and holds the help icon on a mobile device.\n           * </p>\n           * <p>No formatted text is available for help definition attribute.</p>\n           *\n           * <p>See the <a href=\"#helpHints\">help-hints</a> attribute for usage examples.</p>\n           *\n           * @ojshortdesc Hint for help definition text associated with the label.\n           * @expose\n           * @name helpHints.definition\n           * @memberof! oj.editableValue\n           * @instance\n           * @type {string}\n           * @ojsignature {target:\"Type\", value: \"?\"}\n           * @default \"\"\n           * @since 4.1.0\n           */\n          definition: '',\n          /**\n           * Help source URL associated with the component.\n           * <p>In the Redwood theme, the help-hints.source will show as a link inline to the field.\n           * For input components, it shows when the field takes focus. For other components,\n           * it shows all the time.\n           * </p>\n           * <p>In the Alta theme, the help-hints.source will show as a a help icon\n           *  next to the label. When clicked the page will navigate to the source url.\n           * </p>\n           * <p>\n           * For security reasons we only support urls with protocol 'http:' or 'https:'.\n           * If the url doesn't comply we ignore it and throw an error.\n           * Pass in an encoded URL since we do not encode the URL.</p>\n           *\n           * <p>See the <a href=\"#helpHints\">help-hints</a> attribute for usage examples.</p>\n           *\n           * @ojshortdesc Help source URL associated with the component.\n           * @expose\n           * @name helpHints.source\n           * @memberof! oj.editableValue\n           * @instance\n           * @type {string}\n           * @ojsignature {target:\"Type\", value: \"?\"}\n           * @default \"\"\n           * @since 4.1.0\n           */\n          source: ''\n        },\n        /**\n         * Represents a hint for rendering a label on the component.\n         * <p>This is used in combination with the <a href=\"#labelEdge\">label-edge</a> attribute to control how the label should be rendered.</p>\n         *\n         * <p>\n         * When label-edge is \"provided\", it gives a hint to oj-form-layout parent element to create an oj-label element for the component.\n         * When the <code class=\"prettyprint\">label-hint</code> attribute changes, oj-form-layout element refreshes to\n         * display the updated label information.\n         * </p>\n         * <p>\n         * When label-edge is \"inside\", it gives a hint to the component itself to render a label.\n         * </p>\n         * <p>\n         * When label-edge is \"none\", and if the component has no labelled-by, aria-label, or aria-labelledby attribute, the label-hint value will be used as the aria-label.\n         * </p>\n         *\n         * @example <caption>Add the component as a direct child of oj-form-layout. Initialize the component with the <code class=\"prettyprint\">label-hint</code> attribute specified.</caption>\n         * &lt;oj-form-layout id= 'someId'>\n         * &lt;/oj-some-element label-hint='input label'>&lt;/oj-some-element>\n         * &lt;/oj-form-layout>\n         *\n         * @example <caption>Get or set the <code class=\"prettyprint\">labelHint</code> property after\n         * initialization:</caption>\n         *\n         * // getter\n         * var value = myComponent.labelHint;\n         *\n         * // setter\n         * myComponent.labelHint = 'some new value'\n         *\n         * @ojshortdesc Represents a hint for oj-form-layout element to render a label on the editable component.\n         * @expose\n         * @access public\n         * @instance\n         * @name labelHint\n         * @ojtranslatable\n         * @default \"\"\n         * @memberof oj.editableValue\n         * @type {string}\n         * @since 4.1.0\n         */\n        labelHint: '',\n\n        /**\n         * Specifies how the label of the component is created when the <code class=\"prettyprint\">label-hint</code> attribute is set on the component.\n         * <p>The default value varies by theme, and it works well for the theme in most cases.\n         *  If the component is in an oj-form-layout, the label-edge attribute could come from the oj-form-layout's label-edge attribute.\n         * The oj-form-layout component uses the <a href=\"MetadataTypes.html#PropertyBinding\">MetadataTypes.PropertyBinding</a>\n         * <code class=\"prettyprint\">provide</code> property to provide and uses the <a href=\"MetadataTypes.html#ProvideProperty\">MetadataTypes.ProvideProperty</a>\n         * <code class=\"prettyprint\">transform</code> property to transform its <code class=\"prettyprint\">label-edge</code>\n         * attribute to any descendent components that are configured to consume it.\n         * For example, if the oj-form-layout's label-edge attribute is set to \"top\" or \"start\", and a descendent form component does\n         * not have its label-edge attribute set, the form component's label-edge will be the transformed value \"provided\".</p>\n         * @ojshortdesc Defines how the label of a component is created. See the Help documentation for more information.\n         * @access public\n         * @expose\n         * @name labelEdge\n         * @instance\n         * @type {string}\n         * @ojsignature {target: \"Type\", value: \"'inside'|'none'|'provided'\",  jsdocOverride: true}\n         * @memberof! oj.editableValue\n         * @ojvalue {string} \"inside\" The component creates the label using the <code class=\"prettyprint\">label-hint</code> attribute.\n         * <p>For text input components (such as oj-input-text), the label floats over the input element but moves up on focus or when the component has a value.</p>\n         * <p>For non-text input components (such as oj-checkboxset), the label is created at the top of the component and doesn't move.</p>\n         * @ojvalue {string} \"none\" The component will not have a label, regardless of whether it's in an oj-form-layout or not.\n         * <p>If the component has a <code class=\"prettyprint\">label-hint</code> attribute but no labelled-by, aria-label, or aria-labelledby attribute, the label-hint value will be used as the aria-label.</p>\n         * <p>Note that if the component already has an external label, \"none\" should not be specified and \"provided\" should be used instead.\n         * Otherwise it may end up with conflicting label information.</p>\n         * @ojvalue {string} \"provided\" Label is provided by the parent if the parent is an oj-form-layout.\n         * <p>oj-form-layout provides the label using the label-hint from the form control and the <a href=\"oj.ojFormLayout.html#labelEdge\">label-edge</a> from oj-form-layout.</p>\n         * <p>If there is no oj-form-layout, use an oj-label.</p>\n         * @since 8.0.0\n         */\n        labelEdge: undefined,\n\n        /**\n         * List of messages an app would add to the component when it has business/custom validation\n         * errors that it wants the component to show. This allows the app to perform further validation\n         * before sending data to the server. When this option is set the message shows to the\n         * user right away. To clear the custom message, set <code class=\"prettyprint\">messagesCustom</code>\n         * back to an empty array.<br/>\n         * <p>Each message in the array is an object that duck types oj.Message.\n         * See {@link Message} for details.\n         * message detail text can include formatted HTML text, whereas\n         * hints and message summary text cannot. If you use formatted text, it should be accessible\n         * and make sense to the user if formatting wasn't there.\n         * The allowed html tags are: span, b, i, em, br, hr, li, ol, ul, p, small, pre.\n         * To format the message detail, you could do this:\n         * <pre class=\"prettyprint\"><code>&lt;html>Enter &lt;b>at least&lt;/b> 6 characters&lt;/html></code></pre>\n         * </p>\n         * <p>\n         * See the <a href=\"#validation-section\">Validation and Messages</a> section\n         * for details on when the component clears <code class=\"prettyprint\">messagesCustom</code>;\n         * for example, when full validation is run.\n         * </p>\n         * <p>In the Redwood theme, the Message summary is not displayed to the user, so make sure to have a Message detail\n         * set in your Message object.\n         * </p>\n         *\n         *\n         * @example <caption>Get or set the <code class=\"prettyprint\">messagesCustom</code> property after initialization:</caption>\n         * // getter\n         * var customMsgs = myComp.messagesCustom;\n         *\n         * // setter\n         * myComp.messagesCustom = [{summary:\"hello\", detail:\"detail\", severity:Message.SEVERITY_LEVEL.INFO}];\n         *\n         * @example <caption>Set messagesCustom when there are cross-validation errors:</caption>\n         * --- HTML ---\n         * &lt;oj-some-element messages-custom='{{messagesCustom}}'>&lt;/oj-some-element>\n         *\n         * --- ViewModel code ---\n         * self.messagesCustom = ko.observableArray([]);\n         *\n         * // the app's function that gets called when the user presses the submit button\n         * if (!myValidateCrossValidationFields())\n         * {\n         *   // the app adds a custom messages to the component and it is displayed right away\n         *   var msgs = [];\n         *   msgs.push({'summary':'Cross field error', 'detail':'Field 1 needs to be less than Field 2'});\n         *   self.messagesCustom(msgs);\n         * }\n         * else\n         * {\n         *   // submit data to the server\n         * }\n         *\n         * @ojshortdesc A list of messages added by an application to the component. See the Help documentation for more information.\n         * @expose\n         * @access public\n         * @instance\n         * @memberof oj.editableValue\n         * @default []\n         * @type {Array.<Object>}\n         * @ojsignature {target: \"Type\", value: \"Array<oj.Message>\"}\n         * @since 0.7.0\n         * @ojwriteback\n         */\n        messagesCustom: [],\n\n        /**\n         * List of messages currently hidden on component, these are added by component when it runs\n         * deferred validation. Each message in the array is an object that duck types oj.Message.\n         * See {@link Message} for\n         * details. <br/>\n         *\n         * <p>\n         * This is a read-only option so page authors cannot set or change it directly.\n         * </p>\n         *\n         * <p>\n         * These messages are not shown to the end-user by default, but page author\n         * can show hidden messages using the {@link showMessages} method.\n         * </p>\n         *\n         * @example <caption>Get <code class=\"prettyprint\">messagesShown</code> for the component:</caption>\n         * // Foo is InputText, InputNumber, Select, etc.\n         * var messages = myInputComp.messagesShown;\n         *\n         * @expose\n         * @access public\n         * @instance\n         * @memberof oj.editableValue\n         * @default []\n         * @type {Array.<Object>|undefined}\n         * @since 0.7.0\n         * @see #showMessages\n         * @readonly\n         * @ignore\n         * @ojwriteback\n         */\n        messagesHidden: undefined,\n\n        /**\n         * List of messages currently shown on component, these include messages generated both by the\n         * component and ones provided by app using <code class=\"prettyprint\">messagesCustom</code>.\n         * Each message in the array is an object that duck types oj.Message.\n         * See {@link Message} for details. <br/>\n         *\n         * <p>\n         * This is a read-only option so page authors cannot set or change it directly.\n         * </p>\n         *\n         * <p>\n         * Messages retrieved using the <code class=\"prettyprint\">messagesShown</code> option are by\n         * default shown inline, but this can be controlled using the 'messages' property of\n         * the <code class=\"prettyprint\">displayOptions</code> option.\n         * </p>\n         *\n         * @example <caption>Get <code class=\"prettyprint\">messagesShown</code> for the component:</caption>\n         * // Foo is InputText, InputNumber, Select, etc.\n         * var messages = myInputComp.messagesShown;\n         *\n         * @expose\n         * @access public\n         * @instance\n         * @memberof oj.editableValue\n         * @default []\n         * @type {Array.<Object>|undefined}\n         * @since 0.7.0\n         * @readonly\n         * @ignore\n         * @ojwriteback\n         */\n        messagesShown: undefined,\n        /**\n         * A type of user assistance text. User assistance text is used to provide\n         * guidance to help the user understand what data to enter or select.\n         * <p> In the Redwood theme for clarity only one user assistance text shows to the user.\n         *  The precedence rules are:\n         * <ul>\n         * <li>help.instruction shows;</li>\n         * <li>if no help.instruction, then validator hint shows;</li>\n         * <li>if no help.instruction or validator hint, then help-hints.definition shows;</li>\n         * <li>if no help.instruction, validator hint, or help-hints.definition, then converter hint shows.</li>\n         * <li>help-hints.source always shows along side the above.</li>\n         * </ul>\n         * </p>\n         * <p>In the Redwood theme, by default all user assistance text shows inline.\n         * For input components, it shows when the field takes focus. In other components\n         * it shows all the time. See the user-assistance-density property for other ways\n         * the user assistance text can render.\n         * <p>\n         *  In Alta theme, help.instruction\n         * displays in a notewindow when the field takes focus. How is help.instruction better than the html 'title' attribute?\n         * The html 'title' attribute only shows up as a tooltip on mouse over, not on keyboard and not in a mobile\n         * device. So the html 'title' would only be for text that is not important enough to show all users, or\n         * for text that you show the users in another way as well, like in the label.\n         * Also you cannot theme the native browser's title window like you can the JET\n         * notewindow, so low vision users may have a hard time seeing the 'title' window.\n         * For these reasons, the JET EditableValue components do not use the HTML's 'title'\n         * attribute and instead use the help.instruction attribute.\n         * </p>\n         *\n         * <p>\n         * To include formatted text in the help.instruction, format the string using html tags.\n         * The allowed html tags are: span, b, i, em, br, hr, li, ol, ul, p, small, pre.\n         * For example the\n         * help.instruction might look like:\n         * <pre class=\"prettyprint\"><code>&lt;oj-some-element help.instruction=\"&lt;html>Enter &lt;b>at least&lt;/b> 6 characters&lt;/html>\">&lt;/oj-some-element></code></pre>\n         * If you use formatted text, it should be accessible\n         * and make sense to the user if formatting wasn't there.\n         *\n         * @example <caption>Initialize the component with the <code class=\"prettyprint\">help.instruction</code> sub-attribute:</caption>\n         * &lt;oj-some-element help.instruction=\"some tooltip\">&lt;/oj-some-element>\n         *\n         * @example <caption>Get or set the <code class=\"prettyprint\">help.instruction</code> property after initialization:</caption>\n         * // Get one subproperty\n         * var instr = myComp.help.instruction;\n         *\n         * // Set one subproperty, leaving the others intact. Use the setProperty API for\n         * // subproperties so that a property change event is fired.\n         * myComponent.setProperty('help.instruction', 'some new value');\n         *\n         * // Get all\n         * var values = myComponent.help;\n         *\n         * // Set all.  Must list every resource key, as those not listed are lost.\n         * myComponent.help = {\n         *   instruction: 'some new value'\n         * };\n         *\n         * @ojshortdesc Represents advisory information for the component, such as would be appropriate for a tooltip.\n         * @expose\n         * @access public\n         * @instance\n         * @name help.instruction\n         * @ojtranslatable\n         * @default \"\"\n         * @memberof! oj.editableValue\n         * @type {string=}\n         * @since 4.0.0\n         */\n        title: '',\n        /**\n         * <p>\n         * Specifies the density of the form component's user assistance presentation.\n         * It can be shown inline with reserved rows to prevent reflow if\n         * a user assistance text shows up, inline without reserved rows that would reflow if\n         * a user assistance text shows up,\n         * or it can be shown compactly in a popup instead.</p>\n         * <p>\n         * The default value is 'reflow' when the form component is not a descendent of an oj-form-layout\n         * component. When the form component is a descendent of an oj-form-layout, the default value comes from the\n         * oj-form-layout's <code class=\"prettyprint\">user-assistance-density</code> attribute value.\n         * </p>\n         * <p>\n         * The oj-form-layout component uses the\n         * <a href=\"MetadataTypes.html#PropertyBinding\">MetadataTypes.PropertyBinding</a>\n         * <code class=\"prettyprint\">provide</code> property to provide its\n         * <code class=\"prettyprint\">user-assistance-density</code>\n         * attribute value to be consumed by descendent components.\n         * The form components are configured to consume the\n         * <code class=\"prettyprint\">user-assistance-density</code> property if an\n         * ancestor provides it and it is not explicitly set on the form component.\n         * Example, oj-form-layout defaults user-assistance-density='efficient', so all its\n         * form components descendents will have user-assistance-density='efficient' by default.\n         * </p>\n         * @ojshortdesc Specifies the density of the form component's user assistance presentation.\n         * @access public\n         * @expose\n         * @name userAssistanceDensity\n         * @ojunsupportedthemes [\"Alta\"]\n         * @default \"reflow\"\n         * @instance\n         * @type {string}\n         * @ojsignature {target: \"Type\", value: \"'reflow'|'efficient'|'compact'\",  jsdocOverride: true}\n         * @memberof oj.editableValue\n         * @ojvalue {string} \"reflow\" Messages, help, hints, and required are all shown inline under the field with no reserved space.\n         * @ojvalue {string} \"efficient\" Messages, help, hints, and required are all shown inline under the field with reserved space.\n         * @ojvalue {string} \"compact\" Messages, help, hints, and required will not be shown inline; they will show in a mode that keeps the screen more compact, like\n         * a popup for the messages, and a required icon to indicate Required.\n         * @since 9.0.0\n         */\n        userAssistanceDensity: 'reflow',\n        /**\n         * <p>\n         * The current valid state of the component. It is evaluated on initial render.\n         * It is re-evaluated\n         * <ul>\n         *   <li>after each validator (validators or async-validators) is run (full or deferred)</li>\n         *   <li>when messagesCustom is updated,\n         *   since messagesCustom can be added by the app developer any time.</li>\n         *   <li>when showMessages() is called. Since showMessages() moves the\n         *   hidden messages into messages shown,\n         *   if the valid state was \"invalidHidden\" then it would become \"invalidShown\".</li>\n         *   <li>when the required property has changed. If a component is empty and has required\n         *   set, the valid state may be \"invalidHidden\" (if no invalid messages are being shown as well).\n         *   If required property is removed, the valid state would change to \"valid\".</li>\n         * </ul>\n         * </p>\n         * <p>\n         *  Note: New valid states may be added to the list of valid values in future releases.\n         *  Any new values will start with \"invalid\"\n         *  if it is an invalid state, \"pending\" if it is pending state,\n         *  and \"valid\" if it is a valid state.\n         * </p>\n         * @example <caption>Get <code class=\"prettyprint\">valid</code> attribute, after initialization:</caption>\n         * // Getter:\n         * var valid = myComp.valid;\n         * @example <caption>Set the <code class=\"prettyprint\">on-valid-changed</code>\n         *  listener so you can do work in the ViewModel based on the\n         *  <code class=\"prettyprint\">valid</code> property:</caption>\n         * &lt;oj-some-element id='username' on-valid-changed='[[validChangedListener]]'>\n         * &lt;/oj-some-element>\n         * &lt;oj-some-element id='password' on-valid-changed='[[validChangedListener]]'>\n         * &lt;/oj-some-element>\n         * &lt;oj-button disabled='[[componentDisabled]]' on-click='[[submit]]'>Submit&lt;/oj-button>\n         * -- ViewModel --\n         * self.validChangedListener = function (event) {\n         *   var enableButton;\n         *   var usernameValidState;\n         *   var passwordValidState;\n         *\n         *   // update the button's disabled state.\n         *   usernameValidState = document.getElementById(\"username\").valid;\n         *   passwordValidState = document.getElementById(\"password\").valid;\n         *\n         *   // this updates the Submit button's disabled property's observable based\n         *   // on the valid state of two components, username and password.\n         *   // It is up to the application how it wants to handle the “pending�? state\n         *   // but we think that in general buttons don’t need to be\n         *   // enabled / disabled based on the \"pending\" state.\n         *   enableButton =\n         *    (usernameValidState !== \"invalidShown\") &&\n         *    (passwordValidState !== \"invalidShown\");\n         *   self.componentDisabled(!enableButton);;\n         * };\n         *\n         * @ojshortdesc The validity state of the component\n         * @expose\n         * @access public\n         * @instance\n         * @type {string}\n         * @ojvalue {string} \"valid\" The component is valid\n         * @ojvalue {string} \"pending\" The component is waiting for the validation state to be determined.\n         * The \"pending\" state is set at the start of the convert/validate process.\n         * @ojvalue {string} \"invalidHidden\" The component has invalid messages hidden\n         *    and no invalid messages showing. An invalid message is one with severity \"error\" or higher.\n         * @ojvalue {string} \"invalidShown\" The component has invalid messages showing.\n         *  An invalid message is one with severity \"error\" or higher.\n         * @ojwriteback\n         * @readonly\n         * @memberof oj.editableValue\n         * @since 4.2.0\n         *\n         */\n        valid: undefined,\n\n        /**\n         * The value of the component.\n         *\n         * <p>\n         * When <code class=\"prettyprint\">value</code> property changes due to programmatic\n         * intervention, the component always clears all messages\n         * including <code class=\"prettyprint\">messagesCustom</code>, runs deferred validation, and\n         * always refreshes UI display value.</br>\n         *\n         * <h4>Running Validation</h4>\n         * <ul>\n         * <li>component always runs deferred validation; the\n         * <code class=\"prettyprint\">valid</code> property is updated with the result.</li>\n         * </ul>\n         * </p>\n         *\n         * @example <caption>Initialize the component with the <code class=\"prettyprint\">value</code> attribute specified:</caption>\n         * &lt;oj-some-element value='10'>&lt;/oj-some-element>\n         * @example <caption>Get or set <code class=\"prettyprint\">value</code> attribute, after initialization:</caption>\n         * // Getter: returns '10'\n         * var val = myComp.value;\n         * // Setter: sets '20'\n         * myComp.value = '20';\n         *\n         * @ojshortdesc The value of the component.\n         * @expose\n         * @access public\n         * @instance\n         * @default null\n         * @ojwriteback\n         * @ojeventgroup common\n         * @memberof oj.editableValue\n         * @since 0.6.0\n         * @type {any}\n         * @ojsignature {\n         *                 target: \"Accessor\",\n         *                 value: {\n         *                          GetterType: \"V|null\",\n         *                          SetterType: \"SV|null\"}\n         *              }\n         */\n        value: undefined,\n\n        // Events\n        /**\n         * Triggered when a default animation is about to start on an element owned by the component.\n         *\n         * <p>The default animation can be cancelled by calling <code class=\"prettyprint\">event.preventDefault</code>, followed by\n         * a call to <code class=\"prettyprint\">event.detail.endCallback</code>.  <code class=\"prettyprint\">event.detail.endCallback</code> should be\n         * called immediately after <code class=\"prettyprint\">event.preventDefault</code> if the application merely wants to cancel animation,\n         * or it should be called when the custom animation ends if the application is invoking another animation function.  Failure to\n         * call <code class=\"prettyprint\">event.detail.endCallback</code> may prevent the component from working properly.</p>\n         * <p>For more information on customizing animations, see the documentation of\n         * <a href=\"AnimationUtils.html\">AnimationUtils</a>.</p>\n         *\n         * <caption>The default animations are controlled via the theme:</caption>\n         * <pre class=\"prettyprint\"><code>\n         * // default animations for notewindow help and hints and messages\n         * $popupTailOpenAnimation: (effect: \"zoomIn\", transformOrigin: \"#myPosition\") !default;\n         * $popupTailCloseAnimation: (effect: \"none\") !default;\n         *\n         * // default animations for Redwood's inline messages shown when userAssistanceDensity\n         * // is reflow or efficient.\n         * $messageComponentInlineOpenAnimation: (effect: \"fadeIn\", duration: \"100ms\", timingFunction: \"linear\") !default;\n         * $messageComponentInlineCloseAnimation: (effect: \"fadeOut\", duration: \"100ms\", timingFunction: \"linear\") !default;\n         *\n         * // default animations for Alta's \"inline\" display option\n         * $messageComponentInlineOpenAnimation: (effect: \"expand\", startMaxHeight: \"#oldHeight\") !default;\n         * $messageComponentInlineCloseAnimation: (effect: \"collapse\", endMaxHeight: \"#newHeight\") !default;\n         * </code></pre>\n         * @ojdeprecated {since: \"12.1.0\", description: \"This web component no longer supports this event.\"}\n         *\n         * @ojshortdesc Triggered when a default animation is about to start, such as when the component is being opened/closed or a child item is being added/removed.\n         *\n         * @expose\n         * @event\n         * @memberof oj.editableValue\n         * @since 4.0.0\n         * @ojbubbles\n         * @ojcancelable\n         * @instance\n         * @property {string} action The action that triggers the animation.</br></br>\n         *                           Supported values are:\n         *                              <ul>\n         *                                <li>\"inline-hints-open\" - when an inline helphints container opens</li>\n         *                                <li>\"inline-hints-close\" - when an inline helphints container closes</li>\n         *                                <li>\"inline-open\" - when an inline message container opens or increases in size</li>\n         *                                <li>\"inline-close\" - when an inline message container closes or decreases in size</li>\n         *                                <li>\"notewindow-open\" - when a note window opens</li>\n         *                                <li>\"notewindow-close\" - when a note window closes</li>\n         *                              </ul>\n         * @property {Element} element The element being animated.\n         * @property {function():void} endCallback If the event listener calls event.preventDefault to\n         *            cancel the default animation, it must call the endCallback function when it\n         *            finishes its own animation handling and any custom animation has ended.\n         *\n         * @example <caption>Define an event listener for the\n         *          <code class=\"prettyprint\">ojAnimateStart</code> event to override the default\n         *          \"inline-open\" animation:</caption>\n         * var listener = function( event )\n         *   {\n         *     // Change the \"inline-open\" animation for inline message\n         *     if (event.detail.action == \"inline-open\") {\n         *       // Cancel default animation\n         *       event.preventDefault();\n         *       // Invoke new animation and call endCallback when the animation ends\n         *       oj.AnimationUtils.fadeIn(event.detail.element).then(event.detail.endCallback);\n         *     }\n         *   };\n         *\n         * @example <caption>Define an event listener for the\n         *          <code class=\"prettyprint\">ojAnimateStart</code> event to cancel the default\n         *          \"notewindow-close\" animation:</caption>\n         * var listener = function( event )\n         *   {\n         *     // Change the \"notewindow-close\" animation for note window\n         *     if (ui.action == \"notewindow-close\") {\n         *       // Cancel default animation\n         *       event.preventDefault();\n         *       // Call endCallback immediately to indicate no more animation\n         *       event.detail.endCallback();\n         *     }\n         *   };\n         */\n        animateStart: null,\n        /**\n         * Triggered when a default animation has ended.\n         * @ojdeprecated {since: \"12.1.0\", description: \"This web component no longer supports this event.\"}\n         *\n         * @expose\n         * @event\n         * @ojbubbles\n         * @ojcancelable\n         * @memberof oj.editableValue\n         * @since 4.0.0\n         * @instance\n         * @property {string} action The action that triggered the animation.</br></br>\n         *                           Supported values are:\n         *                              <ul>\n         *                                <li>\"inline-open\" - when an inline message container opens or increases in size</li>\n         *                                <li>\"inline-close\" - when an inline message container closes or decreases in size</li>\n         *                                <li>\"notewindow-open\" - when a note window opens</li>\n         *                                <li>\"notewindow-close\" - when a note window closes</li>\n         *                              </ul>\n         * @property {Element} element The element being animated.\n         * @example <caption>Define an event listener for the\n         *          <code class=\"prettyprint\">ojAnimateEnd</code> event to add any processing after the end of\n         *          \"inline-open\" animation:</caption>\n         * var listener = function( event )\n         * {\n         *   // Check if this is the end of \"inline-open\" animation for inline message\n         *   if (event.detail.action == \"inline-open\") {\n         *     // Add any processing here\n         *   }\n         * };\n         */\n        animateEnd: null\n      },\n\n      // P U B L I C    M E T H O D S\n\n      // @inheritdoc\n      getNodeBySubId: function (locator) {\n        var node;\n        var subId;\n\n        node = this._super(locator);\n\n        // this subId is only for non-custom element components so skip if custom element\n        if (!node && !this._IsCustomElement()) {\n          subId = locator.subId;\n\n          if (subId === 'oj-label-help-icon') {\n            var label = this._GetLabelElement();\n\n            if (label) {\n              node = label.parent().find('.oj-label-help-icon');\n            }\n          }\n        }\n        // Non-null locators have to be handled by the component subclasses\n        return node || null;\n      },\n\n      getSubIdByNode: function (elem) {\n        var $node;\n        var anchor;\n        var div;\n        var label;\n        var subId = null;\n\n        if (elem != null) {\n          $node = $(elem);\n          anchor = $node.closest('a.oj-label-help-icon');\n\n          if (anchor != null) {\n            // Go up to the top level element of the label\n            div = anchor.closest('.oj-label');\n\n            if (div != null) {\n              // Now find the actual label\n              label = div.find('label')[0];\n\n              if (label) {\n                // Make sure the label is the one associated with this component\n                if (label === this._GetLabelElement()[0]) {\n                  subId = { subId: 'oj-label-help-icon' };\n                }\n              }\n            }\n          }\n        }\n\n        return subId;\n      },\n      /**\n       * whether the component is currently valid.  It is valid if it doesn't have any errors.\n       * This method is final; do not override.\n       * Currently this is for the widget components and not custom elements.\n       * @example <caption>Check whether the component is valid:</caption>\n       * var valid = myInputElement.isValid();\n       * @returns {boolean}\n       * @access public\n       * @instance\n       * @expose\n       * @memberof oj.editableValue\n       * @final\n       * @ignore\n       */\n      isValid: function () {\n        if (this._valid === undefined) {\n          this._valid = !this._hasInvalidMessages();\n        }\n\n        return this._valid;\n      },\n\n      /**\n       * Called when the DOM underneath the component changes requiring a re-render of the component. An\n       * example is when the <code class=\"prettyprint\">id</code> for the input changes. <br/>\n       * <p>\n       * Another time when refresh might be called is when the locale for the page changes. When it\n       * changes, attributes used by its converter and validator that are locale specific, its hints,\n       * messages and translations will be updated.\n       * </p>\n       *\n       * <p>\n       * When <code class=\"prettyprint\">refresh</code> method is called, the component may take various\n       * steps such as clearing messages, running validation etc., based on the state it is in. </br>\n       *\n       * <h4>Steps Performed Always</h4>\n       * <ul>\n       * <li>The converter and validators used by the component are reset, and new converter and\n       * validator hints is pushed to messaging. E.g., notewindow displays the new hint(s).\n       * </li>\n       * </ul>\n       *\n       * <h4>Running Validation</h4>\n       * <ul>\n       * <li>if component is valid when refresh() is called, the display value is refreshed if component\n       * has a converter set.</li>\n       * <li>if component is invalid and is showing messages when\n       * <code class=\"prettyprint\">refresh()</code> is called, then all component messages are cleared\n       * and full validation run using the display value on the component.\n       * <ul>\n       *   <li>if there are validation errors, then <code class=\"prettyprint\">value</code>\n       *   attribute is not updated and the error is shown.\n       *   </li>\n       *   <li>if no errors result from the validation, the <code class=\"prettyprint\">value</code>\n       *   attribute is updated; page author can listen to the <code class=\"prettyprint\">valueChanged</code>\n       *   event to clear custom errors.</li>\n       * </ul>\n       * </li>\n       * <li>if component is invalid and has deferred messages when <code class=\"prettyprint\">refresh()</code>\n       * is called, then all component messages are cleared and deferred validation is run.</li>\n       * </ul>\n       * </p>\n       *\n       * <h4>Clearing Messages</h4>\n       * <ul>\n       * <li>If clearing messages only those created by the component are cleared.\n       * <li><code class=\"prettyprint\">messagesCustom</code> attribute is not cleared.</li>\n       * </ul>\n       * </p>\n       *\n       * @example <caption>Redraw the component element.</caption>\n       * myComp.refresh();\n       *\n       * @access public\n       * @instance\n       * @expose\n       * @return {void}\n       * @memberof oj.editableValue\n       * @ojshortdesc Called when the DOM underneath the component changes, requiring a re-render of the component.\n       * @since 0.7.0\n       */\n      refresh: function () {\n        this._super();\n        // doRefresh refreshes value and disabled\n        this._doRefresh();\n      },\n\n      /**\n       * Resets the component by clearing all messages and messages attributes -\n       * <code class=\"prettyprint\">messagesCustom</code> -\n       * and updates the component's display value using the attribute value. User entered values will be\n       * erased when this method is called.\n       *\n       * @example <caption>Reset component</caption>\n       * myComp.reset(); <br/>\n       *\n       * @access public\n       * @instance\n       * @expose\n       * @return {void}\n       * @memberof oj.editableValue\n       * @ojshortdesc Resets the component by clearing all messages and messages attributes, and updates the component's display value using the attribute value.\n       * @since 0.7.0\n       */\n      reset: function () {\n        this._clearAllMessages();\n        // since we are pushing component value to UI, only deferred validation need to be run; this is\n        // same as setting value option.\n        this._runDeferredValidation(this._VALIDATION_CONTEXT.RESET_METHOD);\n        this._refreshComponentDisplayValue(this.options.value, true);\n      },\n\n      /**\n       * Takes all deferred messages and shows them.\n       * It then updates the valid property; e.g.,\n       * if the valid state was \"invalidHidden\"\n       * before showMessages(), the valid state will become \"invalidShown\" after showMessages().\n       * <p>\n       * If there were no deferred messages this method simply returns.\n       * </p>\n       *\n       *\n       * @example <caption>Display all messages including deferred ones.</caption>\n       * myComp.showMessages();\n       * @access public\n       * @instance\n       * @return {void}\n       * @expose\n       * @memberof oj.editableValue\n       * @ojshortdesc Takes all deferred messages and shows them.\n       * @since 0.7.0\n       */\n      showMessages: function () {\n        var clonedMsgs = [];\n        var i;\n        var msgHidden;\n        var msgsHidden = this.options.messagesHidden;\n        var hasMessagesHidden = msgsHidden.length > 0;\n        var clonedMsg;\n\n        // showMessages() copies messagesHidden into clonedMsgs,\n        // then clears messagesHidden, and updates messagesShown with the clonedMsgs.\n        // It then updates the valid property; e.g.,\n        // if the valid state was \"invalidHidden\"\n        // before showMessages(), the valid state will become \"invalidShown\" after showMessages().\n        for (i = 0; i < msgsHidden.length; i++) {\n          msgHidden = msgsHidden[i];\n\n          // The Message and ComponentMessage distinction is important in a few places in\n          // the EV code. For example, when messagesCustom property changes, we keep existing\n          // messagesShown only if they are ComponentMessage added by component.\n          // if (msg instanceof ComponentMessage && msg._isMessageAddedByComponent())\n          if (msgHidden instanceof Message.ComponentMessage) {\n            // change ComponentMessage's display state to ComponentMessage.DISPLAY.SHOWN\n            msgHidden._forceDisplayToShown();\n\n            //\n            // .clone() clones the message and the options that were passed in when the message\n            // was originally created.\n            clonedMsg = msgHidden.clone();\n          } else {\n            // NOTE: Message is a public class and ComponentMessage is private.\n            // Message's .clone is deprecated, so we purposely don't call it here.\n            clonedMsg = new Message(msgHidden.summary, msgHidden.detail, msgHidden.severity);\n          }\n\n          clonedMsgs.push(clonedMsg);\n        }\n\n        if (hasMessagesHidden) {\n          this._clearMessages('messagesHidden');\n\n          this._updateMessagesOption('messagesShown', clonedMsgs);\n\n          this._setValidOption(_INVALID_SHOWN, null);\n        }\n      },\n\n      // P R O T E C T E D    C O N S T A N T S   A N D   M E T H O D S\n\n      // *********** START WIDGET FACTORY METHODS (they retain _camelcase naming convention) **********\n\n      /**\n       * Validation mode specifying the kind of validation that gets run.\n       * <ul>\n       *   <li>FULL - the default and runs both the converter and all validators. </li>\n       *   <li>VALIDATORS_ONLY - runs all validators including the required validator is run.</li>\n       *   <li>REQUIRED_VALIDATOR_ONLY - runs just the required validator. </li>\n       * </ul>\n       * @protected\n       * @const\n       * @type {Object}\n       * @memberof oj.editableValue\n       */\n      _VALIDATION_MODE: _sValidationMode,\n\n      /**\n       * The context the component can be in when validation is run.\n       * <ul>\n       * <li>COMPONENT_CREATE - when component is created and we run validators. usually messages are\n       * not displayed right away, i.e, are 'deferred'. </li>\n       * <li>VALUE_OPTION_CHANGE - when component's value is updated programmatically. messages are\n       * deferred.</li>\n       * <li>REQUIRED_OPTION_CHANGE - when component's required option is updated programmatically. messages are\n       * deferred.</li>\n       * <li>USER_ACTION - when component runs validation as a result of user interating with component.\n       * messages are displayed immediately.</li>\n       * <li>VALIDATE_METHOD - when component's validate() method is called explicitly. messages are\n       * displayed immediately.</li>\n       * </ul>\n       *\n       * @protected\n       * @const\n       * @type {Object}\n       * @memberof oj.editableValue\n       *\n       */\n      _VALIDATION_CONTEXT: EditableValueUtils.validationContext,\n\n      /**\n       * Default options used by validate method.\n       *\n       * @protected\n       * @const\n       * @type {Object}\n       * @memberof oj.editableValue\n       * @see #validate\n       */\n      _VALIDATE_METHOD_OPTIONS: EditableValueUtils.validateMethodOptions,\n\n      /**\n       * Called at component create time primarily to initialize options, often using DOM values. This\n       * method is called before _ComponentCreate is called, so components that override this method\n       * should be aware that the component has not been rendered yet. The element DOM is available and\n       * can be relied on to retrieve any default values. <p>\n       *\n       * This method sets defaults for its options that have a DOM namesake. E.g., value, required,\n       * disabled etc. Subclasses can override this method to set their own defaults for these options.\n       * Example, the value option is often not set on this.element for components like radioset, which\n       * walk the sub-tree to determine the value.\n       *\n       * @param {!Object} originalDefaults - original default options defined on the widget and its ancestors\n       * @param {?Object} constructorOptions - options passed into the wiget constructor\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      _InitOptions: function (originalDefaults, constructorOptions) {\n        this._super(originalDefaults, constructorOptions);\n      },\n\n      /**\n       * Initializes options defined by this base class.\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      _ComponentCreate: function () {\n        // remove attributes that trigger html5 validation + inline bubble\n        var attrsToRemove = ['required', 'title', 'pattern'];\n        var node = this.element;\n        var savedAttributes = this._GetSavedAttributes(node);\n\n        this._super();\n\n        this.options.messagesCustom = this.options.messagesCustom || [];\n        this.options.messagesHidden = [];\n        this.options.messagesShown =\n          this.options.messagesCustom.length > 0\n            ? this._cloneMessagesBeforeSet(this.options.messagesCustom)\n            : [];\n\n        // update element DOM for disabled. TODO: say why\n        this._SetDisabledDom(node);\n\n        // remove html5 validation attributes; it's safe to remove these here because components should\n        // have already initialized options based on DOM in _InitOptions().\n        // Only need to do for <input> elements\n        // custom elements create their input/textarea dom, so no need to do that for them.\n        if (savedAttributes && !this._IsCustomElement()) {\n          var tagName = node[0].tagName.toLowerCase();\n          if (tagName === 'input' || tagName === 'textarea') {\n            attrsToRemove.forEach(function (value) {\n              if (value in savedAttributes) {\n                node.removeAttr(value);\n              }\n            });\n          }\n        }\n      },\n\n      /**\n       * The value option alone is initialized here since it requires the component to be fully\n       * created. Calling this.options.value before this method does not guarantee the correct\n       * value to be returned.\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      _AfterCreate: function () {\n        var describedBy;\n        var self = this;\n\n        this._super();\n\n        this._refreshTheming('disabled', this.options.disabled);\n        this.widget()[0].classList.add('oj-form-control');\n        if (this._IsTextFieldComponent()) {\n          if (this._IsCustomElement()) {\n            this._getRootElement().classList.add('oj-text-field');\n          } else {\n            this.widget()[0].classList.add('oj-text-field');\n          }\n        }\n        this._toggleOjHasNoValueClass(this.options.value);\n        // We need to make sure the form component has an id since oj-form-layout\n        // creates the label and associates them via for/id. Adding an id from ojformlayout\n        // after the component is created does not create the form component's internal id.\n        this.widget().uniqueId();\n\n        // create an ojLabel only if this isn't a custom element. For example, ojInputText will\n        // create an ojLabel, but <oj-input-text> will not. Instead the app dev uses <oj-label>.\n        if (!this._IsCustomElement()) {\n          this._createOjLabel();\n        } else if (this.options.labelledBy) {\n          this._labelledByUpdated(this.options.labelledBy);\n        } else {\n          this._setAriaLabelFromLabelHint();\n        }\n\n        // set describedby on the element as aria-describedby\n        describedBy = this.options.describedBy;\n        if (describedBy) {\n          this._describedByUpdated(null, describedBy);\n        }\n\n        // run deferred validation\n        this._runDeferredValidation(this._VALIDATION_CONTEXT.COMPONENT_CREATE);\n\n        // Validators can have a dependency on the converter, so don't do anything with a validator\n        // until the converter is loaded. That includes don't show a validator hint.\n        var converter = this._GetConverter();\n        this._converterChangedCounter = 0;\n        if (converter instanceof Promise) {\n          this._setBusyStateAsyncConverterLoading();\n          // generally, the label edge is derived during the component messaging initialization.\n          // but, in this case we are delaying the messaging init.\n          // this will be a problem when we deal with deriving the label edge from a form layout.\n          // because converter could resolve while the form layout is reparenting the children and\n          // look up of parent might not work as expected. So we should just call the label edge\n          // derivation logic here. That method internally caches the derived label-edge and we should be\n          // fine delaying the label creation until the component is ready.\n          this._ResolveLabelEdgeStrategyType();\n          this._loadingConverter(converter).then(function () {\n            self._AfterCreateConverterCached();\n            self._clearBusyStateAsyncConverterLoading();\n          });\n        } else {\n          // this code gets called if you have a synchronous converter\n          // or no converter at all.\n          this._AfterCreateConverterCached();\n          this._setValidOption(this._determineValidFromMessagesOptions(), null);\n        }\n      },\n\n      /**\n       * Override to release resources held by this component.\n       * It is important to unregister Hammer events\n       * since they live outside of the component's DOM and would cause Detached Dom nodes\n       * when the component is removed.\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      _ReleaseResources: function () {\n        this._super();\n        if (this._IsCustomElement()) {\n          // componentMessaging#releaseResources removes any resources that would\n          // otherwise cause a memory leak, like Hammer.\n          // We do not deactivate component messaging because that is a bigger change, and\n          // more risky to backport.\n          this._getComponentMessaging().releaseResources();\n          this._hammerIsUnregistered = true;\n        }\n      },\n      /**\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      _SetupResources: function () {\n        this._super();\n        // Since initComponentMessaging gets called during component creation, and that activates\n        // all the component strategies which in turn sets up listeners, we only want to\n        // re-set up resources and when we have\n        // released them in ReleaseResources.\n        if (this._IsCustomElement() && this._hammerIsUnregistered) {\n          const messaging = this._getComponentMessaging();\n          messaging.setupResources();\n          this._hammerIsUnregistered = false;\n        }\n      },\n\n      /**\n       * If we have asynchronous converter loading, the input is readonly and a loading indicator\n       * is shown to the user.\n       * When the converter is 100% loaded, then the field is set back to how it was.\n       * That is when we do the tasks that either need a converter or need the field to be enabled,\n       * like showing messagesCustom. Those tasks are done in this method.\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n\n      /**\n       * <p>Saves all the element's attributes. In _destroy all attributes will be restored.\n       * </p>\n       *\n       * @param {Object} element - jQuery selection to save attributes for\n       * @protected\n       * @memberof oj.editableValue\n       * @instance\n       * @override\n       */\n      _SaveAttributes: function (element) {\n        if (!this._IsCustomElement()) {\n          this._SaveAllAttributes(element);\n        }\n      },\n\n      /**\n       * @protected\n       * @memberof oj.editableValue\n       * @instance\n       * @override\n       */\n      _RestoreAttributes: function (element) {\n        if (!this._IsCustomElement()) {\n          this._RestoreAllAttributes(element);\n        }\n      },\n\n      /**\n       * Performs post processing after _SetOption() calls _superApply(). Different options, when changed, perform\n       * different tasks.\n       *\n       * @param {string} option\n       * @param {Object=} flags\n       * @protected\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _AfterSetOption: function (option, flags) {\n        switch (option) {\n          case 'disabled':\n            this._AfterSetOptionDisabledReadOnly(option, EditableValueUtils.disabledOptionOptions);\n            break;\n\n          case 'displayOptions':\n            // clear the cached merged options; the getter setup for this.options['displayOptions']\n            // will merge the new value with the defaults\n            this._initComponentMessaging();\n            break;\n\n          case 'labelEdge':\n            // if the labelEdge of the component changed, we need to recreate or move the label\n            this._initComponentMessaging();\n            this._setAriaLabelFromLabelHint();\n            break;\n\n          case 'labelHint':\n            this._setAriaLabelFromLabelHint();\n            break;\n\n          case 'help':\n            if (!this._IsCustomElement()) {\n              // For non custom element components, help has definition and source, and if those\n              // change, the component needs to be refreshed.\n              this._Refresh(option, this.options[option]);\n            } else {\n              // For custom element components, when the help option changes, we have to assume that\n              // help.instruction changed. When help.instruction changes push new value to messaging.\n              this._getComponentMessaging().update(\n                this._getMessagingContent(this._MESSAGING_CONTENT_UPDATE_TYPE.TITLE)\n              );\n            }\n\n            break;\n\n          case 'messagesCustom':\n            this._messagesCustomOptionChanged(flags);\n            this._setValidOption(this._determineValidFromMessagesOptions(), null);\n            break;\n\n          case 'placeholder':\n            this._SetPlaceholder(this.options.placeholder);\n            this._placeholderOptionChanged(flags);\n            break;\n\n          case 'readOnly':\n            if (this._retainFocusOnReadonlyChange) {\n              // This setTimeout call is needed to allow the dom to update before we\n              // get the focus element (or the element will still be hidden).\n              setTimeout(() => {\n                this.GetFocusElement().focus();\n                if (this._resolveBusyStateFocusRestore) {\n                  this._resolveBusyStateFocusRestore();\n                  delete this._resolveBusyStateFocusRestore;\n                }\n              }, 0);\n            }\n            break;\n\n          case 'title':\n            // Ignore title attribute for custom element components.\n            if (!this._IsCustomElement()) {\n              // no reason to refresh component when title changes just push new value to messaging.\n              this._getComponentMessaging().update(\n                this._getMessagingContent(this._MESSAGING_CONTENT_UPDATE_TYPE.TITLE)\n              );\n            }\n            break;\n\n          case 'translations':\n            this.refresh();\n            break;\n\n          case 'userAssistanceDensity':\n            // if the userAssistanceDensity of the component changed,\n            // we need to create or remove the user assistance display strategy.\n            this._initComponentMessaging();\n            break;\n\n          case 'value':\n            this._AfterSetOptionValue(option, flags);\n            break;\n\n          default:\n            break;\n        }\n      },\n\n      /**\n       * Performs post processing after disabled or readOnly option changes by taking the following\n       * steps. (Steps are same for readOnly option).\n       * <p>\n       * if disabled component is enabled then, <br/>\n       * - if there are no errors, run deferred validation. component could have been initialized with\n       * empty value and disabled.<br/>\n       * - if component is invalid and showing messages clear component error, grab UI value and run\n       * full validation.<br/>\n       * - if component is invalid and has hidden messages; do nothing. <br/>\n       * </p>\n       * <p>\n       * if enabled component is disabled no validation is run.<br/>\n       * </p>\n       *\n       * @param {String} option\n       * @param {Object} validationOptions\n       *\n       * @protected\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _AfterSetOptionDisabledReadOnly: function (option, validationOptions) {\n        var isEnabled = !(this.options[option] || false);\n\n        // always refresh\n        this._Refresh(option, this.options[option]);\n        if (isEnabled) {\n          this._runMixedValidationAfterSetOption(validationOptions);\n        }\n      },\n\n      /**\n       * Performs post processing after value option changes by taking the following steps.\n       *\n       * - triggers a valueChanged event and does writeback if required.<br/>\n       * - if setOption was from programmatic intervention, <br/>\n       * &nbsp;&nbsp;- clear custom messages and component messages; <br/>\n       * &nbsp;&nbsp;- run deferred validation. if there is an error, updates messagesHidden. <br/>\n       * - always refreshes UI display by formatting the value option<br/>\n       *\n       * @param {string} option\n       * @param {Object=} flags\n       *\n       * @protected\n       * @memberof oj.editableValue\n       * @instance\n       *\n       */\n      _AfterSetOptionValue: function (option, flags) {\n        var context = flags ? flags._context : null;\n        var doNotClearMessages;\n        var isUIValueChange = false;\n\n        if (context) {\n          isUIValueChange = !!context.originalEvent;\n          doNotClearMessages = context.doNotClearMessages || false;\n        }\n\n        if (!isUIValueChange) {\n          // value option can be updated directly (i.e., programmatically or through user interaction)\n          // or updated indirectly as a result of some other option changing - e.g., converter,\n          // validators, required etc.\n          // When value changes directly due to programatic intervention (usually page author does this)\n          // then clear all messages and run deferred validation.\n          // If value changes indirectly do not clear custom messages (component messages are already\n          // cleared) and run deferred validation.\n          if (!doNotClearMessages) {\n            this._clearAllMessages(null);\n          }\n          this._runDeferredValidation(this._VALIDATION_CONTEXT.VALUE_OPTION_CHANGE);\n        }\n\n        // refresh UI display value\n        this._Refresh(option, this.options[option], true);\n      },\n\n      /**\n       * Whether the a value can be set on the component. For example, if the component is\n       * disabled then setting value on component is a no-op.\n       *\n       * @see #_SetValue\n       * @return {boolean}\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      _CanSetValue: function () {\n        var disabled = this.options.disabled || false;\n\n        return !disabled;\n      },\n\n      /**\n       * Override to do the delay connect/disconnect\n       * This should improve performance when a lot of editable value components are in an\n       * oj-form-layout component, which does a lot of reparenting of elements which would\n       * trigger multiple (and unneeded) _ReleaseResources/_SetupResources calls.\n       * @memberof oj.editableValue\n       * @override\n       * @protected\n       */\n      _VerifyConnectedForSetup: function () {\n        return true;\n      },\n\n      /**\n       * Detaches the widget from the element and restores element exactly like it was before the widget\n       * was attached.\n       * @protected\n       * @expose\n       * @memberof oj.editableValue\n       * @instance\n       *\n       */\n      _destroy: function () {\n        var labelIndex;\n        var labelLength;\n        var ret = this._super();\n\n        this._clearAllMessages(null, true);\n        this.widget().removeUniqueId();\n        if (this._getComponentMessaging()._isActive()) {\n          this._getComponentMessaging().deactivate();\n        }\n\n        // make sure the label is still \"alive\". Otherwise we could get error when we try to\n        // destroy it if the dom was removed first and ojLabel was destroyed directly.\n        // also make sure to check if there is more than one label and destroy them individually.\n        if (this.$label) {\n          labelLength = this.$label.length;\n          for (labelIndex = 0; labelIndex < labelLength; labelIndex++) {\n            if (\n              this.$label[labelIndex] &&\n              Components.__GetWidgetConstructor(this.$label[labelIndex]) != null\n            ) {\n              $(this.$label[labelIndex]).ojLabel('destroy');\n            }\n          }\n        }\n\n        return ret;\n      },\n\n      /**\n       * JET-48463 - If we are in readonly mode, we call _GetReadonlyFocusElement, and fall back to\n       * _GetContentElement()[0] if _GetReadonlyFocusElement happens to return null.\n       * If not readonly, we just return _GetContentElement()[0]\n       * @memberof oj.editableValue\n       * @instance\n       * @override\n       * @protected\n       * @since 5.0.0\n       */\n      GetFocusElement: function () {\n        return this.options.readOnly === true\n          ? this._GetReadonlyFocusElement() || this._GetContentElement()[0]\n          : this._GetContentElement()[0];\n      },\n\n      /**\n       * Returns the readonly focus element if there is a readonly specific element, otherwise null\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       * @return {Element|null}\n       */\n      _GetReadonlyFocusElement: function () {\n        return this._getReadonlyDiv();\n      },\n\n      /**\n       * Called (by the widget factory) when the option changes, this method responds to the change\n       * by refreshing the component if needed. This method is not called for the options passed in\n       * during the creation of the widget.\n       *\n       * @param {string} name of the option\n       * @param {Object|string} value\n       * @param {Object?} flags - optional flags. The following flags are currently supported:\n       * <ul>\n       *  <li>changed - true if the caller wants to indicate the value has changed, so no comparison is necessary</li>\n       * </ul>\n       *\n       * @expose\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      _setOption: function (name, value, flags) {\n        var retVal;\n        var skipSetOption = false;\n        var oldValue;\n        var newValue;\n\n        switch (name) {\n          case 'messagesHidden':\n            // this option can never be set programmatically by page author\n            skipSetOption = true;\n            break;\n\n          case 'messagesShown':\n            // this option can never be set programmatically by page author\n            skipSetOption = true;\n            break;\n\n          case 'rawValue':\n            // rawValue is readOnly, so throw an error here.\n            skipSetOption = true;\n            break;\n\n          case 'describedBy':\n            // This sets the aria-describedby on the correct dom node\n            oldValue = this.options.describedBy;\n            newValue = value;\n            this._describedByUpdated(oldValue, newValue);\n            break;\n          case 'labelledBy':\n            if (value) {\n              this._labelledByUpdated(value);\n            }\n            break;\n          case 'readOnly':\n            this._retainFocusOnReadonlyChange = FocusUtils.containsFocus(this.widget()[0]);\n            if (this._retainFocusOnReadonlyChange) {\n              if (!this._resolveBusyStateFocusRestore) {\n                var domElem = this.element[0];\n                var busyContext = Context.getContext(domElem).getBusyContext();\n                var description = 'Waiting for focus on the component ';\n\n                if (domElem && domElem.id) {\n                  description += `with id=\"${domElem.id}\" `;\n                }\n                description += 'to be restored.';\n                this._resolveBusyStateFocusRestore = busyContext.addBusyState({\n                  description: description\n                });\n              }\n            }\n            this._addRemoveOjReadOnlyClassOnLabel(\n              document.getElementById(this.options.labelledBy),\n              value\n            );\n            break;\n          case 'displayOptions':\n            // since the displayOptions defaults are theme-dependent\n            // (except for displayOptions.helpInstruction), we\n            // need to set the defaults ourselves when displayOptions\n            // or any of its subproperties is set to undefined.\n            // For displayOptions we never want to blow away any of the sub-properties,\n            // so for the case where the app dev doesn't set all the sub-properties, we\n            // default the others. e.g., formComponent.displayOptions = {messages:'none'}\n            // Also, in Redwood theme, we use 'display' and 'none'. Anything that isn't 'none'\n            // works the same as 'display'.\n            // In Alta, it must be one of the accepted options that Alta supports.\n            // Setting to null doesn't reset.\n            var displayOptions = value;\n            var resetNeeded =\n              value !== null &&\n              (value.validatorHint === undefined ||\n                value.converterHint === undefined ||\n                value.messages === undefined);\n            if (resetNeeded) {\n              // this will change any of the sub-properties not set back to the defaults,\n              // and when super is called at the end of the method, the displayOptions option will\n              // be set with defaults if necessary.\n              let useUserAssistanceDensity =\n                (ojthemeutils.parseJSONFromFontFamily('oj-form-control-option-defaults') || {})\n                  .useUserAssistanceOptionDefault === 'use';\n              const displayOptionsDefaults = useUserAssistanceDensity\n                ? _sDisplayOptionsRedwoodDefaults\n                : _sDisplayOptionsAltaDefaults;\n              if (value.validatorHint === undefined) {\n                displayOptions.validatorHint = displayOptionsDefaults.VALIDATOR_HINT;\n              }\n              if (value.converterHint === undefined) {\n                displayOptions.converterHint = displayOptionsDefaults.CONVERTER_HINT;\n              }\n              if (value.messages === undefined) {\n                displayOptions.messages = displayOptionsDefaults.MESSAGES;\n              }\n            }\n\n            break;\n          default:\n            break;\n        }\n\n        if (skipSetOption) {\n          Logger.error(name + ' option cannot be set');\n          return this;\n        }\n\n        // Step 2: Update option value\n        retVal = this._superApply(arguments);\n\n        // Step 3: Do post processing like triggering events, refreshing component DOM etc.\n        this._AfterSetOption(name, flags);\n\n        return retVal;\n      },\n\n      // *********** END WIDGET FACTORY METHODS **********\n\n      /**\n       * Returns a jquery object of the element(s) representing the content node. This could be a jQuery\n       * object of the element the widget was invoked on - typically this is an input or select or\n       * textarea element for which a value can be set. It could be more than one dom node.\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       * @return {jQuery} the jquery element that represents the editable content. E.g., an input\n       */\n      _GetContentElement: function () {\n        return this.element;\n      },\n\n      /**\n       * Returns a jquery object of the element(s) representing the label node(s) for the input\n       * component.\n       * First we look for the aria-labelledby attribute on the input.\n       * If that's not found, we look for the label with 'for' attribute\n       * pointing to input.\n       * If that's not found, we walk up the dom looking for aria-labelledby.\n       * Note: multiple labels for one input is legal in html-5.\n       * This is called for widget components, not custom components.\n       * We check as well inside this function and return if a custom component.\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       * @return {Object} the jquery element that represents the input component's label.\n       *  return null if it can't find anything.\n       */\n      _GetLabelElement: function () {\n        if (this._IsCustomElement()) {\n          return null;\n        }\n        var ariaElement;\n        var labelQuery;\n\n        if (this.$label) {\n          return this.$label;\n        }\n\n        if (EditableValueUtils.hasNoLabelFlag(this.widget())) {\n          return null;\n        }\n\n        // If input has aria-labelledby set, then look for label it is referring to.\n        var queryResult = this._getAriaLabelledByElement(this.element);\n        if (queryResult !== null && queryResult.length !== 0) {\n          return queryResult;\n        }\n\n        // if no aria-labelledby is on the input, then look for a label with 'for'\n        // set.\n        var id = this.element[0].id;\n        if (id !== undefined) {\n          labelQuery = \"label[for='\" + id + \"']\";\n          queryResult = $(labelQuery);\n          if (queryResult.length !== 0) {\n            return queryResult;\n          }\n        }\n\n        // if no aria-labelledby on input and no label with 'for' pointing to input,\n        // then as a final step we walk up the dom to see if aria-labelledby is set.\n        // If so, then we find the label it is referring to.\n        // This would be the case when you have multiple inputs grouped in a div\n        // <label id=\"grouplabel\">Address</label>\n        // <div aria-labelledby=\"grouplabel\"><input/><input/><input/></div>\n        ariaElement = this.element.closest('[aria-labelledby]');\n        if (ariaElement.length !== 0) {\n          // Element has aria-labelledby set, so look for label it is referring to.\n          queryResult = this._getAriaLabelledByElement(ariaElement);\n          if (queryResult !== null && queryResult.length !== 0) {\n            return queryResult;\n          }\n        }\n        return null;\n      },\n\n      /**\n       * Returns the element's value. Normally, this is a call to this.element.val(), but for some\n       * components, it could be something else. E.g., for ojRadioset the element's value is really the\n       * value of the selected radio in the set.\n       *\n       * @override\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      _GetElementValue: function () {\n        return this.element.val();\n      },\n\n      /**\n       * Returns a jquery object of the element that triggers messaging behavior. The trigger element\n       * is usually an input or select or textarea element for which a value can be set/retrieved and\n       * validated.\n       *\n       * @return {jQuery} jquery object\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      _GetMessagingLauncherElement: function () {\n        return this._GetContentElement();\n      },\n      /**\n       * Returns the dom element that should be used for positioning popup messages.\n       *\n       * @return {HTMLElement}\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      _GetMessagingPositionElement: function () {\n        let formCtrl = this._GetFormControlContainer();\n        // if this component has a text field container, return that element\n        if (formCtrl) {\n          return formCtrl;\n        }\n        // otherwise, return the content element.\n        return this._GetMessagingLauncherElement()[0];\n      },\n\n      /**\n       * Returns the normalized converter instance. Since EditableValue does not have a converter\n       * option, this returns null.\n       *\n       * @return {Object} null\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      _GetConverter: function () {\n        return null;\n      },\n\n      /**\n       * Returns an array of implicit validators setup by component. This list contains validators for\n       * the internal use of the component and are not a part of this.options.validators. <br/>\n       * E.g., if the pattern attribute or option is set, a RegExpValidator instance is automatically\n       * created and added to this list. <br/>\n       * RequiredValidator is tracked separately from the default validators.\n       *\n       * @return {Object} a map of string name to the validator instance.\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      _GetImplicitValidators: function () {\n        if (!this._implicitSyncValidators) {\n          this._implicitSyncValidators = {};\n        }\n\n        return this._implicitSyncValidators;\n      },\n\n      /**\n       * Returns the display value that is ready to be passed to the converter.\n       *\n       * @param {Object} value the stored value if available that needs to be formatted for display\n       * @return {string} usually a string display value\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      // eslint-disable-next-line no-unused-vars\n      _GetDisplayValue: function (value) {\n        return this._GetContentElement().val();\n      },\n\n      /**\n       * For components that have the 'validators' option,\n       * this returns an array of all validators\n       * normalized from the validators option set on the component. <br/>\n       * Since EditableValue does not include the 'validators' option, this returns [].\n       *\n       * @return {Array} of validators.\n       * Since EditableValue does not include the 'validators' option, this returns [].\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      _GetNormalizedValidatorsFromOption: function () {\n        return [];\n      },\n      /**\n       * For components that have the 'async-validators' attribute,\n       * this returns an array of all validators\n       * normalized from the async-validators property set on the component. <br/>\n       * Since EditableValue does not include the 'validators' option, this returns [].\n       *\n       * @return {Array} of validators.\n       * Since EditableValue does not include the 'validators' option, this returns [].\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      _GetNormalizedAsyncValidatorsFromOption: function () {\n        return [];\n      },\n\n      /**\n       * Returns an array of all validators built by merging the validators\n       * option set on the component and the implicit validators\n       * setup by the component. As of v8.0, these can be async or sync.<br/>\n       * This does not include the implicit required validator.\n       * Components can override to add to this\n       * array of validators.\n       *\n       * @return {Array} of validators\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      _GetAllValidatorsFromValidatorsOptionAndImplicit: function () {\n        var allValidators = [];\n        var idx;\n        var implicitValidatorMap;\n        var implicitValidators;\n        var normalizedValidators;\n        // this flag helps us only get or create the validators once, not every time\n        // we want to get a hint or validate.\n        if (!this._allValidators) {\n          implicitValidatorMap = this._GetImplicitValidators();\n          implicitValidators = [];\n\n          // combine public and implicit validators to get the combined list\n          var keys = Object.keys(implicitValidatorMap);\n          var valType;\n          var len = keys.length;\n          if (len > 0) {\n            for (idx = 0; idx < len; idx++) {\n              valType = keys[idx];\n              implicitValidators.push(implicitValidatorMap[valType]);\n            }\n            allValidators = allValidators.concat(implicitValidators);\n          }\n\n          normalizedValidators = this._GetNormalizedValidatorsFromOption();\n          if (normalizedValidators.length > 0) {\n            // Add normalize validators\n            normalizedValidators.forEach(function (normalizedValidator) {\n              allValidators.push(normalizedValidator);\n            });\n          }\n          this._allValidators = allValidators;\n        }\n        return this._allValidators;\n      },\n\n      /**\n       * This method also updates the messaging strategies as hints associated with validators could\n       * have changed.\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      _ResetAllValidators: function () {\n        if (this._allValidators) {\n          this._allValidators.length = 0;\n        }\n        this._allValidators = null;\n\n        if (this._IsCustomElement()) {\n          // This gets sync and async validator hints.\n          // nothing should be waiting on this, so no need to return a Promise.\n          this._updateValidatorMessagingHint();\n        } else {\n          // update messagingstrategy as hints associated with validators could have changed\n          this._getComponentMessaging().update(this._getValidatorHintsMC());\n        }\n      },\n\n      /**\n       * Return the element on which aria-label can be found.\n       * Usually this is the root element, but some components have aria-label as a transfer attribute,\n       * and aria-label set on the root element is transferred to the inner element.\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      _GetAriaLabelElement: function () {\n        return this._getRootElement();\n      },\n\n      /**\n       * Sets or removes oj-read-only class on element based on readonly value.\n       *\n       *\n       * @param {HTMLElement|undefined} element\n       * @param {boolean|undefined} readonly Could be undefined in component does not have readonly\n       * option at all.\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @private\n       */\n      _addRemoveOjReadOnlyClassOnLabel: function (element, readonly) {\n        if (element && readonly !== undefined) {\n          const readonlystyleclass = 'oj-read-only';\n          if (readonly) {\n            element.classList.add(readonlystyleclass);\n          } else {\n            element.classList.remove(readonlystyleclass);\n          }\n        }\n      },\n\n      /**\n       * This is used to set the aria label from the label hint, and also\n       * updates the readonly div from aria-label if specified.\n       * @memberof oj.editableValue\n       * @instance\n       * @private\n       */\n      _setAriaLabelFromLabelHint: function () {\n        if (this._IsCustomElement()) {\n          var ariaLabelElem = this._GetAriaLabelElement();\n          var ariaLabel = ariaLabelElem.getAttribute('aria-label');\n          let readonlyDiv = this._getReadonlyDiv();\n\n          if (\n            !this.options.labelledBy &&\n            this.options.labelHint &&\n            this.options.labelEdge === 'none' &&\n            (!ariaLabel || ariaLabel === this._ariaLabelFromHint) &&\n            !this._getRootElement().getAttribute('aria-labelledby')\n          ) {\n            // Set aria-label if all of the followings are true:\n            // 1. This is a custom element.\n            // 2. There is no labelledBy option.\n            // 3. There is a labelHint option.\n            // 4. labelEdge option is set to 'none' (this will only be set by app)\n            // 5. There is no aria-label attribute or the aria-label was set by us.\n            // 6. There is no aria-labelledby attribute.\n            ariaLabelElem.setAttribute('aria-label', this.options.labelHint);\n            // Set on the readonly div if it exists as well.\n            if (readonlyDiv) {\n              readonlyDiv.setAttribute('aria-label', this.options.labelHint);\n            }\n\n            // Remember what we set aria-label to\n            this._ariaLabelFromHint = this.options.labelHint;\n          } else if (this._ariaLabelFromHint && this._ariaLabelFromHint === ariaLabel) {\n            // If we have set aria-label previously and no one has changed it, remove it\n            // if the current condition no longer need to set aria-label.\n            ariaLabelElem.removeAttribute('aria-label');\n            // remove from the readonly div as well.\n            if (readonlyDiv) {\n              readonlyDiv.removeAttribute('aria-label');\n            }\n          } else if (ariaLabel) {\n            // The app dev specified 'aria-label' explicitly.\n            if (readonlyDiv) {\n              readonlyDiv.setAttribute('aria-label', ariaLabel);\n            }\n          } else if (readonlyDiv) {\n            // No ariaLabel, so remove it from the readonly div\n            readonlyDiv.removeAttribute('aria-label');\n          }\n        }\n      },\n\n      /**\n       * Returns an array of all validators with a hint property. We\n       * look on the attributes validators and async-validators as well\n       * as in the implicit validators.\n       * Having a 'hint' property means they are async validators since\n       * the AsyncValidator interface has  an optional 'hint' property\n       * whereas the Validator interface has an optional getHint function.\n       *\n       * @return {Array} of async validators that have hints, [] if none\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @private\n       */\n      _getAllAsyncValidatorsWithHint: function () {\n        var allAsyncValidators = this._GetNormalizedAsyncValidatorsFromOption();\n        var allAsyncValidatorsWithHints = [];\n        var i;\n        var validator;\n\n        if (this._IsRequired()) {\n          // get the hint for the default required validator and push into array\n          validator = this._getImplicitRequiredValidator();\n          if ('hint' in validator) {\n            allAsyncValidatorsWithHints.push(validator);\n          }\n        }\n\n        if (allAsyncValidators.length > 0) {\n          for (i = 0; i < allAsyncValidators.length; i++) {\n            validator = allAsyncValidators[i];\n            if ('hint' in validator) {\n              allAsyncValidatorsWithHints.push(validator);\n            }\n          }\n        }\n        // gets implicit validators and all validators from the validators option.\n        var allValidators = this._GetAllValidatorsFromValidatorsOptionAndImplicit();\n        if (allValidators.length > 0) {\n          for (i = 0; i < allValidators.length; i++) {\n            validator = allValidators[i];\n            if ('hint' in validator) {\n              allAsyncValidatorsWithHints.push(validator);\n            }\n          }\n        }\n\n        return allAsyncValidatorsWithHints;\n      },\n\n      /**\n       * Initialize async validator messaging hints, if any.\n       * This is called from the ComponentMessaging, not during component\n       * initialization.\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @private\n       */\n      _initAsyncValidatorMessagingHint: function () {\n        var allAsyncValidatorsWithHint = this._getAllAsyncValidatorsWithHint();\n        var currentCounter;\n        var syncValidatorHintMC;\n        var self = this;\n\n        this._asyncValidatorHintCounter = 0;\n\n        if (allAsyncValidatorsWithHint.length > 0) {\n          // get the sync validators hints  we are already showing so we can show it with\n          // the async validators hints\n          syncValidatorHintMC = this._getValidatorHintsMC();\n          // we use a counter to keep track of the busycontext\n          // if we get a more recent update async validators hint requests\n          // i.e., asyncValidators property is changed, and we want to ignore any previous\n          // hints Promise results. See _updateValidatorMessagingHint.\n          currentCounter = this._asyncValidatorHintCounter;\n          this._setBusyStateAsyncValidatorHint(currentCounter);\n          // get the async validators hints and show them as well as they resolve\n          this._addAsyncValidatorsHintsMessagingContent(\n            allAsyncValidatorsWithHint,\n            syncValidatorHintMC\n          ).then(function () {\n            self._clearBusyStateAsyncValidatorHint(currentCounter);\n          });\n        }\n      },\n\n      /*\n      Called from ComponentMessaging as well.\n      * @memberof oj.editableValue\n      * @instance\n      * @private\n      */\n      _getValidatorHintsMC: function () {\n        return this._getMessagingContent(this._MESSAGING_CONTENT_UPDATE_TYPE.VALIDATOR_HINTS);\n      },\n\n      /**\n       * This gets all asyncValidators that have hints,\n       * asynchronously updates the component messaging validator hints with BOTH\n       * synchronous and async validators' hints.\n       * If there are no asyncValidators with hints, it updates validator hints with sync hints.\n       * This is called when asyncValidators property changes or when validators property changes.\n       * See #_ResetAllValidators. Not called now from ResetAllValidators.\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @private\n       */\n      _updateValidatorMessagingHint: function () {\n        var allAsyncValidatorsWithHint = this._getAllAsyncValidatorsWithHint();\n        var compMessagings = this._getComponentMessaging();\n        var currentCounter;\n        var self = this;\n\n        // this gets all validators with getHint (these are sync validators)\n        var syncValidatorHintMC = this._getValidatorHintsMC();\n\n        if (allAsyncValidatorsWithHint.length > 0) {\n          // we use a counter to keep track of the busycontext\n          // if we get a more recent update async validators hint requests\n          // i.e., asyncValidators property is changed.\n          this._asyncValidatorHintCounter += 1;\n          currentCounter = this._asyncValidatorHintCounter;\n          this._setBusyStateAsyncValidatorHint(currentCounter);\n          this._addAsyncValidatorsHintsMessagingContent(\n            allAsyncValidatorsWithHint,\n            syncValidatorHintMC\n          ).then(function () {\n            self._clearBusyStateAsyncValidatorHint(currentCounter);\n          });\n        } else {\n          // if this is [], this causes the notewindow to close if it was open.\n          // and we don't want to close/reopen if possible, so don't do this before\n          // updating async validator hints. Do it in updating async validator hints.\n          compMessagings.update(syncValidatorHintMC);\n        }\n      },\n\n      /**\n       * This is called when we have async validators and we want to add\n       * their hints, if any, to the componentMessaging. It also adds\n       * the sync validator hints as well.\n       * This function will also return a Promise that will resolve when we have updated\n       * the componentMessaging with all the hints, async and sync.\n       *\n       * @param {Array} asyncValidatorsWithHints\n       *  Array of asyncValidators that are in the async-validators attribute and have hints\n       * @param {string} syncValidatorHintMC\n       *  hint messaging content from sync validators.\n       * @return {Promise} Promise that when resolves will have the hints\n       * @memberof oj.editableValue\n       * @instance\n       * @private\n       */\n      _addAsyncValidatorsHintsMessagingContent: function (\n        asyncValidatorsWithHint,\n        syncValidatorHintMC\n      ) {\n        var i;\n        // use counter to ignore if we get a more recent update async validators hint requests\n        // i.e., asyncValidators property is changed.\n        var asyncValidatorHintCounter = this._asyncValidatorHintCounter;\n        var compMessagings = this._getComponentMessaging();\n        var hintArray = [];\n        var self = this;\n\n        // We kick off all the async validators.hint simultaneously. When they all resolve/reject,\n        // then we can move on.\n        var promiseArray = [];\n        for (i = 0; i < asyncValidatorsWithHint.length; i++) {\n          promiseArray.push(asyncValidatorsWithHint[i].hint);\n        }\n\n        function reflect(promise) {\n          return promise.then(\n            function (v) {\n              var status;\n\n              var validatorHintMessagingContent = {};\n\n              // update hint as we get it\n              // use counter to ignore if we get a more recent update async validators hint requests\n              // i.e., asyncValidators property is changed.\n              if (self._asyncValidatorHintCounter === asyncValidatorHintCounter) {\n                if (v !== null) {\n                  hintArray.push(v);\n                  validatorHintMessagingContent.validatorHint =\n                    syncValidatorHintMC.validatorHint.concat(hintArray);\n                  compMessagings.update(validatorHintMessagingContent);\n                }\n                status = 'resolved';\n              } else {\n                status = 'ignore';\n              }\n              return { v: v, status: status };\n            },\n            function (e) {\n              // we don't update the hintArray when the hint Promise rejects.\n              // No need to check the counter in this case because there is nothing\n              // to 'ignore'.\n              return { e: e, status: 'rejected' };\n            }\n          );\n        }\n        return new Promise(function (resolve) {\n          // Promise.all will end as soon as it gets its first rejection. We don't want that.\n          // We want to wait until all promises either resolve or reject. Then we can resolve this\n          // outer promise. We do this using the reflect function defined above.\n          Promise.all(promiseArray.map(reflect)).then(function () {\n            resolve(hintArray);\n          });\n        });\n      },\n\n      /**\n       * Whether the component is required. EditableValue doesn't support the required option,\n       * so return false.  This allows us to keep some of the required code in EditableValue.\n       *\n       * @return {boolean} true if required; false\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      _IsRequired: function () {\n        return false;\n      },\n\n      /**\n       * Convenience handler for the DOM 'change' event. Subclasses are expected to wire up event\n       * handlers for DOM events that they wish to handle.<br/>\n       *\n       * The implementation retrieves the display value for the component by calling _GetDisplayValue()\n       * and calls _SetValue(), with full validation.\n       *\n       * @param {Event} event DOM event\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      _HandleChangeEvent: function (event) {\n        var submittedValue = this._GetDisplayValue();\n        // run full validation\n        this._SetValue(submittedValue, event);\n      },\n      /**\n       * Convenience function to set the rawValue option. Called by subclasses\n       *\n       * @param {String} val value to set rawValue to\n       * @param {Event} event DOM event\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      _SetRawValue: function (val, event) {\n        var flags = {};\n        flags._context = { originalEvent: event, writeback: true, internalSet: true, readOnly: true };\n\n        if (!this._CompareOptionValues('rawValue', this.options.rawValue, val)) {\n          this.option('rawValue', val, flags);\n        }\n      },\n\n      /**\n       * This method takes a value from a value change listener\n       * and determines if it is 'empty'. This is used to toggle a\n       * 'oj-has-no-value' style class.\n       * This method is generic enough to be used by all EditableValue components,\n       * but can be overridden by component if needed.\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      _IsValueEmpty: function (value) {\n        if (value === undefined || value === null) {\n          return true;\n        } else if (typeof value === 'string') {\n          return oj.StringUtils.isEmptyOrUndefined(value);\n        } else if (typeof value === 'number') {\n          return isNaN(value);\n        } else if (Array.isArray(value)) {\n          // oj-select-many setting observable(undefined) returns an array with\n          // an undefined value versus an undefined value\n          return (\n            value.length === 0 ||\n            (value.length === 1 && (value[0] === null || value[0] === undefined))\n          );\n        }\n        return false;\n      },\n      /**\n       * This method toggles a 'oj-has-no-value' style class as needed.\n       * The styleclass is used to position the inside label.\n       * This method also updates component messaging (specifically InlineRequiredStrategy),\n       * because the Required dom is created when the component is required and\n       * there is no value displayed to the user and the Required dom is removed\n       * when there is a value, as per the Redwood UX spec.\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @private\n       */\n      _toggleOjHasNoValueClass: function (value) {\n        let element = this._getRootElement();\n        const ojHasNoValueClass = 'oj-has-no-value';\n        const hasOjHasNoValueClass = element.classList.contains(ojHasNoValueClass);\n        const isValueEmpty = this._IsValueEmpty(value);\n        const addClass = isValueEmpty && !hasOjHasNoValueClass;\n        const removeClass = !isValueEmpty && hasOjHasNoValueClass;\n\n        if (addClass) {\n          element.classList.add(ojHasNoValueClass);\n        } else if (removeClass) {\n          element.classList.remove(ojHasNoValueClass);\n        }\n        // only bother to do this if required option is true and the class was added or removed,\n        // since this is only used in the InlineRequiredStrategy right now.\n        if (this.options.required && (addClass || removeClass)) {\n          this._getComponentMessaging().update({ hasNoValueToggled: true });\n        }\n      },\n\n      /**\n       * Called in response to a change in the options set for this component, this method refreshes the\n       * component display value. Subclasses can override to provide custom refresh behavior.\n       *\n       * @param {String=} name the name of the option that was changed\n       * @param {Object=} value the current value of the option\n       * @param {boolean=} forceDisplayValueRefresh\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      _Refresh: function (name, value, forceDisplayValueRefresh) {\n        var helpDef;\n        var helpSource;\n\n        switch (name) {\n          case 'converter':\n            var _value = this.options.value;\n            this._refreshComponentDisplayValue(_value, forceDisplayValueRefresh);\n            break;\n\n          case 'disabled':\n            this._refreshTheming('disabled', this.options.disabled);\n            break;\n\n          case 'help':\n            if (!this._IsCustomElement()) {\n              // refresh the help - need to keep the label in sync with the input.\n              if (this.$label) {\n                helpDef = this.options.help.definition;\n                helpSource = this.options.help.source;\n                this.$label.ojLabel('option', 'help', { definition: helpDef, source: helpSource });\n                var label = this.$label[0];\n                if (label) {\n                  let labelId = label.id;\n                  if (labelId) {\n                    let ariaId = labelId + _HELP_ICON_ID;\n                    if (helpSource != null || helpDef != null) {\n                      this._describedByUpdated(null, ariaId);\n                    } else {\n                      this._describedByUpdated(ariaId, null);\n                    }\n                  }\n                }\n              }\n            }\n            break;\n\n          case 'value':\n            this._refreshComponentDisplayValue(value, forceDisplayValueRefresh);\n            break;\n\n          default:\n            break;\n        }\n      },\n\n      /**\n       * <p>Notifies the component that its subtree has been made hidden programmatically\n       * after the component has been created.\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      _NotifyHidden: function () {\n        this._superApply(arguments);\n        this._getComponentMessaging().close();\n      },\n      /**\n       * <p>Notifies the component that its subtree has been removed from the\n       * document programmatically after the component has\n       * been created.\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      _NotifyDetached: function () {\n        this._superApply(arguments);\n        this._getComponentMessaging().close();\n      },\n      /**\n       * Called anytime the label DOM changes requiring a reset of any dependent feature that caches the\n       * label, including all validators.\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      _ResetComponentState: function () {\n        // the DOM for the label and its text could have changed.\n        if (this.$label) {\n          this.$label.ojLabel('refresh');\n        }\n\n        // reset all validators when label changes\n        this._implicitReqValidator = null;\n        this._converter = null;\n        this._ResetAllValidators();\n      },\n\n      /**\n       * Called when the display value on the element needs to be updated. This method updates the\n       * (content) element value. Widgets can override this method to update the element appropriately.\n       *\n       * @param {String} displayValue of the new string to be displayed\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      _SetDisplayValue: function (displayValue) {\n        var contentElem = this._GetContentElement();\n        if (contentElem.val() !== displayValue) {\n          contentElem.val(displayValue);\n        }\n      },\n      /**\n       * Sets the disabled option onto the dom.\n       * Component subclasses can override this method to not do this in cases where it is invalid,\n       * like on a div (e.g., radioset's root dom element is a div).\n       * @param {Object} node - dom node\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       * @since 1.0.0\n       */\n      _SetDisabledDom: function (node) {\n        if (typeof this.options.disabled === 'boolean') {\n          node[0].disabled = this.options.disabled; // eslint-disable-line no-param-reassign\n        }\n      },\n\n      /**\n       * Sets the placeholder text on the content element by default. It sets the placeholder attribute\n       * on the element. Component subclasses can override this method to control where placeholder text\n       * gets set.\n       * @param {string} value\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      _SetPlaceholder: function (value) {\n        var contentElem = this._GetContentElement()[0];\n        if (contentElem) {\n          if (value == null) {\n            contentElem.removeAttribute('placeholder');\n          } else {\n            contentElem.setAttribute('placeholder', value);\n          }\n        }\n      },\n\n      /**\n       * Sets the placeholder option with the value.\n       *\n       * @param {string} value\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      _SetPlaceholderOption: function (value) {\n        this.options.placeholder = value;\n      },\n\n      /**\n       * whether the placeholder option is set\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      _HasPlaceholderSet: function () {\n        //  - an empty placeholder shows up if data changed after first binding\n        return this.options.placeholder;\n      },\n\n      /**\n       * Clear the placeholder option\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      _ClearPlaceholder: function () {\n        //  - an empty placeholder shows up if data changed after first binding\n        this._SetPlaceholderOption('');\n        this._SetPlaceholder('');\n      },\n      /**\n       * Runs full validation on the newValue (usually the display value) and sets the parsed value on\n       * the component if value passes basic checks and there are no validation errors. <br/>\n       * If the newValue is undefined or if it is the same as the last saved displayValue this method\n       * skips validation and does not set value (same as ADF). It also updates messages shown\n       * if there are errors, and it updates the 'valid' property on the component.<br/>\n       * This method returns a Promise if there are async validators\n       *  on the component (introduced in v5.2 for custom elements), so if you call this method,\n       * and you do work after this method returns that cares about\n       * what the value option is, if there are error messages showing, or what the 'valid' state is,\n       * then you need to see if the return value is an instanceof Promise,\n       * and if so, then you need to wait until it resolves before moving on.\n       *\n       * @param {string|Object} newValue the ui value that needs to be parsed before it's set.\n       * @param {Object=} event an optional event if this was a result of ui interaction. For user\n       * initiated actions that trigger a DOM event, passing this event is required. E.g., if user action\n       * causes a 'blur' event.\n       * @param {Object=} options - an Object literal that callers pass in to determine how validation\n       * gets run.\n       * @param {boolean=} options.doValueChangeCheck - if set to true compare newValue with last\n       * displayValue before running validation; if false, always run validation. E.g., set to false\n       * when validate() is called.\n       * @param {boolean=} options.doNotClearMessages - if set method will not clear all messages. This\n       * is provided for callers that may want to clear only some of the messages. E.g., when required\n       * option changes, it clears only component messages, not custom.\n       * @param {Array<string>=} options.targetOptions - if specified, only the options specified in\n       * this array will be set. If not specified, the \"value\" option will be set.\n       * @param {number=} options.validationMode - accepted values (defined in _VALIDATION_MODE) are:\n       * <ul>\n       *   <li>FULL - the default and runs both the converter and all validators. </li>\n       *   <li>VALIDATORS_ONLY - runs all validators including the required validator is run.</li>\n       *   <li>REQUIRED_VALIDATOR_ONLY - runs just the required validator. </li>\n       * </ul>\n       * @return {Promise|boolean} Promise that resolves to false\n       * if value was not set due to validation error,\n       * else true, or for widget code or components that do not have async validators or\n       * converters, boolean false if value was not set, true otherwise.\n       * @example  <caption>Widget subclasses can use this convention to run full validation</caption>\n       * this._SetValue(value, event);\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       *\n       */\n      _SetValue: function (newValue, event, options) {\n        var clearBusyStateKey;\n        var doValueChangeCheck =\n          options && typeof options.doValueChangeCheck === 'boolean'\n            ? options.doValueChangeCheck\n            : true;\n        var self = this;\n        var resolvedState = false;\n        var validateReturn;\n        var fulfilledNewValue;\n\n        // we want to add/remove the oj-has-no-value styleclass so we can style based on\n        // if there is something in the field.\n        // this is where we validate what the user has typed in, so it is a good place\n        // to check this styleclass.\n        this._toggleOjHasNoValueClass(newValue);\n\n        // disallow setting a value of undefined by widgets\n        if (newValue === undefined) {\n          Logger.warn('Attempt to set a value of undefined');\n          return false;\n        }\n\n        if (!doValueChangeCheck || newValue !== self._getLastDisplayValue()) {\n          // AsyncValidate returns a promise if the component has async validators\n          // that will be resolved to the successfully parsed value\n          // if successful or undefined if not successful or was ignored because a newer _AsyncValidate\n          // came in.\n          // for non-async, it returns the parsed value or undefined if validation failed or\n          // was ignored.\n          clearBusyStateKey = '' + newValue + '_' + (this._asyncValidatorValidateCounter + 1);\n          validateReturn = this._AsyncValidate(newValue, event, options, clearBusyStateKey);\n\n          if (!(validateReturn instanceof Promise)) {\n            // Synchronous validation only.\n            this._afterAsyncValidateUpdateValue(validateReturn, event, options);\n            resolvedState = validateReturn !== undefined;\n          } else {\n            resolvedState = validateReturn\n              .then(function (fnv) {\n                fulfilledNewValue = fnv;\n                return self._afterAsyncValidateUpdateValue(fnv, event, options);\n              })\n              .then(function () {\n                self._clearBusyState(clearBusyStateKey);\n                return fulfilledNewValue !== undefined;\n              });\n          }\n        }\n        return resolvedState;\n      },\n\n      /**\n       * Parses the value and shows an error, if any.\n       * </p>\n       *\n       * @param {string|Object} newValue the value to parse. Usually this is the string display value\n       * @param {Object=} event an optional event if this was a result of ui interaction. For user\n       * initiated actions that trigger a DOM event, passing this event is required. E.g., if user action\n       * causes a 'blur' event.\n       *\n       * @return {Object|string|undefined} the parsed value or undefined if parse failed.\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      _ParseValueShowErrors: function (newValue, event) {\n        var newMsgs;\n        var parsedValueReturn;\n        var self = this;\n\n        this._clearAllMessages(event);\n        try {\n          // Step1: Parse value using converter.\n\n          parsedValueReturn = this._parseValue(newValue, event);\n          // It's the successfully parsed value from\n          // a synchronous converter.\n          return parsedValueReturn;\n        } catch (ve) {\n          // _parseValue failed\n          // turn this into Array of ComponentMessage instances.\n          // This is what we set on 'messagesShown'\n          newMsgs = self._processValidationErrors(ve);\n          self._updateMessagesOption('messagesShown', newMsgs, event);\n          self._setValidOption(_INVALID_SHOWN, event);\n        }\n        return undefined;\n      },\n\n      /**\n       * Runs full validation on the value. If value fails basic checks\n       * (see <a href=\"#_CanSetValue\">_CanSetValue</a>, or if value failed validation, this method\n       * returns undefined. Otherwise it returns the successfully parsed value. If validation\n       * is async, this returns a Promise that resolves to the successfully parsed and\n       * validated value, or undefined if unsuccessful or ignored. As soon as we know that something\n       * has failed, we set valid to INVALID_SHOWN, when all pass we set valid to VALID.\n       * <p>\n       * Components should call this method if they know UI value has changed and want to set the\n       * new component value.\n       * </p>\n       * <p>\n       * This method works with any combination of synchronous and asynchronous validators.\n       * <p>\n       *\n       * @param {string|Object} newValue the actual value to be set. Usually this is the string display value\n       * @param {Object=} event an optional event if this was a result of ui interaction. For user\n       * initiated actions that trigger a DOM event, passing this event is required. E.g., if user action\n       * causes a 'blur' event.\n       * @param {{doNotClearMessages:boolean,validationContext:number,validationMode:number}=} options\n       * an Object literal that callers pass in to determine how validation gets run.\n       * @param {boolean=} options.doNotClearMessages - if set method will not clear all messages. This\n       * is provided for callers that may want to clear only some of the messages. E.g., when required\n       * option changes, it clears only component messages, not custom.\n       * @param {number=} options.validationContext - the context this method was called. When not set it\n       * defaults to _VALIDATION_CONTEXT.USER_ACTION.\n       * @param {number=} options.validationMode - accepted values defined in _VALIDATION_MODE\n       * @param {string=} busyStateKey key used to set the busy context. The calling function will\n       * clear it.\n       *\n       * @return {Promise.<Object|string|undefined>|Object|string|undefined}\n       * A promise if the component has async validators\n       * that will be resolved to the successfully parsed value\n       * if successful or undefined if not successful or to be ignored due to a newer validation\n       * request coming in.\n       * the parsed value or undefined if validation failed.\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      _AsyncValidate: function (newValue, event, options, busyStateKey) {\n        var mode =\n          options && options.validationMode ? options.validationMode : this._VALIDATION_MODE.FULL;\n        var context =\n          options && options.validationContext\n            ? options.validationContext\n            : this._VALIDATION_CONTEXT.USER_ACTION;\n        var doNotClearMessages = (options && options.doNotClearMessages) || false;\n        var newMsgs;\n        var successfullyParsedValue;\n        var self = this;\n        var validateReturn;\n\n        // disallow setting a value of undefined by widgets\n        if (newValue === undefined) {\n          Logger.warn('Attempt to set a value of undefined');\n          return undefined;\n        } else if (this._CanSetValue()) {\n          if (!doNotClearMessages) {\n            this._clearAllMessages(event);\n          }\n          // Stores the newValue we are validating. This is consulted to decide whether or\n          // not we skip _SetValue\n          // if newValue !== self._getLastDisplayValue()\n          try {\n            // update the validate counter here, before we call _asyncValidateValue,\n            // because we refer to it there to know if we need to ignore a validation result if a new\n            // async one came in after.\n            this._asyncValidatorValidateCounter += 1;\n\n            // Step 1: only when \"full\" validation is requested converters get run\n            if (mode === self._VALIDATION_MODE.FULL) {\n              this._setLastDisplayValue(newValue);\n              // Step1: Parse value using converter. set valid state to pending in here.\n              successfullyParsedValue = this._parseValue(newValue, event, true);\n            } else {\n              successfullyParsedValue = newValue;\n            }\n\n            // Step 2: Parse didn't throw an error.\n            // Run validators and set valid state\n            // asyncValidateValue will return a Promise if the component has async validators,\n            // otherwise it returns the value if successful or undefined if not.\n            validateReturn = self._asyncValidateValue(successfullyParsedValue, event, context);\n            if (!(validateReturn instanceof Promise)) {\n              return validateReturn;\n            }\n            // validateReturn Promise resolves to 'valid' if all validators pass.\n            // Resolves to 'invalidShown' if any validator fails.\n            // Resolves to 'ignoreValidation' if we are to ignore validation results.\n            self._setBusyState(busyStateKey);\n            return validateReturn.then(function (valid) {\n              if (valid === _VALID) {\n                return successfullyParsedValue;\n              }\n              return undefined;\n            });\n          } catch (ve) {\n            // SYNCHRONOUS _parseValue failed\n            // turn this into Array of ComponentMessage instances.\n            // This is what we set on 'messagesShown'\n            newMsgs = self._processValidationErrors(ve, context);\n            self._updateMessagesOption('messagesShown', newMsgs, event);\n            self._setValidOption(_INVALID_SHOWN, event);\n          }\n        }\n        return validateReturn;\n      },\n\n      /**\n       * After _AsyncValidate, we normally update the value option and format the value to display\n       * it, if no errors are showing.\n       * This method does nothing if fulfilledNewValue is undefined. It returns false.\n       *\n       * @param {string|Object} fulfilledNewValue the parsed value. If undefined, this method returns\n       * false.\n       * @param {Object=} event an optional event if this was a result of ui interaction. For user\n       * initiated actions that trigger a DOM event, passing this event is required. E.g., if user action\n       * causes a 'blur' event.\n       * @param {Object=} options - an Object literal that callers pass in to determine how validation\n       * gets run.\n       * @param {boolean=} options.doValueChangeCheck - if set to true compare newValue with last\n       * displayValue before running validation; if false, always run validation. E.g., set to false\n       * when validate() is called.\n       * @param {boolean=} options.doNotClearMessages - if set method will not clear all messages. This\n       * is provided for callers that may want to clear only some of the messages. E.g., when required\n       * option changes, it clears only component messages, not custom.\n       * @param {number=} options.validationMode - accepted values (defined in _VALIDATION_MODE) are:\n       * <ul>\n       *   <li>FULL - the default and runs both the converter and all validators. </li>\n       *   <li>VALIDATORS_ONLY - runs all validators including the required validator is run.</li>\n       *   <li>REQUIRED_VALIDATOR_ONLY - runs just the required validator. </li>\n       * </ul>\n       * @return {boolean} true if value was updated, false otherwise.\n       *  This method returns false if fulfilledNewValue is undefined.\n       * @example  <caption>Widget subclasses can use this convention to run full validation</caption>\n       * this._SetValue(value, event);\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @private\n       *\n       */\n      _afterAsyncValidateUpdateValue: function (fulfilledNewValue, event, options) {\n        var resolvedState = false;\n        var updateContext;\n        var doUpdateValueOption;\n\n        if (fulfilledNewValue !== undefined) {\n          if (options && options.doNotClearMessages === true) {\n            doUpdateValueOption = this.isValid() || !this._hasInvalidComponentMessagesShowing();\n          } else {\n            doUpdateValueOption = this.isValid();\n          }\n          if (doUpdateValueOption) {\n            if (options && options._context) {\n              updateContext = options._context;\n            }\n            // update value option and then format the value and update display value.\n            this._updateValueOption(\n              fulfilledNewValue,\n              event,\n              options && options.validationContext,\n              updateContext,\n              options\n            );\n            resolvedState = true;\n          }\n        }\n        return resolvedState;\n      },\n\n      _CompareOptionValues: function (option, value1, value2) {\n        if (option === 'value' || option === 'rawValue') {\n          return oj.Object.compareValues(value1, value2);\n        } else if (option.indexOf('messages') === 0) {\n          return this._messagesEquals(value1, value2);\n        }\n\n        return this._superApply(arguments);\n      },\n\n      /**\n       * Returns the default styleclass for the component. All input components must override.\n       *\n       * @return {string}\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       * @abstract\n       */\n      _GetDefaultStyleClass: function () {\n        oj.Assert.failedInAbstractFunction();\n        return '';\n      },\n\n      // I N T E R N A L   P R I V A T E   C O N S T A N T S    A N D   M E T H O D S\n      // Subclasses should not override or call these methods\n\n      /**\n       * Types of messaging content to update.\n       * <ul>\n       * <li>'INIT' - builds all messaging content needed for component initialization</li>\n       * <li>'VALIDITY_STATE' - updates only validityState every time validation runs and there are\n       * new messages or when the messages option changes.</li>\n       * <li>'CONVERTER_HINT' - updates only converter hints, this is used when converter option\n       * changes</li>\n       * <li>'VALIDATOR_HINTS' - updates only validator hints, this is used when validators option\n       * changes or when validator hints are first shown the the user.</li>\n       * <li>'TITLE' - updates only title, when the title property changes</li>\n       * </ul>\n       * @private\n       * @memberof oj.editableValue\n       */\n      _MESSAGING_CONTENT_UPDATE_TYPE: {\n        INIT: 1,\n        VALIDITY_STATE: 2,\n        CONVERTER_HINT: 3,\n        VALIDATOR_HINTS: 4,\n        TITLE: 5\n      },\n\n      /**\n       * when below listed options are passed to the component, corresponding CSS will be toggled\n       * @private\n       * @const\n       * @type {Object}\n       * @memberof oj.editableValue\n       */\n      _OPTION_TO_CSS_MAPPING: {\n        disabled: 'oj-disabled',\n        required: 'oj-required'\n      },\n\n      /**\n       * Clears all messages for this component. Today this only happens when <br/>\n       *  - the component's value changes as a result of user interaction, <br/>\n       *  - the reset method is called, <br/>\n       *  - component is destroyed.<br/>\n       *\n       * @param {Event=} event the original event (for user initiated actions that trigger a DOM event,\n       * like blur) or undefined.\n       * @param {boolean=} doNotSetOption default value is false; a true value clears the option\n       * directly without using the public option method, causing no events to be fired.\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _clearAllMessages: function (event, doNotSetOption) {\n        if (!doNotSetOption) {\n          this._clearMessages('messagesHidden', event);\n          this._clearMessages('messagesShown', event);\n          this._clearMessages('messagesCustom', event);\n        } else {\n          this.options.messagesHidden = [];\n          this.options.messagesShown = [];\n          this.options.messagesCustom = [];\n        }\n      },\n\n      /**\n       * Clears all messages that were added by component. These includes all messages in messagesHidden\n       * option and all messages except custom in messagesShown.\n       *\n       * Called when these options change - validators, disabled, readonly, required, and methods -\n       * refresh are called.\n       *\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _clearComponentMessages: function () {\n        var beforeLen;\n        var msg;\n        var shownMsgs = this.options.messagesShown;\n\n        beforeLen = shownMsgs.length;\n        this._clearMessages('messagesHidden');\n\n        // remove component messages in messagesShown. Custom messges are kept intact.\n        for (var i = beforeLen - 1; i >= 0; i--) {\n          // NOTE: shownMsgs is this.options['messagesShown']\n          // so we are modifying this.options['messagesShown'] here.\n          msg = shownMsgs[i];\n          if (msg instanceof Message.ComponentMessage) {\n            shownMsgs.splice(i, 1);\n          }\n        }\n\n        if (shownMsgs.length !== beforeLen) {\n          // Setting 'changed' flag to true means that although we have already\n          // updated this.options['messagesShown'], we still want to fire a messagesShownChanged event.\n          this._setMessagesOption('messagesShown', shownMsgs, null, true);\n        }\n      },\n\n      /**\n       * Sets the messages option with the new value.\n       * Setting 'changed' flag to true means we want to fire a property changed event\n       * without checking that the option value to what you are setting it to. Useful\n       * if the option is an array or we have already updated the option directly.\n       *\n       * This method updates the option directly without invoking setOption() method. This is done by\n       * setting the following property in flags parameter of the option() method -\n       * <code class=\"prettyprint\">{'_context': {internalSet: true}}</code>\n       *\n       * @param {string} key\n       * @param {Array} value\n       * @param {Event=} event the event like the user blurred to trigger a messages option change\n       * or undefined.\n       * @param {Boolean=} changed when this is true, then we set the 'changed' flag to true, and having\n       * the changed flag be true will guarantee that the property changed event is fired even if the\n       * the property value is equal to what you are setting it to.\n       * @private\n       * @memberof oj.editableValue\n       */\n      _setMessagesOption: function (key, value, event, changed) {\n        var flags = {};\n\n        // Optimize for the common 'clear' operation\n        var bothEmpty = value.length === 0 && this.options[key].length === 0;\n\n        if (changed || !bothEmpty) {\n          // 'messagesCustom' is not read-only, but 'messagesShown' and 'messagesHidden' are\n          flags._context = { originalEvent: event, writeback: true, internalSet: true };\n          if (key !== 'messagesCustom') {\n            flags._context.readOnly = true;\n          }\n\n          flags.changed = changed || !bothEmpty;\n\n          this._resetValid();\n\n          this.option(key, value, flags);\n\n          this._updateMessagingContent();\n        }\n      },\n\n      /**\n       * Sets the valid option with the new value.\n       *\n       * This method updates the option directly without invoking setOption() method. This is done by\n       * setting the following property in flags parameter of the option() method -\n       * <code class=\"prettyprint\">{'_context': {internalSet: true}}</code>\n       *\n       * @param {string} newValidState The new valid state to set on the valid option\n       *   e.g., \"pending\", \"valid\", \"invalidShown\", \"invalidHidden\"\n       * @param {Event=} event the original event (for user initiated actions that trigger a DOM event,\n       * like blur) or undefined. The custom element bridge creates a CustomEvent out of this when\n       * it sends the property changed event.\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _setValidOption: function (newValidState, event) {\n        var flags = {};\n\n        // We do not want to set valid state to PENDING if we are already showing messages, e.g., messages-custom.\n        if (!(newValidState === _PENDING && this._determineValidFromMessagesOptions() !== _VALID)) {\n          // do not set if it is already set to that\n          if (newValidState !== this.options.valid) {\n            // 'valid' is read-only\n            flags._context = {\n              originalEvent: event,\n              writeback: true,\n              internalSet: true,\n              readOnly: true\n            };\n\n            this.option('valid', newValidState, flags);\n          }\n        }\n      },\n\n      /**\n       * Clears the messages and message options - <code class=\"prettyprint\">messagesHidden</code>,\n       * <code class=\"prettyprint\">messagesShown</code>, <code class=\"prettyprint\">messagesCustom</code>.\n       *\n       * @param {String} option messages option that is being cleared.\n       * @param {Event=} event the original event (for user initiated actions that trigger a DOM event,\n       * like blur) or undefined.\n       *\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _clearMessages: function (option, event) {\n        this._setMessagesOption(option, [], event);\n      },\n\n      /**\n       * Clones messages before it's set. <br/>\n       *\n       * @param {Array=} value\n       * @returns {Array} of cloned messages\n       *\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _cloneMessagesBeforeSet: function (value) {\n        var i;\n        var msg;\n        var msgsClone = [];\n        var val;\n\n        // we want all messages to be an instance of Message. So clone array\n        if (value && value.length > 0) {\n          for (i = 0; i < value.length; i++) {\n            val = value[i];\n            msg = new Message(val.summary, val.detail, val.severity);\n            msg = Object.freeze ? Object.freeze(msg) : msg;\n            msgsClone.push(msg);\n          }\n        }\n\n        return msgsClone;\n      },\n\n      /**\n       * Create the ojLabel component with help (required is done in the components that support\n       * required) see EditableValueUtils._refreshRequired.\n       * This is not supported for custom elements. For pages with custom elements, the app dev\n       * uses the public &lt;oj-label> component.\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       *\n       */\n      _createOjLabel: function () {\n        var helpDef;\n        var helpSource;\n\n        if (this._IsCustomElement()) {\n          return;\n        }\n\n        this.$label = this._GetLabelElement();\n        if (this.$label) {\n          helpDef = this.options.help.definition;\n          helpSource = this.options.help.source;\n\n          // create the ojLabel component\n          this.$label.ojLabel({\n            rootAttributes: { class: this._GetDefaultStyleClass() + '-label' },\n            help: { definition: helpDef, source: helpSource }\n          });\n          this._createDescribedByForLabel();\n        }\n      },\n      /**\n       * Refreshes the aria-describedby for label element's helpIcon\n       * @protected\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _createDescribedByForLabel: function () {\n        var helpDef = this.options.help.definition;\n        var helpSource = this.options.help.source;\n        var labelId;\n\n        if (helpSource != null || helpDef != null) {\n          var label = this.$label[0];\n\n          // get label's helpIconSpan get the id and add it here.\n          if (label) {\n            labelId = label.id;\n          }\n\n          if (labelId) {\n            this._describedByUpdated(null, labelId + _HELP_ICON_ID);\n          }\n        }\n      },\n\n      /**\n       * Refreshes the component to respond to DOM changes, in which case fullRefresh=true.\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _doRefresh: function () {\n        var runFullValidation = false;\n        var displayValue;\n\n        // reset state and re-initialize component messaging, since refresh() can be called when\n        // locale changes, requiring component to show messaging artifactsthis._ for current locale.\n        this._ResetComponentState();\n        this._initComponentMessaging();\n        this._Refresh('disabled', this.options.disabled);\n\n        // runFullValidation, if needed, does a full validation\n        // which in turn updates value option and converted display value\n        if (this._hasInvalidMessagesShowing()) {\n          runFullValidation = true;\n        }\n\n        this._clearComponentMessages();\n\n        if (runFullValidation) {\n          // this may return a Promise\n          displayValue = this._GetDisplayValue();\n          // runs full validation on the display value. May be async\n          this._SetValue(displayValue, null, EditableValueUtils.refreshMethodOptions);\n        } else {\n          // run deferred validation if comp is either showing a deferred error or has no errors.\n          // But only when required is true.\n          if (this._IsRequired()) {\n            this._runDeferredValidation(EditableValueUtils.refreshMethodOptions.validationContext);\n          }\n          // refresh UI display value when there are no errors or where there are only deferred errors\n          this._Refresh('value', this.options.value, true);\n        }\n      },\n\n      /**\n       * Gets the last stored model value\n       *\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _getLastModelValue: function () {\n        return this._oj_lastModelValue;\n      },\n\n      /**\n       * Gets the last display value\n       *\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _getLastDisplayValue: function () {\n        // initially, _oj_lastElementValue is undefined. But the browser returns \"\" for the\n        // displayValue.\n        if (this._oj_lastElementValue === undefined) {\n          this._oj_lastElementValue = '';\n        }\n        return this._oj_lastElementValue;\n      },\n      /**\n       * Get the element whose id matches the elem's aria-labelledby value, if any.\n       * @param {Object} elem the dom element from which you want to get the\n       * aria-labelledby property value\n       * @return {jQuery|null} if element does not have aria-labelledby defined, then\n       *    returns null. If it  does, then return a new jQuery object with the\n       *    label with an id equal to the aria-labelledby value. If no match, then\n       *    the jQuery object will be empty.\n       *\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _getAriaLabelledByElement: function (elem) {\n        // this is the widget way of doing things, so return if custom element.\n        if (this._IsCustomElement()) {\n          return null;\n        }\n        // look for a label with an id equal to the value of aria-labelledby.\n        // .prop does not work for aria-labelledby. Need to use .attr to find\n        // aria-labelledby.\n        var ariaId = elem[0].getAttribute('aria-labelledby');\n        var labelQuery;\n\n        if (ariaId !== undefined) {\n          labelQuery = \"label[id='\" + ariaId + \"']\";\n          return $(labelQuery);\n        }\n        return null;\n      },\n\n      /**\n       * Returns a concat of messagesShown and messagesHidden.\n       *\n       * @returns {Array}\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _getMessages: function () {\n        var messages = [];\n        // messagesShown and messagesHidden could be undefined\n        if (this.options.messagesShown) {\n          messages = messages.concat(this.options.messagesShown);\n        }\n        if (this.options.messagesHidden) {\n          messages = messages.concat(this.options.messagesHidden);\n        }\n        return messages; // todo: revisit\n      },\n      /**\n       * Helper method to retrieve the label text. Needed for required translation.\n       * Returns the form component's label or oj-label's textContent, if the label was found.\n       *\n       * @return {string|null}\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _getLabelText: function () {\n        if (this.$label) {\n          return this.$label[0].textContent;\n        }\n\n        var ojlabels = EditableValueUtils._getCustomOjLabelElements(this.options.labelledBy);\n        var labelTextContent = null;\n        if (ojlabels) {\n          for (var i = 0; i < ojlabels.length; i++) {\n            if (i > 0) {\n              labelTextContent += ' ';\n            }\n            var ojlabel = ojlabels[i];\n            labelTextContent = ojlabel.textContent;\n          }\n        }\n        return labelTextContent;\n      },\n\n      /**\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _getValidityState: function () {\n        if (this._validityState) {\n          return this._validityState;\n        }\n\n        this._validityState = new oj.ComponentValidity(this.isValid(), this._getMessages());\n\n        return this._validityState;\n      },\n\n      /**\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _hasValidityState: function () {\n        if (this._validityState) {\n          return true;\n        }\n        return false;\n      },\n\n      /**\n       * Whether component has invalid messages.\n       *\n       * @return {boolean} true if invalid; false otherwise\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _hasInvalidMessages: function () {\n        return !Message.isValid(this._getMessages());\n      },\n\n      /**\n       * Whether there are invalid messages, that are currently showing.\n       *\n       * @return {boolean}\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _hasInvalidMessagesShowing: function () {\n        return !this.isValid() && this.options.messagesShown.length > 0;\n      },\n\n      /**\n       * Whether component has invalid messages added by component, that are currently showing.\n       *\n       * @return {boolean}\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _hasInvalidComponentMessagesShowing: function () {\n        var compMsgs;\n        var msg;\n        var shown = this.options.messagesShown;\n\n        for (var i = 0; i < shown.length; i++) {\n          msg = shown[i];\n          if (msg instanceof Message.ComponentMessage && msg._isMessageAddedByComponent()) {\n            compMsgs = compMsgs || [];\n            compMsgs.push(msg);\n          }\n        }\n\n        return compMsgs === undefined ? false : !Message.isValid(compMsgs);\n      },\n\n      /**\n       * Initializes component messaging both when component is initialized or when displayOptions is\n       * set/changed. Call this only when you know the converter has resolved.\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _initComponentMessaging: function () {\n        var compMessaging = this._getComponentMessaging();\n        var messagingLauncher = this._GetMessagingLauncherElement();\n        var compContentElement = this._GetContentElement();\n        var messagingContent = this._getMessagingContent(this._MESSAGING_CONTENT_UPDATE_TYPE.INIT);\n\n        // if default placeholder is currently set then it needs to be cleared here. This is needed for\n        // the following reasons\n        // i. a component is reinitialized when the locale changed, requiring the converter hint for\n        // new locale to be set as placeholder.\n        // ii. or a component's placeholder option or displayOptions option, could have changed\n        // requiring the placeholder to be reset if it's currently set to the default.\n        if (!this._customPlaceholderSet) {\n          this._ClearPlaceholder();\n        }\n\n        // this sets all messaging content other than messaging content not needed until the user\n        // does something to see them. e.g, validator hints are shown until focus on the field.\n        // we do this to help initial render performance.\n        compMessaging.activate(messagingLauncher, compContentElement, messagingContent);\n\n        // Async validators hints are retrieved only when they are needed to be shown to the user.\n        // See PopupComponentMessaging.js\n        // initialize this counter when we initialize the component.\n        // It is used to decide whether or not to ignore async validate resolutions.\n        this._asyncValidatorValidateCounter = 0;\n      },\n\n      /**\n       * Called after messagesCustom option changed. This method pushes custom messages to the\n       * messagesShown option.\n       *\n       * @param {Object} flags\n       * @returns {undefined}\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _messagesCustomOptionChanged: function (flags) {\n        var context = flags ? flags._context : null;\n        var customMsgs = this.options.messagesCustom;\n        var i;\n        var msg;\n        var previousShown = this.options.messagesShown;\n        var shownMsgs = [];\n\n        // remove old custom messages from messagesShown array\n        for (i = 0; i < previousShown.length; i++) {\n          msg = previousShown[i];\n          if (msg instanceof Message.ComponentMessage && msg._isMessageAddedByComponent()) {\n            shownMsgs.push(msg);\n          }\n        }\n\n        // add new customMsgs to messagesShown\n        for (i = 0; i < customMsgs.length; i++) {\n          shownMsgs.push(customMsgs[i]);\n        }\n\n        // set 'messagesShown' option as an internal set\n        this._setMessagesOption(\n          'messagesShown',\n          shownMsgs,\n          context ? context.originalEvent : null,\n          flags && flags.changed\n        );\n      },\n      /**\n       * This is only needed when we use the\n       * deprecated display-options.converter-hint=['placeholder','notewindow'] api that is used\n       * in the Alta theme and not the Redwood theme.\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _placeholderOptionChanged: function (flags) {\n        if (this._getResolvedUserAssistance() !== 'displayOptions') {\n          return;\n        }\n        var context = (flags && flags._context) || {};\n        var refreshMessagingOptions =\n          //  internalMessagingSet indicates whether the current change is from the messaging module.\n          // see ComponentMessaging for details\n          !context.internalMessagingSet;\n        if (refreshMessagingOptions) {\n          // if placeholder was set and it's not from messaging code, then the messaging display options\n          // may need to re-evaluated. E.g., the default display for\n          // converterHint: ['placeholder', 'notewindow'] is 'placeholder', but if user were to set a\n          // custom placeholder, this changes the default display for convererHint from 'placeholder'\n          // to 'notewindow'.\n          this._customPlaceholderSet = true;\n          if (this._GetConverter()) {\n            this._initComponentMessaging();\n          }\n        } else {\n          this._customPlaceholderSet = false;\n        }\n      },\n      /**\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _setLastModelValue: function (value) {\n        this._oj_lastModelValue = value;\n      },\n      /**\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _setLastDisplayValue: function (value) {\n        this._oj_lastElementValue = value;\n      },\n\n      /**\n       * Adds messages to the option specified - <code class=\"prettyprint\">messagesShown</code> or\n       * <code class=\"prettyprint\">messagesHidden</code>.\n       *\n       * @param {String} option name of the option\n       * @param {Object|Array} newMsgs an Array of one or more Message object.\n       * @param {Event=} event - the event like the user blurred to trigger a messages option change\n       * or undefined.\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _updateMessagesOption: function (option, newMsgs, event) {\n        var i;\n        var len;\n        var msgs;\n\n        if (typeof newMsgs === 'object' && Array.isArray(newMsgs)) {\n          // update this.options[option] directly by pushing any new messages into it.\n          msgs = this.options[option];\n\n          len = newMsgs.length;\n          for (i = 0; i < len; i++) {\n            msgs.push(newMsgs[i]);\n          }\n        }\n        // Setting 'changed' flag to true means that although we have already\n        // updated this.options[option], we still want to fire a property changed event.\n        this._setMessagesOption(option, msgs, event, true);\n      },\n\n      /**\n       * Called after the messages* option (messagesShown, etc)\n       * has changed to update messaging content\n       * display.\n       *\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _updateMessagingContent: function () {\n        // update component messaging\n        this._getComponentMessaging().update(\n          this._getMessagingContent(this._MESSAGING_CONTENT_UPDATE_TYPE.VALIDITY_STATE)\n        );\n      },\n\n      /**\n       * Writes the value into the option by calling the option method.\n       *\n       * @param {Object|string} newValue the new value to be written to option\n       * @param {Object=} event the original event that triggered this\n       * @param {number=} validationContext the context in which validation was run that resulted in\n       * value being updated.\n       * @param {Object=} updateContext the context for updating the value option.\n       * @param {Object=} options options for updating the value.\n       *\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       * @see #_setOption\n       * @see #_AfterSetOptionValue\n       */\n      _updateValueOption: function (newValue, event, validationContext, updateContext, options) {\n        var context = updateContext || {};\n\n        // set dom event\n        if (event) {\n          context.originalEvent = event;\n        }\n\n        // set writeback flag that determines whether value is written back.\n        switch (validationContext) {\n          // value is written back outside of normal UI interaction in the following cases.\n          case this._VALIDATION_CONTEXT.CONVERTER_OPTION_CHANGE:\n          case this._VALIDATION_CONTEXT.DISABLED_OPTION_CHANGE:\n          case this._VALIDATION_CONTEXT.READONLY_OPTION_CHANGE:\n          case this._VALIDATION_CONTEXT.REFRESH_METHOD:\n          case this._VALIDATION_CONTEXT.REQUIRED_OPTION_CHANGE:\n          case this._VALIDATION_CONTEXT.VALIDATE_METHOD:\n          case this._VALIDATION_CONTEXT.VALIDATORS_OPTION_CHANGE:\n            context.writeback = true;\n\n            // when the above options change or methods are called, and full validation is run the\n            // current display value is parsed, and set on the value option if all validations pass.\n            // Typically when the value option changes - either programmatically or user changes it, we\n            // end up clearing all 3 messages options.\n            // But when value changes indirectly as a result of the above cases, then we do not clear\n            // custom messages. So a special flag is set so _AfterSetOptionValue can do the right\n            // thing. Component messages are already cleared when this method is called.\n            context.doNotClearMessages = true;\n            break;\n\n          default:\n            break;\n        }\n\n        context.internalSet = true;\n\n        var valueMap;\n        var isValueChanged;\n        if (options && options.targetOptions) {\n          // If targetOptions is specified, update all options in the array\n          valueMap = {};\n          isValueChanged = false;\n          for (var i = 0; i < options.targetOptions.length; i++) {\n            valueMap[options.targetOptions[i]] = newValue;\n            isValueChanged = isValueChanged || options.targetOptions[i] === 'value';\n          }\n        } else {\n          // If no targetOptions is specified, just update the \"value\" option\n          valueMap = { value: newValue };\n          isValueChanged = true;\n        }\n        this.option(valueMap, { _context: context });\n\n        if (isValueChanged) {\n          // When internalSet is true _setOption->_AfterSetOptionValue->_Refresh isn't called.\n          // We still need the converter to run and the displayValue to be refreshed, so we\n          // call this._AfterSetOptionValue ourselves\n          this._AfterSetOptionValue('value', { _context: context });\n        }\n      },\n\n      /**\n       * Resets the internal property so that the next call to this.isValid() re-evaluates the correct\n       * value.\n       *\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _resetValid: function () {\n        this._valid = undefined;\n      },\n\n      /**\n       * Determines the validity of component based on current value of the messages* options.\n       * This is what the 'valid' property should be set to.\n       *\n       * Now when we start the lifecycle we clearAllMessages, then we continue with validation, etc.\n       * But we don't want to update the valid property on clearAllMessages and again when validation\n       * has failed. We want to update it only once.\n       * @return {string} \"valid\", \"invalidShown\", \"invalidHidden\"\n       *\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _determineValidFromMessagesOptions: function () {\n        var msgsHidden = this.options.messagesHidden;\n        var msgsShown = this.options.messagesShown;\n\n        var valid = _VALID;\n\n        // When new messages are written update the valid property\n        if (msgsShown && msgsShown.length !== 0 && !Message.isValid(msgsShown)) {\n          valid = _INVALID_SHOWN;\n        } else if (msgsHidden && msgsHidden.length !== 0 && !Message.isValid(msgsHidden)) {\n          valid = _INVALID_HIDDEN;\n        }\n\n        return valid;\n      },\n\n      /**\n       * Formats the value for display, based on the converter options. If no converter is set then\n       * returns the value as is.\n       *\n       * @param {string} value value to be formatted\n       *\n       * @return {string} formatted value\n       * @throws {Error} when an error occurs during formatting\n       * @protected\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _formatValue: function (value) {\n        var formattedValue = value;\n        var converter = this._GetConverter();\n\n        // don't clear messages here because we clear messages only when direct user interaction with\n        // component changes value. All other usecases we expect page authors to clear messages.\n\n        if (converter) {\n          // Check if we have a converter instance\n          if (typeof converter === 'object') {\n            if (converter.format && typeof converter.format === 'function') {\n              formattedValue = converter.format(value);\n            }\n          }\n        }\n\n        return formattedValue;\n      },\n\n      /**\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _getComponentMessaging: function () {\n        if (!this._componentMessaging) {\n          this._componentMessaging = new oj.ComponentMessaging(this);\n        }\n\n        return this._componentMessaging;\n      },\n\n      /**\n       * Returns an array of validator hints from any validator with getHint() function.\n       * @param {Array} allValidators these are from the validators option\n       * and from the GetImplicitValidators function.\n       * These can be sync validators only since async validators api does not have getHint(),\n       * it has .hint property.\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _getHintsFromAllValidatorsWithGetHintFunction: function (allValidators) {\n        var i;\n        var validator;\n        var validatorHints = [];\n        var vHint = '';\n\n        if (this._IsRequired()) {\n          // get the hint for the default required validator and push into array if it's not already\n          // present in the validators array\n          validator = this._getImplicitRequiredValidator();\n          if (validator.getHint && typeof validator.getHint === 'function') {\n            vHint = validator.getHint();\n            if (vHint) {\n              validatorHints.push(vHint);\n            }\n          }\n        }\n\n        // loop through all remaining validators to gather hints.\n        // this will get sync validators only since sync validators have getHint() api\n        // and async validators have .hint property.\n        for (i = 0; i < allValidators.length; i++) {\n          validator = allValidators[i];\n          vHint = '';\n          if (typeof validator === 'object') {\n            if (validator.getHint && typeof validator.getHint === 'function') {\n              vHint = validator.getHint();\n              if (vHint) {\n                validatorHints.push(vHint);\n              }\n            }\n          }\n        }\n\n        return validatorHints;\n      },\n\n      /**\n       * Returns the required validator instance or creates it if needed and caches it.\n       *\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _getImplicitRequiredValidator: function () {\n        var reqTrans = {};\n        var reqValOptions;\n\n        if (this._implicitReqValidator == null) {\n          // falsey check\n          reqTrans = this.options.translations ? this.options.translations.required || {} : {};\n\n          // TODO: cache required validator; purged when its options change, i.e., translations or label\n          // DOM changes\n          reqValOptions = {\n            hint: reqTrans.hint || null,\n            label: this._getLabelText(),\n            messageSummary: reqTrans.messageSummary || null,\n            messageDetail: reqTrans.messageDetail || null\n          };\n          this._implicitReqValidator = new RequiredValidator(reqValOptions);\n        }\n        return this._implicitReqValidator;\n      },\n\n      /**\n       * In the Alta theme, we want to continue to use the display-options properties to decide\n       * where to render help-instruction, messages, validation-hint, etc. For example, if\n       * display-options.messages = 'notewindow' then the messages will show up in a popup on focus.\n       *\n       * In the Redwood theme, we instead use the user-assistance attribute set on the component\n       * to decide whether to show the user assistance (this includes Required)\n       * inline or in compact mode which is where the user assistance is shown via a popup,\n       * like in the ? icon on the label or a (x) icon in the field.\n       * We need a way to say 'use' the user-assistance-density attribute or 'ignore'\n       * the user-assistance-density attribute and instead use the 'old' way\n       * of doing things based on the theme.\n       * And if you are 'using' the user-assistance-density attribute what is it,\n       * reflow or efficient or compact?\n       * @return {'reflow'|'efficient'|'compact'|'displayOptions'} If 'displayOptions' it uses\n       * the 'old' way of doing things which is to look at all the displayOptions for where to display\n       * things. If 'efficient' or 'reflow' it renders all the user assistance inline,\n       * and if compact it renders everything in the 'compact' ux design which is in notewindows.\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _getResolvedUserAssistance: function () {\n        // ThemeUtils caches the result so no need to do it here.\n        let defaultOptions = ojthemeutils.parseJSONFromFontFamily('oj-form-control-option-defaults');\n\n        // this will return 'use' or 'ignore'. This tells us whether we should use the\n        // user-assistance-density attribute or ignore it. If we ignore it, we will\n        // use the displayOptions attribute.\n        if (defaultOptions) {\n          let useUserAssistanceOption = defaultOptions.useUserAssistanceOptionDefault;\n          return useUserAssistanceOption === 'use'\n            ? this.options.userAssistanceDensity\n            : 'displayOptions';\n        }\n        // if no theme return displayOptions for bw compatibility.\n        return 'displayOptions';\n      },\n      /**\n       * In the Alta theme, we show required on the label with an * icon,\n       * and help on label with a ? icon.\n       * In the Redwood theme, we show 'Required'/help as text inline if\n       * user-assistance-density attribute is not 'compact',\n       * else we show it as an * on the icon.\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _showUserAssistanceNotInline: function () {\n        let resolvedUserAssistance = this._getResolvedUserAssistance();\n\n        return resolvedUserAssistance === 'compact' || resolvedUserAssistance === 'displayOptions';\n      },\n\n      /**\n       * Returns content that will be used by messaging strategies.\n       *\n       * @param {number} updateType of messaging content to update. Accepted values are defined by\n       * this._MESSAGING_CONTENT_UPDATE_TYPE.\n       *\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _getMessagingContent: function (updateType) {\n        var messagingContent = {};\n\n        var allValidators;\n        var converter;\n        var converterHint = '';\n\n        // eslint-disable-next-line no-param-reassign\n        updateType = updateType || this._MESSAGING_CONTENT_UPDATE_TYPE.VALIDITY_STATE;\n\n        // Add validityState which includes messages, valid and severity.\n        // These are shown to the user right away on initialization if they are there.\n        if (\n          updateType === this._MESSAGING_CONTENT_UPDATE_TYPE.INIT ||\n          updateType === this._MESSAGING_CONTENT_UPDATE_TYPE.VALIDITY_STATE\n        ) {\n          // get messages from messagesShown and messagesHidden\n          messagingContent.validityState = this._getMessagingContentValidityState();\n        }\n\n        if (\n          updateType === this._MESSAGING_CONTENT_UPDATE_TYPE.INIT ||\n          updateType === this._MESSAGING_CONTENT_UPDATE_TYPE.CONVERTER_HINT\n        ) {\n          converter = this._GetConverter();\n          if (converter) {\n            if (typeof converter === 'object') {\n              if (converter.getHint && typeof converter.getHint === 'function') {\n                converterHint = converter.getHint() || '';\n              }\n            }\n          }\n          messagingContent.converterHint = converterHint;\n        }\n\n        // Do not get validator hints on component initialization. Instead we get them\n        // when the user first needs them, like when they focus in the input.\n        // We do this to help initial render performance.\n        if (updateType === this._MESSAGING_CONTENT_UPDATE_TYPE.VALIDATOR_HINTS) {\n          // gets implicit validators and all validators from the validators option.\n          allValidators = this._GetAllValidatorsFromValidatorsOptionAndImplicit();\n          // sync validators have getHint() function.\n          // async validators do not; they have hint property.\n          // so this will get sync validators' hints\n          let syncValidatorHints =\n            this._getHintsFromAllValidatorsWithGetHintFunction(allValidators) || [];\n          messagingContent.validatorHint = syncValidatorHints;\n        }\n\n        if (\n          updateType === this._MESSAGING_CONTENT_UPDATE_TYPE.INIT ||\n          updateType === this._MESSAGING_CONTENT_UPDATE_TYPE.TITLE\n        ) {\n          // For custom element components, we use help.instruction option value for the\n          // messageContent title, otherwise, use the title option value.  help.instruction\n          // is used by custom element components, and title is used by non-custom element components.\n          var title;\n\n          if (this._IsCustomElement()) {\n            var help = this.options.help;\n\n            if (help != null) {\n              title = help.instruction;\n            }\n          } else {\n            title = this.options.title;\n          }\n\n          messagingContent.title = title || '';\n        }\n\n        return messagingContent;\n      },\n\n      /**\n       *\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _getMessagingContentValidityState: function () {\n        let validityState;\n        if (!this._hasValidityState()) {\n          // this will create the validity state.\n          validityState = this._getValidityState();\n        } else {\n          // update validityState before packaging it\n          validityState = this._getValidityState();\n          validityState.update(this.isValid(), this._getMessages());\n        }\n        return validityState;\n      },\n\n      /**\n       * Compares the messages arrays for equality.\n       *\n       * @param {Array} pm previous messages\n       * @param {Array} m new messages\n       * @returns {boolean} true if equal false otherwise\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       *\n       */\n      _messagesEquals: function (pm, m) {\n        var match = -1;\n        var pmo;\n        var passed = true;\n        // $.extend merges the contents of two or more objects together into the first object\n        var previousMsgs = $.extend([], pm);\n        var msgs = $.extend([], m);\n\n        if (previousMsgs.length !== msgs.length) {\n          return false;\n        }\n\n        // one way it gets here is if there is one messages-custom message on initialization and\n        // after the busyContext is complete meaning the page is rendered, we set a different\n        // messages-custom message.\n        previousMsgs.forEach(function (pMsg) {\n          if (!(pMsg instanceof Message)) {\n            // freeze message instance once its created\n            pmo = new Message(pMsg.summary, pMsg.detail, pMsg.severity);\n            pmo = Object.freeze ? Object.freeze(pmo) : pmo;\n          } else {\n            pmo = pMsg;\n          }\n\n          match = -1;\n          msgs.forEach(function (msg, j) {\n            if (\n              Message.getSeverityLevel(pmo.severity) === Message.getSeverityLevel(msg.severity) &&\n              pmo.summary === msg.summary &&\n              pmo.detail === msg.detail\n            ) {\n              match = j;\n              // found a match, so break out of loop\n            }\n          });\n\n          // remove entry at 'match' index from msgs\n          if (match > -1) {\n            msgs.splice(match, 1);\n          } else {\n            // we found no match so no need to loop\n            passed = false;\n          }\n        });\n\n        return passed;\n      },\n\n      /**\n       * Parses the value using the converter set and returns the parsed value. If parsing fails the\n       * error is written into the element. This function sets the valid state to PENDING before it tries\n       * to parse.\n       *\n       * @param {string=} submittedValue to parse\n       * @param {Object=} event an optional event if this was a result of ui interaction. For user\n       * initiated actions that trigger a DOM event, passing this event is required. E.g., if user action\n       * causes a 'blur' event.\n       * @param {boolean?} setValid true if you want to set the valid state to pending->invalid\n       * @return {Object} parsed value\n       * @throws {Error} an Object with message\n       * @protected\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _parseValue: function (submittedValue, event, setValid) {\n        var converter = this._GetConverter();\n        var parsedValue = submittedValue;\n\n        if (converter) {\n          if (typeof converter === 'object') {\n            if (converter.parse && typeof converter.parse === 'function') {\n              try {\n                // we are dealing with a converter instance\n                if (setValid) {\n                  this._setValidOption(_PENDING, event);\n                }\n                parsedValue = converter.parse(submittedValue);\n                // caller will set valid option, since usually we go on to call validators after\n                // converters and don't want to set pending->valid->pending again.\n              } catch (error) {\n                throw error;\n              }\n            }\n          }\n        }\n\n        return parsedValue;\n      },\n      /**\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _addValidationError: function (e, msgs) {\n        var detail;\n        var severity;\n        var ojmessage;\n        var summary;\n\n        if (e instanceof ojvalidationError.ConverterError || e instanceof ojvalidationError.ValidatorError) {\n          ojmessage = e.getMessage();\n\n          severity = ojmessage.severity || Message.SEVERITY_LEVEL.ERROR;\n          summary = ojmessage.summary || Translations.getTranslatedString('oj-message.error');\n          detail = ojmessage.detail || Translations.getTranslatedString('oj-converter.detail');\n        } else if (e.summary || e.detail) {\n          severity = Message.SEVERITY_LEVEL.ERROR;\n          summary = e.summary || Translations.getTranslatedString('oj-message.error');\n          detail = e.detail || Translations.getTranslatedString('oj-converter.detail');\n        } else {\n          // TODO: is this error message generic enough to use for both converter and validator errors?\n          severity = Message.SEVERITY_LEVEL.ERROR;\n          summary = Translations.getTranslatedString('oj-message.error');\n          detail = e.message || Translations.getTranslatedString('oj-converter.detail');\n        }\n\n        msgs.push({ summary: summary, detail: detail, severity: severity });\n      },\n\n      /**\n       * Processes the error information for one or more errors and returns an Array of\n       * ComponentMessage instances.\n       *\n       * @param {Error} e instance of Error\n       * @param {number=} context the context in which the validation error was thrown\n       * @param {String=} display whether message is shown or hidden\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _processValidationErrors: function (e, context, display) {\n        var componentMsgs = [];\n        var msg;\n        var msgs = e._messages || [];\n        var options = {};\n\n        options.context = context || 0;\n        options.display = display || Message.ComponentMessage.DISPLAY.SHOWN;\n\n        if (msgs.length === 0) {\n          this._addValidationError(e, msgs);\n        }\n\n        for (var i = 0; i < msgs.length; i++) {\n          msg = msgs[i];\n          componentMsgs.push(\n            this._createComponentMessage(msg.summary, msg.detail, msg.severity, options)\n          );\n        }\n\n        return componentMsgs || null;\n      },\n      /**\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _createComponentMessage: function (summary, detail, severity, options) {\n        var cMsg;\n        // new properties can't be added but existing properties can be changed\n        cMsg = new Message.ComponentMessage(summary, detail, severity, options);\n        cMsg = Object.seal ? Object.seal(cMsg) : cMsg;\n        return cMsg;\n      },\n\n      /**\n       * Formats and refreshes the component display value,\n       * only when the current value is different from the last\n       * saved value, unless asked to always refresh the display value.\n       *\n       * @param {Object|undefined} value the changed value that needs to be updated on UI\n       * @param {boolean=} fullRefresh false is the default; true means always refresh component\n       * display value using the current option value. This overwrites any UI value, the user may have\n       * entered.\n       *\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _refreshComponentDisplayValue: function (value, fullRefresh) {\n        var displayValueReturn;\n\n        // when we change the display value via value change we want to\n        // update the 'oj-has-no-value' class.\n        this._toggleOjHasNoValueClass(value);\n\n        // We set the last model value after the format, so this is saying,\n        // has the value about to be formatted different than the one we last formatted?\n        if (fullRefresh || value !== this._getLastModelValue()) {\n          // this formats the value and displays it.\n          displayValueReturn = this._UpdateElementDisplayValue(value);\n        }\n        return displayValueReturn;\n      },\n\n      /**\n       * Toggles css selector on the widget. E.g., when required option changes, the oj-required\n       * selector needs to be toggled.\n       * @param {string} option\n       * @param {Object|string} value\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _refreshTheming: function (option, value) {\n        if (Object.keys(this._OPTION_TO_CSS_MAPPING).indexOf(option) !== -1) {\n          if (value) {\n            this.widget()[0].classList.add(this._OPTION_TO_CSS_MAPPING[option]);\n          } else {\n            this.widget()[0].classList.remove(this._OPTION_TO_CSS_MAPPING[option]);\n          }\n        }\n      },\n\n      /**\n       * Runs validators in deferred mode using the option value. Any validation error thrown is\n       * deferred, or hidden by component, until explicitly asked to show them (see showMessages()).\n       * Deferred error is pushed to <code class=\"prettyprint\">messagesHidden</code> option.\n       *\n       * @param {number} context in which validation was run.\n       * @see #showMessages\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _runDeferredValidation: function (context) {\n        var self = this;\n\n        if (this._CanSetValue()) {\n          if (!this._resolveBusyStateDeferredValidation) {\n            var domElem = this.element[0];\n            var busyContext = Context.getContext(domElem).getBusyContext();\n            var description = 'The page is waiting for async deferred validation ';\n\n            if (domElem && domElem.id) {\n              description += 'for \"' + domElem.id + '\" ';\n            }\n            description += 'to finish.';\n            this._resolveBusyStateDeferredValidation = busyContext.addBusyState({\n              description: description\n            });\n          }\n          var resultPromise = this._validateValueForRequiredOnly(this.options.value, context);\n          if (resultPromise instanceof Promise) {\n            resultPromise.then(function () {\n              if (self._resolveBusyStateDeferredValidation) {\n                self._resolveBusyStateDeferredValidation();\n                delete self._resolveBusyStateDeferredValidation;\n              }\n              self._setValidOption(self._determineValidFromMessagesOptions(), null);\n            });\n          } else {\n            this._setValidOption(this._determineValidFromMessagesOptions(), null);\n            if (this._resolveBusyStateDeferredValidation) {\n              this._resolveBusyStateDeferredValidation();\n              delete this._resolveBusyStateDeferredValidation;\n            }\n            return;\n          }\n        }\n        this._setValidOption(this._determineValidFromMessagesOptions(), null);\n      },\n\n      /**\n       * Runs either deferred or normal validation based on the state component is in. This method is\n       * called when certain options change - required, disabled etc.\n       *\n       * <p>\n       * - if component is invalid and has messgesShown -> required: false/true -> clear component errors;\n       * run full validation with UI value (we don't know if the UI error is from a required validator\n       * or something else);<br/>\n       * &nbsp;&nbsp;- if there are validation errors, then value not pushed to model; messagesShown is\n       * updated<br/>\n       * &nbsp;&nbsp;- if no errors result from the validation, push value to model; author needs to\n       * listen to valueChanged to clear custom errors.<br/>\n       *\n       * - if component is invalid and has messagesHidden -> required: false -> clear component\n       * errors; no deferred validation is run.<br/>\n       * - if component has no error -> required: true -> run deferred validation (we don't want to flag\n       * errors unnecessarily)<br/>\n       * - messagesCustom is never cleared<br/>\n       * </p>\n       *\n       * @param {Object} validationOptions\n       *\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _runMixedValidationAfterSetOption: function (validationOptions) {\n        var runFullValidation = false;\n        var displayValue;\n\n        // runFullValidation, if needed, does a full validation\n        // which in turn updates value option and converted display value\n\n        if (this._hasInvalidMessagesShowing()) {\n          runFullValidation = true;\n        }\n\n        this._clearComponentMessages();\n\n        if (runFullValidation) {\n          // this may return a Promise\n          displayValue = this._GetDisplayValue();\n          // runs full validation on the display value. May be async\n          this._SetValue(displayValue, null, validationOptions);\n        }\n\n        if (!runFullValidation && this._IsRequired()) {\n          // run deferred validation if we didn't run full validation\n          // (e.g., comp is either showing a deferred error or has no errors.)\n          // But only when required is true do\n          // we update the valid option within _runDeferredValidation\n          this._runDeferredValidation(validationOptions.validationContext);\n        } else {\n          this._setValidOption(this._determineValidFromMessagesOptions(), null);\n        }\n      },\n\n      /**\n       * Formats the modelValue and updates the display value.\n       * @param modelValue\n       * @param ignoreAfterError boolean defaults to false.\n       * If true, do not do anything after format error, like\n       * do not show messages, do not change valid state.\n       * @return {undefined|string} if formatting threw an error, return undefined.\n       * if formatting was successful and no other errors occur, return formatted\n       * value.\n       * @throw {Error} converter.format error if the converter is synchronous.\n       * @protected\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _UpdateElementDisplayValue: function (modelValue, ignoreAfterError) {\n        var displayValue;\n        var parsedReturnValue;\n\n        displayValue = modelValue;\n\n        try {\n          // returns the converter formatted value, and if there is no converter, it returns\n          // the value as is.\n          displayValue = this._formatValue(modelValue);\n          // synchronous converter's format succeeded or no converter\n          try {\n            this._setLastModelValue(modelValue);\n            this._afterConverterFormat(displayValue);\n          } catch (e) {\n            // rethrow error in case _SetDisplayValue() threw an error. See ojcheckboxset,\n            // it throws error if it isn't an array or if it is null.\n            throw e;\n          }\n          parsedReturnValue = displayValue;\n        } catch (e) {\n          if (!ignoreAfterError) {\n            this._afterConverterFormatFailure(e);\n          }\n          this._setLastModelValue(modelValue);\n          // displayValue is modelValue if we get here.\n          this._afterConverterFormat(displayValue);\n          parsedReturnValue = undefined;\n        }\n        return parsedReturnValue;\n      },\n\n      /**\n       * This gets called while the converter module is loading asynchronously\n       * @protected\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _SetLoading: function () {\n        var widgetElem = this.widget()[0];\n        var focusElem = this.GetFocusElement();\n        widgetElem.classList.add('oj-loading');\n        this._saveAriaLabel = focusElem.getAttribute('aria-label');\n        var loadingText = Translations.getTranslatedString('oj-ojEditableValue.loading');\n        focusElem.setAttribute('aria-label', loadingText);\n      },\n\n      /**\n       * This gets called when the converter was loading asynchronously\n       * and now it is loaded.\n       * @protected\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _ClearLoading: function () {\n        var widgetElem = this.widget()[0];\n        var focusElem = this.GetFocusElement();\n        widgetElem.classList.remove('oj-loading');\n        if (this._saveAriaLabel) {\n          focusElem.setAttribute('aria-label', this._saveAriaLabel);\n        } else {\n          focusElem.removeAttribute('aria-label');\n        }\n      },\n\n      /**\n       * @ignore\n       * @protected\n       * @memberof oj.editableValue\n       * @return {boolean}\n       */\n      _UseReadonlyDiv: function () {\n        // ThemeUtils caches the result so no need to do it here.\n        let defaultOptions = ojthemeutils.parseJSONFromFontFamily('oj-form-control-option-defaults');\n        return defaultOptions.readonlyElem === 'div';\n      },\n\n      /**\n       * This is called from InlineHelpHintsStrategy to determine if the\n       * component should show help hints on focus or always. Set\n       * components show it always.\n       * @ignore\n       * @protected\n       * @memberof oj.editableValue\n       * @return {'focus'|'always'}\n       */\n      _ShowHelpHints: function () {\n        return this._IsTextFieldComponent() ? 'focus' : 'always';\n      },\n      /**\n       * This is called from InlineHelpHintsStrategy to determine\n       * the location of the inline help hints, above the component\n       * or below inline.\n       * @ignore\n       * @protected\n       * @memberof oj.editableValue\n       * @return {'above'|'inline'}\n       */\n      _ShowHelpHintsLocation: function () {\n        return 'inline';\n      },\n\n      /**\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _afterConverterFormat: function (displayValue) {\n        var actualDisplayValue;\n\n        this._SetDisplayValue(displayValue);\n        // getting the display value right after we set it is probably not necessary,  but just in\n        // case a subclass did something to it, we do.\n        actualDisplayValue = this._GetDisplayValue();\n        this._setLastDisplayValue(actualDisplayValue);\n        // update rawValue option to keep it in sync with the display value\n        this._SetRawValue(actualDisplayValue, null);\n      },\n\n      /**\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _afterConverterFormatFailure: function (e) {\n        var newMsgs;\n\n        // Turn this into Array of ComponentMessage instances.\n        // This is what we set on 'messagesShown'\n        newMsgs = this._processValidationErrors(e);\n        this._updateMessagesOption('messagesShown', newMsgs);\n        // update valid option to INVALID_SHOWN\n        this._setValidOption(_INVALID_SHOWN, null);\n      },\n\n      /**\n       * When we are asynchronously loading a converter we show a loading indication\n       * and make the input (not the component) readonly.\n       * @param converterPromise {Promise<Converter>}\n       * @return {Promise<Object|null>} a Promise to a converter instance or null\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _loadingConverter: function (converterPromise) {\n        var self = this;\n        var showLoadingIndicatorDelay = EditableValueUtils._getShowLoadingDelay();\n        var converterCounter = this._converterChangedCounter;\n        var loadingTimeout = setTimeout(function () {\n          // _converterChangedCounter is incremented if we get a change of converter option.\n          if (converterCounter === self._converterChangedCounter) {\n            self._SetLoading();\n          }\n        }, showLoadingIndicatorDelay);\n\n        return converterPromise.then(function (ci) {\n          self._ClearLoading();\n          clearTimeout(loadingTimeout);\n          return ci;\n        });\n      },\n      /**\n       * @param {Object|undefined} value\n       * @param {number} context in which validation was run.\n       * @return {Promise<null> | null} a Promise to indicate validation has finished or null if sync\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _validateValueForRequiredOnly: function (value, context) {\n        var newMsgs;\n        var validator;\n        var self = this;\n\n        // run required validation if component is required\n        // SYNCHRONOUS OR ASYNCHRONOUS\n        if (this._IsRequired()) {\n          validator = this._getImplicitRequiredValidator();\n          try {\n            // check if trimmed value is empty. See AdfUIEditableValue.prototype.ValidateValue\n            this._setValidOption(_PENDING, null);\n            var validateReturned = validator.validate(oj.StringUtils.trim(value));\n            if (validateReturned instanceof Promise) {\n              return validateReturned.then(\n                function () {},\n                function (e) {\n                  newMsgs = self._processValidationErrors(\n                    e,\n                    context,\n                    Message.ComponentMessage.DISPLAY.HIDDEN\n                  );\n                  if (newMsgs) {\n                    self._updateMessagesOption('messagesHidden', newMsgs);\n                  }\n                }\n              );\n            }\n          } catch (e) {\n            // this is a messagesHidden message\n            // turn this into Array of ComponentMessage instances. This is what we set on 'messagesHidden'\n            newMsgs = this._processValidationErrors(\n              e,\n              context,\n              Message.ComponentMessage.DISPLAY.HIDDEN\n            );\n            if (newMsgs) {\n              this._updateMessagesOption('messagesHidden', newMsgs);\n            }\n          }\n        }\n        return null;\n      },\n\n      /**\n       * This is called from both _SetValue and when we need to re-validate due to\n       * property changes, like converters, required, etc.\n       * This validates the value by running through the list of all registered validators and\n       * async-validators. The algorithm is as follows -\n       * 1. if isRequired, run required validator.\n       * 2. get all the rest of the validators and validate in sequence.\n       * 3. get async-validators and kick them all off simultaneously, and show errors as we get them.\n       * 4. update valid state immediately if it turns for the worse.\n       * 5. will ignore validation results if we get a new call to this method with a different value\n       *  before we get back the async validate results from a previous value.\n       * results.\n       *\n       * Callers can rely on the 'valid' options property to determine the validity state of the\n       * component after calling this method\n       *\n       * @param {Object|string} value to be validated\n       * @param {Event?} event the original event (for user initiated actions that trigger a DOM event,\n       * like blur) or undefined. The custom element bridge creates a CustomEvent out of this when\n       * it sends the property changed event.\n       * @param {number=} context determines when validation is being run. Used when creating Messages\n       * @return {Promise|Object|string|undefined}\n       * Promise resolves to 'valid' if all validators pass. Resolves to 'invalidShown'\n       * if any validator fails. Resolves to 'ignoreValidation' if we are to ignore validation results.\n       * If no async validators are on the component, it returns the value we validated if\n       * validation passed or undefined if validation failed.\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _asyncValidateValue: function (value, event, context) {\n        // we get validators from async-validators option. This is not cached, but\n        // it is fast to get. TODO cache.\n        var normalizedAsyncValidators = this._GetNormalizedAsyncValidatorsFromOption();\n        // gets implicit validators and validators from validators option.\n        // these can be sync or async validators. This is cached.\n        var normalizedValidators = this._GetAllValidatorsFromValidatorsOptionAndImplicit();\n        var i;\n        var isInvalidShownSet = false;\n        var finalValidState;\n        var newMsgs;\n        var self = this;\n        var implicitRequiredValidator;\n        var valMsgs = [];\n\n        // this to be used to decide whether or not to ignore async validate resolutions.\n        // if we use the value to decide whether or not to ignore async validate resolutions, it\n        // would not work if the user types in an invalid value, then another value, then the\n        // invalid value again. He would see two identical error messages if the async validators\n        // are slow. We talked about using a queue, and decided a counter would work just as well.\n        var asyncValidatorValidateCounter = this._asyncValidatorValidateCounter;\n        var promiseArray = [];\n        // run required validator first, push to promiseArray if it is a Promise\n        var isRequired = this._IsRequired();\n        if (isRequired) {\n          implicitRequiredValidator = this._getImplicitRequiredValidator();\n        }\n        if (isRequired || normalizedAsyncValidators.length > 0 || normalizedValidators.length > 0) {\n          this._setValidOption(_PENDING, event);\n        }\n        if (implicitRequiredValidator) {\n          try {\n            var requiredValidatorPromise = implicitRequiredValidator.validate(\n              oj.StringUtils.trim(value)\n            );\n            if (requiredValidatorPromise) {\n              promiseArray.push(requiredValidatorPromise);\n            }\n          } catch (e) {\n            // save all validation errors\n            this._addValidationError(e, valMsgs);\n            this._setValidOption(_INVALID_SHOWN, event);\n            isInvalidShownSet = true;\n          }\n        }\n\n        var result;\n        for (i = 0; i < normalizedAsyncValidators.length; i++) {\n          try {\n            result = normalizedAsyncValidators[i].validate(value);\n          } catch (e) {\n            // async validators should not throw errors, they should just reject\n            // so we should treat this as a reject\n            result = Promise.reject(e);\n          }\n          if (!(result instanceof Promise)) {\n            result = Promise.resolve(result);\n          }\n          promiseArray.push(result);\n        }\n\n        // run through all validators on the validators option + implicit ones.\n        // could be sync or async\n        for (i = 0; i < normalizedValidators.length; i++) {\n          try {\n            result = normalizedValidators[i].validate(value);\n            if (result instanceof Promise) {\n              promiseArray.push(result);\n            }\n          } catch (e) {\n            // save all validation errors\n            this._addValidationError(e, valMsgs);\n            this._setValidOption(_INVALID_SHOWN, event);\n            isInvalidShownSet = true;\n          }\n        }\n\n        // show sync validator messages, if any\n        if (valMsgs.length > 0) {\n          let ve = new Error();\n          ve._messages = valMsgs;\n          newMsgs = this._processValidationErrors(ve, context);\n          // turn this into Array of ComponentMessage instances.\n          // This is what we set on 'messagesShown'\n          this._updateMessagesOption('messagesShown', newMsgs, event);\n        }\n\n        // when a promise resolves or errors out, we return an Object with the value or error state,\n        // and the status.\n        // We want to show error messages right away, as we get them.\n        // We also want to ignore any error messages or valid state changes if we get\n        // a new value to validate while the current async validate methods haven't returned yet.\n        // This could happen if we kick off a slow validator and the user types into the field\n        // and blurs to cause a new _SetValue->validation before this one returns.\n        function reflect(promise) {\n          return promise.then(\n            function (v) {\n              var status;\n\n              // Ignore validate Promise results if it is for a value that isn't the most current value\n              // we are validating. The only con is if they are in the process of typing in the field,\n              // errors might show up for value when they last pressed Enter|Blur.\n              // We decided this is fine, and we will show the value in the error message in our demos\n              // so the user won't get confused, and we'll doc that this is what the app dev should do.\n              if (self._asyncValidatorValidateCounter === asyncValidatorValidateCounter) {\n                status = 'resolved';\n              } else {\n                status = 'ignore';\n              }\n              return { v: v, status: status };\n            },\n            function (e) {\n              var status;\n              if (self._asyncValidatorValidateCounter === asyncValidatorValidateCounter) {\n                // turn this into Array of ComponentMessage instances.\n                // This is what we set on 'messagesShown'\n                newMsgs = self._processValidationErrors(e, context);\n                self._updateMessagesOption('messagesShown', newMsgs, event);\n                if (!isInvalidShownSet) {\n                  self._setValidOption(_INVALID_SHOWN, event);\n                  isInvalidShownSet = true;\n                }\n                status = 'rejected';\n              } else {\n                status = 'ignore';\n              }\n              return { e: e, status: status };\n            }\n          );\n        }\n\n        if (promiseArray.length > 0) {\n          return new Promise(function (resolve) {\n            // Promise.all will end as soon as it gets its first rejection. We don't want that.\n            // We want to wait until all promises either resolve or reject. Then we can resolve this\n            // outer promise. We do this using the reflect function defined above.\n            Promise.all(promiseArray.map(reflect)).then(function (results) {\n              var ignoreList = results.filter(function (x) {\n                return x.status === 'ignore';\n              });\n              if (ignoreList.length > 0) {\n                finalValidState = 'ignoreValidation';\n              } else {\n                finalValidState = !isInvalidShownSet ? _VALID : _INVALID_SHOWN;\n                // we could be showing messages, like 'messagesCustom'. If so, valid is invalidShown,\n                // even if all validators passed.\n                self._setValidOption(self._determineValidFromMessagesOptions(), event);\n              }\n              resolve(finalValidState);\n            });\n          });\n        }\n\n        // only sync validators were found\n        if (valMsgs.length === 0) {\n          // we could be showing messages, like 'messagesCustom'. If so, valid is invalidShown,\n          // even if all validators passed.\n          this._setValidOption(self._determineValidFromMessagesOptions(), event);\n        }\n        // if no error messages returned from validating the value, return newValue\n        return valMsgs.length === 0 ? value : undefined;\n      },\n\n      /**\n       * This is called when we have a labelledBy attribute during component initialization\n       * or the attribute updates.\n       *\n       * @param {string} labelledBy The labelledBy attribute value. Can be a space delimited value.\n       * @private\n       * @memberof oj.editableValue\n       * @instance\n       */\n      _labelledByUpdated: function (labelledBy) {\n        var ojlabels = EditableValueUtils._getCustomOjLabelElements(labelledBy);\n        if (ojlabels) {\n          for (let i = 0; i < ojlabels.length; i++) {\n            var ojlabel = ojlabels[i];\n            ojlabel.classList.add(this._GetDefaultStyleClass() + '-label');\n            if (\n              this.widget().attr('data-oj-internal') === undefined &&\n              this.options.readOnly !== undefined\n            ) {\n              this._addRemoveOjReadOnlyClassOnLabel(ojlabel, this.options.readOnly);\n            }\n          }\n        }\n      },\n\n      /**\n       * propogate described-by to aria-describedby\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @private\n       */\n      _describedByUpdated: LabelledByUtils._describedByUpdated,\n      /**\n       * Set busy state for async validators\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @private\n       */\n      _setBusyState: EditableValueUtils._SetBusyState,\n      /**\n       * Clear  busy state for async validators\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @private\n       */\n      _clearBusyState: EditableValueUtils._ClearBusyState,\n      /**\n       * Set busy state for async validators hint\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @private\n       */\n      _setBusyStateAsyncValidatorHint: EditableValueUtils._SetBusyStateAsyncValidatorHint,\n      /**\n       * Clear  busy state for async validators hint\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @private\n       */\n      _clearBusyStateAsyncValidatorHint: EditableValueUtils._ClearBusyStateAsyncValidatorHint,\n      /**\n       * Set busy state for async converter loading\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @private\n       */\n      _setBusyStateAsyncConverterLoading: EditableValueUtils._SetBusyStateAsyncConverterLoading,\n      /**\n       * Clear  busy state for async converter loading\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @private\n       */\n      _clearBusyStateAsyncConverterLoading: EditableValueUtils._ClearBusyStateAsyncConverterLoading,\n      /**\n       * If we have asynchronous converter loading, the input is readonly and a loading indicator\n       * is shown to the user.\n       * When the converter is 100% loaded, then the field is set back to how it was.\n       * That is when we do the tasks that either need a converter or need the field to be enabled,\n       * like showing messagesCustom. Those tasks are done in this method.\n       *\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       */\n      _AfterCreateConverterCached: EditableValueUtils._AfterCreateConverterCached,\n\n      /**\n       * Returns the readonly div HTMLElement.\n       * @memberof oj.editableValue\n       * @instance\n       * @private\n       */\n      _getReadonlyDiv: EditableValueUtils._getReadonlyDiv,\n\n      /**\n       * Creates or updates the readonly div. This is called when the\n       * component is initially enabled and becomes readonly.\n       * @memberof oj.editableValue\n       * @instance\n       * @private\n       */\n      _createOrUpdateReadonlyDiv: EditableValueUtils._createOrUpdateReadonlyDiv,\n\n      /**\n       * Creates the readonly div. This is called when the\n       * component is initially enabled and becomes readonly.\n       * @memberof oj.editableValue\n       * @instance\n       * @private\n       */\n      _createReadonlyDiv: EditableValueUtils._createReadonlyDiv,\n\n      /**\n       * @memberof oj.editableValue\n       * @instance\n       * @private\n       */\n      _setReadonlyDivLabelledBy: EditableValueUtils._setReadonlyDivLabelledBy,\n\n      /**\n       * Returns the associated input container needed for component managed labels.  Subclasses can\n       * override if the container is not marked with the '.oj-text-field-container' or\n       * '.oj-form-control-container' selector. The\n       * input elements are children of the container and a sibling to the inline messages container.\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       * @return {Element|undefined}\n       */\n      _GetFormControlContainer: function () {\n        if (this._IsCustomElement()) {\n          var selector =\n            '.' + [this._GetComponentManagedBaseLabelStyleClass(), 'container'].join('-');\n          return this._getRootElement().querySelector(selector);\n        }\n        return undefined;\n      },\n\n      /**\n       * Returns if the element is a text field element or not.\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       * @return {string}\n       */\n      _IsTextFieldComponent: function () {\n        return false;\n      },\n\n      /**\n       * Returns the base selector name used to define the input container.\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       * @return {string}\n       */\n      _GetComponentManagedBaseLabelStyleClass: function () {\n        if (this._IsTextFieldComponent()) {\n          return 'oj-text-field';\n        }\n        return 'oj-form-control';\n      },\n\n      /**\n       * For components like input number/ input date etc, where we have some icon or button beside the input text:\n       * Previously, we set flex =1 on the input and the input's width will autogrow based on buttons width.\n       * But in case of an inside label, the label also should grow and shrink exactly as the input\n       * We can make this to work only by wrapping the input (and label in case of inside) in to a div and\n       * set the flex for the div to 1.\n       * Now the button or icon becomes a sibling of this div and not the input.\n       *\n       * @protected\n       * @instance\n       * @ignore\n       * @return {Element}\n       */\n      _CreateMiddleWrapper: function () {\n        // For the inside label to be assigned with the same width as input,\n        // We need to put the label and the input together in a div and set flex=1 for the div.\n        // This way, they both will occupy the same space as avialble after the buttons.\n        var innerDivElem = document.createElement('div');\n        innerDivElem.className = 'oj-text-field-middle';\n        return innerDivElem;\n      },\n\n      /**\n       * Resolves the labelEdge strategy type from the labelEdge property.\n       * Called from the ComponentMessaging\n       * class which picks which label strategy to use. For example,\n       * oj-radioset with label-edge='inside' uses the InsideFormControlLabelStrategy\n       * which has type 'insideformcontrol'.\n       * whereas the oj-input-text with label-edige='inside' uses the InsideLabelStrategy\n       * which has type 'inside'.\n       * @memberof oj.editableValue\n       * @instance\n       * @protected\n       * @return {string}\n       */\n      _ResolveLabelEdgeStrategyType: function () {\n        var labelEdge = this.options.labelEdge;\n        if (this._IsCustomElement()) {\n          if (labelEdge === 'inside') {\n            // Resolve the 'inside' labelEdge to 'insideformcontrol' for\n            // non-text fields.\n            // An 'insideformcontrol' label renders on top of the component with\n            // the smaller font that matches a text-field's 'inside' label.\n            if (!this._IsTextFieldComponent()) {\n              labelEdge = oj.ComponentMessaging._STRATEGY_TYPE.LABEL_EDGE_INSIDE_FORM_CNTRL;\n            }\n          }\n        }\n        return labelEdge;\n      }\n    },\n    true\n  );\n\n  Components.setDefaultOptions({\n    // properties for all editableValue components\n    editableValue: {\n      displayOptions: Components.createDynamicPropertyGetter(function (context) {\n        // displayOptions defaults are theme dependent\n        // See also _setOption when displayOptions is changed. Need to handle\n        // defaulting there as well.\n        let useUserAssistanceDensity =\n          (ojthemeutils.parseJSONFromFontFamily('oj-form-control-option-defaults') || {})\n            .useUserAssistanceOptionDefault === 'use';\n        var displayOptions;\n        if (useUserAssistanceDensity) {\n          displayOptions = {\n            messages: _sDisplayOptionsRedwoodDefaults.MESSAGES,\n            converterHint: _sDisplayOptionsRedwoodDefaults.CONVERTER_HINT,\n            validatorHint: _sDisplayOptionsRedwoodDefaults.VALIDATOR_HINT\n          };\n        } else {\n          displayOptions = {\n            messages:\n              context.containers.indexOf('ojDataGrid') >= 0 ||\n              context.containers.indexOf('ojTable') >= 0\n                ? ['notewindow']\n                : _sDisplayOptionsAltaDefaults.MESSAGES,\n            converterHint: _sDisplayOptionsAltaDefaults.CONVERTER_HINT,\n            validatorHint: _sDisplayOptionsAltaDefaults.VALIDATOR_HINT\n          };\n        }\n        displayOptions[context.isCustomElement ? 'helpInstruction' : 'title'] = ['notewindow'];\n        return displayOptions;\n      }),\n      help: Components.createDynamicPropertyGetter(function (context) {\n        // Conditionally set the defaults for custom element vs widget syntax since we expose different APIs\n        if (context.isCustomElement) {\n          return { instruction: '' };\n        }\n        return { definition: null, source: null };\n      }),\n      labelEdge: Components.createDynamicPropertyGetter(function (context) {\n        // update the labelEdge value to theme based.\n        if (context.isCustomElement) {\n          return (ojthemeutils.parseJSONFromFontFamily('oj-form-control-option-defaults') || {}).labelEdge;\n        }\n        return undefined;\n      }),\n      userAssistanceDensity: Components.createDynamicPropertyGetter(function (context) {\n        var userAssistanceDensityVar =\n          context.containers.indexOf('ojDataGrid') >= 0 || context.containers.indexOf('ojTable') >= 0\n            ? 'compact'\n            : 'reflow';\n        return userAssistanceDensityVar;\n      })\n    }\n  });\n\n  // ////////////////     SUB-IDS     //////////////////\n  /**\n   * <p>Sub-ID for the help icon element used by EditableValue components.</p>\n   *\n   * @ojsubid oj-label-help-icon\n   * @memberof oj.editableValue\n   * @ignore\n   *\n   * @example <caption>Get the help icon element associated with an editable value component:</caption>\n   * var node = myComp.getNodeBySubId(\"oj-label-help-icon\");\n   */\n\n  // ////////////// fragments /////////////////\n  /**\n   * <p>\n   * <h3 id=\"validation-section\">\n   * Validation and Messaging\n   * <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#validation-section\"></a>\n   * </h3>\n   * An editable component runs validation (normal or deferred) based on the action performed on it\n   * (either by end-user or page author), and the state it was in when the action occurred. Examples\n   * of actions are - creating a component, user changing the value of the component by interacting\n   * with it, the app setting a value programmatically, the app calling the validate() method etc. At\n   * the time the action occurs, the component could already be showing errors, or can have a deferred\n   * error or have no errors.\n   * <p>\n   * These factors also determine whether validation errors/messages get shown to the user immediately\n   * or get deferred. The following sections highlight the kinds of validation that are run and how\n   * messages get handled.\n   * </p>\n   * <h4 id=\"normal-validation-section\">Normal Validation\n   * <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#normal-validation-section\"></a></h4>\n   * Normal validation is run in the following cases on the display value, using the converter and\n   * validators (this includes async-validators) set on the component,\n   * and validation errors are reported to user immediately.\n   * <ul>\n   * <li>When value changes as a result of user interaction all messages are cleared, including custom\n   * messages added by the app, and full validation is run on the UI value. The steps performed are\n   * outlined below.\n   * <ol>\n   * <li>All messages are cleared and <code class=\"prettyprint\">messagesCustom</code> property is cleared</li>\n   * <li>If no converter is present then processing continues to next step. If a converter is\n   * present, the UI value is first converted (i.e., parsed). If there is a parse error then\n   * the messages are shown and processing returns.</li>\n   * <li>If there are no validators setup for the component then the value is set on the component.\n   * Otherwise all validators are run in sequence using the parsed value from the previous step. The\n   * implicit required is run first if the component is marked required. When a validation error is\n   * encountered it is remembered and the next validator in the sequence is run.\n   * <ul><li>NOTE: The value is trimmed before required validation is run</li></ul>\n   * </li>\n   * <li>At the end of the validation run if there are errors, the messages are shown\n   * and processing returns. If there are async-validators, those errors are shown as soon as they\n   * come in, and not until all validators, sync and async validators, are complete, does processing\n   * return, that is, value and valid are updated. If there are no errors, then the\n   * <code class=\"prettyprint\">value</code> property is updated and the formatted value displayed on the\n   * UI.</li>\n   * </ol>\n   * </li>\n   * <li>When the <code class=\"prettyprint\">validate</code> method is called by app, all messages are\n   * cleared and full validation run using the display value. See <code class=\"prettyprint\">validate</code>\n   * method on the sub-classes for details. Note: JET validation is designed to catch user input errors, and not invalid\n   * data passed from the server; this should be caught on the server.</li>\n   * <li>When certain properties change through programmatic intervention by app, the component\n   * determines whether it needs to run normal validation based on the state the component is in.\n   * Refer to the <a href=\"#mixed-validation-section\">Mixed Validation</a> section below for details. </li>\n   * </ul>\n   *\n   * <h4 id=\"deferred-validation-section\">Deferred Validation\n   * <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#deferred-validation-section\"></a>\n   * </h4>\n   * Deferred validation is run in the following cases on the component value using the implicit\n   * required validator if required is true, and validation errors are deferred, i.e., not shown to user immediately.\n   * Refer to the <a href=\"#deferred-messages-section\">Showing Deferred Messages</a> section to\n   * understand how deferred messages can be shown.\n   * <ul>\n   *  <li>When a component is created and it is required deferred validation is run and no messages are cleared\n   *  prior to running validation.\n   *  Refer to the <a href=\"#deferred-validators-section\">Validators\n   *  Participating in Deferred Validation</a> section for details.</li>\n   *  <li>When the <code class=\"prettyprint\">value</code> property changes due to programmatic\n   *  intervention deferred validation is run, after all messages and messagesCustom property are cleared.</li>\n   *  <li>When the <code class=\"prettyprint\">reset</code> method is called, deferred validation is run\n   *   after all messages and messagesCustom property are cleared.</li>\n   *  <li>When certain properties change through programmatic intervention by app, the component\n   *  determines whether it needs to run deferred validation based on the state the component is in.\n   *  Refer to the <a href=\"#mixed-validation-section\">Mixed Validation</a> section below for details.</li>\n   * </ul>\n   *\n   * <h4 id=\"mixed-validation-section\">Mixed Validation\n   * <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#mixed-validation-section\"></a>\n   * </h4>\n   * Either deferred or normal validation is run in the following cases based on the state the\n   * component is in and any validation errors encountered are either hidden or shown to user.\n   * <ul>\n   *  <li>when disabled property changes. See <a href=\"#disabled\">disabled</a> property for details.</li>\n   *  <li>when refresh method is called. See <a href=\"#refresh\">refresh</a> method for details.</li>\n   *  <li>when converter property changes. Not all EditableValue components have the converter property. See\n   *  the sub-classes that have the converter property for details, e.g., {@link oj.ojInputText#converter}.</li>\n   *  <li>when required property changes. Not all EditableValue components have the required property. See\n   *  the sub-classes that have the required property for details, e.g., {@link oj.inputBase#required}.</li>\n   *  <li>when validators property changes. Not all EditableValue components have the validators property. See\n   *  the sub-classes that have the validators property for details, e.g., {@link oj.inputBase#validators}.</li>\n   *  <li>when asyncValidators property changes. Not all EditableValue components have the asyncValidators property. See\n   *  the sub-classes that have the asyncValidators property for details, e.g., {@link oj.inputBase#asyncValidators}.</li>\n   *\n   * </ul>\n   * </p>\n   *\n   * <p>\n   * <h3 id=\"deferred-messages-section\">\n   * Showing Deferred Messages\n   * <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#deferred-messages-section\"></a>\n   * </h3>\n   * Deferred validation messages are displayed only when page author requests for it explicitly in\n   * one of the following ways:\n   * <ul>\n   * <li>calls the <a href=\"#showMessages\"><code class=\"prettyprint\">showMessages</code></a> method on the component</li>\n   * </ul>\n   * </p>\n   *\n   * <p>\n   * <h3 id=\"deferred-validators-section\">\n   * Validators Participating in Deferred Validation\n   * <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#deferred-validators-section\"></a>\n   * </h3>\n   * The required validator is the only validator type that participates in deferred validation.\n   * The required property needs to be set to true for the required validator to run.\n   * </p>\n   * <p>\n   * <h3 id=\"user-assistance-text-section\">\n   * User Assistance Text\n   * <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#user-assistance-text-section\"></a>\n   * </h3>\n   * <p>\n   * User assistive text provides guidance to help the user understand what data to enter or select.\n   * </p>\n   * <p>In the Redwood theme, by default all user assistance text shows inline.\n   * For input components, it shows when the field takes focus. In other components\n   * it shows all the time. See the user-assistance-density property for other ways\n   * the user assistance text can render, like in 'compact' mode, it will render as an icon on the label\n   * which when clicked will show the user assistance text in a notewindow.\n   * <p>\n   * <p>The JET form component properties that are used for user assistance text are help.instruction,\n   * validator and converter hints, and help-hints.\n   * In the Redwood theme for clarity only one user assistance text shows to the user.\n   * The precedence rules are:\n   * <ul>\n   * <li>help.instruction shows;</li>\n   * <li>if no help.instruction, then validator hint shows;</li>\n   * <li>if no help.instruction or validator hint, then help-hints.definition shows;</li>\n   * <li>if no help.instruction, validator hint, or help-hints.definition, then converter hint shows.</li>\n   * <li>help-hints.source always shows along side the above.</li>\n   * </ul>\n   * </p>\n   * <p>In the Alta theme all the user assistance text are displayed to the user. By default\n   * help.instruction and the validator/converter hints show in a notewindow that is displayed\n   * when the field takes focus. The help-hints render as a help icon on the label and when clicked\n   * show in a notewindow. Note: If there is no label, help-hints help icon will not show.\n   * </p>\n   * <p>Sometimes a validator or converter hints shows that you do not want. To not show it,\n   *  set the display-options.validator-hint and/or display-options.converter-hint property to 'none'.\n   * </p>\n   * <p>required and placeholder properties also can be used to guide the user.\n   * In Redwood, a required field shows the word Required under the field\n   * when the field is empty and does not have focus.\n   * Placeholder is shown when the field is empty and has focus.\n   * </p>\n   * @ojfragment validationAndMessagingDoc - Used in the general section of classdesc\n   * @memberof oj.editableValue\n   */\n  /**\n   * <p>\n   * For accessibility, set label-hint or associate an oj-label with the form component.\n   * If there is no visible label, then to make this accessible to screen reader users,\n   * set the label-hint and label-edge='none'\n   * which renders an aria-label with the label-hint text.\n   * If using an oj-label instead of the <code class=\"prettyprint\">label-hint</code> attribute, then\n   * put an <code>id</code> on the form component element, and set the oj-label's\n   * <code>for</code> attribute to be the form component's id.\n   * </p>\n   *\n   * @ojfragment accessibilityLabelEditableValue\n   * @memberof oj.editableValue\n   * @instance\n   */\n  /**\n   * <p>\n   * For accessibility, set label-hint or associate an oj-label with the form component.\n   * If there is no visible label, then to make this accessible to screen reader users,\n   * set the label-hint and label-edge='none' which renders an aria-label with the label-hint text.\n   * If using an oj-label instead of the <code class=\"prettyprint\">label-hint</code> attribute,\n   * then put an <code>id</code> on the oj-label component element, and set the form component's\n   * <code>labelled-by</code> attribute to be the oj-label component's id.\n   * </p>\n   *\n   * @ojfragment accessibilitySetLabelEditableValue\n   * @memberof oj.editableValue\n   * @instance\n   */\n  /**\n   * <p>Disabled content: JET supports an accessible luminosity contrast ratio,\n   * as specified in <a href=\"http://www.w3.org/TR/WCAG20/#visual-audio-contrast-contrast\">WCAG 2.0 - Section 1.4.3 \"Contrast\"</a>,\n   * in the themes that are accessible.  (See the \"Theming\" chapter of the JET Developer Guide for more information on which\n   * themes are accessible.)  Note that Section 1.4.3 says that text or images of text that are part of an inactive user\n   * interface component have no contrast requirement.  Because disabled content may not meet the minimum contrast ratio\n   * required of enabled content, it cannot be used to convey meaningful information.<p>\n   *\n   * @ojfragment accessibilityDisabledEditableValue\n   * @memberof oj.editableValue\n   * @instance\n   */\n  /**\n   * <p>The placeholder text is not read reliably by the screen reader. For accessibility reasons, you need to associate the text to its\n   * JET form component using aria-describedby.\n   * <p>\n   *\n   * @ojfragment accessibilityPlaceholderEditableValue\n   * @memberof oj.editableValue\n   * @instance\n   */\n\n  /**\n   * A messaging strategy that uses an instance of ojPopup component to show and hide messaging content.\n   *\n   * @param {Array.<string>} displayOptions an array of messaging artifacts displayed in the popup. e.g,\n   * 'messages', 'converterHints', 'validationHints', 'title'.\n   * @constructor\n   * @extends {oj.MessagingStrategy}\n   * @private\n   */\n  const PopupMessagingStrategy = function (displayOptions) {\n    this.Init(displayOptions);\n  };\n\n  // Classes defined here to avoid ESLint no-use-before-define requirement\n  /**\n   * @ignore\n   */\n  const PopupMessagingStrategyPoolUtils = {};\n\n  /**\n   * @ignore\n   */\n  const PopupMessagingStrategyUtils = {};\n\n  /**\n   * Registers the PopupMessagingStrategy constructor function with ComponentMessaging.\n   *\n   * @private\n   */\n  oj.ComponentMessaging.registerMessagingStrategy(\n    oj.ComponentMessaging._STRATEGY_TYPE.NOTEWINDOW,\n    PopupMessagingStrategy\n  );\n\n  // Subclass from MessagingStrategy\n  oj.Object.createSubclass(PopupMessagingStrategy, oj.MessagingStrategy, 'oj.PopupMessagingStrategy');\n\n  /**\n   * Messaging popup defaults for components, by component type. A special 'default' type defines the\n   * defaults for most editableValue components.\n   * The following properties are available -\n   * 'events' - these specify the on handlers for events that are setup to open and close popups\n   * 'position' - specifies the type of element the popup is positioned against.\n   * @private\n   */\n  PopupMessagingStrategy._DEFAULTS_BY_COMPONENT = {\n    // mouseenter and mouseleave is what you want instead of mouseover/mouseout when the launcher\n    // isn't a simple input. In the case of radioset and checkboxset, the launcher is the widget\n    // which is the div that contains all the rows, inputs and labels. If we use mouseover/mouseout\n    // in this case we are constantly opening and closing the popup (not really visible to the user,\n    // but still not good for performance I'm sure) if the user moves the mouse around the different\n    // dom elements within the widget.\n    //\n    // on touch devices: the \"press\" event name maps to Hammer's press event, so a touch and hold\n    // will open the popup.\n    ojRadioset: {\n      position: 'launcher',\n      // when press opens popup, the user taps elsewhere to dismiss popup\n      events: { open: 'focusin mouseenter press', close: 'mouseleave' }\n    },\n    ojCheckboxset: {\n      position: 'launcher',\n      // when press opens popup, the user taps elsewhere to dismiss popup\n      events: { open: 'focusin mouseenter press', close: 'mouseleave' }\n    },\n    // Since we now add extra dom on the input components for inline messages, we don't want to\n    // position on the tip of the component root. Instead we want to position on the main part of the\n    // component, which is in a lot of cases the launcher. In the case of inputDate/Time/Number,\n    // it's the launcher's parent (inputDate/Time/Number wrap input and buttons with a parent).\n    ojInputText: {\n      position: 'launcher',\n      events: { open: 'focusin' }\n    },\n    ojTextArea: {\n      position: 'launcher',\n      events: { open: 'focusin' }\n    },\n    ojInputPassword: {\n      position: 'launcher',\n      events: { open: 'focusin' }\n    },\n    ojSwitch: {\n      position: 'launcher',\n      events: { open: 'focusin mouseenter', close: 'mouseleave' }\n    },\n    ojSlider: {\n      position: 'launcher',\n      events: { open: 'focusin mouseenter', close: 'mouseleave' }\n    },\n    ojColorSpectrum: {\n      position: 'launcher',\n      events: { open: 'focusin mouseenter', close: 'mouseleave' }\n    },\n    ojColorPalette: {\n      position: 'launcher',\n      events: { open: 'focusin mouseenter', close: 'mouseleave' }\n    },\n    default: {\n      position: 'launcher-wrapper',\n      events: { open: 'focusin' }\n    }\n  };\n\n  /**\n   * @private\n   * @const\n   * @type {string}\n   */\n  PopupMessagingStrategy._SELECTOR_FORMCONTROL_HINT = 'oj-form-control-hint';\n\n  /**\n   * @private\n   * @const\n   * @type {string}\n   */\n  PopupMessagingStrategy._SELECTOR_FORMCONTROL_HINT_CONVERTER = 'oj-form-control-hint-converter';\n\n  /**\n   * @private\n   * @const\n   * @type {string}\n   */\n  PopupMessagingStrategy._SELECTOR_FORMCONTROL_HINT_VALIDATOR = 'oj-form-control-hint-validator';\n\n  /**\n   * @private\n   * @const\n   * @type {string}\n   */\n  PopupMessagingStrategy._SELECTOR_FORMCONTROL_HINT_TITLE = 'oj-form-control-hint-title';\n\n  /**\n   * @private\n   * @const\n   * @type {string}\n   */\n  PopupMessagingStrategy._OPEN_NAMESPACE = '.ojPopupMessagingOpen';\n\n  /**\n   * @private\n   * @const\n   * @type {string}\n   */\n  PopupMessagingStrategy._CLOSE_NAMESPACE = '.ojPopupMessagingClose';\n\n  /**\n   * Sets up a tooltip for the component instance using the messaging content provided.\n   *\n   * @param {Object} cm a reference to an instance of ComponentMessaging that provides access to\n   * the latest messaging content.\n   * @private\n   * @memberof oj.PopupMessagingStrategy\n   * @override\n   * @instance\n   */\n  PopupMessagingStrategy.prototype.activate = function (cm) {\n    PopupMessagingStrategy.superclass.activate.call(this, cm);\n    this._initMessagingPopup();\n  };\n\n  /**\n   * Reinitializes with the new display options and updates component messaging using the new content.\n   *\n   * @param {Array.<string>} newDisplayOptions\n   * @private\n   * @memberof oj.PopupMessagingStrategy\n   * @instance\n   * @override\n   */\n  PopupMessagingStrategy.prototype.reactivate = function (newDisplayOptions) {\n    PopupMessagingStrategy.superclass.reactivate.call(this, newDisplayOptions);\n    this._updatePopupIfOpenOrComponentHasFocus();\n  };\n\n  PopupMessagingStrategy.prototype.update = function () {\n    PopupMessagingStrategy.superclass.update.call(this);\n    this._updatePopupIfOpenOrComponentHasFocus();\n  };\n\n  /**\n   * Cleans up messages on the component and destroys any widgets it created.\n   *\n   * @private\n   * @memberof oj.PopupMessagingStrategy\n   * @instance\n   * @override\n   */\n  PopupMessagingStrategy.prototype.deactivate = function () {\n    this._unregisterLauncherEvents();\n    this._destroyTooltip();\n    PopupMessagingStrategy.superclass.deactivate.call(this);\n  };\n  /**\n   * Close the popup if it is open. EditableValue calls this from _NotifyHidden and _NotifyDetached\n   * so that we don't have an open popup if the app dev hides a subtree the component is within.\n   * @private\n   * @memberof oj.PopupMessagingStrategy\n   * @instance\n   */\n  PopupMessagingStrategy.prototype.close = function () {\n    this._closePopup();\n  };\n\n  /**\n   * Closes the associated notewindow popup\n   * @private\n   * @memberof oj.PopupMessagingStrategy\n   * @instance\n   */\n  PopupMessagingStrategy.prototype._closePopup = function () {\n    function doClose(resolve) {\n      if (this._isPopupInitialized()) {\n        if (resolve) {\n          // Add an event listener to resolve the promise\n          this._setActionResolver(this.$messagingContentRoot, 'close', resolve);\n        }\n\n        this.$messagingContentRoot.ojPopup('close');\n\n        // Just return if we call ojPopup close.  The promise will be resolved\n        // by the ojclose event listener.\n        return;\n      }\n\n      if (resolve) {\n        // Resolve the promise immediately if we didn't call ojPopup close\n        resolve(true);\n      }\n    }\n\n    this._queueAction(doClose.bind(this));\n  };\n\n  /**\n   * @private\n   * @memberof oj.PopupMessagingStrategy\n   * @instance\n   */\n  PopupMessagingStrategy.prototype._initMessagingPopup = function () {\n    if (!this._openPopupCallback) {\n      this._registerLauncherEvents();\n    }\n  };\n\n  /**\n   * Add listeners for animation events.\n   * We use this to delegate animation events to the editableValue component since\n   * the original events are triggered on the popup, which is created internally\n   * and the application cannot bind listeners to it.  By delegating the events,\n   * application can bind the listeners to the component.\n   *\n   * @param {jQuery} messagingContentRoot - The jQuery object for the messaging root node\n   * @private\n   * @memberof oj.PopupMessagingStrategy\n   * @instance\n   */\n  PopupMessagingStrategy.prototype._addAnimateEventListeners = function (messagingContentRoot) {\n    var delegateEvent = function (newEventType, event, ui) {\n      var component = this.GetComponent();\n      if (component && component._trigger) {\n        // always stop propagation if we have a component to delegate to\n        event.stopPropagation();\n\n        // prevent default only if the component handler says so, as indicated by\n        // a return value of false.\n        if (!component._trigger(newEventType, null, ui)) {\n          event.preventDefault();\n        }\n      }\n    };\n\n    // Add animation event listeners to delegate the events to the component\n    messagingContentRoot.on('ojanimatestart.notewindow', delegateEvent.bind(this, 'animateStart'));\n    messagingContentRoot.on('ojanimateend.notewindow', delegateEvent.bind(this, 'animateEnd'));\n  };\n\n  /**\n   * Remove listeners for animation events.\n   *\n   * @private\n   * @memberof oj.PopupMessagingStrategy\n   * @instance\n   */\n  PopupMessagingStrategy.prototype._removeAnimateEventListeners = function (messagingContentRoot) {\n    messagingContentRoot.off('ojanimatestart.notewindow');\n    messagingContentRoot.off('ojanimateend.notewindow');\n  };\n\n  /**\n   * Set busy state on the component that invokes the notewindow.\n   *\n   * @private\n   * @memberof oj.PopupMessagingStrategy\n   * @instance\n   */\n  PopupMessagingStrategy.prototype._setBusyState = function (eventType) {\n    var component = this.GetComponent();\n    var jElem = component ? component.element : null;\n    var domElem = jElem ? jElem[0] : null;\n    var busyContext = Context.getContext(domElem).getBusyContext();\n    var description = 'The page is waiting for note window ';\n\n    if (domElem && domElem.id) {\n      description += 'for \"' + domElem.id + '\" ';\n    }\n    description += 'to ' + eventType;\n\n    return busyContext.addBusyState({ description: description });\n  };\n\n  /**\n   * Set an event listener to resolve promise when popup open/close action ends.\n   *\n   * @private\n   * @memberof oj.PopupMessagingStrategy\n   * @instance\n   */\n  PopupMessagingStrategy.prototype._setActionResolver = function (\n    messagingContentRoot,\n    eventType,\n    resolvePromise\n  ) {\n    var animationOption;\n\n    // Disable animation if there are other queued actions.  Otherwise we will end\n    // up with too many animation since the messaging framework keeps clearing and\n    // updating the message display during validation, etc.\n    if (this._actionCount > 1) {\n      // Remember the original animation so that we can restore it later\n      animationOption = messagingContentRoot.ojPopup('option', 'animation');\n      messagingContentRoot.ojPopup('option', 'animation', null);\n    }\n\n    // Add a busy state for the component.  Even though ojpopup add busy state,\n    // it is in the scope of the popup element.\n    var resolveBusyState = this._setBusyState(eventType);\n\n    // Add an one-time listener to resolve the promise\n    messagingContentRoot.one('oj' + eventType, function () {\n      // Restore any saved animation option\n      if (animationOption) {\n        messagingContentRoot.ojPopup('option', 'animation', animationOption);\n      }\n\n      resolveBusyState();\n      resolvePromise(true);\n    });\n  };\n\n  /**\n   * Queue up popup open and close actions so that they are executed in the\n   * correct order.\n   *\n   * @private\n   * @memberof oj.PopupMessagingStrategy\n   * @instance\n   */\n  PopupMessagingStrategy.prototype._queueAction = function (task) {\n    if (this.GetComponent()._IsCustomElement()) {\n      // Queue up the action for custom elements to avoid animation overlapping each other\n      var self = this;\n\n      var createActionPromise = function (_task) {\n        var promise = new Promise(_task);\n        promise.then(function () {\n          self._actionCount -= 1;\n        });\n        return promise;\n      };\n\n      if (!this._actionCount) {\n        // If there is no action in progress, create a new promise directly instead\n        // of chaining to any resolved promise to avoid an extra wait state.\n        this._actionCount = 1;\n        this._actionPromise = createActionPromise(task);\n      } else {\n        this._actionCount += 1;\n        this._actionPromise = this._actionPromise.then(function () {\n          return createActionPromise(task);\n        });\n      }\n    } else {\n      // Invoke the action immediately for legacy components since there is no animation\n      task(null);\n    }\n  };\n\n  /**\n   * Opens a popup. This handler is called in the context of the launcher usually the this.element or\n   * some relevant node the messaging popup is associated to.\n   *\n   * @private\n   * @memberof oj.PopupMessagingStrategy\n   * @instance\n   */\n  PopupMessagingStrategy.prototype._openPopup = function (event) {\n    function doOpen(resolve) {\n      var domNode;\n      var latestContent;\n      var $launcher;\n\n      if (this._canOpenPopup()) {\n        latestContent = this._buildPopupHtml();\n        if (!oj.StringUtils.isEmptyOrUndefined(latestContent)) {\n          var messagingContentRoot = this._getPopupElement();\n          var isPopupOpen = messagingContentRoot.ojPopup('isOpen');\n\n          // replace popup messaging content with new content\n          domNode = PopupMessagingStrategyPoolUtils.getPopupContentNode(messagingContentRoot);\n\n          // latestContent is includes content that may come from app. It is scrubbed for illegal tags\n          // before setting to innerHTML\n          domNode.innerHTML = ''; // @HTMLUpdateOK\n          domNode.innerHTML = latestContent; // @HTMLUpdateOK\n\n          if (!isPopupOpen) {\n            $launcher = this.GetLauncher();\n            const $position = $(this.GetComponent()._GetMessagingPositionElement());\n            if (event && event.type === 'press') {\n              this._openPopupOnPressEvent($launcher);\n            }\n\n            if (resolve) {\n              // Add an event listener to resolve the promise\n              this._setActionResolver(messagingContentRoot, 'open', resolve);\n            }\n\n            messagingContentRoot.ojPopup('open', $launcher, { of: $position });\n\n            // Just return if we call ojPopup open.  The promise will be resolved\n            // by the ojopen event listener.\n            return;\n          } else if (isPopupOpen) {\n            messagingContentRoot.ojPopup('refresh');\n          }\n        }\n      }\n\n      if (resolve) {\n        // Resolve the promise immediately if we didn't call ojPopup open\n        resolve(true);\n      }\n    }\n\n    this._queueAction(doOpen.bind(this));\n  };\n\n  /**\n   * This is called to open the popup on the 'press' event. E.g., ojCheckboxset and ojRadioset\n   * use press to open the popup.\n   * @param {Object|null} jqLauncher\n   */\n  PopupMessagingStrategy.prototype._openPopupOnPressEvent = function (jqLauncher) {\n    this._inPressEvent = true;\n\n    // We add these event listeners when we open the popup as a result of the 'press' event\n    // and we are going to remove them when we close the popup, as well as when we unregister\n    // launcher events to make doubly sure they aren't lying around.\n    // / Use capture phase to make sure we cancel it before any regular bubble listeners hear it.\n    jqLauncher[0].addEventListener('click', this._eatChangeAndClickOnPress, true);\n    // need to eat 'change' as well. Otherwise the dialog will close on press up, and the input\n    // stays unchecked.\n    // This is because when the input  gets the 'change' event, it calls validate,\n    // which then updates messages, and if there is no message,\n    // then calls _updatePopupIfOpen, contentToShow = \"\", then it closes the popup.\n    jqLauncher[0].addEventListener('change', this._eatChangeAndClickOnPress, true);\n\n    // touchend/mousedown/change/click happen in fast succession on tap or press.\n    // Android never fires a click event on press up, so after 50ms we clear the inPressEvent flag\n    // since the _eatChangeAndClickOnPress callback never gets called for Android.\n    jqLauncher.one('touchend', function () {\n      // 50ms.  Make as small as possible to prevent unwanted side effects.\n      setTimeout(function () {\n        this._inPressEvent = false;\n      }, 50);\n    });\n  };\n\n  /**\n   * The pressHold gesture fires a click and change event on ios after touchend.  Prevent that here.\n   * @private\n   */\n  PopupMessagingStrategy.prototype._eatChangeAndClickOnPress = function (event) {\n    // on ios:\n    // if I tap quickly on an input, I get on div: touchstart/touchend/mousedown/change/click\n    // if I tap and hold on an input, I get: touchstart\n    // when I let up, I get: touchend/mousedown/change/click\n    // on android:\n    // if I tap quickly on an input, I get touchstart touchend mousedown click change\n    // if I tap and hold on an input, I get touchstart/mousedown\n    // when I let up, I get touchend. (no change or click like I do for ios)\n\n    // After 'press' release of a radio or checkbox if we do not eat the the click and change events,\n    // the dialog closes.\n    if (this._inPressEvent) {\n      // For Mobile Safari capture phase at least,\n      // returning false doesn't work; must use pD() and sP() explicitly.\n      event.preventDefault();\n      event.stopPropagation();\n      // the event order is first change, then click.\n      // so when we get the click, clear the inPressEvent flag.\n      if (event.type === 'click') {\n        this._inPressEvent = false;\n      }\n    }\n  };\n\n  /**\n   * Determines whether the messaging popup can be opened.\n   * @return {boolean}\n   * @private\n   * @memberof oj.PopupMessagingStrategy\n   * @instance\n   */\n  PopupMessagingStrategy.prototype._canOpenPopup = function () {\n    var options = this.GetComponent().options;\n    var isDisabled = options.disabled || false;\n    var isReadOnly = options.readOnly || false;\n\n    return !(isDisabled || isReadOnly);\n  };\n\n  /**\n   * If the popup is already open or if component has focus,\n   * its contents need to updated when update() or reactivate() is called.\n   * @private\n   * @memberof oj.PopupMessagingStrategy\n   * @instance\n   */\n  PopupMessagingStrategy.prototype._updatePopupIfOpenOrComponentHasFocus = function () {\n    var contentToShow;\n    var domNode;\n    var isLauncherActiveElement;\n    var isPopupOpen = false;\n    var launcher;\n    var messagingContentRoot;\n\n    launcher = this.GetLauncher();\n    if (launcher == null) {\n      return;\n    }\n    // See if launcher contains activeElement\n    isLauncherActiveElement = this.GetLauncher()[0].contains(document.activeElement);\n    if (this._isPopupInitialized()) {\n      messagingContentRoot = this._getPopupElement();\n      isPopupOpen = messagingContentRoot.ojPopup('isOpen');\n      if (isPopupOpen) {\n        contentToShow = this._buildPopupHtml();\n        if (contentToShow) {\n          // push new content into popup\n          domNode = PopupMessagingStrategyPoolUtils.getPopupContentNode(messagingContentRoot);\n\n          // contentToShow is includes content that may come from app. It is scrubbed for illegal tags\n          // before setting to innerHTML\n          domNode.innerHTML = ''; // @HTMLUpdateOK\n          domNode.innerHTML = contentToShow; // @HTMLUpdateOK\n          messagingContentRoot.ojPopup('refresh');\n        } else {\n          // if there is no content to show and popup is currently open, close it.\n          messagingContentRoot.ojPopup('close');\n        }\n      }\n    } else if (isLauncherActiveElement) {\n      contentToShow = this._buildPopupHtml();\n      if (contentToShow) {\n        // if popup is closed but focus is on activeElement re-open it\n        this._openPopup(undefined);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @memberof oj.PopupMessagingStrategy\n   * @instance\n   */\n  PopupMessagingStrategy.prototype._unregisterLauncherEvents = function () {\n    var jqLauncher = this.GetLauncher();\n\n    // Remove event handlers setup on launcher\n    jqLauncher.off(PopupMessagingStrategy._OPEN_NAMESPACE);\n    jqLauncher.off(PopupMessagingStrategy._CLOSE_NAMESPACE);\n    jqLauncher[0].removeEventListener('click', this._eatChangeAndClickOnPress, true);\n    jqLauncher[0].removeEventListener('change', this._eatChangeAndClickOnPress, true);\n\n    if (DomUtils.isTouchSupported()) {\n      this.releaseResources();\n      jqLauncher.off('contextmenu', this._eatContextMenuOnOpenPopupListener);\n      this._eatContextMenuOnOpenPopupListener = null;\n      this._inPressEvent = null;\n    }\n    this._openPopupCallback = null;\n    this._closePopupCallback = null;\n  };\n\n  /**\n   * @private\n   * @memberof oj.PopupMessagingStrategy\n   * @instance\n   */\n  PopupMessagingStrategy.prototype._registerLauncherEvents = function () {\n    var closeEvents;\n    var closePopupCallback;\n    var jqLauncher = this.GetLauncher();\n    var nonPressOpenEvents;\n\n    const events = this._getPopupEventNamesToRegisterForComp();\n\n    // 1. associate the ojPopup component to wrapper <div> for popup content\n    // 2. wire up on() event handlers for registered events that open and close popup. E.g., focusin.\n    // 3. autoDismissal happens automatically when focus leaves component. For other events like\n    // mouseover it's required to call off()\n    if (events.open) {\n      if (!this._openPopupCallback) {\n        this._openPopupCallback = this._openPopup.bind(this);\n      }\n\n      // separate out press event, namespace the events string, and attach event handler\n      const needsPressEvent = this._needsPressEvent(events);\n      nonPressOpenEvents = this._getNamespacedEvents(\n        events.open.replace('press', ''),\n        PopupMessagingStrategy._OPEN_NAMESPACE\n      );\n      jqLauncher.on(nonPressOpenEvents, this._openPopupCallback);\n\n      // The pressHold gesture also fires a contextmenu event on Windows 10 touch.\n      // Prevent that here for components that use 'press' for popup messaging as\n      // the context menu causes the popup message window to close. Note that this\n      // means the context menu will be disabled for these components.\n      if (DomUtils.isTouchSupported() && needsPressEvent) {\n        this._eatContextMenuOnOpenPopupListener = function () {\n          return false;\n        };\n\n        jqLauncher.on('contextmenu', this._eatContextMenuOnOpenPopupListener);\n\n        this.registerHammerOpenCallbackOnLauncher();\n      }\n    }\n\n    if (events.close) {\n      closePopupCallback = this._closePopupCallback;\n      if (!closePopupCallback) {\n        closePopupCallback = this._closePopup.bind(this);\n        this._closePopupCallback = closePopupCallback;\n      }\n\n      closeEvents = this._getNamespacedEvents(events.close, PopupMessagingStrategy._CLOSE_NAMESPACE);\n      jqLauncher.on(closeEvents, closePopupCallback);\n    }\n  };\n\n  /**\n   * Symmetrical method to releaseResources. Sets up resources that get\n   * removed in releaseResources.\n   * @private\n   * @memberof oj.PopupMessagingStrategy\n   * @instance\n   */\n  PopupMessagingStrategy.prototype.setupResources = function () {\n    const events = this._getPopupEventNamesToRegisterForComp();\n    const needsPressEvent = this._needsPressEvent(events);\n    if (DomUtils.isTouchSupported() && needsPressEvent) {\n      this.registerHammerOpenCallbackOnLauncher();\n    }\n  };\n\n  /**\n   * Register Hammer Press Event. Make sure you are on touch and you\n   * need the press event before calling this function.\n   * @private\n   * @memberof oj.PopupMessagingStrategy\n   * @instance\n   */\n  PopupMessagingStrategy.prototype.registerHammerOpenCallbackOnLauncher = function () {\n    const jqLauncher = this.GetLauncher();\n    if (jqLauncher == null) {\n      return;\n    }\n    // for radios and checkboxes, on ios, press hold brings up popup, but release closes it\n    // and checks it, so in this case we have to eat the click/change events. this happens\n    // in the openPopupCallback\n    const hammerOptions = {\n      recognizers: [[Hammer.Press, { time: 750 }]]\n    };\n    jqLauncher.ojHammer(hammerOptions).on('press', this._openPopupCallback);\n  };\n\n  /**\n   * Releases resources that would otherwise leak memory if they were not released\n   * when the component's dom is removed.\n   * For example, Hammer events are put on the document and will result in\n   * detached dom memory leak if not removed.\n   * @private\n   * @memberof oj.PopupMessagingStrategy\n   * @instance\n   */\n  PopupMessagingStrategy.prototype.releaseResources = function () {\n    PopupMessagingStrategy.superclass.update.call(this);\n    const events = this._getPopupEventNamesToRegisterForComp();\n    const needsPressEvent = this._needsPressEvent(events);\n    if (DomUtils.isTouchSupported() && needsPressEvent) {\n      const jqLauncher = this.GetLauncher();\n      jqLauncher.off('press').ojHammer('destroy');\n    }\n  };\n\n  /**\n   * Turn the events string into an array, add namespace, and turn it back into a string.\n   * @param {string} events e.g., \"focusin mousedown\"\n   * @param {string} namespace the namespace that starts with a dot\n   * @return {string|null} the events string that is namespaced.\n   * e.g., \"focusin.ojPopupMessagingOpen mousedown.ojPopupMessagingOpen\"\n   * @private\n   */\n  PopupMessagingStrategy.prototype._getNamespacedEvents = function (events, namespace) {\n    var eventsArray;\n    var namespacedEventsArray;\n    var length;\n\n    if (events === '' || namespace === '') {\n      return events;\n    }\n\n    eventsArray = events.split(' ');\n    length = eventsArray.length;\n    namespacedEventsArray = [];\n\n    for (var i = 0; i < length; i++) {\n      // ignore \"\"\n      if (eventsArray[i]) {\n        namespacedEventsArray.push(eventsArray[i] + namespace);\n      }\n    }\n\n    return namespacedEventsArray.join(' ');\n  };\n\n  /**\n   * Returns the popup position options.\n   * Components like radio and checkboxset use the launcher, which is the inputs.\n   * Since we now add extra dom for inline messages, we don't want to position\n   * on the tip of the component root. Instead we want to position on the main part of the component,\n   * which is in a lot of cases the launcher. In the case of inputDate/Time/Number, it's the launcher's\n   * parent.\n   * @private\n   * @memberof oj.PopupMessagingStrategy\n   * @instance\n   */\n  PopupMessagingStrategy.prototype._getPopupPosition = function () {\n    var compDefaultPosition;\n    var compDefaults;\n    var launcher;\n    var popupPositionOptions;\n\n    compDefaults = PopupMessagingStrategy._DEFAULTS_BY_COMPONENT[this.GetComponent().widgetName];\n    compDefaultPosition = compDefaults\n      ? compDefaults.position\n      : PopupMessagingStrategy._DEFAULTS_BY_COMPONENT.default.position;\n\n    if (compDefaultPosition) {\n      if (compDefaultPosition === 'launcher') {\n        launcher = this.GetLauncher();\n      } else if (compDefaultPosition === 'launcher-wrapper') {\n        launcher = this.GetLauncher().parent();\n      }\n    }\n    // should never get here since the _DEFAULTS_BY_COMPONENTS[\"default\"] should cover it.\n    if (!launcher) {\n      launcher = this.GetComponent().widget();\n    }\n\n    popupPositionOptions = {\n      my: 'start bottom',\n      at: 'end top',\n      collision: 'flipcenter',\n      of: launcher\n    };\n    return popupPositionOptions;\n  };\n\n  /**\n   * Returns the events\n   *\n   * @private\n   * @memberof oj.PopupMessagingStrategy\n   * @instance\n   */\n  PopupMessagingStrategy.prototype._getPopupEventNamesToRegisterForComp = function () {\n    const compDefaults =\n      PopupMessagingStrategy._DEFAULTS_BY_COMPONENT[this.GetComponent().widgetName];\n    return compDefaults\n      ? compDefaults.events\n      : PopupMessagingStrategy._DEFAULTS_BY_COMPONENT.default.events;\n  };\n\n  /**\n   * Returns true if it needs a press event.\n   *\n   * @private\n   * @memberof oj.PopupMessagingStrategy\n   * @instance\n   */\n  PopupMessagingStrategy.prototype._needsPressEvent = function (events) {\n    if (events && events.open) {\n      return events.open.indexOf('press') !== -1;\n    }\n    return false;\n  };\n\n  /**\n   * Returns a jquery element that a messaging popup is bound to.\n   *\n   * @return {jQuery!} messaging popup pool container\n   * @private\n   * @memberof oj.PopupMessagingStrategy\n   * @instance\n   */\n  PopupMessagingStrategy.prototype._getPopupElement = function () {\n    var popup;\n    var position;\n\n    if (this.$messagingContentRoot) {\n      return this.$messagingContentRoot;\n    }\n\n    popup = PopupMessagingStrategyPoolUtils.getNextFreePopup();\n    position = this._getPopupPosition();\n    popup.ojPopup('option', 'position', position);\n    popup.ojPopup('option', 'beforeClose', this._popupBeforeCloseCallback.bind(this));\n    popup.ojPopup('option', 'close', this._popupCloseCallback.bind(this));\n    popup.ojPopup('option', 'open', this._popupOpenCallback.bind(this));\n\n    // Use default animation only for custom elements\n    if (this.GetComponent()._IsCustomElement()) {\n      // Get the default animation\n      var defaultAnimations = (ojthemeutils.parseJSONFromFontFamily('oj-messaging-popup-option-defaults') || {})\n        .animation;\n      defaultAnimations.actionPrefix = 'notewindow';\n      popup.ojPopup('option', 'animation', defaultAnimations);\n\n      this._addAnimateEventListeners(popup);\n    } else {\n      popup.ojPopup('option', 'animation', null);\n    }\n\n    this.$messagingContentRoot = popup;\n    return this.$messagingContentRoot;\n  };\n\n  /**\n   * Popup open event listener that changes the popups autoDismiss to focusLoss\n   * in a timeout of 10ms.  This timeout period gives the browser time to fire\n   * events that might follow a click such as a focus event.  This is to allow\n   * validation by a button versus a component instance.\n   *\n   * @param {jQuery.event=} event\n   * @memberof! oj.PopupMessagingStrategy\n   * @private\n   */\n  PopupMessagingStrategy.prototype._popupOpenCallback = function (event) {\n    var target = $(event.target);\n    var self = this;\n    window.setTimeout(function () {\n      if (Components.isComponentInitialized(target, 'ojPopup')) {\n        target.ojPopup('option', 'autoDismiss', 'focusLoss');\n      } else {\n        delete self.$messagingContentRoot;\n      }\n    }, 10);\n  };\n\n  /**\n   * Popup beforeClose event listener that will add busy state to the component\n   * @param {jQuery.event=} event\n   * @memberof! oj.PopupMessagingStrategy\n   * @private\n   */\n  PopupMessagingStrategy.prototype._popupBeforeCloseCallback = function () {\n    this._resolveBusyState = this._setBusyState('close');\n  };\n\n  /**\n   * Popup closed event listener that will reset the popups state and free it into the\n   * pool of available messaging popups.\n   * @param {jQuery.event=} event\n   * @memberof! oj.PopupMessagingStrategy\n   * @private\n   */\n  PopupMessagingStrategy.prototype._popupCloseCallback = function (event) {\n    var jqLauncher = this.GetLauncher();\n    var target = $(event.target);\n\n    this._removeAnimateEventListeners(target);\n\n    if (Components.isComponentInitialized(target, 'ojPopup')) {\n      target.ojPopup('option', 'autoDismiss', 'none');\n      target.ojPopup('option', 'open', null);\n      target.ojPopup('option', 'close', null);\n      target.ojPopup('option', 'beforeClose', null);\n    }\n\n    // Check that the launcher is still there when removing listeners\n    if (jqLauncher && jqLauncher[0]) {\n      jqLauncher[0].removeEventListener('click', this._eatChangeAndClickOnPress, true);\n      jqLauncher[0].removeEventListener('change', this._eatChangeAndClickOnPress, true);\n    }\n\n    this.$messagingContentRoot = null;\n    this._inPressEvent = null;\n\n    var popupContent = PopupMessagingStrategyPoolUtils.getPopupContentNode(target);\n    popupContent.innerHTML = ''; // @HTMLUpdateOK\n\n    if (this._resolveBusyState) {\n      this._resolveBusyState();\n      this._resolveBusyState = null;\n    }\n  };\n\n  /**\n   * @memberof! oj.PopupMessagingStrategy\n   * @private\n   * @instance\n   */\n  PopupMessagingStrategy.prototype._destroyTooltip = function () {\n    this._closePopup();\n    PopupMessagingStrategyPoolUtils.destroyFreePopup();\n  };\n\n  /**\n   * Returns the content to show inside popup.\n   * @private\n   * @return {String|string} content\n   * @memberof oj.PopupMessagingStrategy\n   * @instance\n   */\n  PopupMessagingStrategy.prototype._buildPopupHtml = function () {\n    var addSeparator = false;\n    var document = this.GetComponent().document[0];\n    var nwContent = [];\n    var nwHtml = '';\n\n    if (this.ShowMessages()) {\n      nwContent.push(this._buildMessagesHtml(document));\n    }\n\n    if (this.ShowConverterHint() || this.ShowValidatorHint() || this.ShowTitle()) {\n      nwContent.push(this._buildHintsHtml(document));\n    }\n\n    nwContent.forEach(function (content) {\n      if (content) {\n        if (addSeparator) {\n          nwHtml = nwHtml.concat(PopupMessagingStrategyUtils.getSeparatorHtml(document));\n        } else {\n          addSeparator = true;\n        }\n\n        nwHtml = nwHtml.concat(content);\n      }\n    });\n\n    return nwHtml;\n  };\n\n  /**\n   * Returns the messages html (e.g., error messages, confirmation messages), not hints\n   * @param {Document} document\n   * @return {string} content\n   * @private\n   * @memberof oj.PopupMessagingStrategy\n   * @instance\n   */\n  PopupMessagingStrategy.prototype._buildMessagesHtml = function (document) {\n    var content = '';\n    var maxSeverity = this.GetMaxSeverity();\n    var messages;\n    var renderSeveritySelectors = false;\n\n    if (this.HasMessages()) {\n      messages = this.GetMessages();\n      content = PopupMessagingStrategyUtils.buildMessagesHtml(\n        document,\n        messages,\n        maxSeverity,\n        renderSeveritySelectors\n      );\n    }\n    return content;\n  };\n\n  /**\n   * All hints including title\n   * @param {Document} document\n   * @return {string} html content for all hints.\n   * @private\n   * @memberof oj.PopupMessagingStrategy\n   * @instance\n   */\n  PopupMessagingStrategy.prototype._buildHintsHtml = function (document) {\n    var hint;\n    var hints = [];\n    var hintsHtml = '';\n    var i;\n\n    if (this.ShowConverterHint()) {\n      hints = this.GetConverterHint();\n      hint = hints.length ? hints[0] : '';\n      hintsHtml += PopupMessagingStrategyUtils.buildHintHtml(\n        document,\n        PopupMessagingStrategy._SELECTOR_FORMCONTROL_HINT_CONVERTER,\n        hint,\n        false,\n        PopupMessagingStrategy._SELECTOR_FORMCONTROL_HINT\n      );\n    }\n\n    if (this.ShowValidatorHint()) {\n      hints = this.GetValidatorHints();\n      for (i = 0; i < hints.length; i++) {\n        hintsHtml += PopupMessagingStrategyUtils.buildHintHtml(\n          document,\n          PopupMessagingStrategy._SELECTOR_FORMCONTROL_HINT_VALIDATOR,\n          hints[i],\n          false,\n          PopupMessagingStrategy._SELECTOR_FORMCONTROL_HINT\n        );\n      }\n    }\n\n    if (this.ShowTitle()) {\n      hintsHtml += PopupMessagingStrategyUtils.buildHintHtml(\n        document,\n        PopupMessagingStrategy._SELECTOR_FORMCONTROL_HINT_TITLE,\n        this.GetTitle(),\n        true,\n        PopupMessagingStrategy._SELECTOR_FORMCONTROL_HINT\n      );\n    }\n\n    return hintsHtml ? \"<div class='oj-form-control-hints'>\" + hintsHtml + '</div>' : '';\n  };\n\n  /**\n   * Determines if there is a message popup currently associated with the component\n   * strategy.\n   * @return {boolean}\n   * @private\n   * @memberof oj.PopupMessagingStrategy\n   * @instance\n   */\n  PopupMessagingStrategy.prototype._isPopupInitialized = function () {\n    // is(\":oj-popup\") finds the popup component if it exists\n    return this.$messagingContentRoot\n      ? Components.isComponentInitialized(this.$messagingContentRoot, 'ojPopup')\n      : false;\n  };\n\n  /**\n   * Renders the html content for a single hint.\n   * @param {Document} document\n   * @param {string} selector\n   * @param {string} hintText\n   * @param {boolean} htmlAllowed\n   * @param {string} formControlSelectors\n   *\n   * @return {string} html content for a single hint.\n   * @public\n   */\n  PopupMessagingStrategyUtils.buildHintHtml = function (\n    document,\n    selector,\n    hintText,\n    htmlAllowed,\n    formControlSelectors\n  ) {\n    var titleDom;\n\n    if (hintText) {\n      titleDom = document.createElement('div');\n      var selectors = formControlSelectors.split(' ');\n\n      for (var i = 0, len = selectors.length; i < len; ++i) {\n        titleDom.classList.add(selectors[i]);\n      }\n\n      titleDom.classList.add(selector);\n      PopupMessagingStrategyUtils._appendTextDom(\n        titleDom,\n        PopupMessagingStrategyUtils.GetTextDom(document, hintText, htmlAllowed)\n      );\n    }\n\n    return titleDom ? titleDom.outerHTML : ''; // @HTMLUpdateOK\n  };\n\n  /**\n   * @param {number} severity\n   * @returns (string} translated string for the severity\n   * @public\n   */\n  PopupMessagingStrategyUtils.getSeverityTranslatedString = function (severity) {\n    var sevTypeStr;\n    // get the translated string for the severity\n    switch (severity) {\n      case Message.SEVERITY_LEVEL.FATAL:\n        sevTypeStr = Translations.getTranslatedString('oj-message.fatal');\n        break;\n      case Message.SEVERITY_LEVEL.ERROR:\n        sevTypeStr = Translations.getTranslatedString('oj-message.error');\n        break;\n      case Message.SEVERITY_LEVEL.WARNING:\n        sevTypeStr = Translations.getTranslatedString('oj-message.warning');\n        break;\n      case Message.SEVERITY_LEVEL.INFO:\n        sevTypeStr = Translations.getTranslatedString('oj-message.info');\n        break;\n      case Message.SEVERITY_LEVEL.CONFIRMATION:\n        sevTypeStr = Translations.getTranslatedString('oj-message.confirmation');\n        break;\n      default:\n        break;\n    }\n\n    return sevTypeStr;\n  };\n\n  /**\n   * @param {Document} document\n   * @returns {string}\n   * @public\n   */\n  PopupMessagingStrategyUtils.getSeparatorHtml = function (document) {\n    var jSeparatorDom;\n    jSeparatorDom = $(document.createElement('hr'));\n\n    return jSeparatorDom ? jSeparatorDom.get(0).outerHTML : ''; // @HTMLUpdateOK\n  };\n\n  /**\n   * Returns the messages html (e.g., error messages, confirmation messages), not hints\n   * @param {Document} document\n   * @param {Array} messages\n   * @param {number} maxSeverity\n   * @param {boolean} renderSeveritySelectors\n   * @return {string} content\n   * @private\n   * @memberof oj.PopupMessagingStrategyUtils\n   * @instance\n   */\n  PopupMessagingStrategyUtils.buildMessagesHtml = function (\n    document,\n    messages,\n    maxSeverity,\n    renderSeveritySelectors\n  ) {\n    var content = '';\n    var detail;\n    var i;\n    var j;\n    var message;\n    var messagesByType = [];\n    var messagesByTypes = {};\n    var messageObj;\n    var severityLevel;\n    var severityStr;\n    var summary;\n\n    // Step1: build an indexed array of messages by severity level.\n    for (i = 0; i < messages.length; i++) {\n      message = messages[i];\n\n      if (!(message instanceof Message)) {\n        messageObj = new Message(message.summary, message.detail, message.severity);\n      } else {\n        messageObj = message;\n      }\n\n      severityLevel = Message.getSeverityLevel(messageObj.severity);\n      if (!messagesByTypes[severityLevel]) {\n        messagesByTypes[severityLevel] = [];\n      }\n\n      messagesByTypes[severityLevel].push(messageObj);\n    }\n\n    // Step 2: starting with maxSeverity level build messages with decreasing severity\n    for (i = maxSeverity; i >= Message.SEVERITY_LEVEL.CONFIRMATION; i--) {\n      messagesByType = messagesByTypes[i] || [];\n\n      for (j = 0; j < messagesByType.length; j++) {\n        message = messagesByType[j];\n\n        severityLevel = Message.getSeverityLevel(message.severity);\n        severityStr = PopupMessagingStrategyUtils.getSeverityTranslatedString(severityLevel);\n        summary = message.summary || severityStr;\n\n        // if detail is empty we don't care to duplicate summary. also detail if present can be\n        // formatted html content (ADF feature)\n        detail = message.detail || '';\n        content = content.concat(\n          PopupMessagingStrategyUtils.buildMessageHtml(\n            document,\n            summary,\n            detail,\n            severityLevel,\n            renderSeveritySelectors\n          )\n        );\n      }\n    }\n    return content;\n  };\n\n  /**\n   * Builds the HTML content for a single message\n   * @param {Document} document\n   * @param {string} summary\n   * @param {string} detail\n   * @param {number} severityLevel\n   * @returns {string}\n   * @public\n   */\n  PopupMessagingStrategyUtils.buildMessageHtml = function (\n    document,\n    summary,\n    detail,\n    severityLevel,\n    addSeverityClass\n  ) {\n    var msgContent;\n    var msgDetail;\n    var msgDom;\n    var msgIcon;\n    var msgSummary;\n    var severityStr = PopupMessagingStrategyUtils.getSeverityTranslatedString(severityLevel);\n\n    // build message\n    // (x) <Summary Text>\n    // <Detail Text>\n    msgDom = document.createElement('div');\n    msgDom.classList.add(PopupMessagingStrategyUtils._SELECTOR_MESSAGE);\n\n    if (addSeverityClass) {\n      var severityClasses =\n        PopupMessagingStrategyUtils._getSeveritySelector(severityLevel).split(' ');\n\n      for (var i = 0, slen = severityClasses.length; i < slen; ++i) {\n        msgDom.classList.add(severityClasses[i]);\n      }\n    }\n\n    // build msg icon\n    msgIcon = document.createElement('span');\n    var severityIconClasses =\n      PopupMessagingStrategyUtils._getSeverityIconSelector(severityLevel).split(' ');\n\n    for (var j = 0, silen = severityIconClasses.length; j < silen; ++j) {\n      msgIcon.classList.add(severityIconClasses[j]);\n    }\n\n    if (severityStr == null) {\n      msgIcon.removeAttribute('title');\n    } else {\n      msgIcon.setAttribute('title', severityStr);\n    }\n\n    msgIcon.setAttribute('role', 'img');\n\n    msgDom.appendChild(msgIcon); // @HTMLUpdateOK\n\n    // build msg content which includes summary and detail\n    msgContent = document.createElement('span');\n    msgContent.classList.add(PopupMessagingStrategyUtils._SELECTOR_MESSAGE_CONTENT);\n\n    if (\n      (ojthemeutils.parseJSONFromFontFamily('oj-messaging-popup-option-defaults') || {})\n        .messageSummaryOptionDefault === 'header'\n    ) {\n      msgSummary = document.createElement('div');\n      msgSummary.classList.add(PopupMessagingStrategyUtils._SELECTOR_MESSAGE_SUMMARY);\n      msgSummary.textContent = summary;\n\n      msgContent.appendChild(msgSummary); // @HTMLUpdateOK\n    }\n\n    if (detail) {\n      // detail text allows html content. So scrub it before setting it.\n      var detailDom = PopupMessagingStrategyUtils.GetTextDom(document, detail, true);\n      msgDetail = document.createElement('div');\n\n      msgDetail.classList.add(PopupMessagingStrategyUtils._SELECTOR_MESSAGE_DETAIL);\n      PopupMessagingStrategyUtils._appendTextDom(msgDetail, detailDom);\n      msgContent.appendChild(msgDetail); // @HTMLUpdateOK\n    }\n\n    msgDom.appendChild(msgContent); // @HTMLUpdateOK\n\n    return msgDom.outerHTML; // @HTMLUpdateOK\n  };\n\n  /**\n   * @param {number} severity\n   * @return {string} the icon selector for the severity\n   * @private\n   */\n  PopupMessagingStrategyUtils._getSeverityIconSelector = function (severity) {\n    var sevIconStr;\n    // get the icon selector for the severity\n    switch (severity) {\n      case Message.SEVERITY_LEVEL.FATAL:\n        sevIconStr = PopupMessagingStrategyUtils._SELECTOR_MESSAGE_ERROR_ICON;\n        break;\n      case Message.SEVERITY_LEVEL.ERROR:\n        sevIconStr = PopupMessagingStrategyUtils._SELECTOR_MESSAGE_ERROR_ICON;\n        break;\n      case Message.SEVERITY_LEVEL.WARNING:\n        sevIconStr = PopupMessagingStrategyUtils._SELECTOR_MESSAGE_WARNING_ICON;\n        break;\n      case Message.SEVERITY_LEVEL.INFO:\n        sevIconStr = PopupMessagingStrategyUtils._SELECTOR_MESSAGE_INFO_ICON;\n        break;\n      case Message.SEVERITY_LEVEL.CONFIRMATION:\n        sevIconStr = PopupMessagingStrategyUtils._SELECTOR_MESSAGE_CONFIRMATION_ICON;\n        break;\n      default:\n        break;\n    }\n\n    return PopupMessagingStrategyUtils._DEFAULT_STATUS_ICON_SELECTORS + sevIconStr;\n  };\n\n  /**\n   * @param {number} severity\n   * @return {string} the style selector for the severity\n   * @private\n   */\n  PopupMessagingStrategyUtils._getSeveritySelector = function (severity) {\n    var sevSelectorStr;\n    // get the icon selector for the severity\n    switch (severity) {\n      case Message.SEVERITY_LEVEL.FATAL:\n        sevSelectorStr = PopupMessagingStrategyUtils._SELECTOR_MESSAGE_ERROR;\n        break;\n      case Message.SEVERITY_LEVEL.ERROR:\n        sevSelectorStr = PopupMessagingStrategyUtils._SELECTOR_MESSAGE_ERROR;\n        break;\n      case Message.SEVERITY_LEVEL.WARNING:\n        sevSelectorStr = PopupMessagingStrategyUtils._SELECTOR_MESSAGE_WARNING;\n        break;\n      case Message.SEVERITY_LEVEL.INFO:\n        sevSelectorStr = PopupMessagingStrategyUtils._SELECTOR_MESSAGE_INFO;\n        break;\n      case Message.SEVERITY_LEVEL.CONFIRMATION:\n      default:\n        sevSelectorStr = PopupMessagingStrategyUtils._SELECTOR_MESSAGE_CONFIRMATION;\n        break;\n    }\n\n    return sevSelectorStr;\n  };\n\n  /**\n   *  if content is html clean html by allowing only legal tags before returning, to safeguard from\n   *  script injection errors.\n   *\n   * @param {Document} document\n   * @param {string} value\n   * @param {boolean=} htmlAllowed if value can have html content\n   *\n   * @return {Element} dom node containing the scrubbed hint\n   * @public\n   */\n  PopupMessagingStrategyUtils.GetTextDom = function (document, value, htmlAllowed) {\n    var textDom = null;\n\n    if (oj.StringUtils.isString(value)) {\n      if (htmlAllowed && DomUtils.isHTMLContent(value)) {\n        // strip out html start/end tags\n        textDom = DomUtils.cleanHtml(value.substring(6, value.length - 7));\n      } else {\n        textDom = document.createElement('span');\n        textDom.textContent = value;\n      }\n    }\n\n    return textDom;\n  };\n\n  /**\n   * This function can append dom elements or HTML text, similar to how jquery append() works.  It assumes that the html\n   * has already been cleaned.\n   * @param {Element} parentElement The parent dom element that the dom element or html text is appended to.\n   * @param {String|Element} textDom The dom element or HTML text to append\n   * @private\n   */\n  PopupMessagingStrategyUtils._appendTextDom = function (parentElement, textDom) {\n    if (oj.StringUtils.isString(textDom)) {\n      // eslint-disable-next-line no-param-reassign\n      parentElement.innerHTML = textDom; // @HTMLUpdateOK\n    } else {\n      parentElement.appendChild(textDom);\n    }\n  };\n\n  /**\n   * @private\n   * @const\n   * @type {string}\n   */\n  PopupMessagingStrategyUtils._DEFAULT_STATUS_ICON_SELECTORS =\n    'oj-component-icon oj-message-status-icon ';\n\n  /**\n   * @private\n   * @const\n   * @type {string}\n   */\n  PopupMessagingStrategyUtils._SELECTOR_MESSAGE = 'oj-message';\n\n  /**\n   * @private\n   * @const\n   * @type {string}\n   */\n  PopupMessagingStrategyUtils._SELECTOR_MESSAGE_SUMMARY = 'oj-message-summary';\n\n  /**\n   * @private\n   * @const\n   * @type {string}\n   */\n  PopupMessagingStrategyUtils._SELECTOR_MESSAGE_DETAIL = 'oj-message-detail';\n\n  /**\n   * @private\n   * @const\n   * @type {string}\n   */\n  PopupMessagingStrategyUtils._SELECTOR_MESSAGE_CONTENT = 'oj-message-content';\n\n  /**\n   * @private\n   * @const\n   * @type {string}\n   */\n  PopupMessagingStrategyUtils._SELECTOR_MESSAGE_ERROR_ICON = 'oj-message-error-icon';\n\n  /**\n   * @private\n   * @const\n   * @type {string}\n   */\n  PopupMessagingStrategyUtils._SELECTOR_MESSAGE_WARNING_ICON = 'oj-message-warning-icon';\n\n  /**\n   * @private\n   * @const\n   * @type {string}\n   */\n  PopupMessagingStrategyUtils._SELECTOR_MESSAGE_INFO_ICON = 'oj-message-info-icon';\n\n  /**\n   * @private\n   * @const\n   * @type {string}\n   */\n  PopupMessagingStrategyUtils._SELECTOR_MESSAGE_CONFIRMATION_ICON = 'oj-message-confirmation-icon';\n\n  // new theming keys so that we can style the different types of messages differently. Like,\n  // the background-color can be light red for error. This style will go on the same dom node\n  // as the oj-message selector.\n  /**\n   * @private\n   * @const\n   * @type {string}\n   */\n  PopupMessagingStrategyUtils._SELECTOR_MESSAGE_ERROR = 'oj-message-error';\n\n  /**\n   * @private\n   * @const\n   * @type {string}\n   */\n  PopupMessagingStrategyUtils._SELECTOR_MESSAGE_WARNING = 'oj-message-warning';\n\n  /**\n   * @private\n   * @const\n   * @type {string}\n   */\n  PopupMessagingStrategyUtils._SELECTOR_MESSAGE_INFO = 'oj-message-info';\n\n  /**\n   * @private\n   * @const\n   * @type {string}\n   */\n  PopupMessagingStrategyUtils._SELECTOR_MESSAGE_CONFIRMATION = 'oj-message-confirmation';\n\n  /**\n   * @public\n   * @returns {jQuery} popup taken or created from the free pool\n   */\n  PopupMessagingStrategyPoolUtils.getNextFreePopup = function () {\n    var pool = PopupMessagingStrategyPoolUtils._getPool();\n    var popups = pool.find('.' + PopupMessagingStrategyPoolUtils._SELECTOR_MESSAGING);\n    var popup;\n\n    if (popups.length === 0) {\n      popup = $(PopupMessagingStrategyPoolUtils._getPopupContentHtml());\n      popup[0].style.display = 'none';\n      // popup is an empty div\n      popup.appendTo(pool); // @HTMLUpdateOK\n      var popupOptions = {\n        initialFocus: 'none',\n        tail: 'simple',\n        autoDismiss: 'none',\n        modality: 'modeless',\n        animation: { open: null, close: null }\n      };\n      popup.ojPopup(popupOptions);\n    } else {\n      popup = $(popups[0]);\n    }\n\n    return popup;\n  };\n\n  /**\n   * Passed in the root dom element of the message popup and returns the content element.\n   *\n   * @param {jQuery} popup root element\n   * @returns {Element} content element of message popup\n   */\n  PopupMessagingStrategyPoolUtils.getPopupContentNode = function (popup) {\n    return popup.find('.' + PopupMessagingStrategyPoolUtils._SELECTOR_MESSAGING_CONTAINER)[0];\n  };\n\n  /**\n   * @public\n   */\n  PopupMessagingStrategyPoolUtils.destroyFreePopup = function () {\n    var popup;\n    if (PopupMessagingStrategyPoolUtils._getFreePoolCount() > 0) {\n      // if the message popup is open, remove it.\n      // if there is at least one popup in the pool, remove it.\n      popup = PopupMessagingStrategyPoolUtils.getNextFreePopup();\n      var el = popup[0];\n      popup.ojPopup('destroy');\n      el.parentNode.removeChild(el);\n    }\n  };\n\n  /**\n   * Returns a div appended to the body that is a common pool of notewindow popups\n   * used internally by editable value holders.\n   *\n   * @return {jQuery!} messaging popup pool container\n   * @private\n   */\n  PopupMessagingStrategyPoolUtils._getPool = function () {\n    /** @type {jQuery!} */\n    var pool = $('#' + PopupMessagingStrategyPoolUtils._MESSAGING_POPUP_POOL_ID);\n    if (pool.length > 0) {\n      return pool;\n    }\n\n    pool = $('<div>');\n    var poolElem = pool[0];\n    poolElem.setAttribute('id', PopupMessagingStrategyPoolUtils._MESSAGING_POPUP_POOL_ID);\n    poolElem.setAttribute('role', 'presentation');\n    document.body.appendChild(poolElem); // @HTMLUpdateOK\n\n    return pool;\n  };\n\n  /**\n   * @return {number} number of unused popup in the pool\n   * @private\n   */\n  PopupMessagingStrategyPoolUtils._getFreePoolCount = function () {\n    var pool = PopupMessagingStrategyPoolUtils._getPool();\n    var popups = pool.find('.' + PopupMessagingStrategyPoolUtils._SELECTOR_MESSAGING);\n    return popups.length;\n  };\n\n  /**\n   * @return {string} messaging popup html\n   * @private\n   */\n  PopupMessagingStrategyPoolUtils._getPopupContentHtml = function () {\n    return (\n      '<div class=\"' +\n      PopupMessagingStrategyPoolUtils._SELECTOR_MESSAGING +\n      '\">' +\n      '<div class=\"' +\n      PopupMessagingStrategyPoolUtils._SELECTOR_MESSAGING_CONTAINER +\n      '\"></div>' +\n      '</div>'\n    );\n  };\n\n  /**\n   * @const\n   * @private\n   * @type {string}\n   */\n  PopupMessagingStrategyPoolUtils._SELECTOR_MESSAGING_CONTAINER = 'oj-messaging-popup-container';\n\n  /**\n   * @const\n   * @private\n   * @type {string}\n   */\n  PopupMessagingStrategyPoolUtils._SELECTOR_MESSAGING = 'oj-messaging-popup';\n\n  /**\n   * @const\n   * @private\n   * @type {string}\n   */\n  PopupMessagingStrategyPoolUtils._MESSAGING_POPUP_POOL_ID = '__oj_messaging_popup_pool';\n\n  /**\n   * Adapter for handling inline Help and Hints text.\n   * Extends the MessagingStrategy which does more now than messages.\n   *\n   * @extends {oj.MessagingStrategy}\n   * @protected\n   * @constructor\n   * @since 9.0.0\n   * @class InlineHelpHintsStrategy\n   * @ignore\n   * @ojtsignore\n   * @param {Array.<string>} displayOptions an array of messaging artifacts that are\n   * displayed as an inside label for text fields.\n   * For LabelStrategies this is always only labelEdge.\n   */\n  const InlineHelpHintsStrategy = function (displayOptions, parentElement) {\n    this.Init(displayOptions);\n    this._userAssistanceDivElement = parentElement;\n  };\n\n  const OJ_HAS_HELPHINTS_STYLECLASS = 'oj-has-helphints';\n\n  /**\n   * Registers the InlineHelpHintsStrategy constructor function with ComponentMessaging.\n   * No need to register since we are not creating this strategy on from ComponentMessaging.\n   * InlineUserAssistanceStrategy creates it.\n   * @private\n   */\n  // ComponentMessaging\n  //    .registerMessagingStrategy('inlinehelphints',\n  //     InlineHelpHintsStrategy);\n\n  // Subclass from MessagingStrategy\n  oj.Object.createSubclass(InlineHelpHintsStrategy, oj.MessagingStrategy, 'InlineHelpHintsStrategy');\n\n  /**\n   * @param {Object} cm a reference to an instance of ComponentMessaging that provides access to\n   * the latest messaging content.\n   * @public\n   * @memberof InlineHelpHintsStrategy\n   * @instance\n   * @override\n   */\n  InlineHelpHintsStrategy.prototype.activate = function (cm) {\n    InlineHelpHintsStrategy.superclass.activate.call(this, cm);\n    this._createInlineHelpHints();\n  };\n\n  /**\n   * This gets called when display-options changes. It may be that they set\n   * display-options.validator-hints='none', so then if validator hints were\n   * showing they won't show anymore.\n   * @param {Array.<string>} newOptions\n   * @public\n   * @memberof InlineHelpHintsStrategy\n   * @instance\n   * @override\n   */\n  InlineHelpHintsStrategy.prototype.reactivate = function (newOptions, parentElement) {\n    InlineHelpHintsStrategy.superclass.reactivate.call(this, newOptions);\n    this._userAssistanceDivElement = parentElement;\n    // sets up dom and focusin handlers\n    var containerRootExists = this._isContainerRootDomInDocument();\n    if (!containerRootExists) {\n      this._createInlineHelpHints();\n    }\n  };\n\n  /**\n   * @param {Object=} content the messaging content object. If it contains validityState, then\n   * this means the component has messaging content.\n   * @return {boolean}\n   * @memberof InlineHelpHintsStrategy\n   * @instance\n   * @oublic\n   * @override\n   */\n  // eslint-disable-next-line no-unused-vars\n  InlineHelpHintsStrategy.prototype.shouldUpdate = function (content) {\n    // EditableValue updates messaging when help.instruction (aka title), validator hint,\n    // and converter hint are changed.\n    // for help-hints, we have set a helpHintsChanged listener, see\n    // InlineHelpHintsStrategy.prototype._createHelpHintsAttributeEventHandlers\n    let updateTitle = !!(content && content.title !== undefined);\n    let updateValidatorHint = !!(content && content.validatorHint !== undefined);\n    let updateConverterHint = !!(content && content.converterHint !== undefined);\n    return updateTitle || updateValidatorHint || updateConverterHint;\n  };\n\n  /**\n   * Updates component with instance using the content provided. One condition when this gets called\n   * is when we fetch the async validator hint to show it, but since it is async, it doesn't come back\n   * serially, so instead update is called when it is ready. Go ahead and update the inline help hints\n   * right away since you could already be in the focusinhandler at that point.\n   * this also gets called from EditableValue when help.instruction attribute changes.\n   * @memberof InlineHelpHintsStrategy\n   * @instance\n   * @public\n   * @override\n   */\n  InlineHelpHintsStrategy.prototype.update = function () {\n    InlineHelpHintsStrategy.superclass.update.call(this);\n    this._updateInlineHelpHints();\n  };\n\n  /**\n   * Cleans up dom on the component and removes any event listeners it created.\n   * @memberof InlineHelpHintsStrategy\n   * @instance\n   * @public\n   * @override\n   */\n  InlineHelpHintsStrategy.prototype.deactivate = function () {\n    var component = this.GetComponent();\n    var element = component._getRootElement();\n    this._removeHelpHintsContainerAndContent();\n\n    // if we created a event handler then we know we have to delete them here.\n    if (this._focusinCallback) {\n      this._deleteFocusEventHandlers(element);\n    }\n\n    this._deleteHelpHintsAttributeEventHandlers(element);\n\n    InlineHelpHintsStrategy.superclass.deactivate.call(this);\n  };\n\n  /**\n   * Creates the dom if showHelpHints is 'always' (like for radioset)\n   * and adds focus/helpHints attributes event listeners on the component.\n   * Focus in will create the dom and focus out will remove the dom.\n   * @memberof InlineHelpHintsStrategy\n   * @instance\n   * @private\n   */\n  InlineHelpHintsStrategy.prototype._createInlineHelpHints = function () {\n    var component = this.GetComponent();\n\n    let showHelpHints = component._ShowHelpHints();\n    // always is for form comps like radioset/checkboxset, focus is for\n    // inputtext, etc.\n    if (showHelpHints === 'always') {\n      // if showHelpHints is 'focus', then we create the content on the first focusin so that\n      // we can delay getting validation hints.\n      // otherwise add content now.\n      // It is possible there is no content to show.\n      this._addHelpHintsContent(component);\n    }\n\n    if (showHelpHints === 'focus') {\n      // the help container gets created in focusin and removed in focusout\n      this._createFocusEventHandlers(component);\n    }\n    this._createHelpHintsAttributeEventHandlers(component);\n  };\n\n  /**\n   * Creates the focusevent handlers.\n   * @memberof InlineHelpHintsStrategy\n   * @instance\n   * @private\n   */\n  InlineHelpHintsStrategy.prototype._createFocusEventHandlers = function (component) {\n    var element = component._getRootElement();\n    this._focusinCallback = InlineHelpHintsStrategy._focusinHandler.bind(this, component);\n    element.addEventListener('focusin', this._focusinCallback);\n    this._focusoutCallback = InlineHelpHintsStrategy._focusoutHandler.bind(this);\n    element.addEventListener('focusout', this._focusoutCallback);\n  };\n\n  InlineHelpHintsStrategy.prototype._deleteFocusEventHandlers = function (element) {\n    element.removeEventListener('focusin', this._focusinCallback);\n    delete this._focusinCallback;\n    element.removeEventListener('focusout', this._focusoutCallback);\n    delete this._focusoutCallback;\n  };\n\n  /**\n   * Creates the helpHints handlers for help-hints.definition and help-hints.source changes\n   * @param {Object} component form component\n   * @memberof InlineHelpHintsStrategy\n   * @instance\n   * @private\n   */\n  InlineHelpHintsStrategy.prototype._createHelpHintsAttributeEventHandlers = function (component) {\n    var element = component._getRootElement();\n    this._helpHintsChangedCallback = InlineHelpHintsStrategy._helpHintsChangedHandler.bind(this);\n    element.addEventListener('helpHintsChanged', this._helpHintsChangedCallback);\n  };\n\n  InlineHelpHintsStrategy.prototype._deleteHelpHintsAttributeEventHandlers = function (element) {\n    element.removeEventListener('helpHintsChanged', this._helpHintsChangedCallback);\n    delete this._helpHintsChangedCallback;\n  };\n\n  /**\n   * @return {Element} help hints inline container dom element, if it exists,\n   * null otherwise. It is the oj-helphints-inline-container dom element.\n   * This may be a child of the user assistance dom element or not because\n   * radioset/checkboxset it is not since it is under the label, so start\n   * with root\n   * @memberof InlineHelpHintsStrategy\n   * @instance\n   * @private\n   */\n  InlineHelpHintsStrategy.prototype._getHelpHintsInlineContainer = function (rootElem) {\n    return rootElem.querySelector('.oj-helphints-inline-container');\n  };\n\n  /**\n   * Returns true if the div exists. This is needed\n   * because it is possible that components delete their dom, including\n   * the inline dom, which means the this.containerRoot is not\n   * null.\n   * @return {boolean} true if this.containerRoot exists in the dom\n   * @private\n   * @memberof InlineHelpHintsStrategy\n   * @instance\n   */\n  InlineHelpHintsStrategy.prototype._isContainerRootDomInDocument = function () {\n    let containerRootExistsInDocument = false;\n    if (this.containerRoot) {\n      let id = this.containerRoot.id;\n      containerRootExistsInDocument = document.getElementById(id);\n    }\n    return containerRootExistsInDocument !== null;\n  };\n\n  /**\n   * @static\n   * @private\n   * @param {CustomEvent} event helpChanged event\n   */\n  // eslint-disable-next-line no-unused-vars\n  InlineHelpHintsStrategy._helpHintsChangedHandler = function (event) {\n    this._updateInlineHelpHints();\n  };\n\n  /**\n   * Removes the helphints container and its content.\n   * @param {Object} component the form component\n   * @return {boolean} Returns true if content was added\n   * @memberof InlineHelpHintsStrategy\n   * @instance\n   * @private\n   */\n  InlineHelpHintsStrategy.prototype._removeHelpHintsContainerAndContent = function () {\n    var component = this.GetComponent();\n    var element = component._getRootElement();\n    var container = this._getHelpHintsInlineContainer(element);\n    if (container) {\n      this.RemoveAriaDescribedByForInlineMessaging(container);\n      container.parentElement.removeChild(container);\n      if (this._userAssistanceDivElement) {\n        this._userAssistanceDivElement.classList.remove(OJ_HAS_HELPHINTS_STYLECLASS);\n        this.containerRoot = null;\n      }\n    }\n  };\n\n  /**\n   * Creates the content, if any.\n   * @param {Object} component the form component\n   * @return {boolean} Returns true if content was added\n   * @memberof InlineHelpHintsStrategy\n   * @instance\n   * @private\n   */\n  InlineHelpHintsStrategy.prototype._addHelpHintsContent = function (component) {\n    let hintsHtml;\n    let helpOptions = component.options.help;\n    let helpInstruction = helpOptions ? helpOptions.instruction : null;\n    let helpHints = component.options.helpHints;\n\n    if (helpInstruction) {\n      let helpInstructionDom = PopupMessagingStrategyUtils.GetTextDom(\n        document,\n        helpInstruction,\n        true\n      );\n      // turn it into a string\n      let helpInstructionDomString = helpInstructionDom ? helpInstructionDom.outerHTML : ''; // @HTMLUpdateOK\n      hintsHtml = helpInstructionDomString;\n    }\n    if (!hintsHtml && this.ShowValidatorHint()) {\n      // helpInstruction takes priority. If it is not set, check validator hints.\n      // This involves loading the validators if they are not set.\n      // ShowValidatorHint may be null if the display-options.validatorHint = 'none',\n      // otherwise we show the validator hint.\n      // no helpInstruction, so try to get validation hint\n      // we do the same thing that we do in PopupComponentMessages\n      let hints = this.GetValidatorHints();\n      if (hints.length > 0) {\n        hintsHtml = hints.join('<br/>');\n      }\n    }\n    if (!hintsHtml) {\n      // try to get help definition\n      // We get notified of changes to help-hints in\n      // InlineHelpHintsStrategy.prototype._createHelpHintsAttributeEventHandlers\n      let definition = helpHints ? helpHints.definition : null;\n      if (definition) {\n        hintsHtml = definition;\n      }\n    }\n    // try to get the converterHint\n    if (!hintsHtml && this.ShowConverterHint()) {\n      let hints = this.GetConverterHint();\n      if (hints.length > 0) {\n        hintsHtml = hints.join('<br/>');\n      }\n    }\n\n    let source = helpHints ? helpHints.source : null;\n    let helpSourceDom;\n    if (source) {\n      helpSourceDom = this._getHelpSourceDom(source);\n    }\n\n    // create container if needed\n    if ((hintsHtml || helpSourceDom) && !this.containerRoot) {\n      this.containerRoot = document.createElement('div');\n      this.containerRoot.classList.add('oj-helphints-inline-container');\n      $(this.containerRoot).uniqueId();\n      this.AddAriaDescribedByForInlineMessaging(this.containerRoot);\n      let showHelpHintsLocation = component._ShowHelpHintsLocation();\n      if (showHelpHintsLocation === 'inline') {\n        this._userAssistanceDivElement.appendChild(this.containerRoot);\n      } else {\n        let formControlContainerDom = component._GetFormControlContainer();\n        formControlContainerDom.parentElement.insertBefore(\n          this.containerRoot,\n          formControlContainerDom\n        );\n      }\n    }\n    // Now we have created the container root, we can add the hintsHtml\n    // This function is also called when updateHelpHintsContent, so it is possible\n    // that there is no more help and hintsHtml is '',\n    // in which case we want to clear out textContent.\n    if (this.containerRoot) {\n      if (hintsHtml) {\n        hintsHtml = '<div>' + hintsHtml + '</div>';\n        this.containerRoot.innerHTML = hintsHtml; // @HTMLUpdateOK\n      }\n      if (helpSourceDom) {\n        this.containerRoot.appendChild(helpSourceDom);\n      }\n      if (!(hintsHtml || helpSourceDom)) {\n        this.containerRoot.innerHTML = ''; // @HTMLUpdateOK\n      }\n    }\n\n    // only when the help/required/messages are all inline does the styleclass matter.\n    const showInline = component._ShowHelpHintsLocation() === 'inline';\n    if (this._userAssistanceDivElement && showInline) {\n      // add this selector the first time we have hints. then use\n      // theming to hide/show it or hide/show required dom according to UX rules.\n      if (hintsHtml || helpSourceDom) {\n        this._userAssistanceDivElement.classList.add(OJ_HAS_HELPHINTS_STYLECLASS);\n      } else {\n        this._userAssistanceDivElement.classList.remove(OJ_HAS_HELPHINTS_STYLECLASS);\n      }\n    }\n    return hintsHtml || helpSourceDom;\n  };\n\n  /**\n   * @private\n   * @memberof InlineHelpHintsStrategy\n   * @instance\n   * @param {String} source\n   */\n  InlineHelpHintsStrategy.prototype._getHelpSourceDom = function (source) {\n    oj.Assert.assertString(source);\n    let helpAnchorDiv = document.createElement('div');\n    let helpSourceAnchor = document.createElement('a');\n    helpSourceAnchor.classList.add('oj-helphints-anchor');\n\n    helpSourceAnchor.setAttribute('tabindex', '0');\n    helpSourceAnchor.setAttribute('target', '_blank');\n    try {\n      DomUtils.validateURL(source);\n      helpSourceAnchor.setAttribute('href', source);\n    } catch (e) {\n      throw new Error(e + '. The source option (' + source + ') is invalid.');\n    }\n    // add Learn more... text on the link\n    let helpSourceText = Translations.getTranslatedString('oj-ojEditableValue.helpSourceText');\n    helpSourceAnchor.textContent = helpSourceText;\n    helpAnchorDiv.appendChild(helpSourceAnchor);\n    DomUtils.makeFocusable({\n      element: helpSourceAnchor,\n      applyHighlight: true,\n      component: this.GetComponent()\n    });\n    return helpAnchorDiv;\n  };\n\n  /**\n   * This gets called when a component property changes that will affect the\n   * inline help hints content or when mc.update is called\n   * // (like when an async validator hint resolves)\n   * This also gets called from EditableValue when help.instruction attribute changes.\n   * Help Hints are only shown on focus for some components, and always for others.\n   * This won't change the content unless it is in focus or we always want to show the hints.\n   * @param {boolean} showRightAway true if we need to add the content right away\n   * which is the case when the update method is called.\n   * @private\n   * @memberof InlineHelpHintsStrategy\n   * @instance\n   */\n  InlineHelpHintsStrategy.prototype._updateInlineHelpHints = function () {\n    const component = this.GetComponent();\n\n    if (this.containerRoot) {\n      // clear out the containerRoot's innerHTML since we need to create the content\n      // again.\n      this.containerRoot.innerHTML = ''; // @HTMLUpdateOK\n    }\n    let showHelpHints = component._ShowHelpHints();\n    // if the component is one that always shows the help hints, like oj-checkboxset, or\n    // if it is one that shows on focus and it has focus, then add help hints content.\n    // if the component already has focus when an update occurs, add the help content\n    if (showHelpHints === 'always' || this._focusIn) {\n      // if showHelpHints is 'focus', then we create the content on the first focusin so that\n      // we can delay getting validation hints.\n      // otherwise add content now.\n      let hasContent = this._addHelpHintsContent(component);\n      if (!hasContent) {\n        this._removeHelpHintsContainerAndContent();\n      }\n    }\n  };\n\n  /**\n   * Show the help hint message on focus. We remove it on focusout.\n   * We show helpInstruction and if that's not there validaton hint and\n   * if that is not there help definition. And on whichever of these, we show\n   * Learn more... for help.source if that is there.\n   * @static\n   * @private\n   * @param {Object} component form component root element\n   * @param {CustomEvent} event focus event\n   */\n  // eslint-disable-next-line no-unused-vars\n  InlineHelpHintsStrategy._focusinHandler = function (component, event) {\n    let rootElem = event.currentTarget;\n    // if we are focusing in from already within the component, return\n    // e.g., when we tab from the input to the help source anchor;\n    // relatedTarget would be the input in this case.\n    let relatedTarget = event.relatedTarget;\n    if (relatedTarget && rootElem.contains(relatedTarget)) {\n      return;\n    }\n\n    if (this.containerRoot) {\n      // clear out the containerRoot's innerHTML since need to create the content\n      // again.\n      this.containerRoot.innerHTML = ''; // @HTMLUpdateOK\n    }\n\n    // flag needed to know if we are back in focusin in the focusout\n    // handler during the animation promise resolution.\n    this._focusIn = true;\n\n    let hasContent = this._addHelpHintsContent(component);\n    if (hasContent) {\n      this._animateOpen();\n    } else {\n      // it is possible that when the component has focus, something is changed,\n      // that causes the help to no longer hae content, like the app dev\n      // removes the help property from the component.\n      // if that's the case, then remove it.\n      this._removeHelpHintsContainerAndContent();\n    }\n  };\n\n  /**\n   * @static\n   * @private\n   * @param {Object} component the form component\n   * @param {CustomEvent} event focus event\n   */\n  InlineHelpHintsStrategy._focusoutHandler = function (event) {\n    // make this focusout since focusout bubbles and blur does not.\n    // This way you can put the event handler on the component's root\n    // element and if any child element that can get focus loses focus,\n    // this handler will be called. But we need to check if we are still\n    // within the element or not. This way the inline hint won't disappear\n    // if we focus on the help source Learn more... link.\n    // The currentTarget read-only property of the Event interface identifies\n    // the current target for the event, as the event traverses the DOM.\n    // It always refers to the element to which the event handler has been attached.\n    let rootElem = event.currentTarget;\n    let relatedTarget = event.relatedTarget;\n    if (relatedTarget && rootElem.contains(relatedTarget)) {\n      return;\n    }\n    this._focusIn = false;\n\n    // if we have helphint content, then animate it closed on focusout.\n    if (this.containerRoot && this.containerRoot.hasChildNodes()) {\n      // animate it closed.\n      let action = 'close';\n      let defaults = this._getDefaultAnimation();\n      let effect = defaults.close; // e.g., {effect: 'fadeOut', duration: '200ms'}\n      this._setBusyState();\n      let self = this;\n      AnimationUtils.startAnimation(\n        this.containerRoot,\n        'inline-hints-' + action,\n        effect,\n        this.GetComponent()\n      ).then(() => {\n        // As of v12.0.0 we are removing the dom instead of using css.\n        this._removeHelpHintsContainerAndContent();\n        self._clearBusyState();\n      });\n    }\n  };\n\n  /**\n   * Get the default animation.\n   * To save from sending unnecessary theming variables to the client, we hardcode.\n   *\n   * @private\n   * @memberof InlineHelpHintsStrategy\n   * @instance\n   * @return {Object} Object with open and close key for the default animation.\n   */\n  InlineHelpHintsStrategy.prototype._getDefaultAnimation = function () {\n    // Load the default animation once per page scope\n    if (!InlineHelpHintsStrategy._defaultAnimation) {\n      InlineHelpHintsStrategy._defaultAnimation = {\n        open: {\n          effect: 'fadeIn',\n          duration: '200ms',\n          timingFunction: 'cubic-bezier(0.4,0,0.2,1)'\n        },\n        close: {\n          effect: 'fadeOut',\n          duration: '200ms',\n          timingFunction: 'cubic-bezier(0.4,0,0.2,1)'\n        }\n      };\n    }\n\n    return InlineHelpHintsStrategy._defaultAnimation;\n  };\n\n  /**\n   * Animate the help hints container open\n   *\n   * @private\n   * @memberof InlineHelpHintsStrategy\n   * @instance\n   */\n  InlineHelpHintsStrategy.prototype._animateOpen = function () {\n    if (this.containerRoot && this.containerRoot.hasChildNodes()) {\n      // animate it in.\n      let defaults = this._getDefaultAnimation();\n      let effect = defaults.open; // e.g., {effect: 'fadeIn', duration: '200ms'}\n      let action = 'open';\n      AnimationUtils.startAnimation(\n        this.containerRoot,\n        'inline-hints-' + action,\n        effect,\n        this.GetComponent()\n      );\n    }\n  };\n\n  /**\n   * Set busy state before opening or closing inline message.\n   *\n   * @private\n   * @memberof InlineHelpHintsStrategy\n   * @instance\n   */\n  InlineHelpHintsStrategy.prototype._setBusyState = function () {\n    // Set a page-level busy state if not already set\n    if (!this._resolveBusyState) {\n      let component = this.GetComponent();\n      let domElem = component._getRootElement();\n      let busyContext = Context.getContext(domElem).getBusyContext();\n      let description = 'The page is waiting for inline help hints ';\n\n      if (domElem && domElem.id) {\n        description += 'for \"' + domElem.id + '\" ';\n      }\n      description += 'to open/close';\n\n      this._resolveBusyState = busyContext.addBusyState({ description: description });\n    }\n  };\n\n  /**\n   * Clear busy state after opening or closing inline helphints.\n   *\n   * @private\n   * @memberof InlineHelpHintsStrategy\n   * @instance\n   */\n  InlineHelpHintsStrategy.prototype._clearBusyState = function () {\n    if (this._resolveBusyState) {\n      this._resolveBusyState();\n      this._resolveBusyState = null;\n    }\n  };\n\n  /**\n   * A messaging strategy that places the messaging content inline (underneath) the editableValue\n   * component.\n   *\n   * @param {Array.<string>} displayOptions an array of messaging artifacts displayed inline. e.g,\n   * 'messages' (for now only 'messages' are supported inline, not converterHints, and others)\n   * @constructor\n   * @extends {oj.MessagingStrategy}\n   * @private\n   */\n  const InlineMessagingStrategy = function (displayOptions, parentElement) {\n    this.Init(displayOptions);\n    this._parentElement = parentElement;\n  };\n\n  /**\n   * Registers the InlineMessagingStrategy constructor function with ComponentMessaging.\n   *\n   * @private\n   */\n  oj.ComponentMessaging.registerMessagingStrategy(\n    oj.ComponentMessaging._STRATEGY_TYPE.INLINE,\n    InlineMessagingStrategy\n  );\n\n  // Subclass from MessagingStrategy\n  oj.Object.createSubclass(\n    InlineMessagingStrategy,\n    oj.MessagingStrategy,\n    'oj.InlineMessagingStrategy'\n  );\n\n  /**\n   * Does nothing; We do not create the inline messaging dom until we get messages to show.\n   *\n   * @param {Object} cm a reference to an instance of ComponentMessaging that provides access to\n   * the latest messaging content. * @private\n   * @memberof oj.InlineMessagingStrategy\n   * @instance\n   * @override\n   *\n   */\n  InlineMessagingStrategy.prototype.activate = function (cm) {\n    InlineMessagingStrategy.superclass.activate.call(this, cm);\n    // We do not create the inline messaging dom until we get messages to show.\n  };\n\n  /**\n   * Reinitializes with the new display options and updates component messaging using the new content.\n   *\n   * @param {Array.<string>} newDisplayOptions\n   * @private\n   * @memberof oj.InlineMessagingStrategy\n   * @instance\n   * @override\n   *\n   */\n  InlineMessagingStrategy.prototype.reactivate = function (newDisplayOptions, parentElement) {\n    InlineMessagingStrategy.superclass.reactivate.call(this, newDisplayOptions);\n    this._parentElement = parentElement;\n    this._updateInlineMessage();\n  };\n\n  /**\n   * Returns true if the messaging content should update. This method is an\n   * optimization because the update() method is called too often and any time any content changes.\n   * The only time InlineMessagingStrategy#update needs to execute is when the ComponentValidity\n   * object is in the content because we don't add this unless there are messages.\n   *\n   * @param {Object=} content the messaging content object. If it contains validityState, then\n   * this means the component has messaging content.\n   * @return {boolean}\n   * @memberof oj.InlineMessagingStrategy\n   * @instance\n   * @private\n   * @override\n   */\n  InlineMessagingStrategy.prototype.shouldUpdate = function (content) {\n    // content is messaging content, and in EditableValue we add a validityState for\n    // messages, valid, and severity, so if validityState is there, we know messages are there.\n    return !!(content && content.validityState !== undefined);\n  };\n\n  /**\n   * Updates component with instance using the content provided.\n   * @memberof oj.InlineMessagingStrategy\n   * @instance\n   * @private\n   * @override\n   */\n  InlineMessagingStrategy.prototype.update = function () {\n    InlineMessagingStrategy.superclass.update.call(this);\n    this._updateInlineMessage();\n  };\n\n  /**\n   * Cleans up messages on the component and destroys any widgets it created.\n   *\n   * @memberof oj.InlineMessagingStrategy\n   * @instance\n   * @private\n   * @override\n   */\n  InlineMessagingStrategy.prototype.deactivate = function () {\n    this._removeMessagingContentRootDom();\n    InlineMessagingStrategy.superclass.deactivate.call(this);\n  };\n\n  /**\n   * Get the default animation.\n   *\n   * @private\n   * @memberof oj.InlineMessagingStrategy\n   * @instance\n   */\n  InlineMessagingStrategy.prototype._getDefaultAnimation = function () {\n    // Load the default animation once per page scope\n    if (!InlineMessagingStrategy._defaultAnimation) {\n      var animation = (ojthemeutils.parseJSONFromFontFamily('oj-messaging-inline-option-defaults') || {})\n        .animation;\n      animation = animation || {};\n      InlineMessagingStrategy._defaultAnimation = animation;\n    }\n\n    return InlineMessagingStrategy._defaultAnimation;\n  };\n\n  /**\n   * Replace animation options with runtime values, such as oldHeight and\n   * newHeight, which are specified as placeholders in the default animations\n   * but their values are not known until runtime.\n   *\n   * @param {string|Object|Array} effects - The animation options.\n   * @param {Object} map - An object containing the runtime property key-value map.\n   * @return {string|Object|Array} The resolved animation effects\n   * @private\n   * @memberof oj.InlineMessagingStrategy\n   * @instance\n   */\n  InlineMessagingStrategy.prototype._replaceAnimationOptions = function (effects, map) {\n    var effectsAsString;\n    var isEffectsTypeofString;\n\n    if (!oj.StringUtils.isString(effects)) {\n      isEffectsTypeofString = false;\n      effectsAsString = JSON.stringify(effects);\n    } else {\n      isEffectsTypeofString = true;\n      effectsAsString = effects + ''; // append \"\" to get around a closure compiler warning\n    }\n\n    var keys = Object.keys(map);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      effectsAsString = effectsAsString.replace(new RegExp(key, 'g'), map[key]);\n    }\n\n    var _effects = isEffectsTypeofString\n      ? effectsAsString\n      : /** @type {Object} */ (JSON.parse(effectsAsString));\n\n    return _effects;\n  };\n\n  /**\n   * Determine the animation for displaying new messaging content.\n   * returns 'open' if the inline message is getting bigger with the new content\n   * returns 'close' if the inline message is getting smaller with the new content\n   * else returns 'noanimation' if the inline message size is the same\n   *\n   * @param {jQuery} rootElem - The root element for inline message.\n   * @param {string} newContent - The new content to display.\n   * @private\n   * @memberof oj.InlineMessagingStrategy\n   * @instance\n   */\n  InlineMessagingStrategy.prototype._determineAnimation = function (rootElem, newContent) {\n    var action;\n    var effect;\n    var parsedEffect;\n    var defaults = this._getDefaultAnimation();\n    if (defaults) {\n      var el = rootElem[0];\n      var oldContent = el.innerHTML; // @HTMLUpdateOK\n      var oldHeight = el.offsetHeight;\n      var newHeight;\n\n      el.innerHTML = newContent; // @HTMLUpdateOK\n      newHeight = el.offsetHeight;\n      el.innerHTML = oldContent; // @HTMLUpdateOK\n\n      if (newHeight > oldHeight) {\n        action = 'open';\n      } else if (newHeight < oldHeight) {\n        action = 'close';\n      } else {\n        action = 'noanimation';\n      }\n\n      if (action !== 'noanimation') {\n        effect = defaults[action];\n        // An example of effect is 'fadeIn' or 'expand',\n        // and not all effects take oldHeight and newHeight\n        if (effect) {\n          parsedEffect = this._replaceAnimationOptions(effect, {\n            '#oldHeight': oldHeight + 'px',\n            '#newHeight': newHeight + 'px'\n          });\n        }\n      }\n    }\n\n    return { action: action, effect: parsedEffect };\n  };\n\n  /**\n   * Set busy state before opening or closing inline message.\n   *\n   * @private\n   * @memberof oj.InlineMessagingStrategy\n   * @instance\n   */\n  InlineMessagingStrategy.prototype._setBusyState = function () {\n    // Set a page-level busy state if not already set\n    if (!this._resolveBusyState) {\n      var component = this.GetComponent();\n      var jElem = component ? component.element : null;\n      var domElem = jElem ? jElem[0] : null;\n      var busyContext = Context.getContext(domElem).getBusyContext();\n      var description = 'The page is waiting for inline message ';\n\n      if (domElem && domElem.id) {\n        description += 'for \"' + domElem.id + '\" ';\n      }\n      description += 'to open/close';\n\n      this._resolveBusyState = busyContext.addBusyState({ description: description });\n    }\n  };\n\n  /**\n   * Clear busy state after opening or closing inline message.\n   *\n   * @private\n   * @memberof oj.InlineMessagingStrategy\n   * @instance\n   */\n  InlineMessagingStrategy.prototype._clearBusyState = function () {\n    if (this._resolveBusyState) {\n      this._resolveBusyState();\n      this._resolveBusyState = null;\n    }\n  };\n\n  /**\n   * Queue up inline messaging open/close actions so that it only animate once\n   * for multiple updates within the same tick.\n   *\n   * @param {string} contentToShow - The messaging content to show.\n   * @private\n   * @memberof oj.InlineMessagingStrategy\n   * @instance\n   */\n  InlineMessagingStrategy.prototype._queueAction = function (contentToShow) {\n    var self = this;\n    var rootElem = this.$messagingContentRoot;\n\n    // Return if we are animating. This flag is set right before we\n    // start animating. When animation is done, it will call _queueAction\n    // again with this._currentContentToShow. That way we only show the latest content.\n    // Otherwise we may start a new animation or we may swap content\n    //  while we are still animating a previous contentToShow.\n    if (self._inInlineMessagingAnimation) {\n      this._currentContentToShow = contentToShow;\n      return;\n    }\n    this._currentContentToShow = null;\n    this._setBusyState();\n\n    // add styleclass as soon as we start animating open so that\n    // if there are inline help-hints, they are hidden with the\n    // oj-helphints.oj-has-messages {display:none} selector.\n    if (contentToShow !== '') {\n      this._addRemoveOjHasMessagesClass(contentToShow);\n    }\n\n    // If there is a pending timeout, clear it and set a new one so that only the\n    // last animation queued within the same tick will be run.  Otherwise we will\n    // end up with too many animation since the messaging framework keeps clearing\n    // and updating the message display during validation, etc.\n    if (this._timeoutId) {\n      clearTimeout(this._timeoutId);\n    }\n\n    // JET-46567 - JAWS is reading out error message even after selecting correct value\n    // allow a component to opt-in to receive notification before and after the timer fires\n    // so that it can wait until after messages have been updated to finish processing,\n    // for example to change focus after screen reader text has been updated\n    var component = this.GetComponent();\n    if (component && component._NotifyMessagingStrategyQueueAction) {\n      if (!this._notifyQueueActionPromise) {\n        var promiseResolve;\n        this._notifyQueueActionPromise = new Promise(function (resolve) {\n          promiseResolve = resolve;\n        });\n        this._notifyQueueActionPromiseResolve = function () {\n          this._notifyQueueActionPromise = null;\n          this._notifyQueueActionPromiseResolve = null;\n          promiseResolve();\n        }.bind(this);\n      }\n      component._NotifyMessagingStrategyQueueAction(this._notifyQueueActionPromise);\n    }\n\n    this._timeoutId = setTimeout(function () {\n      self._timeoutId = null;\n\n      // Make sure $messagingContentRoot is still there.  It could have been\n      // removed by the time the timeout function is run.\n      if (rootElem && rootElem[0]) {\n        // Parse and substitute runtime values in animation options\n        var actionEffect = self._determineAnimation(rootElem, contentToShow);\n        // action 'close' means the message container is getting smaller\n        // (may be a new, smaller message), if it is 'open' it is\n        // getting larger. If it is 'noanimation' the size hasn't changed and\n        // we don't animate in this case.\n        var action = actionEffect.action;\n        var effect = actionEffect.effect;\n\n        if (action === 'noanimation') {\n          rootElem[0].innerHTML = contentToShow; // @HTMLUpdateOK\n          self._addRemoveOjHasMessagesClass(contentToShow);\n          self._clearBusyState();\n\n          if (self._notifyQueueActionPromiseResolve) {\n            self._notifyQueueActionPromiseResolve();\n          }\n        } else {\n          // aria-live polite is needed so a screen reader will read the inline message without the\n          // user needing to set focus to the input field. aria-live: 'off' is needed before\n          // content animates otherwise JAWS will re-read the message.\n          // We think JAWS re-reads when the dom changes, even if that is with css.\n          // This still doesn't work in Chrome because Chrome or JAWS on Chrome\n          // seem to buffer the aria-live: polite and not read the aria-live: off.\n          // The accessibility team agrees that because it works in\n          // Firefox this is either a JAWS or Chrome bug, not a JET bug.\n          if (action === 'close') {\n            rootElem[0].setAttribute('aria-live', 'off');\n          } else {\n            rootElem[0].setAttribute('aria-live', 'polite');\n          }\n\n          // Set the new content first if we're opening.\n          if (action === 'open') {\n            rootElem[0].innerHTML = contentToShow; // @HTMLUpdateOK\n          }\n          // Invoke animation\n          self._inInlineMessagingAnimation = true;\n          AnimationUtils.startAnimation(\n            rootElem[0],\n            'inline-' + action,\n            effect,\n            self.GetComponent()\n          ).then(function () {\n            var afterAnimateContentToShow;\n            self._inInlineMessagingAnimation = false;\n\n            // Set the new content last if we're closing; in other words,\n            // if we are closing we are animating\n            // the old content before we switch in the new content, and to prevent a JAWS re-read,\n            // we set aria-live to 'off' above. Now that we are done animating set it to\n            // polite so JAWS will read the new message.\n            if (action === 'close') {\n              rootElem[0].setAttribute('aria-live', 'polite');\n              rootElem[0].innerHTML = contentToShow; // @HTMLUpdateOK\n            }\n            // Clear busy state when animation ends. If _queueAction was called\n            // while we were animating the previous _queueAction request,\n            // we saved the _currentContentToShow and returned. Now go\n            // ahead a call _queueAction with that new content now that the\n            // animation from the previous contentToShow has ended.\n            if (self._currentContentToShow !== null) {\n              afterAnimateContentToShow = self._currentContentToShow;\n              self._currentContentToShow = null;\n              self._queueAction(afterAnimateContentToShow);\n            } else {\n              if (contentToShow === '') {\n                self._addRemoveOjHasMessagesClass(contentToShow);\n              }\n              self._clearBusyState();\n\n              if (self._notifyQueueActionPromiseResolve) {\n                self._notifyQueueActionPromiseResolve();\n              }\n            }\n          });\n        }\n      } else {\n        // Just clear the busy state if $messagingContentRoot no longer exists\n        self._addRemoveOjHasMessagesClass('');\n        self._clearBusyState();\n\n        if (self._notifyQueueActionPromiseResolve) {\n          self._notifyQueueActionPromiseResolve();\n        }\n      }\n    }, 0);\n  };\n\n  /**\n   * Adds oj-has-messages styleclass if there is contentToShow otherwise\n   * removes oj-has-messages and removes messaging dom.\n   *  add/remove oj-has-messages on this._parentElement if it exists;\n   * if the animation is opening, add 'oj-has-messages' right away.\n   * if the animation is closing, then don't remove 'oj-has-messages' until the messages is\n   * closed completely. The help-hints that are also inline only displays when 'oj-has-messages' is\n   * not there. So if we remove oj-has-messages too fast, both will show at the same time.\n   * This is why this is method called in the AnimationUtils.startAnimation callback.\n   *\n   * @private\n   * @memberof oj.InlineMessagingStrategy\n   * @instance\n   */\n  InlineMessagingStrategy.prototype._addRemoveOjHasMessagesClass = function (contentToShow) {\n    if (this._parentElement) {\n      if (contentToShow) {\n        this._parentElement.classList.add('oj-has-messages');\n      } else {\n        this._parentElement.classList.remove('oj-has-messages');\n        this._removeMessagingContentRootDom();\n      }\n    }\n  };\n\n  /**\n   * If the inline message is already open its contents need to updated when update() or\n   * reactivate() is called.\n   *\n   * @private\n   * @memberof oj.InlineMessagingStrategy\n   * @instance\n   */\n  InlineMessagingStrategy.prototype._updateInlineMessage = function () {\n    var contentToShow;\n    var domNode;\n\n    // contentToShow will be \"\" (a falsey) if there are no messages to show.\n    contentToShow = this._buildInlineHtml();\n\n    // create the inline messaging dom if there is content to show and the dom hasn't been created.\n    // We do not create the inline messaging dom until the first content is shown.\n    var messagingRootExists = this._isMessagingContentRootDomInDocument();\n    if (contentToShow && !messagingRootExists) {\n      this._createInlineMessage();\n    }\n\n    if (this.$messagingContentRoot && this.$messagingContentRoot[0]) {\n      // Only enable default animation for custom elements so that automated tests\n      // for legacy components are not affected\n      if (this.GetComponent()._IsCustomElement()) {\n        // This may be called multiple times within the same event cycle because the\n        // old message is cleared before validation and the message is\n        // reconstructed.  Since we now have animation for inline message, we don't\n        // want to update the DOM every single time.  Instead we queue up the\n        // updates and will only show the last one within the same event cyle.\n        this._queueAction(contentToShow);\n      } else {\n        // Legacy components don't have animation so just update the DOM\n        // push new content into inline message dom\n        domNode = this.$messagingContentRoot[0];\n\n        // contentToShow includes content that may come from app. It is scrubbed for illegal tags\n        // before setting to innerHTML\n        domNode.innerHTML = contentToShow; // @HTMLUpdateOK\n      }\n    }\n  };\n\n  InlineMessagingStrategy.prototype._createInlineMessage = function () {\n    var widget;\n\n    this.$messagingContentRoot = $(this._getInlineContentHtml());\n    this.AddAriaDescribedByForInlineMessaging(this.$messagingContentRoot[0]);\n    this._addAriaLive(this.$messagingContentRoot);\n    // append content that goes in inline messaging div\n\n    if (this._parentElement) {\n      this._parentElement.appendChild(this.$messagingContentRoot[0]); // @HTMLUpdateOK\n    } else {\n      // make it the very LAST child of the widget.\n      widget = this.GetComponent().widget();\n      widget[0].appendChild(this.$messagingContentRoot[0]); // @HTMLUpdateOK\n    }\n  };\n\n  /**\n   * Returns the dom for the messaging-inline-container.\n   *\n   * @return {string}\n   * @private\n   * @memberof oj.InlineMessagingStrategy\n   * @instance\n   */\n  InlineMessagingStrategy.prototype._getInlineContentHtml = function () {\n    return \"<div class='oj-messaging-inline-container'></div>\";\n  };\n\n  /**\n   * Removes the messaging content root dom and anything else that was adding during the\n   * creation of the messaging content root dom.\n   *\n   * @private\n   * @memberof oj.InlineMessagingStrategy\n   * @instance\n   */\n  InlineMessagingStrategy.prototype._removeMessagingContentRootDom = function () {\n    var messagingRootExists = this._isMessagingContentRootDomInDocument();\n    if (messagingRootExists) {\n      this.RemoveAriaDescribedByForInlineMessaging(this.$messagingContentRoot[0]);\n      let parentNode = this.$messagingContentRoot[0].parentNode;\n      if (parentNode) {\n        parentNode.removeChild(this.$messagingContentRoot[0]);\n      }\n    }\n    this.$messagingContentRoot = null;\n  };\n\n  /**\n   * aria-live: polite\n   * This is needed so a screen reader will read the inline message without the user needing to\n   * set focus to the input field.\n   * @param {jQuery} messagingRoot\n   * @memberof oj.InlineMessagingStrategy\n   * @instance\n   * @private\n   */\n  InlineMessagingStrategy.prototype._addAriaLive = function (messagingRoot) {\n    oj.Assert.assertPrototype(messagingRoot, $);\n    messagingRoot[0].setAttribute('aria-live', 'polite');\n  };\n\n  /**\n   * Returns the content to show inside the inline message html.\n   * @return {string} content to show, else \"\". \"\" is a falsey.\n   * @private\n   * @memberof oj.InlineMessagingStrategy\n   * @instance\n   */\n  InlineMessagingStrategy.prototype._buildInlineHtml = function () {\n    var document;\n\n    // For now anyway, ShowMessages is always true since the inlineMessaging case is for messaging.\n    if (this.ShowMessages()) {\n      document = this.GetComponent().document[0];\n      // returns messages or \"\" if there are none\n      return this._buildMessagesHtml(document);\n    }\n    return '';\n  };\n\n  /**\n   * Returns the content to show inside messages (not hints)\n   * @param {Document} document\n   * @return {string} content if there are messages, else \"\". \"\" is a falsey.\n   * @private\n   * @memberof oj.InlineMessagingStrategy\n   * @instance\n   */\n  InlineMessagingStrategy.prototype._buildMessagesHtml = function (document) {\n    var content = '';\n    var maxSeverity;\n    var messages;\n    var renderSeveritySelectors = true;\n\n    if (this.HasMessages()) {\n      messages = this.GetMessages();\n      maxSeverity = this.GetMaxSeverity();\n      content = PopupMessagingStrategyUtils.buildMessagesHtml(\n        document,\n        messages,\n        maxSeverity,\n        renderSeveritySelectors\n      );\n    }\n    return content;\n  };\n\n  /**\n   * Returns true if the inline messaging div exists. This is needed\n   * because it is possible that components delete their dom, including\n   * the inline message dom, which means the this.$messagingContentRoot is not\n   * null.\n   * @return {boolean} true if this.$messagingContentRoot exists in the dom\n   * @private\n   * @memberof oj.InlineMessagingStrategy\n   * @instance\n   */\n  InlineMessagingStrategy.prototype._isMessagingContentRootDomInDocument = function () {\n    var messagingRootExistsInDocument = false;\n    if (this.$messagingContentRoot) {\n      let id = this.$messagingContentRoot[0].id;\n      messagingRootExistsInDocument = document.getElementById(id);\n    } else {\n      return false;\n    }\n    return messagingRootExistsInDocument !== null;\n  };\n\n  /**\n   * Adapter for handling inline Required text.\n   * Extends the MessagingStrategy which does more now than messages.\n   *\n   * @extends {oj.MessagingStrategy}\n   * @protected\n   * @constructor\n   * @since 9.0.0\n   * @class InlineRequiredStrategy\n   * @ignore\n   * @ojtsignore\n   * @param {Array.<string>} displayOptions an array of messaging artifacts that are\n   * displayed as an inside label for text fields.\n   * For LabelStrategies this is always only labelEdge.\n   */\n  const InlineRequiredStrategy = function (displayOptions, parentElement) {\n    this.Init(displayOptions);\n    this._parentElement = parentElement;\n  };\n\n  /**\n   * Registers the InlineRequiredStrategy constructor function with ComponentMessaging.\n   * No need to register since we are not creating this strategy on from ComponentMessaging.\n   * InlineUserAssistanceStrategy creates it.\n   * @private\n   */\n  // ComponentMessaging\n  //    .registerMessagingStrategy('required',\n  //     InlineRequiredStrategy);\n\n  // Subclass from MessagingStrategy\n  oj.Object.createSubclass(InlineRequiredStrategy, oj.MessagingStrategy, 'InlineRequiredStrategy');\n\n  /**\n   * @param {Object} cm a reference to an instance of ComponentMessaging that provides access to\n   * the latest messaging content.\n   * @public\n   * @memberof InlineRequiredStrategy\n   * @instance\n   * @override\n   */\n  InlineRequiredStrategy.prototype.activate = function (cm) {\n    InlineRequiredStrategy.superclass.activate.call(this, cm);\n    if (this.containerRoot == null) {\n      this._createOrUpdateInlineRequired();\n    }\n  };\n\n  /**\n   * @param {Array.<string>} newOptions\n   * @public\n   * @memberof InlineRequiredStrategy\n   * @instance\n   * @override\n   */\n  InlineRequiredStrategy.prototype.reactivate = function (newOptions, parentElement) {\n    InlineRequiredStrategy.superclass.reactivate.call(this, newOptions);\n    this._parentElement = parentElement;\n    // select/combobox on refresh destroys all its contents, including\n    // the oj-required-inline-container, and then reactivate is called.\n    var containerRootExists = this._isContainerRootDomInDocument();\n    if (!containerRootExists) {\n      this._createOrUpdateInlineRequired();\n    }\n  };\n\n  /**\n   * @param {Object=} content the messaging content object. If it contains hasNoValueToggled, then\n   * this means the component's oj-has-no-value styleclass was toggled. And the Redwood UX Required\n   * rule is, if the field has no value, show the inline Required dom. Else, do not show it.\n   * @return {boolean}\n   * @memberof InlineRequiredStrategy\n   * @instance\n   * @oublic\n   * @override\n   */\n  // eslint-disable-next-line no-unused-vars\n  InlineRequiredStrategy.prototype.shouldUpdate = function (content) {\n    // This gets sent from EditableValue when oj-has-no-value styleclass\n    // is toggled. This is how we know we need to add or remove the Required dom.\n    if (content && 'hasNoValueToggled' in content) {\n      return true;\n    }\n    // We are registering a requiredChanged listener that\n    // will cause an update when the required prop changes, so that is why this returns false.\n    return false;\n  };\n\n  /**\n   * Updates component with instance using the content provided.\n   * @memberof InlineRequiredStrategy\n   * @instance\n   * @public\n   * @override\n   */\n  InlineRequiredStrategy.prototype.update = function () {\n    this._createOrUpdateInlineRequired();\n    InlineRequiredStrategy.superclass.update.call(this);\n  };\n\n  /**\n   * Cleans up dom on the component and removes any event listeners it created.\n   * @memberof InlineRequiredStrategy\n   * @instance\n   * @public\n   * @override\n   */\n  InlineRequiredStrategy.prototype.deactivate = function () {\n    this._removeInlineRequired();\n    var component = this.GetComponent();\n    var element = component._getRootElement();\n    element.removeEventListener('requiredChanged', this._requiredChangedCallback);\n    delete this._requiredChangedCallback;\n    element.removeEventListener('focusout', this._focusoutCallback);\n    delete this._focusoutCallback;\n    this._parentElement = null;\n    InlineRequiredStrategy.superclass.deactivate.call(this);\n  };\n\n  /**\n   * @memberof InlineRequiredStrategy\n   * @instance\n   * @private\n   */\n  InlineRequiredStrategy.prototype._createOrUpdateInlineRequired = function () {\n    var component = this.GetComponent();\n\n    const options = component.options;\n    const element = component._getRootElement();\n\n    const hasNoValue = element.classList.contains('oj-has-no-value');\n    const container = this._getRequiredInlineContainer();\n    if (options.required && hasNoValue && !container) {\n      this.containerRoot = document.createElement('div');\n      this.containerRoot.classList.add('oj-required-inline-container');\n      let requiredText = Translations.getTranslatedString('oj-ojEditableValue.requiredText');\n      this.containerRoot.textContent = requiredText;\n      $(this.containerRoot).uniqueId();\n      this._parentElement.appendChild(this.containerRoot);\n      if (component._AriaRequiredUnsupported()) {\n        this.AddDescribedByToElement(element, this.containerRoot.id);\n      }\n      // focusout will check if there is a value and if so remove required dom\n      this._focusoutCallback = this._focusoutHandler.bind(this, component);\n      element.addEventListener('focusout', this._focusoutCallback);\n    }\n\n    // if value was programmatically changed to have a value, will need to remove\n    if (options.required && !hasNoValue && container) {\n      this._removeInlineRequired();\n    }\n\n    if (!this._requiredChangedCallback) {\n      // whether or not we create the required dom we need to add an event listener so if required attribute\n      // changes on the component, we create the required dom.\n      // if required changed, we will remove or add the required dom\n      this._requiredChangedCallback = this._requiredChangedHandler.bind(this, component);\n      element.addEventListener('requiredChanged', this._requiredChangedCallback);\n    }\n  };\n\n  /**\n   * Removes the Required dom. Keeps the associated event listeners\n   * which respond to required property changes.\n   * @memberof InlineRequiredStrategy\n   * @instance\n   * @private\n   */\n  InlineRequiredStrategy.prototype._removeInlineRequired = function () {\n    const component = this.GetComponent();\n    let container = this._getRequiredInlineContainer();\n    if (container && component._AriaRequiredUnsupported()) {\n      this.RemoveDescribedByFromElement(component._getRootElement(), container.id);\n    }\n    if (container && this._parentElement) {\n      this._parentElement.removeChild(container);\n      this.containerRoot = null;\n    }\n  };\n\n  /**\n   * @memberof InlineRequiredStrategy\n   * @instance\n   * @private\n   */\n  InlineRequiredStrategy.prototype._getRequiredInlineContainer = function () {\n    return this._parentElement.querySelector('.oj-required-inline-container');\n  };\n\n  /**\n   * This is where we delete the required dom if required changes from true to false.\n   * Remove anything else we may have added, like aria-described by.\n   * @memberof InlineRequiredStrategy\n   * @instance\n   * @private\n   * @param {Component} the component\n   * @param {CustomEvent} event requiredChanged event\n   */\n  InlineRequiredStrategy.prototype._requiredChangedHandler = function (component, event) {\n    let requiredOptionValue = event.detail.value;\n    let container = this._getRequiredInlineContainer();\n    const element = component._getRootElement();\n    const hasNoValue = element.classList.contains('oj-has-no-value');\n    if (requiredOptionValue && hasNoValue && container === null) {\n      this._createOrUpdateInlineRequired();\n    } else if (!requiredOptionValue && container !== null) {\n      // not required\n      // remove the dom if it is there\n      this._removeInlineRequired();\n    }\n  };\n\n  /**\n   * Required text is shown on initial render if the field doesn't have a value.\n   * When the user focuses out of the field, check if the comp is required\n   * and the field has a value, and in that case, remove the inline required text (animate out first).\n   * messages take precedence in the css.\n   * @memberof InlineRequiredStrategy\n   * @instance\n   * @private\n   * @param {Component} the component\n   */\n  InlineRequiredStrategy.prototype._focusoutHandler = function (component) {\n    const container = this._getRequiredInlineContainer();\n    const element = component._getRootElement();\n    const requiredOptionValue = component.options.required;\n\n    const hasNoValue = element.classList.contains('oj-has-no-value');\n    if (requiredOptionValue && !hasNoValue && container !== null) {\n      // if we have required content, then animate it closed on focusout.\n      let action = 'close';\n      let defaults = this._getDefaultAnimation();\n      let effect = defaults.close; // e.g., {effect: 'fadeOut', duration: '200ms'}\n      this._setBusyState();\n      let self = this;\n      AnimationUtils.startAnimation(\n        this.containerRoot,\n        'inline-required-' + action,\n        effect,\n        this.GetComponent()\n      ).then(() => {\n        // As of v12.0.0 we are removing the dom\n        this._removeInlineRequired();\n        self._clearBusyState();\n      });\n    }\n  };\n\n  /**\n   * Returns true if the div exists. This is needed\n   * because it is possible that components delete their dom, including\n   * the inline dom, which means the this.containerRoot is not\n   * null.\n   * @return {boolean} true if this.containerRoot exists in the dom\n   * @private\n   * @memberof InlineRequiredStrategy\n   * @instance\n   */\n  InlineRequiredStrategy.prototype._isContainerRootDomInDocument = function () {\n    let containerRootExistsInDocument = false;\n    if (this.containerRoot) {\n      let id = this.containerRoot.id;\n      containerRootExistsInDocument = document.getElementById(id);\n    }\n    return containerRootExistsInDocument !== null;\n  };\n\n  /**\n   * Get the default animation.\n   * To save from sending unnecessary theming variables to the client, we hardcode.\n   * @private\n   * @memberof InlineRequiredStrategy\n   * @instance\n   * @return {Object} Object with open and close key for the default animation.\n   */\n  InlineRequiredStrategy.prototype._getDefaultAnimation = function () {\n    // Load the default animation once per page scope\n    if (!InlineRequiredStrategy._defaultAnimation) {\n      InlineRequiredStrategy._defaultAnimation = {\n        open: {\n          effect: 'fadeIn',\n          duration: '200ms',\n          timingFunction: 'cubic-bezier(0.4,0,0.2,1)'\n        },\n        close: {\n          effect: 'fadeOut',\n          duration: '200ms',\n          timingFunction: 'cubic-bezier(0.4,0,0.2,1)'\n        }\n      };\n    }\n\n    return InlineRequiredStrategy._defaultAnimation;\n  };\n\n  /**\n   * Set busy state before opening or closing inline message.\n   *\n   * @private\n   * @memberof InlineRequiredStrategy\n   * @instance\n   */\n  InlineRequiredStrategy.prototype._setBusyState = function () {\n    // Set a page-level busy state if not already set\n    if (!this._resolveBusyState) {\n      let component = this.GetComponent();\n      let domElem = component._getRootElement();\n      let busyContext = Context.getContext(domElem).getBusyContext();\n      let description = 'The page is waiting for inline required ';\n\n      if (domElem && domElem.id) {\n        description += 'for \"' + domElem.id + '\" ';\n      }\n      description += 'to open/close';\n\n      this._resolveBusyState = busyContext.addBusyState({ description: description });\n    }\n  };\n\n  /**\n   * Clear busy state after opening or closing inline required.\n   *\n   * @private\n   * @memberof InlineRequiredStrategy\n   * @instance\n   */\n  InlineRequiredStrategy.prototype._clearBusyState = function () {\n    if (this._resolveBusyState) {\n      this._resolveBusyState();\n      this._resolveBusyState = null;\n    }\n  };\n\n  /**\n   * Redwood wants messages to always show up inline, nowhere else.\n   * A user assistance strategy that places the user assistance content inline (underneath) the editableValue\n   * component. This does not look at displayOptions, but passes it on to its contained strategies.\n   * For example if display-options.validatorHint='none', we do not want to show it.\n   * Note: This is confusing because displayOptions is what is displayed in each strategy.\n   * But for Redwood we want displayOptions to be ['messages', 'validationHint', 'required', 'title']\n   * @since 9.0.0\n   * @constructor\n   * @extends {oj.MessagingStrategy}\n   * @private\n   */\n  var InlineUserAssistanceStrategy = function (displayOptions) {\n    this.Init(displayOptions);\n    this._displayOptions = displayOptions;\n  };\n\n  /**\n   * Registers the InlineUserAssistanceStrategy constructor function with ComponentMessaging.\n   *\n   * @private\n   */\n  oj.ComponentMessaging.registerMessagingStrategy(\n    oj.ComponentMessaging._STRATEGY_TYPE.USER_ASSISTANCE_INLINE,\n    InlineUserAssistanceStrategy\n  );\n\n  // Subclass from MessagingStrategy\n  oj.Object.createSubclass(\n    InlineUserAssistanceStrategy,\n    oj.MessagingStrategy,\n    'InlineUserAssistanceStrategy'\n  );\n\n  /**\n   * Activate by writing an empty div and by activating the sub-strategies\n   *\n   * @param {Object} cm a reference to an instance of ComponentMessaging that provides access to\n   * the latest messaging content.\n   * @private\n   * @memberof InlineUserAssistanceStrategy\n   * @instance\n   * @override\n   *\n   */\n  InlineUserAssistanceStrategy.prototype.activate = function (cm) {\n    InlineUserAssistanceStrategy.superclass.activate.call(this, cm);\n\n    this._componentMessaging = cm;\n    const component = this.GetComponent();\n    const options = component.options;\n    const element = component._getRootElement();\n\n    // set readonly and disabled event listeners\n    this._readonlyChangedCallback = this._readonlyChangedHandler.bind(this, component);\n    element.addEventListener('readonlyChanged', this._readonlyChangedCallback);\n    this._disabledChangedCallback = this._disabledChangedHandler.bind(this, component);\n    element.addEventListener('disabledChanged', this._disabledChangedCallback);\n\n    // set userAssistanceDensity event listener to change styleclass\n    this._userAssistanceDensityChangedCallback = this._userAssistanceDensityChangedHandler.bind(\n      this,\n      component\n    );\n    element.addEventListener(\n      'userAssistanceDensityChanged',\n      this._userAssistanceDensityChangedCallback\n    );\n\n    // create the user assistance dom. It is needed in readonly, disabled and enabled modes\n    // so that in form layout mixed mode the fields all have this dom with a min-height\n    // to keep the fields lined up.\n    if (this.containerRoot == null) {\n      this._createInlineContainer();\n    }\n\n    // Do not create any dom for sub-dom if readonly or disabled is true\n    // since we do not want to show Required, Inline messages, nor help hints in\n    // readonly or disabled modes.\n    if (this._isDisabledOrReadonly()) {\n      return;\n    }\n\n    this._activateContainerStrategies(cm, options);\n  };\n\n  /**\n   * Reinitializes with the new display options and updates component messaging using the new content.\n   * newDisplayOptions are the strategies for InlineUserAssistanceStrategy.\n   * During Init we save the original displayOptions.\n   *\n   * @param {Array.<string>} newDisplayOptions\n   * @private\n   * @memberof InlineUserAssistanceStrategy\n   * @instance\n   * @override\n   *\n   */\n  InlineUserAssistanceStrategy.prototype.reactivate = function (newDisplayOptions) {\n    InlineUserAssistanceStrategy.superclass.reactivate.call(this, newDisplayOptions);\n    const options = this.GetComponent().options;\n    if (this._isDisabledOrReadonly(options)) {\n      return;\n    }\n\n    // select/combobox on refresh destroys all its contents, including\n    // the inline containers, and then reactivate is called.\n    var containerRootExists = this._isContainerRootDomInDocument();\n    if (!containerRootExists) {\n      this._createInlineContainer();\n    }\n\n    // if we have already activated our sub-strategies,\n    // this._inlineMessagingStrategy will not be undefined\n    if (this._inlineMessagingStrategy) {\n      // delegate to contained strategies.\n      this._inlineMessagingStrategy.reactivate(newDisplayOptions, this.containerRoot);\n      if (this._inlineRequiredStrategy) {\n        this._inlineRequiredStrategy.reactivate(newDisplayOptions, this.containerRoot);\n      }\n      if (this._inlineHelpHintsStrategy) {\n        this._inlineHelpHintsStrategy.reactivate(newDisplayOptions, this.containerRoot);\n      }\n    } else {\n      // we haven't activated the sub-strategies yet, so do it now.\n      this._activateContainerStrategies(this._componentMessaging, options);\n    }\n  };\n\n  /**\n   * Returns true if the messaging content should update. This method is an\n   * optimization because the update() method is called too often and any time any content changes.\n   * The only time InlineUserAssistanceStrategy#update needs to execute is when the ComponentValidity\n   * object is in the content because we don't add this unless there are messages.\n   *\n   * @param {Object=} content the messaging content object. If it contains validityState, then\n   * this means the component has messaging content.\n   * @return {boolean}\n   * @memberof InlineUserAssistanceStrategy\n   * @instance\n   * @private\n   * @override\n   */\n  InlineUserAssistanceStrategy.prototype.shouldUpdate = function (content) {\n    if (this._isDisabledOrReadonly()) {\n      return false;\n    }\n    // return true and check in update per strategy we are delegating to.\n    this._shouldUpdateContent = content;\n    return true;\n  };\n\n  /**\n   * Updates component with instance using the content provided.\n   * @memberof InlineUserAssistanceStrategy\n   * @instance\n   * @private\n   * @override\n   */\n  InlineUserAssistanceStrategy.prototype.update = function () {\n    InlineUserAssistanceStrategy.superclass.update.call(this);\n\n    if (!this._inlineMessagingStrategy) {\n      // if we haven't created the sub-strategies yet, return.\n      return;\n    }\n\n    // if readonly or disabled, return\n    if (this._isDisabledOrReadonly()) {\n      return;\n    }\n\n    if (this._inlineMessagingStrategy.shouldUpdate(this._shouldUpdateContent)) {\n      this._inlineMessagingStrategy.update();\n    }\n    if (\n      this._inlineRequiredStrategy &&\n      this._inlineRequiredStrategy.shouldUpdate(this._shouldUpdateContent)\n    ) {\n      this._inlineRequiredStrategy.update();\n    }\n    if (\n      this._inlineHelpHintsStrategy &&\n      this._inlineHelpHintsStrategy.shouldUpdate(this._shouldUpdateContent)\n    ) {\n      this._inlineHelpHintsStrategy.update();\n    }\n  };\n\n  /**\n   * Cleans up messages on the component and destroys any widgets it created.\n   *\n   * @memberof InlineUserAssistanceStrategy\n   * @instance\n   * @private\n   * @override\n   */\n  InlineUserAssistanceStrategy.prototype.deactivate = function () {\n    this._inlineMessagingStrategy.deactivate();\n    if (this._inlineRequiredStrategy) {\n      this._inlineRequiredStrategy.deactivate();\n    }\n    if (this._inlineHelpHintsStrategy) {\n      this._inlineHelpHintsStrategy.deactivate();\n    }\n    this._removeContainerRootDom();\n\n    delete this._inlineMessagingStrategy;\n    delete this._inlineRequiredStrategy;\n    delete this._inlineHelpHintsStrategy;\n\n    // Remove event handlers\n    const component = this.GetComponent();\n    const element = component._getRootElement();\n    element.removeEventListener('readonlyChanged', this._readonlyChangedCallback);\n    delete this._readonlyChangedCallback;\n    element.removeEventListener('disabledChanged', this._disabledChangedCallback);\n    delete this._disabledChangedCallback;\n    element.removeEventListener(\n      'userAssistanceDensityChanged',\n      this._userAssistanceDensityChangedCallback\n    );\n    delete this._userAssistanceDensityChangedCallback;\n\n    InlineUserAssistanceStrategy.superclass.deactivate.call(this);\n  };\n\n  InlineUserAssistanceStrategy.prototype._createInlineContainer = function () {\n    this.containerRoot = document.createElement('div');\n    this.containerRoot.classList.add('oj-user-assistance-inline-container');\n\n    // this will be oj-efficient or oj-reflow and will be used in theming to\n    // either reserve space with min-height or not reserve space.\n    const component = this.GetComponent();\n    const userAssistanceOptionValue = component.options.userAssistanceDensity;\n    if (userAssistanceOptionValue === 'efficient') {\n      this.containerRoot.classList.add('oj-efficient');\n    } else if (userAssistanceOptionValue === 'reflow') {\n      this.containerRoot.classList.add('oj-reflow');\n    }\n\n    $(this.containerRoot).uniqueId();\n\n    // append content that goes in inline user assistance div\n    // make it the very LAST child of the widget.\n    component.widget()[0].appendChild(this.containerRoot); // @HTMLUpdateOK\n  };\n\n  /**\n   * Removes the messaging content root dom and anything else that was adding during the\n   * creation of the messaging content root dom.\n   *\n   * @private\n   * @memberof InlineUserAssistanceStrategy\n   * @instance\n   */\n  InlineUserAssistanceStrategy.prototype._removeContainerRootDom = function () {\n    if (this._isContainerRootDomInDocument()) {\n      let parentNode = this.containerRoot.parentNode;\n      if (parentNode) {\n        parentNode.removeChild(this.containerRoot);\n      }\n    }\n    this.containerRoot = null;\n  };\n\n  /**\n   * Returns true if the inline div exists. This is needed\n   * because it is possible that components delete their dom, including\n   * the inline dom, which means the this.containerRoot is not\n   * null.\n   * @return {boolean} true if this.containerRoot exists in the dom\n   * @private\n   * @memberof InlineUserAssistanceStrategy\n   * @instance\n   */\n  InlineUserAssistanceStrategy.prototype._isContainerRootDomInDocument = function () {\n    var containerRootExistsInDocument = false;\n    if (this.containerRoot) {\n      let id = this.containerRoot.id;\n      containerRootExistsInDocument = document.getElementById(id);\n    }\n    return containerRootExistsInDocument !== null;\n  };\n\n  /**\n   * activate the Container Strategies if they have not already been activated.\n   *\n   * @private\n   * @memberof InlineUserAssistanceStrategy\n   * @instance\n   */\n  InlineUserAssistanceStrategy.prototype._activateContainerStrategies = function (cm, options) {\n    // instantiate and activate the strategy objects this strategy delegates to\n    // we wait until this function to instantiate because we want to have the containerRoot\n    // created, and we wait until activate to do that in our strategies.\n    if (this._inlineMessagingStrategy === undefined) {\n      this._inlineMessagingStrategy = new InlineMessagingStrategy(\n        this._displayOptions,\n        this.containerRoot\n      );\n      this._inlineMessagingStrategy.activate(cm);\n    }\n\n    // Set up the strategy if the component has a required attribute. It doesn't have to be\n    // set to required, but it needs to have a required attribute in its api.\n    if (options.required !== undefined && this._inlineRequiredStrategy === undefined) {\n      this._inlineRequiredStrategy = new InlineRequiredStrategy(\n        this._displayOptions,\n        this.containerRoot\n      );\n      this._inlineRequiredStrategy.activate(cm);\n    }\n    if (this._inlineHelpHintsStrategy === undefined) {\n      // setup InlineHelpHintsStrategy\n      this._inlineHelpHintsStrategy = new InlineHelpHintsStrategy(\n        this._displayOptions,\n        this.containerRoot\n      );\n      this._inlineHelpHintsStrategy.activate(cm);\n    }\n  };\n\n  /**\n   * If user-assistance-density property is changed\n   * @memberof InlineUserAssistanceStrategy\n   * @instance\n   * @private\n   * @param {Component} the component\n   * @param {CustomEvent} event readonlyChanged event\n   */\n  InlineUserAssistanceStrategy.prototype._userAssistanceDensityChangedHandler = function (\n    component,\n    event\n  ) {\n    let userAssistanceOptionValue = event.detail.value;\n\n    const _OJ_REFLOW = 'oj-reflow';\n    const _OJ_EFFICIENT = 'oj-efficient';\n\n    if (userAssistanceOptionValue === 'efficient') {\n      this.containerRoot.classList.add(_OJ_EFFICIENT);\n      this.containerRoot.classList.remove(_OJ_REFLOW);\n    } else if (userAssistanceOptionValue === 'reflow') {\n      this.containerRoot.classList.add(_OJ_REFLOW);\n      this.containerRoot.classList.remove(_OJ_EFFICIENT);\n    } else {\n      this.containerRoot.classList.remove(_OJ_EFFICIENT);\n      this.containerRoot.classList.remove(_OJ_REFLOW);\n    }\n  };\n\n  /**\n   * If readonly is true, then delete the user-assistance-display dom\n   * and deactivate all the sub-strategies, otherwise activate them.\n   * @memberof InlineUserAssistanceStrategy\n   * @instance\n   * @private\n   * @param {Component} the component\n   * @param {CustomEvent} event readonlyChanged event\n   */\n  InlineUserAssistanceStrategy.prototype._readonlyChangedHandler = function (component, event) {\n    let readonlyOptionValue = event.detail.value;\n\n    if (readonlyOptionValue) {\n      this._deactivateContainerStrategies();\n    } else {\n      const options = component.options;\n      this._activateContainerStrategies(this._componentMessaging, options);\n    }\n  };\n\n  /**\n   * If disabled is true, then delete the user-assistance-display dom\n   * and deactivate all the sub-strategies, otherwise activate them.\n   * @memberof InlineUserAssistanceStrategy\n   * @instance\n   * @private\n   * @param {Component} the component\n   * @param {CustomEvent} event disabledChanged event\n   */\n  InlineUserAssistanceStrategy.prototype._disabledChangedHandler = function (component, event) {\n    let disabledOptionValue = event.detail.value;\n\n    if (disabledOptionValue) {\n      this._deactivateContainerStrategies();\n    } else {\n      const options = component.options;\n      this._activateContainerStrategies(this._componentMessaging, options);\n    }\n  };\n\n  /**\n   * Deactivate all the sub-strategies.\n   * @memberof InlineUserAssistanceStrategy\n   * @instance\n   * @private\n   */\n  InlineUserAssistanceStrategy.prototype._deactivateContainerStrategies = function () {\n    if (this._inlineMessagingStrategy) {\n      this._inlineMessagingStrategy.deactivate();\n    }\n    if (this._inlineRequiredStrategy) {\n      this._inlineRequiredStrategy.deactivate();\n    }\n    if (this._inlineHelpHintsStrategy) {\n      this._inlineHelpHintsStrategy.deactivate();\n    }\n\n    delete this._inlineMessagingStrategy;\n    delete this._inlineRequiredStrategy;\n    delete this._inlineHelpHintsStrategy;\n  };\n\n  /**\n   * If component readOnly or disabled.\n   * @return {boolean}\n   * @private\n   * @memberof InlineUserAssistanceStrategy\n   * @instance\n   */\n  InlineUserAssistanceStrategy.prototype._isDisabledOrReadonly = function (\n    options = this.GetComponent().options\n  ) {\n    var isDisabled = options.disabled || false;\n    var isReadOnly = options.readOnly || false;\n\n    return isDisabled || isReadOnly;\n  };\n\n  /**\n   * Adapter for rendering fixed labels within the form component's root dom node as the first\n   * child of the root dom element,\n   * and smaller to match a text field's 'inside' label.\n   * This is used for non-text-field components like\n   * radioset/checkboxset/slider/switch/datepicker/colorpicker, etc.\n   *\n   * @extends BaseInsideLabelStrategy\n   * @protected\n   * @constructor\n   * @since 8.0.0\n   * @class InsideFormControlLabelStrategy\n   * @ignore\n   * @ojtsignore\n   * @param {Array.<string>} options an array of messaging artifacts that are\n   * displayed as an inside label for non-text field form controls.\n   * For LabelStrategies this is always only labelEdge.\n   */\n  const InsideFormControlLabelStrategy = function (options) {\n    this.Init(options);\n  };\n\n  /**\n   * Registers the LabelStrategy constructor function with ComponentMessaging.\n   *\n   * @private\n   */\n  oj.ComponentMessaging.registerMessagingStrategy(\n    oj.ComponentMessaging._STRATEGY_TYPE.LABEL_EDGE_INSIDE_FORM_CNTRL,\n    InsideFormControlLabelStrategy\n  );\n\n  // Subclass from BaseInsideLabelStrategy\n  oj.Object.createSubclass(\n    InsideFormControlLabelStrategy,\n    BaseInsideLabelStrategy,\n    'InsideFormControlLabelStrategy'\n  );\n\n  /**\n   * @param {Object} cm a reference to an instance of ComponentMessaging that provides access to\n   * the latest messaging content.\n   * @public\n   * @memberof InsideFormControlLabelStrategy\n   * @instance\n   * @override\n   */\n  InsideFormControlLabelStrategy.prototype.activate = function (cm) {\n    InsideFormControlLabelStrategy.superclass.activate.call(this, cm);\n    this._CreateLabel();\n  };\n\n  /**\n   * @param {Array.<string>} newOptions\n   * @public\n   * @memberof InsideFormControlLabelStrategy\n   * @instance\n   * @override\n   */\n  InsideFormControlLabelStrategy.prototype.reactivate = function (newOptions) {\n    InsideFormControlLabelStrategy.superclass.reactivate.call(this, newOptions);\n    this._DestroyLabel();\n    this._CreateLabel();\n  };\n\n  /**\n   * @param {Object=} content the messaging content object. If it contains validityState, then\n   * this means the component has messaging content.\n   * @return {boolean}\n   * @memberof InsideFormControlLabelStrategy\n   * @instance\n   * @oublic\n   * @override\n   */\n  InsideFormControlLabelStrategy.prototype.shouldUpdate = function () {\n    return false;\n  };\n\n  /**\n   * Updates component with instance using the content provided.\n   * @memberof InsideFormControlLabelStrategy\n   * @instance\n   * @public\n   * @override\n   */\n  InsideFormControlLabelStrategy.prototype.update = function () {\n    InsideFormControlLabelStrategy.superclass.update.call(this);\n  };\n\n  /**\n   * Cleans up messages on the component and destroys any widgets it created.\n   * @memberof InsideFormControlLabelStrategy\n   * @instance\n   * @public\n   * @override\n   */\n  InsideFormControlLabelStrategy.prototype.deactivate = function () {\n    this._DestroyLabel();\n    InsideFormControlLabelStrategy.superclass.deactivate.call(this);\n  };\n\n  /**\n   * Adds a hook for subclass to use its own styleclass on root dom element.\n   * @memberof InsideFormControlLabelStrategy\n   * @instance\n   * @protected\n   */\n  InsideFormControlLabelStrategy.prototype._GetFormControlLabelStyleClass = function () {\n    return 'oj-form-control-label-inside';\n  };\n\n  /**\n   * Insert the ojLabel\n   * @memberof InsideFormControlLabelStrategy\n   * @protected\n   * @override\n   * @param {Element} ojlabel\n   * @param {Element} container\n   * @param {Object} component\n   * @return {string}\n   */\n  InsideFormControlLabelStrategy.prototype._InsertOjLabel = function (\n    ojlabel,\n    _container,\n    component\n  ) {\n    // node.insertBefore(newnode, existingnode);\n    // insert the new ojlabel element as first child of the root\n    let root = component._getRootElement();\n    root.insertBefore(ojlabel, root.firstElementChild);\n  };\n\n  /**\n   * Creates event handlers\n   * Override to add helpHints.\n   * @param {Element} span span around the label where we use innerText to set the labelHint\n   * @param {Element} element root custom element\n   * @param {Element} ojlabel ojlabel custom element\n   * @param {Element} component form component\n   * @memberof InsideFormControlLabelStrategy\n   * @instance\n   * @protected\n   * @override\n   */\n  InsideFormControlLabelStrategy.prototype._CreateEventHandlers = function (\n    span,\n    element,\n    ojlabel,\n    component\n  ) {\n    InsideFormControlLabelStrategy.superclass._CreateEventHandlers.call(\n      this,\n      span,\n      element,\n      ojlabel,\n      component\n    );\n  };\n\n  /**\n   * @static\n   * @private\n   * @param {Element} span holding label text\n   * @param {CustomEvent} event labelChanged event\n   */\n  InsideFormControlLabelStrategy._labelHintChangedHandler = function (span, event) {\n    // eslint-disable-next-line no-param-reassign\n    span.textContent = event.detail.value;\n  };\n\n  /**\n   * Adapter for handling dynamically setting the inputs placeholder attribute\n   *\n   * @extends {oj.MessagingStrategy}\n   * @protected\n   * @constructor\n   * @since 8.0.0\n   * @class oj.InsideLabelPlaceholderStrategy\n   * @ignore\n   * @ojtsignore\n   * @param {Array.<string>} options an array of messaging artifacts displayed inline. e.g,\n   */\n  const InsideLabelPlaceholderStrategy = function (options) {\n    this.Init(options);\n  };\n\n  // Subclass from MessagingStrategy\n  oj.Object.createSubclass(\n    InsideLabelPlaceholderStrategy,\n    oj.MessagingStrategy,\n    'oj.InsideLabelPlaceholderStrategy'\n  );\n\n  /**\n   * Sets up a placeholder for the component instance using the converter hint.\n   *\n   * @param {Object} cm a reference to an instance of ComponentMessaging that provides access to\n   * the latest messaging content.\n   * @public\n   * @memberof oj.InsideLabelPlaceholderStrategy\n   * @instance\n   * @override\n   */\n  InsideLabelPlaceholderStrategy.prototype.activate = function (cm) {\n    InsideLabelPlaceholderStrategy.superclass.activate.call(this, cm);\n    this._createPlaceholderToggle();\n  };\n\n  /**\n   * @param {Array.<string>} newOptions\n   * @public\n   * @memberof oj.InsideLabelPlaceholderStrategy\n   * @instance\n   * @override\n   */\n  InsideLabelPlaceholderStrategy.prototype.reactivate = function (newOptions) {\n    InsideLabelPlaceholderStrategy.superclass.reactivate.call(this, newOptions);\n    this._destroyPlaceholderToggle();\n    this._createPlaceholderToggle();\n  };\n\n  /**\n   * @public\n   * @memberof oj.InsideLabelPlaceholderStrategy\n   * @instance\n   * @override\n   */\n  InsideLabelPlaceholderStrategy.prototype.deactivate = function () {\n    this._destroyPlaceholderToggle();\n    InsideLabelPlaceholderStrategy.superclass.deactivate.call(this);\n  };\n\n  /**\n   *\n   * @param {Object=} content the messaging content that is being updated\n   * @return {boolean}\n   * @public\n   * @memberof oj.InsideLabelPlaceholderStrategy\n   * @instance\n   * @override\n   */\n  InsideLabelPlaceholderStrategy.prototype.shouldUpdate = function (content) {\n    return (\n      (content && content.converterHint !== undefined) || this.GetComponent().options.placeholder\n    );\n  };\n\n  /**\n   * @public\n   * @memberof oj.InsideLabelPlaceholderStrategy\n   * @instance\n   * @override\n   */\n  InsideLabelPlaceholderStrategy.prototype.update = function () {\n    InsideLabelPlaceholderStrategy.superclass.update.call(this);\n    this._placeholderChanged();\n  };\n\n  /**\n   * @private\n   * @memberof oj.InsideLabelPlaceholderStrategy\n   * @instance\n   */\n  InsideLabelPlaceholderStrategy.prototype._destroyPlaceholderToggle = function () {\n    var component = this.GetComponent();\n    var element = component._GetContentElement()[0];\n    var rootElement = component._getRootElement();\n\n    this._blurCallback();\n    element.removeEventListener('focusout', this._blurCallback, false);\n    delete this._blurCallback;\n\n    element.removeEventListener('focusin', this._focusCallback, false);\n    delete this._focusCallback;\n\n    rootElement.removeEventListener('placeholderChanged', this._placeholderChangedCallback, false);\n    delete this._placeholderChangedCallback;\n\n    if (component._HasPlaceholderSet()) {\n      component._SetPlaceholder(component.options.placeholder);\n      component._customPlaceholderSet = true;\n    }\n  };\n\n  /**\n   * @private\n   * @memberof oj.InsideLabelPlaceholderStrategy\n   * @instance\n   */\n  InsideLabelPlaceholderStrategy.prototype._createPlaceholderToggle = function () {\n    var component = this.GetComponent();\n    var element = component._GetContentElement()[0];\n    var rootElement = component._getRootElement();\n\n    component._customPlaceholderSet = true;\n    this._blurCallback = InsideLabelPlaceholderStrategy._blurHandler.bind(this, element);\n    element.addEventListener('focusout', this._blurCallback, false);\n\n    this._focusCallback = InsideLabelPlaceholderStrategy._focusHandler.bind(this);\n    element.addEventListener('focusin', this._focusCallback, false);\n\n    this._placeholderChangedCallback = this._placeholderChanged.bind(this);\n    rootElement.addEventListener('placeholderChanged', this._placeholderChangedCallback, false);\n\n    this._placeholderChanged();\n  };\n\n  /**\n   * @private\n   * @memberof oj.InsideLabelPlaceholderStrategy\n   * @instance\n   */\n  InsideLabelPlaceholderStrategy.prototype._placeholderChanged = function () {\n    var component = this.GetComponent();\n    var element = component._GetContentElement()[0];\n\n    var callback;\n    if (FocusUtils.containsFocus(element)) {\n      callback = this._focusCallback;\n    } else {\n      callback = this._blurCallback;\n    }\n    // Allow the component to complete default processing. setPlaceholder will\n    // following after the value changed from _AfterSetOption - invoke micro next-tick.\n    Promise.resolve(true).then(function () {\n      callback();\n    });\n  };\n\n  /**\n   * Returns true if the converter hint should be shown in the placeholder area.\n   * If displayOptions are to be ignored, like in Redwood theme, then this returns false.\n   * If displayOptions.converter-hint is 'none', then this returns false;\n   * @public\n   * @memberof oj.InsideLabelPlaceholderStrategy\n   * @param {Object} component\n   * @return {boolean}\n   * @static\n   */\n  InsideLabelPlaceholderStrategy.ShowConverterHintAsPlaceholder = function (component) {\n    var displayOptions = component.options.displayOptions;\n    if (!displayOptions || component._getResolvedUserAssistance() !== 'displayOptions') {\n      return false;\n    }\n    var converterHint = displayOptions.converterHint;\n    if (converterHint instanceof Array) {\n      return converterHint[0] === 'placeholder';\n    }\n    return converterHint === 'placeholder';\n  };\n\n  /**\n   * @private\n   * @memberof oj.InsideLabelPlaceholderStrategy\n   * @static\n   */\n  InsideLabelPlaceholderStrategy._focusHandler = function () {\n    var component = this.GetComponent();\n\n    var placeholder;\n    if (InsideLabelPlaceholderStrategy.ShowConverterHintAsPlaceholder(component)) {\n      var hints = this.GetConverterHint();\n      placeholder = hints.length > 0 ? hints[0] : null;\n    }\n    if (!placeholder) {\n      placeholder = component.options.placeholder;\n    }\n\n    component._SetPlaceholder(placeholder);\n  };\n\n  /**\n   * @private\n   * @memberof oj.InsideLabelPlaceholderStrategy\n   * @static\n   */\n  InsideLabelPlaceholderStrategy._blurHandler = function (element) {\n    if (element.hasAttribute('aria-haspopup')) {\n      // ignore blur handling if the component has a popup and the popup has focus\n      var popupId = element.getAttribute('aria-owns');\n      var popupDom = document.getElementById(popupId);\n      if (FocusUtils.containsFocus(popupDom)) {\n        return;\n      }\n    }\n\n    var placeholder;\n    var component = this.GetComponent();\n    if (InsideLabelPlaceholderStrategy.ShowConverterHintAsPlaceholder(component)) {\n      var hints = this.GetConverterHint();\n      placeholder = hints.length > 0 ? hints[0] : null;\n    }\n    if (!placeholder) {\n      placeholder = component.options.placeholder;\n    }\n\n    // if the component legally has a placeholder we cant set it to null.\n    // if we do that, select components will choke. Because they rely on placeholder\n    // to decide if it should render a empty option etc.\n    // So if there is a legal placeholder, we will just set its value to empty on blur.\n    if (placeholder === null || placeholder === undefined) {\n      component._SetPlaceholder(null);\n    } else {\n      component._SetPlaceholder('');\n    }\n  };\n\n  /**\n   * Adapter for handling aspects of floating labels.\n   * Extends the MessagingStrategy which does more now than messages. It now\n   * is also for rendering the form component's label in one of many positions.\n   *\n   * @extends BaseInsideLabelStrategy\n   * @protected\n   * @constructor\n   * @since 7.0.0\n   * @class oj.InsideLabelStrategy\n   * @ignore\n   * @ojtsignore\n   * @param {Array.<string>} displayOptions an array of messaging artifacts that are\n   * displayed as an inside label for text fields.\n   * For LabelStrategies this is always only labelEdge.\n   */\n  const InsideLabelStrategy = function (displayOptions) {\n    this.Init(displayOptions);\n    this._displayOptions = displayOptions;\n  };\n\n  /**\n   * Registers the LabelStrategy constructor function with ComponentMessaging.\n   *\n   * @private\n   */\n  oj.ComponentMessaging.registerMessagingStrategy(\n    oj.ComponentMessaging._STRATEGY_TYPE.LABEL_EDGE_INSIDE,\n    InsideLabelStrategy\n  );\n\n  // Subclass from BaseInsideLabelStrategy\n  oj.Object.createSubclass(InsideLabelStrategy, BaseInsideLabelStrategy, 'oj.InsideLabelStrategy');\n\n  /**\n   * @param {Object} cm a reference to an instance of ComponentMessaging that provides access to\n   * the latest messaging content.\n   * @public\n   * @memberof oj.InsideLabelStrategy\n   * @instance\n   * @override\n   */\n  InsideLabelStrategy.prototype.activate = function (cm) {\n    InsideLabelStrategy.superclass.activate.call(this, cm);\n    this._componentMessaging = cm;\n\n    const component = this.GetComponent();\n    const element = component._getRootElement();\n    this._placeholderChangedCallback = this._placeholderChangedHandler.bind(this);\n    element.addEventListener('placeholderChanged', this._placeholderChangedCallback);\n    this._activatePlaceholderStrategyIfNeeded(cm);\n    this._CreateLabel();\n  };\n\n  /**\n   * @param {Array.<string>} newOptions\n   * @public\n   * @memberof oj.InsideLabelStrategy\n   * @instance\n   * @override\n   */\n  InsideLabelStrategy.prototype.reactivate = function (newDisplayOptions) {\n    InsideLabelStrategy.superclass.reactivate.call(this, newDisplayOptions);\n\n    this._DestroyLabel();\n    this._CreateLabel();\n    if (this._placeholderStrategy) {\n      this._placeholderStrategy.reactivate(newDisplayOptions);\n    } else {\n      // we haven't activated the placeholder yet, so do it now.\n      this._activatePlaceholderStrategyIfNeeded(this._componentMessaging);\n    }\n  };\n\n  /**\n   * @param {Object=} content the messaging content object. If it contains validityState, then\n   * this means the component has messaging content.\n   * @return {boolean}\n   * @memberof oj.InsideLabelStrategy\n   * @instance\n   * @oublic\n   * @override\n   */\n  InsideLabelStrategy.prototype.shouldUpdate = function (content) {\n    if (this._placeholderStrategy) {\n      return this._placeholderStrategy.shouldUpdate(content);\n    }\n    return false;\n  };\n\n  /**\n   * Updates component with instance using the content provided.\n   * @memberof oj.InsideLabelStrategy\n   * @instance\n   * @public\n   * @override\n   */\n  InsideLabelStrategy.prototype.update = function () {\n    if (this._placeholderStrategy) {\n      this._placeholderStrategy.update();\n    }\n  };\n\n  /**\n   * Cleans up messages on the component and destroys any widgets it created.\n   * @memberof oj.InsideLabelStrategy\n   * @instance\n   * @public\n   * @override\n   */\n  InsideLabelStrategy.prototype.deactivate = function () {\n    if (this._placeholderStrategy) {\n      this._placeholderStrategy.deactivate();\n      delete this._placeholderStrategy;\n    }\n    // Remove event handlers\n    const component = this.GetComponent();\n    const element = component._getRootElement();\n    element.removeEventListener('placeholderChanged', this._placeholderChangedCallback);\n    delete this._placeholderChangedCallback;\n    this._DestroyLabel();\n    InsideLabelStrategy.superclass.deactivate.call(this);\n  };\n\n  /**\n   * activate the PlaceholderStrategy if they have not already been activated.\n   *\n   * @private\n   * @memberof oj.InsideLabelStrategy\n   * @instance\n   */\n  InsideLabelStrategy.prototype._activatePlaceholderStrategyIfNeeded = function (cm) {\n    if (this._placeholderStrategy === undefined) {\n      let createInsideLabelPlaceholderStrategy = () => {\n        let Callback = InsideLabelPlaceholderStrategy;\n        this._placeholderStrategy = new Callback(this._displayOptions);\n        this._placeholderStrategy.activate(cm);\n      };\n      const component = this.GetComponent();\n      const compOptions = component.options;\n      // If the component has a placeholder or if it uses displayOptions+\n      // has it set so that converter is shown as a placeholder.\n      // Note: the Redwood theme does not use displayOptions.\n      let needsInsidePlaceholder =\n        compOptions.placeholder ||\n        (component._getResolvedUserAssistance() === 'displayOptions' &&\n          InsideLabelPlaceholderStrategy.ShowConverterHintAsPlaceholder(component));\n      if (needsInsidePlaceholder) {\n        createInsideLabelPlaceholderStrategy();\n      }\n    }\n  };\n\n  /**\n   * If placeholder has a value, then activate the sub-strategy if it isn't\n   * yet activated.\n   * @memberof oj.InsideLabelStrategy\n   * @instance\n   * @private\n   */\n  InsideLabelStrategy.prototype._placeholderChangedHandler = function () {\n    this._activatePlaceholderStrategyIfNeeded(this._componentMessaging);\n  };\n\n  /**\n   * Gets the form component's container.\n   * @memberof oj.InsideLabelStrategy\n   * @instance\n   * @protected\n   * @override\n   */\n  InsideLabelStrategy.prototype._GetContainer = function (component) {\n    let container = component._GetFormControlContainer();\n    if (!container) {\n      return null;\n    }\n\n    // look for a component container override\n    let fname = '_GetContentWrapper';\n    if (component[fname]) {\n      container = component[fname]();\n    }\n    return container;\n  };\n  /**\n   * @memberof oj.InsideLabelStrategy\n   * @protected\n   * @override\n   * @param {string} labelEdgeValue\n   * @return {string}\n   */\n  InsideLabelStrategy.prototype._GetFormControlLabelStyleClass = function () {\n    let labelEdgeValue = 'inside';\n    return [InsideLabelStrategy._BASE_STYLE_CLASS, 'label', labelEdgeValue.toLowerCase()].join('-');\n  };\n\n  /**\n   * @memberof oj.InsideLabelStrategy\n   * @protected\n   * @override\n   * @param {Element} ojlabel\n   * @param {Element} container\n   * @param {Object} component\n   * @return {string}\n   */\n  // eslint-disable-next-line no-unused-vars\n  InsideLabelStrategy.prototype._InsertOjLabel = function (ojlabel, container) {\n    // node.insertBefore(newnode, existingnode);\n    // insert the new ojlabel element before the existing firstChildElement.\n    container.insertBefore(ojlabel, container.firstElementChild);\n  };\n\n  /**\n   * Base selector (prefix) for styling floating labels\n   * @const\n   * @private\n   * @type {string}\n   */\n  InsideLabelStrategy._BASE_STYLE_CLASS = 'oj-text-field';\n\n  exports.EditableValueUtils = EditableValueUtils;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n});\n","/**\n * @license\n * Copyright (c) 2014, 2023, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\ndefine(['ojs/ojcore-base', 'jquery', 'ojs/ojcontext', 'ojs/ojbutton', 'ojs/ojeditablevalue', 'ojs/ojcomponentcore', 'ojs/ojdomutils', 'ojs/ojthemeutils', 'ojs/ojlogger', 'ojs/ojvalidator-numberrange', 'ojs/ojconverter-number'], function (oj, $, ojcontext, ojbutton, ojeditablevalue, Components, DomUtils, ThemeUtils, Logger, NumberRangeValidator, ojconverterNumber) { 'use strict';\n\n  oj = oj && Object.prototype.hasOwnProperty.call(oj, 'default') ? oj['default'] : oj;\n  $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n  NumberRangeValidator = NumberRangeValidator && Object.prototype.hasOwnProperty.call(NumberRangeValidator, 'default') ? NumberRangeValidator['default'] : NumberRangeValidator;\n\n  (function () {\nvar __oj_input_number_metadata = \n{\n  \"properties\": {\n    \"asyncValidators\": {\n      \"type\": \"Array<Object>\",\n      \"value\": []\n    },\n    \"autocomplete\": {\n      \"type\": \"string\",\n      \"value\": \"on\",\n      \"extension\": {\n        \"_COPY_TO_INNER_ELEM\": true\n      }\n    },\n    \"autofocus\": {\n      \"type\": \"boolean\",\n      \"value\": false,\n      \"extension\": {\n        \"_COPY_TO_INNER_ELEM\": true\n      }\n    },\n    \"converter\": {\n      \"type\": \"object\"\n    },\n    \"describedBy\": {\n      \"type\": \"string\"\n    },\n    \"disabled\": {\n      \"type\": \"boolean\",\n      \"value\": false\n    },\n    \"displayOptions\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"converterHint\": {\n          \"type\": \"Array<string>|string\"\n        },\n        \"helpInstruction\": {\n          \"type\": \"Array<string>|string\",\n          \"value\": [\n            \"notewindow\"\n          ]\n        },\n        \"messages\": {\n          \"type\": \"Array<string>|string\"\n        },\n        \"validatorHint\": {\n          \"type\": \"Array<string>|string\"\n        }\n      }\n    },\n    \"help\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"instruction\": {\n          \"type\": \"string\",\n          \"value\": \"\"\n        }\n      }\n    },\n    \"helpHints\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"definition\": {\n          \"type\": \"string\",\n          \"value\": \"\"\n        },\n        \"source\": {\n          \"type\": \"string\",\n          \"value\": \"\"\n        }\n      }\n    },\n    \"labelEdge\": {\n      \"type\": \"string\",\n      \"enumValues\": [\n        \"inside\",\n        \"none\",\n        \"provided\"\n      ]\n    },\n    \"labelHint\": {\n      \"type\": \"string\",\n      \"value\": \"\"\n    },\n    \"labelledBy\": {\n      \"type\": \"string\"\n    },\n    \"max\": {\n      \"type\": \"number\"\n    },\n    \"messagesCustom\": {\n      \"type\": \"Array<Object>\",\n      \"writeback\": true,\n      \"value\": []\n    },\n    \"min\": {\n      \"type\": \"number\"\n    },\n    \"name\": {\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"extension\": {\n        \"_COPY_TO_INNER_ELEM\": true\n      }\n    },\n    \"placeholder\": {\n      \"type\": \"string\",\n      \"value\": \"\"\n    },\n    \"rawValue\": {\n      \"type\": \"string\",\n      \"writeback\": true,\n      \"readOnly\": true\n    },\n    \"readonly\": {\n      \"type\": \"boolean\",\n      \"value\": false\n    },\n    \"required\": {\n      \"type\": \"boolean\",\n      \"value\": false\n    },\n    \"step\": {\n      \"type\": \"number\"\n    },\n    \"transientValue\": {\n      \"type\": \"number\",\n      \"writeback\": true,\n      \"readOnly\": true\n    },\n    \"translations\": {\n      \"type\": \"object\",\n      \"value\": {},\n      \"properties\": {\n        \"numberRange\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"hint\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"exact\": {\n                  \"type\": \"string\"\n                },\n                \"inRange\": {\n                  \"type\": \"string\"\n                },\n                \"max\": {\n                  \"type\": \"string\"\n                },\n                \"min\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"messageDetail\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"exact\": {\n                  \"type\": \"string\"\n                },\n                \"rangeOverflow\": {\n                  \"type\": \"string\"\n                },\n                \"rangeUnderflow\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"messageSummary\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"rangeOverflow\": {\n                  \"type\": \"string\"\n                },\n                \"rangeUnderflow\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"required\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"hint\": {\n              \"type\": \"string\"\n            },\n            \"messageDetail\": {\n              \"type\": \"string\"\n            },\n            \"messageSummary\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"tooltipDecrement\": {\n          \"type\": \"string\"\n        },\n        \"tooltipIncrement\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"userAssistanceDensity\": {\n      \"type\": \"string\",\n      \"enumValues\": [\n        \"compact\",\n        \"efficient\",\n        \"reflow\"\n      ],\n      \"value\": \"reflow\"\n    },\n    \"valid\": {\n      \"type\": \"string\",\n      \"writeback\": true,\n      \"enumValues\": [\n        \"invalidHidden\",\n        \"invalidShown\",\n        \"pending\",\n        \"valid\"\n      ],\n      \"readOnly\": true\n    },\n    \"validators\": {\n      \"type\": \"Array<Object>\",\n      \"value\": []\n    },\n    \"value\": {\n      \"type\": \"number\",\n      \"writeback\": true\n    },\n    \"virtualKeyboard\": {\n      \"type\": \"string\",\n      \"enumValues\": [\n        \"auto\",\n        \"number\",\n        \"text\"\n      ],\n      \"value\": \"auto\"\n    }\n  },\n  \"methods\": {\n    \"getProperty\": {},\n    \"refresh\": {},\n    \"reset\": {},\n    \"setProperties\": {},\n    \"setProperty\": {},\n    \"showMessages\": {},\n    \"stepDown\": {},\n    \"stepUp\": {},\n    \"validate\": {},\n    \"getNodeBySubId\": {},\n    \"getSubIdByNode\": {}\n  },\n  \"events\": {\n    \"ojAnimateEnd\": {},\n    \"ojAnimateStart\": {}\n  },\n  \"extension\": {}\n};\n    __oj_input_number_metadata.extension._WIDGET_NAME = 'ojInputNumber';\n    __oj_input_number_metadata.extension._ALIASED_PROPS = { readonly: 'readOnly' };\n    __oj_input_number_metadata.extension._INNER_ELEM = 'input';\n    __oj_input_number_metadata.extension._GLOBAL_TRANSFER_ATTRS = [\n      'accesskey',\n      'aria-label',\n      'tabindex'\n    ];\n\n    oj.CustomElementBridge.register('oj-input-number', {\n      metadata: oj.CollectionUtils.mergeDeep(__oj_input_number_metadata, {\n        properties: {\n          readonly: {\n            binding: { consume: { name: 'readonly' } }\n          },\n          userAssistanceDensity: {\n            binding: { consume: { name: 'userAssistanceDensity' } }\n          },\n          labelEdge: {\n            binding: { consume: { name: 'labelEdge' } }\n          }\n        }\n      })\n    });\n  })();\n\n  /**\n   * @preserve Copyright 2013 jQuery Foundation and other contributors\n   * Released under the MIT license.\n   * http://jquery.org/license\n   */\n\n  // jeanne retrieved from https://raw.github.com/jquery/jquery-ui/1-10-stable/ui/jquery.ui.spinner.js on 6/2013, and then modified\n\n  /**\n   * @private\n   */\n  var _sDefaultNumberConverter;\n\n  /**\n   * For default converter\n   * @static\n   * @ignore\n   */\n  function _getNumberDefaultConverter() {\n    return new ojconverterNumber.IntlNumberConverter(null);\n  }\n\n  /*!\n   * JET InputNumber @VERSION\n   *\n   *\n   * Depends:\n   *  jquery.ui.widget.js\n   */\n  (function () {\n    // inputNumber wrapper function, to keep \"private static members\" private\n    /**\n     * @ojcomponent oj.ojInputNumber\n     * @augments oj.editableValue\n     * @ojsignature [{\n     *                target: \"Type\",\n     *                value: \"class ojInputNumber extends editableValue<number|null, ojInputNumberSettableProperties, number|null, string>\"\n     *               },\n     *               {\n     *                target: \"Type\",\n     *                value: \"ojInputNumberSettableProperties extends editableValueSettableProperties<number|null, number|null, string>\",\n     *                for: \"SettableProperties\"\n     *               }\n     *              ]\n     * @since 0.6.0\n     * @ojshortdesc An input number allows the user to enter a number value.\n     * @ojrole textbox\n     * @ojrole spinbutton\n     *\n     * @ojimportmembers oj.ojDisplayOptions\n     * @ojtsimport {module: \"ojvalidationfactory-base\", type: \"AMD\", imported:[\"Validation\"]}\n     * @ojtsimport {module: \"ojconverter\", type: \"AMD\", importName: \"Converter\"}\n     * @ojtsimport {module: \"ojvalidator\", type: \"AMD\", importName: \"Validator\"}\n     * @ojtsimport {module: \"ojvalidator-async\", type: \"AMD\", importName: \"AsyncValidator\"}\n     * @ojtsimport {module: \"ojconverter-number\", type: \"AMD\",  imported: [\"IntlNumberConverter\", \"NumberConverter\"]}\n     * @ojtsimport {module: \"ojvalidator-length\", type: \"AMD\", importName: \"LengthValidator\"}\n     * @ojtsimport {module: \"ojvalidator-numberrange\", type: \"AMD\", importName: \"NumberRangeValidator\"}\n     * @ojtsimport {module: \"ojvalidator-regexp\", type: \"AMD\", importName: \"RegExpValidator\"}\n     * @ojtsimport {module: \"ojvalidator-required\", type: \"AMD\", importName: \"RequiredValidator\"}\n     *\n     * @ojpropertylayout {propertyGroup: \"common\", items: [\"labelHint\", \"placeholder\", \"min\", \"max\", \"step\", \"required\", \"disabled\", \"readonly\", \"virtualKeyboard\", \"converter\"]}\n     * @ojpropertylayout {propertyGroup: \"data\", items: [\"value\"]}\n     * @ojvbdefaultcolumns 6\n     * @ojvbmincolumns 2\n     *\n     * @ojoracleicon 'oj-ux-ico-input-number'\n     * @ojuxspecs ['input-number']\n     *\n     * @classdesc\n     * <h3 id=\"inputNumberOverview-section\">\n     *   JET InputNumber Component\n     *   <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#inputNumberOverview-section\"></a>\n     * </h3>\n     * <p>Description: The oj-input-number component enhances a browser input element\n     * into one that holds numbers and it has a spinbox to quickly increment or\n     * decrement the number. The <code class=\"prettyprint\">value</code> attribute must be a number and must\n     * be within the <code class=\"prettyprint\">min</code> and <code class=\"prettyprint\">max</code> range.\n     * </p>\n     * <p>A step mismatch is when\n     * the value is not a multiple of <code class=\"prettyprint\">step</code>,\n     * starting at the <code class=\"prettyprint\">min</code>\n     * else initial vlaue if no <code class=\"prettyprint\">min</code> is set, else 0.\n     * A step mismatch will not be flagged as a validation error by default, but\n     * the step up and step down feature will change the value to be a step match\n     * if it isn't already.\n     * </p>\n     *\n     * {@ojinclude \"name\":\"validationAndMessagingDoc\"}\n     *\n     * <h3 id=\"touch-section\">\n     *   Touch End User Information\n     *   <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#touch-section\"></a>\n     * </h3>\n     *\n     * {@ojinclude \"name\":\"touchDoc\"}\n     *\n     * <h3 id=\"keyboard-section\">\n     *   Keyboard End User Information\n     *   <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#keyboard-section\"></a>\n     * </h3>\n     *\n     * {@ojinclude \"name\":\"keyboardDoc\"}\n     *\n     * <h3 id=\"a11y-section\">\n     *   Accessibility\n     *   <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#a11y-section\"></a>\n     * </h3>\n     * <p>\n     * The component is accessible; it sets and maintains the appropriate aria- attributes,\n     * like aria-valuenow, aria-valuemax, aria-valuemin and aria-valuetext.\n     * </p>\n     * <p>\n     * {@ojinclude \"name\":\"accessibilityLabelEditableValue\"}\n     * {@ojinclude \"name\":\"accessibilityPlaceholderEditableValue\"}\n     * {@ojinclude \"name\":\"accessibilityDisabledEditableValue\"}\n     * </p>\n     * <h3 id=\"migration-section\">\n     *   Migration\n     *   <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#migration-section\"></a>\n     * </h3>\n     *\n     * <p>\n     * To migrate from oj-input-number to oj-c-input-number, you need to revise the import statement\n     * and references to oj-c-input-number in your app. Please note the changes between the two components below.\n     * </p>\n     *\n     * <h5>Converter attribute</h5>\n     * <p>\n     * The converter attribute is changed to support only a converter instance, null, or undefined. It does not support\n     * a Promise that resolves to a converter instance. The application should resolve the promise and then update the\n     * converter attribute with the resolved converter instance.\n     * </p>\n     * <p>\n     * The converter is no longer applied when the value is <code>null</code>, <code>undefined</code>, or <code>''</code>.\n     * When the field is empty, the value gets normalized to <code>null</code>, so the converter does not run on an empty field.\n     * <p>\n     *\n     * <h5>New converters</h5>\n     * <p>\n     * New converters are available. See <a href=\"BigDecimalStringConverter.html\" target=\"_blank\">BigDecimalStringConverter</a>\n     * and <a href=\"NumberConverter.html\" target=\"_blank\">NumberConverter</a> for more details.\n     * </p>\n     * <p>\n     * oj-c-input-number uses NumberConverter as its default converter whereas oj-input-number uses IntlNumberConverter as its default converter.\n     * The default converter used by oj-c-input-number does not currently respect user preferences.\n     * </p>\n     *\n     * <h5>Validators</h5>\n     * <p>\n     * Only the required validator is run for an empty field, and only if required is true. The component's other validators\n     * are no longer run when the field is empty.\n     * If you created your own validator to check that the field was filled in, it will not run if the\n     * field is empty. Set the required attribute to true instead which conforms to the Redwood UX design.\n     * </p>\n     *\n     * <h5>LabelEdge attribute</h5>\n     * <p>\n     * The enum values for the label-edge attribute have been changed from 'inside', 'provided' and 'none' to 'start', 'inside', 'top' and 'none'.\n     * If you are using this component in a form layout and would like the form layout to drive the label edge of this component, leave this attribute\n     * unset. The application no longer has to specify 'provided' for this attribute. If you want to override how the label is positioned, set this\n     * attribute to the corresponding value.\n     * </p>\n     *\n     * <h5>MessagesCustom attribute</h5>\n     * <p>\n     * The type of the <code class=\"prettyprint\">severity</code> property of the messages in the\n     * array has changed from\n     * <code class=\"prettyprint\">Message.SEVERITY_TYPE | Message.SEVERITY_LEVEL</code>,\n     * essentially <code class=\"prettyprint\">string | number</code>, to simply\n     * <code class=\"prettyprint\">'error' | 'confirmation' | 'info' | 'warning'</code>.  These\n     * values are the same as the previously supported string values.\n     * The application can no longer specify severity as a number, including hardcoded numbers,\n     * one of the <code class=\"prettyprint\">Message.SEVERITY_LEVEL</code> constants, or the value\n     * returned from a call to the <code class=\"prettyprint\">Message.getSeverityLevel</code> method.\n     * </p>\n     *\n     * <h5>TextAlign attribute</h5>\n     * <p>\n     * The usage of the style classes: oj-form-control-text-align-right, oj-form-control-text-align-start and oj-form-control-text-align-end is now\n     * replaced with this attribute. The value of this attribute maps to these style classes as shown below:\n     * <ul>\n     * <li>\n     * .oj-form-control-text-align-right maps to 'right'\n     * </li>\n     * <li>\n     * .oj-form-control-text-align-start maps to 'start'\n     * </li>\n     * <li>\n     * .oj-form-control-text-align-end maps to 'end'\n     * </li>\n     * </ul>\n     * </p>\n     * <h5>Translations attribute</h5>\n     * <ul>\n     * <li>The translations.required.message-detail attribute has changed to required-message-detail.\n     * </li>\n     * <li>The translations.number-range.message-detail.exact attribute has changed to number-range-exact-message-detail.\n     * </li>\n     * <li>The translations.number-range.message-detail.overflow attribute has changed to number-range-overflow-message-detail.\n     * </li>\n     * <li>The translations.number-range.message-detail.underflow attribute has changed to number-range-underflow-message-detail.\n     * </li>\n     * </ul>\n     * <h5>Value attribute</h5>\n     * <p>\n     * Clearing the field and committing the value will now set the value attribute to <code>null</code>\n     * instead of <code>''</code>.\n     * </p>\n     *\n     * <h5>Refresh method</h5>\n     * <p>\n     * The refresh method is no longer supported. The application should no longer need to use this method. If the application\n     * wants to reset the component (remove messages and reset the value of the component), please use the reset method.\n     * </p>\n     *\n     * <h5>Reset method</h5>\n     * <p>\n     * This method does not synchronously reset the component. The application should wait on the busy context of the component after\n     * invoking this method for the changes to appear.\n     * </p>\n     *\n     * <h5>ShowMessages method</h5>\n     * <p>\n     * This method does not synchronously show the hidden messages of the component. The application should wait on the busy context\n     * of the component after invoking this method for the changes to appear.\n     * </p>\n     *\n     * <h5>StepDown method</h5>\n     * <p>\n     * The stepDown method is no longer supported. Please programmatically set the value instead.\n     * </p>\n     *\n     * <h5>StepUp method</h5>\n     * <p>\n     * The stepUp method is no longer supported. Please programmatically set the value instead.\n     * </p>\n     *\n     * <h5>Animation Events</h5>\n     * <p>\n     * ojAnimateStart and ojAnimateEnd events are no longer supported.\n     * </p>\n     *\n     * <h5>Custom Label</h5>\n     * <p>\n     * Adding a custom &lt;oj-label> for the form component is no longer supported. The application should use the\n     * label-hint attribute to add a label for the form component.\n     * </p>\n     * <p>\n     * The application should no longer need to use an &lt;oj-label-value> component to layout the form component. The application\n     * can use the label-edge attribute and label-start-width attribute to customize the label position and label width (only when using start label).\n     * </p>\n     *\n     * <h5>User Assistance Density - Compact mode</h5>\n     * <p>\n     * Rendering the component in compact userAssistanceDensity mode is not supported in this release. Please use 'reflow' or 'efficient' instead.\n     * </p>\n     *\n     * <h5>Usage in Dynamic Form</h5>\n     * <p>\n     * Using the component in oj-dyn-form is not supported in this release, use oj-dynamic-form instead.\n     * </p>\n     * @example <caption>Declare the oj-input-number component with no attributes specified:</caption>\n     * &lt;oj-input-number>&lt;/oj-input-number>\n     *\n     * @example <caption>Initialize the component with some attributes:</caption>\n     * &lt;oj-input-number id=\"numberId\" max=\"100\" min=\"0\" step=\"2\">&lt;/oj-input-number>\n     *\n     * @example <caption>Initialize a component attribute via component binding:</caption>\n     * &lt;oj-input-number id=\"numberId\" value=\"{{currentValue}}\">&lt;/oj-input-number>\n     */\n\n    //----------------------------------------------------------------\n    //      API doc for inherited methods with no JS in this file\n    //----------------------------------------------------------------\n\n    /**\n     * Removes the inputNumber functionality completely.\n     * This will return the element back to its pre-init state.\n     *\n     * <p>This method does not accept any arguments.\n     *\n     * @method\n     * @name oj.ojInputNumber#destroy\n     * @memberof oj.ojInputNumber\n     * @instance\n     * @ignore\n     *\n     * @example <caption>Invoke the <code class=\"prettyprint\">destroy</code> method:</caption>\n     * myComp.destroy();\n     */\n\n    //-----------------------------------------------------\n    //                   Fragments\n    //-----------------------------------------------------\n\n    /**\n     * <table class=\"keyboard-table\">\n     *   <thead>\n     *     <tr>\n     *       <th>Target</th>\n     *       <th>Gesture</th>\n     *       <th>Action</th>\n     *     </tr>\n     *   </thead>\n     *   <tbody>\n     *     <tr>\n     *       <td>Up Button</td>\n     *       <td><kbd>Tap</kbd></td>\n     *       <td>Increment the number.</td>\n     *     </tr>\n     *     <tr>\n     *       <td>Down Button</td>\n     *       <td><kbd>Tap</kbd></td>\n     *       <td>Decrement the number.</td>\n     *     </tr>\n     *     <tr>\n     *       <td>Input</td>\n     *       <td><kbd>Tap</kbd></td>\n     *       <td>Set focus to the input. Show user assistance text. This may be inline or in a notewindow\n     * depending upon theme and property settings.</td>\n     *     </tr>\n     *     <tr>\n     *       <td>Elsewhere on Page</td>\n     *       <td><kbd>Touch</kbd></td>\n     *       <td>Submit the value you typed in the input field.</td>\n     *     </tr>\n     *   </tbody>\n     * </table>\n     *\n     *\n     * @ojfragment touchDoc - Used in touch gesture section of classdesc, and standalone gesture doc\n     * @memberof oj.ojInputNumber\n     */\n\n    /**\n     * <table class=\"keyboard-table\">\n     *   <thead>\n     *     <tr>\n     *       <th>Target</th>\n     *       <th>Key</th>\n     *       <th>Action</th>\n     *     </tr>\n     *   </thead>\n     *   <tbody>\n     *     <tr>\n     *       <td rowspan=\"4\">Input</td>\n     *       <td><kbd>Enter</kbd> or <kbd>Tab</kbd></td>\n     *       <td>Submit the value you typed in the input field.</td>\n     *     </tr>\n     *     <tr>\n     *       <td><kbd>Tab In</kbd></td>\n     *       <td>Set focus to input. Show user assistance text. This may be inline or in a notewindow\n     * depending upon theme and property settings.</td>\n     *     </tr>\n     *     <tr>\n     *       <td><kbd>UpArrow</kbd></td>\n     *       <td>Increment the number.</td>\n     *     </tr>\n     *     <tr>\n     *       <td><kbd>DownArrow</kbd></td>\n     *       <td>Decrement the number.</td>\n     *     </tr>\n     *   </tbody>\n     * </table>\n     *\n     *\n     * @ojfragment keyboardDoc - Used in keyboard section of classdesc, and standalone gesture doc\n     * @memberof oj.ojInputNumber\n     */\n\n    //-----------------------------------------------------\n    //                   Sub-ids\n    //-----------------------------------------------------\n\n    /**\n     * <p>Sub-ID for the inputNumber's Up arrow.</p>\n     *\n     * @ojsubid oj-inputnumber-up\n     * @memberof oj.ojInputNumber\n     *\n     * @example <caption>Get the node for the Up arrow:</caption>\n     * var node = myComp.getNodeBySubId('oj-inputnumber-up');\n     */\n\n    /**\n     * <p>Sub-ID for the inputNumber's Down arrow.</p>\n     *\n     * @ojsubid oj-inputnumber-down\n     * @memberof oj.ojInputNumber\n     *\n     * @example <caption>Get the node for the Down arrow:</caption>\n     * var node = myComp.getNodeBySubId('oj-inputnumber-down);\n     */\n\n    /**\n     * <p>Sub-ID for the inputNumber's input element.</p>\n     * @ojsubid oj-inputnumber-input\n     * @memberof oj.ojInputNumber\n     *\n     * @example <caption>Get the node for the input element:</caption>\n     * var node = myComp.getNodeBySubId('oj-inputnumber-input');\n     */\n\n    //-----------------------------------------------------\n    //                   Styling\n    //-----------------------------------------------------\n    /**\n     * @classdesc The following CSS classes can be applied by the page author as needed.<br/>\n     * The form control style classes can be applied to the component, or an ancestor element. <br/>\n     * When applied to an ancestor element, all form components that support the style classes will be affected.\n     */\n    // ---------------- oj-form-control-full-width --------------\n    /**\n     * Changes the max-width to 100% so that form components will occupy all the available horizontal space.\n     * @ojstyleclass oj-form-control-full-width\n     * @ojdisplayname Full Width\n     * @memberof oj.ojInputNumber\n     * @ojtsexample\n     * &lt;oj-input-number class=\"oj-form-control-full-width\">\n     * &lt;/oj-input-number>\n     */\n\n    // ---------------- oj-form-control max-width --------------\n    /**\n     * In the Redwood theme the default max width of a text field is 100%.\n     * These max width convenience classes are available to create a medium or small field.<br>\n     * The class is applied to the root element.\n     * @ojstyleset form-control-max-width\n     * @ojdisplayname Max Width\n     * @ojstylesetitems [\"form-control-max-width.oj-form-control-max-width-sm\", \"form-control-max-width.oj-form-control-max-width-md\"]\n     * @ojstylerelation exclusive\n     * @memberof oj.ojInputNumber\n     * @ojunsupportedthemes ['Alta']\n     * @ojtsexample\n     * &lt;oj-input-number class=\"oj-form-control-max-width-md\">&lt;/oj-input-number>\n     */\n    /**\n     * @ojstyleclass form-control-max-width.oj-form-control-max-width-sm\n     * @ojshortdesc Sets the max width for a small field\n     * @ojdisplayname Small\n     * @memberof! oj.ojInputNumber\n     */\n    /**\n     * @ojstyleclass form-control-max-width.oj-form-control-max-width-md\n     * @ojshortdesc Sets the max width for a medium field\n     * @ojdisplayname Medium\n     * @memberof! oj.ojInputNumber\n     */\n\n    // ---------------- oj-form-control width --------------\n    /**\n     * In the Redwood theme the default width of a text field is 100%.\n     * These width convenience classes are available to create a medium or small field.<br>\n     * The class is applied to the root element.\n     * @ojstyleset form-control-width\n     * @ojdisplayname Width\n     * @ojstylesetitems [\"form-control-width.oj-form-control-width-sm\", \"form-control-width.oj-form-control-width-md\"]\n     * @ojstylerelation exclusive\n     * @memberof oj.ojInputNumber\n     * @ojunsupportedthemes ['Alta']\n     * @ojtsexample\n     * &lt;oj-input-number class=\"oj-form-control-width-md\">&lt;/oj-input-number>\n     */\n    /**\n     * @ojstyleclass form-control-width.oj-form-control-width-sm\n     * @ojshortdesc Sets the width for a small field\n     * @ojdisplayname Small\n     * @memberof! oj.ojInputNumber\n     */\n    /**\n     * @ojstyleclass form-control-width.oj-form-control-width-md\n     * @ojshortdesc Sets the width for a medium field\n     * @ojdisplayname Medium\n     * @memberof! oj.ojInputNumber\n     */\n\n    // ---------------- oj-form-control-text-align- --------------\n    /**\n     * Classes that help align text of the element.\n     * @ojstyleset text-align\n     * @ojdisplayname Text Alignment\n     * @ojstylesetitems [\"text-align.oj-form-control-text-align-right\", \"text-align.oj-form-control-text-align-start\", \"text-align.oj-form-control-text-align-end\"]\n     * @ojstylerelation exclusive\n     * @memberof oj.ojInputNumber\n     * @ojtsexample\n     * &lt;oj-input-number class=\"oj-form-control-text-align-right\">\n     * &lt;/oj-input-number>\n     */\n    /**\n     * @ojstyleclass text-align.oj-form-control-text-align-right\n     * @ojshortdesc Aligns the text to the right regardless of the reading direction. This is normally used for right aligning numbers.\n     * @ojdisplayname Align-Right\n     * @memberof! oj.ojInputNumber\n     */\n    /**\n     * @ojstyleclass text-align.oj-form-control-text-align-start\n     * @ojshortdesc Aligns the text to the left in LTR and to the right in RTL.\n     * @ojdisplayname Align-Start\n     * @memberof! oj.ojInputNumber\n     */\n    /**\n     * @ojstyleclass text-align.oj-form-control-text-align-end\n     * @ojshortdesc Aligns the text to the right in LTR and to the left in RTL.\n     * @ojdisplayname Align-End\n     * @memberof! oj.ojInputNumber\n     */\n    // --------------------------------------------------- oj.ojInputNumber Styling end ------------------------------------------------------------\n\n    oj.__registerWidget('oj.ojInputNumber', $.oj.editableValue, {\n      version: '1.0.0',\n      defaultElement: '<input>',\n      widgetEventPrefix: 'oj',\n\n      /**\n       * @private\n       */\n      _ALLOWED_TYPES: ['number', 'text'],\n\n      options: {\n        /**\n         * List of asynchronous validators used by the component when performing validation.\n         * Use <code class=\"prettyprint\">async-validators</code> when you need to\n         * perform some validation work on the server. Otherwise, use\n         * <code class=\"prettyprint\">validators</code>, which are synchronous.\n         * <p>\n         * Each item in the Array is an instance that duck types {@link oj.AsyncValidator}.\n         * Implicit validators created by a component when certain attributes\n         * are present (e.g. <code class=\"prettyprint\">required</code> attribute) are separate from\n         * validators specified through the <code class=\"prettyprint\">async-validators</code>\n         * attribute and the <code class=\"prettyprint\">validators</code> attribute.\n         * At runtime when the component runs validation, it\n         * combines the implicit validators with the list specified through the\n         * <code class=\"prettyprint\">validators</code>\n         * attribute and also the list specified through the\n         * <code class=\"prettyprint\">async-validators</code> attribute.\n         * Error messages are shown as soon as each async validator returns;\n         * we do not wait until all the async validators finish to show errors.\n         * If the component's valid state changes for the worse, it is also updated\n         * as each validator returns so valid will be invalidShown\n         * as soon as the first validator has an Error.\n         * </p>\n         * <p> It is recommended that you show the\n         * value you are validating in the error message because if the async operation takes a while,\n         * the user could be typing in a new value when the error message comes back\n         * and might be confused what value the error is for. However, if the user enters a new value\n         * (like presses Enter or Tab), a new validation lifecycle will start\n         * and validation errors for the previous value will not be shown to the user.\n         * If you need to format the value for the error message,\n         * you can use e.g. for number\n         * <code class=\"prettyprint\">new NumberConverter.IntlNumberConverter(converterOption)</code>\n         * to get the converter instance,\n         * then call <code class=\"prettyprint\">converter.format(value)</code>.\n         * </p>\n         * <p>\n         * Hints exposed by validators are shown inline by default in the Redwood theme when the\n         * field has focus.\n         * In the Alta theme, validator hints are shown in a notewindow on focus,\n         * or as determined by the\n         * 'validatorHint' property set on the <code class=\"prettyprint\">display-options</code>\n         * attribute.\n         * In either theme, you can turn off showing validator hints by using the\n         * 'validatorHint' property set to 'none' on the <code class=\"prettyprint\">display-options</code>\n         * attribute.\n         * </p>\n         * <p>Since async validators are run asynchronously, you should wait on the BusyContext before\n         * you check valid property or the value property. Alternatively you can add a callback to\n         * the validChanged or valueChanged events.\n         * </p>\n         * <p>\n         * The steps performed always, running validation and clearing messages is the same as\n         * for the <code class=\"prettyprint\">{@link oj.ojInputNumber#validators}</code> attribute.\n         * </p>\n         * <br/>\n         * @example <caption>Create an Object that duck-types the oj.AsyncValidator interface.\n         * Bind the Object to the JET form component's async-validators attribute. The\n         * validator's 'validate' method will be called when the user changes the input.</caption>\n         *  self.asyncValidator1 = {\n         *    // required validate method\n         *    'validate': function(value) {\n         *      return new Promise(function(resolve, reject) {\n         *        var successful = someBackendMethod();\n         *        if (successful) {\n         *          resolve(true);\n         *        } else {\n         *          reject(new Error('The amount of purchase is too high. It is ' + value));\n         *        }\n         *      });\n         *    },\n         *    // optional hint attribute. hint shows up when user sets focus to input.\n         *    'hint': new Promise(function (resolve, reject) {\n         *      var formattedMaxPurchase = getSomeBackendFormattedMaxPurchase();\n         *      resolve(maxPurchase + \" is the maximum.\");\n         *    });\n         *  };\n         *  -- HTML --\n         *  &lt;oj-input-number value=\"{{value}}\"\n         *  async-validators=\"[[[asyncValidator1]]]\">&lt;/oj-input-number>\n         * @example <caption>Initialize the component with multiple AsyncValidator\n         * duck-typed instances:</caption>\n         * -- HTML --\n         * &lt;oj-input-number id=\"asyncValKo1\" data-oj-context\n                    valid=\"{{koAsyncValid}}\" value=\"{{koAsyncValue}}\"\n                    required validators=\"[[[checkfoo, checkfooey]]]\"\n                    async-validators=\"[[[asyncValidator1, asyncValidator2]]]\">&lt;/oj-input-number>\n         *\n         * @example <caption>Get or set the <code class=\"prettyprint\">asyncValidators</code>\n         * property after initialization:</caption>\n         * // getter\n         * var validators = myComp.asyncValidators;\n         *\n         * // setter\n         * var myValidators = [{\n         * 'validate' : function(value) {\n         *   return new Promise(function(resolve, reject) {\n         *   // mock server-side delay\n         *   setTimeout(function () {\n         *     if (value === 100 || value === 1000) {\n         *       resolve(true);\n         *     } else {\n         *       reject(new Error(\"value isn't 100 or 1000. It is \" + value.));\n         *     }\n         *   },10);\n         *   });\n         * }\n         * }];\n         * myComp.asyncValidators = myValidators;\n         * @ojdeprecated {since: '8.0.0', description: 'Use the validators property instead for either regular Validators or AsyncValidators.'}\n         * @expose\n         * @access public\n         * @instance\n         * @memberof oj.ojInputNumber\n         * @ojshortdesc Specifies a list of asynchronous validators used by the component when performing validation. Use async-validators when you need to perform some validation work on the server. See the Help documentation for more information.\n         * @ojsignature  { target: \"Type\",\n         *       value: \"Array<oj.AsyncValidator<number>>\",\n         *       jsdocOverride: true}\n         * @type {Array.<Object>}\n         * @default []\n         */\n        asyncValidators: [],\n        /**\n         * Dictates component's autocomplete state.\n         * This attribute indicates whether the value of the control can be automatically\n         * completed by the browser. The common values are \"on\" and \"off\".\n         * <p>Since this attribute passes through to the input element\n         * unchanged, you can look at the html specs for detailed information for how browsers behave\n         * and what values besides \"on\" and \"off\" you can set. The html spec says the default is \"on\",\n         * so when autocomplete is not explicitly set, the browsers treat it as \"on\".\n         * </p>\n         * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input}\n         * @see {@link https://caniuse.com/#feat=input-autocomplete-onoff}\n         * @see {@link https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofilling-form-controls:-the-autocomplete-attribute}\n         *\n         *\n         * @example <caption>Initialize component with <code class=\"prettyprint\">autocomplete</code> attribute:</caption>\n         * &lt;oj-input-number autocomplete = \"on\">&lt;/oj-input-number>\n         *\n         * @example <caption>Get or set the <code class=\"prettyprint\">autocomplete</code> property after initialization:</caption>\n         * // getter\n         * var ro = myComp.autocomplete;\n         *\n         * // setter\n         * myComp.autocomplete = \"on\";\n         * @ojshortdesc Specifies a component's autocomplete state. See the Help documentation for more information.\n         * @expose\n         * @type {\"on\"|\"off\"|string=}\n         * @default \"on\"\n         * @instance\n         * @access public\n         * @memberof oj.ojInputNumber\n         * @ojextension {_COPY_TO_INNER_ELEM: true}\n         */\n        autocomplete: undefined,\n        /**\n         * Autofocus is a Boolean that reflects the autofocus attribute, If it is set to true\n         * then the associated component  will get input focus when the page is loaded.\n         * Setting this property doesn't set the focus to the component:\n         * it tells the browser to focus to it when the element is inserted in the document.\n         *\n         * @example <caption>Initialize component with <code class=\"prettyprint\">autofocus</code> attribute:</caption>\n         * &lt;oj-input-number autofocus>&lt;/oj-input-number>\n         *\n         * @example <caption>Get or set the <code class=\"prettyprint\">autofocus</code> property after initialization:</caption>\n         * // getter\n         * var ro = myComp.autofocus;\n         *\n         * // setter\n         * myComp.autofocus = false;\n         *\n         * @expose\n         * @type {boolean}\n         * @access public\n         * @default false\n         * @instance\n         * @memberof oj.ojInputNumber\n         * @ojshortdesc Specifies whether the component will get input focus when the page is loaded. See the Help documentation for more information.\n         * @ojextension {_COPY_TO_INNER_ELEM: true}\n         */\n        autofocus: false,\n        // TODO: revisit\n        // It's expensive to create a default converter ahead of time when a page author can set a custom\n        // one for if they do this will be promptly discarded.\n\n        /**\n         * A number converter instance or a Promise to a number converter instance\n         * or one that duck types {@link oj.NumberConverter}. The number converter instance defaults\n         * to options suitable for the current locale.\n         * <p>\n         * When no converter is specified, the default converter will be used,\n         * and default option of \"numeric\" is used.\n         * </p>\n         * <p>\n         *  During validation, the converter takes the input value and parses it into the\n         * type of the component's value property (i.e. a number) before it passes\n         *  it to the validator. It then takes the validated value property and formats it\n         *  into a string and puts it into the input. If the converter's format or parse functions\n         *  throw an error, it will be displayed to the user.\n         * </p>\n         * <p>\n         * When <code class=\"prettyprint\">converter</code> property changes due to programmatic\n         * intervention, the component performs various tasks based on the current state it is in. </br>\n         * When initialized with no options, the default options for the current locale are assumed. </br>\n         *\n         * <p>\n         * The hint exposed by the converter is shown inline by default in the Redwood theme when\n         * the field has focus.\n         * In the Alta theme, converter hints are shown in a notewindow on focus,\n         * or as determined by the\n         * 'converterHint' property set on the <code class=\"prettyprint\">display-options</code>\n         * attribute.\n         * In either theme, you can turn off showing converter hints by using the\n         * 'converterHint' property set to 'none' on the <code class=\"prettyprint\">display-options</code>\n         * attribute.\n         * </p>\n         * <p>\n         * In the Redwood theme, only one hint shows at a time, so the precedence rules are:\n         * help.instruction shows; if no help.instruction then validator hints show;\n         * if none, then help-hints.definition shows; if none, then converter hint shows.\n         * help-hints.source always shows along with the other help or hint.\n         * </p>\n         *\n         * <h4>Steps Performed Always When Converter Is Changed</h4>\n         * <ul>\n         * <li>Any cached converter instance is cleared and new converter created. The converter hint is\n         * pushed to messaging. E.g., notewindow displays the new hint(s).\n         * </li>\n         * </ul>\n         *\n         * <h4>Running Validation</h4>\n         * <ul>\n         * <li>if component is valid when <code class=\"prettyprint\">converter</code> property changes, the\n         * display value is refreshed.</li>\n         * <li>if component is invalid and is showing messages when\n         * <code class=\"prettyprint\">converter</code> property changes, then all messages generated by the\n         * component are cleared and full validation run using its current display value.\n         * <ul>\n         *   <li>if there are validation errors, then <code class=\"prettyprint\">value</code>\n         *   property is not updated, and the errors are shown. The display value is not refreshed in this case. </li>\n         *   <li>if no errors result from the validation, <code class=\"prettyprint\">value</code>\n         *   property is updated; page author can listen to the <code class=\"prettyprint\">valueChanged</code>\n         *   event to clear custom errors. The display value is refreshed with the formatted\n         *   value provided by converter.</li>\n         * </ul>\n         * </li>\n         * <li>if component is invalid and has deferred messages when\n         * <code class=\"prettyprint\">converter</code> property changes, then the display value is\n         * refreshed with the formatted value provided by converter.</li>\n         * </ul>\n         * </p>\n         *\n         * <h4>Clearing Messages</h4>\n         * <ul>\n         * <li>messages created by\n         * the component  are cleared.</li>\n         * <li><code class=\"prettyprint\">messagesCustom</code> property is not cleared. Page authors can\n         * choose to clear it explicitly when setting the converter property.</li>\n         * </ul>\n         * </p>\n         *\n         *\n         * @example <caption>Initialize component to use default converter</caption>\n         * &lt;oj-input-number value=\"25000\">&lt;/oj-input-number>\n         *\n         * @example <caption>Initialize the component with a number converter instance:</caption>\n         * // Initialize converter instance using currency options\n         * var options = {style: 'currency', 'currency': 'USD', maximumFractionDigits: 0};\n         * var salaryConverter = new NumberConverter.IntlNumberConverter(options);<br/>\n         * // set converter instance using converter attribute\n         * &lt;oj-input-number value=\"25000\" converter=\"[[salaryConverter]]\">&lt;/oj-input-number>\n         *\n         *\n         * @example <caption>Get or set the <code class=\"prettyprint\">converter</code> property after initialization:</caption>\n         * // Getter\n         * var convtr = myComponent.converter;\n         *\n         * // Setter\n         * myComponent.converter = salaryConverter;\n         *\n         *\n         * @default new IntlNumberConverter()\n         *\n         * @expose\n         * @access public\n         * @instance\n         * @memberof oj.ojInputNumber\n         * @ojshortdesc An object that converts the value. See the Help documentation for more information.\n         * @ojsignature [{\n         *    target: \"Type\",\n         *    value: \"Promise<oj.Converter<number>>|oj.Converter<number>\",\n         *    jsdocOverride: true},\n         * {target: \"Type\",\n         *    value: \"Promise<oj.Converter<number>>|oj.Converter<number>|oj.Validation.RegisteredConverter\",\n         *    consumedBy: 'tsdep'}]\n         * @ojdeprecated {since: '8.0.0', target: 'memberType', value: ['oj.Validation.RegisteredConverter'],\n         *                description:'Defining a converter with an object literal with converter type and its options\n         *                  (aka JSON format) has been deprecated and does nothing. If needed, you can make the JSON format\n         *                  work again by importing the deprecated ojvalidation-number module.'}\n         * @type {Object}\n         */\n        converter: null,\n        /**\n         * <p>\n         * The oj-label sets the labelledBy property programmatically on the form component\n         * to make it easy for the form component to find its oj-label component (a\n         * document.getElementById call.)\n         * </p>\n         * <p>\n         * The application developer should use the 'for'/'id api\n         * to link the oj-label with the form component;\n         * the 'for' on the oj-label to point to the 'id' on the input form component.\n         * This is the most performant way for the oj-label to find its form component.\n         * </p>\n         *\n         * @example <caption>Initialize component with <code class=\"prettyprint\">for</code> attribute:</caption>\n         * &lt;oj-label for=\"numberId\">Number:&lt;/oj-label>\n         * &lt;oj-input-number id=\"numberId\">\n         * &lt;/oj-input-number>\n         * // ojLabel then writes the labelled-by attribute on the oj-input-number.\n         * &lt;oj-label id=\"labelId\" for=\"numberId\">Number:&lt;/oj-label>\n         * &lt;oj-input-number id=\"numberId\" labelled-by\"labelId\">\n         * &lt;/oj-input-number>\n         *\n         * @example <caption>Get or set the <code class=\"prettyprint\">labelledBy</code> property after initialization:</caption>\n         * // getter\n         * var labelledBy = myComp.labelledBy;\n         *\n         * // setter\n         * myComp.labelledBy = \"labelId\";\n         *\n         * @expose\n         * @ojshortdesc The oj-label sets the labelledBy property programmatically on the form component.\n         * @type {string|null}\n         * @default null\n         * @public\n         * @instance\n         * @since 7.0.0\n         * @memberof oj.ojInputNumber\n         */\n        labelledBy: null,\n\n        /**\n         * The maximum allowed value. This number is used in the range validator; if the\n         * <code class=\"prettyprint\">value</code> is greater than the <code class=\"prettyprint\">max</code>,\n         * then the range validator flags an error to the user. The up arrow\n         *  is disabled when the maximum value is reached.\n         * <p>\n         *  <code class=\"prettyprint\">Max</code> must be a\n         *  <code class=\"prettyprint\">number</code> or <code class=\"prettyprint\">null</code>;\n         *  <code class=\"prettyprint\">null</code> indicates no maximum.\n         * <p>\n         * The <code class=\"prettyprint\">max</code> must not be less than the\n         * <code class=\"prettyprint\">min</code>, else an Error is thrown during initialization.\n         * @expose\n         * @memberof oj.ojInputNumber\n         * @ojshortdesc The maximum allowed value. A value of null indicates that there is no maximum. See the Help documentation for more information.\n         * @instance\n         * @type {?number}\n         * @default null\n         * @example <caption>Initialize the inputNumber with the\n         * <code class=\"prettyprint\">max</code> attribute specified:</caption>\n         * &lt;oj-input-number max=\"100\">&lt;/oj-input-number>\n         *\n         * @example <caption>Change the <code class=\"prettyprint\">max</code> property to a float:</caption>\n         * myComponent.max = 100.5;\n         *\n         * @example <caption>To remove the maximum range restriction from inputNumber:</caption>\n         * myComponent.max =  null;\n         *\n         * @example <caption>Get or set the <code class=\"prettyprint\">max</code> property after initialization:</caption>\n         * // Getter\n         * var max = myComponent.max;\n         *\n         * // Setter\n         * myComponent.max = 100;\n         */\n        max: null,\n\n        /**\n         * The minimum allowed value. This number is used in the range validator; if the\n         * <code class=\"prettyprint\">value</code> is less than the <code class=\"prettyprint\">min</code>,\n         * then the range validator flags an error to the user. The down arrow\n         *  is disabled when the minimum value is reached.\n         *  <p>\n         *  <code class=\"prettyprint\">Min</code> must be a <code class=\"prettyprint\">number</code> or <code class=\"prettyprint\">null</code>;\n         *  <code class=\"prettyprint\">null</code> indicates no minimum.\n         * <p>\n         * The <code class=\"prettyprint\">max</code> must not be less than the\n         * <code class=\"prettyprint\">min</code>, else an Error is thrown during initialization.\n         * @expose\n         * @memberof oj.ojInputNumber\n         * @ojshortdesc The minimum allowed value. A value of null indicates that there is no minimum. See the Help documentation for more information.\n         * @instance\n         * @type {?number}\n         * @default null\n         * @example <caption>Initialize the inputNumber with the\n         * <code class=\"prettyprint\">min</code> attribute specified:</caption>\n         * &lt;oj-input-number min=\"0\">&lt;/oj-input-number>\n         *\n         * @example <caption>Get or set the <code class=\"prettyprint\">min</code> property after initialization:</caption>\n         * // Getter\n         * var min = myComponent.min;\n         *\n         * // Setter\n         * myComponent.min = 0;\n         *\n         * @example <caption>Change the <code class=\"prettyprint\">min</code> property to a float:</caption>\n         * myComponent.min = 10.5;\n         *\n         * @example <caption>To remove the minimum range restriction from inputNumber:</caption>\n         * myComponent.min =  null;\n         *\n         */\n        min: null,\n        /**\n         * It indicates the name of the component.\n         *\n         * @example <caption>Initialize component with <code class=\"prettyprint\">name</code> attribute:</caption>\n         * &lt;oj-input-number name=\"myName\">&lt;/oj-input-number>\n         *\n         * @example <caption>Get or set the <code class=\"prettyprint\">name</code> property after initialization:</caption>\n         * // getter\n         * var ro = myComp.name;\n         *\n         * // setter\n         * myComp.name = \"myName\";\n         *\n         * @expose\n         * @type {string}\n         * @ojshortdesc Specifies the name of the component.\n         * @access public\n         * @instance\n         * @default \"\"\n         * @ojdeprecated {since: '6.0.0', description: 'JET does not use form submit, so this is not needed.'}\n         * @ojtsignore\n         * @memberof oj.ojInputNumber\n         * @ojextension {_COPY_TO_INNER_ELEM: true}\n         */\n        name: '',\n        /**\n         * The placeholder text to set on the element.\n         *\n         * @example <caption>Initialize the component with the <code class=\"prettyprint\">placeholder</code> attribute:</caption>\n         * &lt;oj-input-number placeholder=\"Enter a number\">&lt;/oj-input-number>\n         *\n         * @example <caption>Get or set the <code class=\"prettyprint\">placeholder</code> property after initialization:</caption>\n         * // Getter\n         * var placeholder = myComponent.placeholder;\n         *\n         * // Setter\n         * myComponent.placeholder = \"Address\";\n         *\n         * If the attribute is not set then the default can be a converter hint. See display-options for\n         * details.\n         *\n         * @expose\n         * @instance\n         * @default \"\"\n         * @memberof oj.ojInputNumber\n         * @type {string|null}\n         * @ojtranslatable\n         */\n        placeholder: '',\n        /**\n         * <p>The <code class=\"prettyprint\">rawValue</code> is the read-only property for retrieving\n         * the current value from the input field in string form. The main consumer of\n         * <code class=\"prettyprint\">rawValue</code> is a converter.</p>\n         * <p>\n         * The <code class=\"prettyprint\">rawValue</code> updates on the 'input' javascript event,\n         * so the <code class=\"prettyprint\">rawValue</code> changes as the value of the input is changed.\n         * If the user types in '1,200' into the field, the rawValue will be '1', then '1,', then '1,2',\n         * ..., and finally '1,200'. Then when the user blurs or presses Enter\n         * the <code class=\"prettyprint\">value</code> property gets updated.\n         * </p>\n         * <p>This is a read-only property so page authors cannot set or change it directly.</p>\n         * @expose\n         * @access public\n         * @instance\n         * @memberof oj.ojInputNumber\n         * @ojshortdesc Read-only property used for retrieving the current value from the input field in string form. See the Help documentation for more information.\n         * @type {string}\n         * @ojsignature {target:\"Type\", value:\"string\"}\n         * @since 1.2.0\n         * @readonly\n         * @ojwriteback\n         */\n        rawValue: undefined,\n        /**\n         * Whether the component is readonly. The readonly property sets or returns whether an element is readonly, or not.\n         * A readonly element cannot be modified. However, a user can tab to it, highlight it, focus on it, and copy the text from it.\n         * If you want to prevent the user from interacting with the element, use the disabled property instead.\n         * <p>\n         * The default value for readonly is false. However, if the form component is a descendent of\n         * <code class=\"prettyprint\">oj-form-layout</code>, the default value for readonly could come from the\n         * <code class=\"prettyprint\">oj-form-layout</code> component's readonly attribute.\n         * The <code class=\"prettyprint\">oj-form-layout</code> uses the\n         * <a href=\"MetadataTypes.html#PropertyBinding\">MetadataTypes.PropertyBinding</a>\n         * <code class=\"prettyprint\">provide</code> property to provide its\n         * <code class=\"prettyprint\">readonly</code>\n         * attribute value to be consumed by descendent components.\n         * The form components are configured to consume the readonly property if an ancestor provides it and\n         * it is not explicitly set.\n         * For example, if the oj-form-layout's readonly attribute is set to true, and a descendent form component does\n         * not have its readonly attribute set, the form component's readonly will be true.\n         * </p>\n         * @example <caption>Initialize component with <code class=\"prettyprint\">readonly</code> attribute:</caption>\n         * &lt;oj-input-number readonly>&lt;/oj-input-number>\n         *\n         * @example <caption>Get or set the <code class=\"prettyprint\">readonly</code> property after initialization:</caption>\n         * // Getter\n         * var readonly = myComponent.readonly;\n         *\n         * // Setter\n         * myComponent.readonly = false;\n         *\n         * @default false\n         * @access public\n         * @expose\n         * @type {?boolean}\n         * @name readonly\n         * @instance\n         * @memberof oj.ojInputNumber\n         * @ojshortdesc Specifies whether the component is read-only.  A read-only element cannot be modified, but user interaction is allowed. See the Help documentation for more information.\n         */\n        readOnly: false,\n        /**\n         * <p>\n         * This property set to <code class=\"prettyprint\">false</code> implies that a value is not required to be provided by the user.\n         * This is the default.\n         * This property set to <code class=\"prettyprint\">true</code> implies that a value is required to be provided by the user.\n         * </p>\n         * <p>\n         * In the Redwood theme, by default, a Required text is rendered inline when the field is empty.\n         * If user-assistance-density is 'compact', it will show on the label as an icon.\n         * In the Alta theme the input's label will render a required icon.\n         * </p>\n         * <p>The Required error text is based on Redwood UX designs, and it is not recommended that\n         * it be changed.\n         * To override the required error message,\n         * use the <code class=\"prettyprint\">translations.required</code> attribute.\n         * The component's label text is passed in as a token {label} and can be used in the message detail.\n         * </p>\n         * <p>When required is set to true, an implicit\n         * required validator is created, i.e.,\n         * <code class=\"prettyprint\">new RequiredValidator()</code>. The required validator is the only\n         * validator to run during initial render, and its error is not shown to the user at this time;\n         * this is called deferred validation. The required validator also runs during normal validation;\n         * this is when the errors are shown to the user.\n         * See the <a href=\"#validation-section\">Validation and Messaging</a> section for details.\n         * </p>\n         * <p>\n         * When the <code class=\"prettyprint\">required</code> property changes due to programmatic intervention,\n         * the component may clear component messages and run validation, based on the current state it's in. </br>\n         *\n         * <h4>Running Validation when required property changes</h4>\n         * <ul>\n         * <li>if component is valid when required is set to true, then it runs deferred validation on\n         * the value property. If the field is empty, the valid state is invalidHidden. No errors are\n         * shown to the user.\n         * </li>\n         * <li>if component is invalid and has deferred messages when required is set to false, then\n         * component messages are cleared (messages-custom messages are not cleared)\n         * but no deferred validation is run because required is false.\n         * </li>\n         * <li>if component is invalid and currently showing invalid messages when required is set, then\n         * component messages are cleared and normal validation is run using the current display value.\n         * <ul>\n         *   <li>if there are validation errors, then <code class=\"prettyprint\">value</code>\n         *   property is not updated and the error is shown.\n         *   </li>\n         *   <li>if no errors result from the validation, the <code class=\"prettyprint\">value</code>\n         *   property is updated; page author can listen to the <code class=\"prettyprint\">valueChanged</code>\n         *   event on the component to clear custom errors.</li>\n         * </ul>\n         * </li>\n         * </ul>\n         *\n         * <h4>Clearing Messages when required property changes</h4>\n         * <ul>\n         * <li>Only messages created by the component, like validation messages, are cleared when the required property changes.</li>\n         * <li><code class=\"prettyprint\">messagesCustom</code> property is not cleared.</li>\n         * </ul>\n         *\n         * </p>\n         *\n         * @example <caption>Initialize the component with the <code class=\"prettyprint\">required</code> attribute:</caption>\n         * &lt;oj-input-number required>&lt;/oj-input-number><br/>\n         *\n         * @example <caption>Customize messages and hints used by implicit required validator when\n         * <code class=\"prettyprint\">required</code> attribute is set:</caption>\n         * &lt;oj-input-number required translations='{\"required\": {\n         *                 \"hint\": \"custom: enter at least 3 alphabets\",\n         *                 \"messageSummary\": \"custom: \\'{label}\\' is Required\",\n         *                 \"messageDetail\": \"custom: please enter a valid value for \\'{label}\\'\"}}'>\n         * &lt;/oj-input-number>\n         *\n         * @example <caption>Get or set the <code class=\"prettyprint\">required</code> property after initialization:</caption>\n         * // getter\n         * var rq = myComp.required;\n         *\n         * // setter\n         * myComp.required = false;\n         *\n         * @expose\n         * @access public\n         * @instance\n         * @memberof oj.ojInputNumber\n         * @ojshortdesc Specifies whether the component is required or optional. See the Help documentation for more information.\n         * @type {boolean}\n         * @default false\n         * @since 0.7.0\n         * @see #translations\n         */\n        required: false,\n        /**\n         * The size of the step to take when spinning via buttons or via the up/down arrows or via the\n         * <code class=\"prettyprint\">stepUp()</code>/<code class=\"prettyprint\">stepDown()</code> methods.\n         * If step is 0, inputNumber will not have buttons or up/down spin functionality.\n         * If step is less than 0, an exception is thrown.\n         * <p><code class=\"prettyprint\">step</code> defaults to <code class=\"prettyprint\">1</code>\n         * in all themes except the redwood theme where it defaults to <code class=\"prettyprint\">0</code>.\n         * </p>\n         * <p>\n         * <p>\n         * The <code class=\"prettyprint\">step</code> attribute can be used together\n         * with the <code class=\"prettyprint\">min</code> and\n         * <code class=\"prettyprint\">max</code> attributes\n         * to create a range of values the up/down arrows will step through. For example,\n         * if min is 0 and step is 3, the range of values is 0, 3, 6, etc.\n         * </p>\n         * <p>\n         * The up/down arrows will spin the value and adjust it to keep it a\n         * 'step match' value.\n         * A 'step match' value is when the value is a multiple\n         * of <code class=\"prettyprint\">step</code>,\n         * starting at the <code class=\"prettyprint\">min</code>, and if\n         * <code class=\"prettyprint\">min</code> is not set,\n         * then starting at the initial <code class=\"prettyprint\">value</code>,\n         * and if neither <code class=\"prettyprint\">min</code> and initial\n         * <code class=\"prettyprint\">value</code> are set,\n         * then starting at 0.\n         * </p>\n         * <p>When using step > 1 with min and/or max,\n         * make sure the initial value and max are both a 'step match' value,\n         * otherwise the first step will adjust the value in a way\n         * that could confuse the user.</p>\n         * </p>\n         * <p>\n         * A value can be a step mismatch; if the <code class=\"prettyprint\">value</code> is set\n         * to be a step mismatch, it will not be flagged as a validation error.\n         * </p>\n         * @expose\n         * @instance\n         * @type {?number}\n         * @ojexclusivemin -1\n         * @memberof oj.ojInputNumber\n         * @ojshortdesc Specifies the amount to increase or decrease the value when moving in step increments. If 0, no step functionality. See the Help documentation for more information.\n         * @access public\n         * @example <caption>Initialize the inputNumber with the\n         * <code class=\"prettyprint\">step</code> attribute specified:</caption>\n         * &lt;oj-input-number step=\"2\">&lt;/oj-input-number>\n         *\n         * @example <caption>Get or set the <code class=\"prettyprint\">step</code> property after initialization:</caption>\n         * // Getter\n         * var step = myComponent.step;\n         *\n         * // Setter\n         * myComponent.step = 5;\n         * */\n        step: 1,\n        /**\n         * <p>The <code class=\"prettyprint\">transientValue</code> is the read-only attribute for\n         * retrieving the transient value from the component.</p>\n         * <p>\n         * The <code class=\"prettyprint\">transientValue</code> updates to display the transient\n         * changes from pressing the up or down arrow (subject to the step constraints).\n         * <code class=\"prettyprint\">transientValue</code> will update only if it passes\n         * validation.\n         * </p>\n         * <p>\n         * The difference\n         * in behavior is\n         * <code class=\"prettyprint\">transientValue</code> will be updated\n         * as the up or down arrow is pressed (and only if validation succeeds),\n         * whereas <code class=\"prettyprint\">value</code>\n         * is updated only after the up or down arrow is released\n         * (and only if validation succeeds).\n         * </p>\n         * <p>This is a read-only attribute so page authors cannot set or change it directly.</p>\n         * @expose\n         * @access public\n         * @instance\n         * @default null\n         * @memberof oj.ojInputNumber\n         * @ojshortdesc Read-only property used for retrieving the transient value from the component. See the Help documentation for more information.\n         * @type {?number}\n         * @since 6.2.0\n         * @readonly\n         * @ojwriteback\n         *\n         */\n        transientValue: null,\n        /**\n         * List of validators, synchronous or asynchronous,\n         * used by component along with asynchronous validators from the deprecated async-validators option\n         * and the implicit component validators when performing validation. Each item is either an\n         * instance that duck types {@link oj.Validator} or {@link oj.AsyncValidator}.\n         * <p>\n         * Implicit validators are created by the element when certain attributes are present.\n         * For example, if the <code class=\"prettyprint\">required</code>\n         * attribute is set, an implicit {@link oj.RequiredValidator} is created. If the\n         * <code class=\"prettyprint\">min</code> and/or <code class=\"prettyprint\">max</code> attribute\n         * is set, an implicit {@link oj.NumberRangeValidator} is created.\n         * At runtime when the component runs validation, it\n         * combines all the implicit validators with all the validators\n         * specified through this <code class=\"prettyprint\">validators</code> attribute\n         * and the deprecated <code class=\"prettyprint\">async-validators</code> attribute, and\n         * runs all of them.\n         * </p>\n         * <p>\n         * Hints exposed by validators are shown inline by default in the Redwood theme when the\n         * field has focus.\n         * In the Alta theme, validator hints are shown in a notewindow on focus,\n         * or as determined by the\n         * 'validatorHint' property set on the <code class=\"prettyprint\">display-options</code>\n         * attribute.\n         * In either theme, you can turn off showing validator hints by using the\n         * 'validatorHint' property set to 'none' on the <code class=\"prettyprint\">display-options</code>\n         * attribute.\n         * </p>\n         * <p>\n         * In the Redwood theme, only one hint shows at a time, so the precedence rules are:\n         * help.instruction shows; if no help.instruction then validator hints show;\n         * if none, then help-hints.definition shows; if none, then converter hint shows.\n         * help-hints.source always shows along with the other help or hint.\n         * </p>\n         *\n         * <p>\n         * When <code class=\"prettyprint\">validators</code> property changes due to programmatic\n         * intervention, the component may decide to clear messages and run validation, based on the\n         * current state it is in. </br>\n         *\n         * <h4>Steps Performed Always</h4>\n         * <ul>\n         * <li>The cached list of validator instances are cleared and new validator hints are pushed to\n         * messaging. E.g., notewindow displays the new hint(s).\n         * </li>\n         * </ul>\n         *\n         * <h4>Running Validation</h4>\n         * <ul>\n         * <li>if component is valid when validators changes, component does nothing other than the\n         * steps it always performs.</li>\n         * <li>if component is invalid and is showing messages when\n         * <code class=\"prettyprint\">validators</code> or\n         * <code class=\"prettyprint\">async-validators</code> changes then all component messages\n         *  are cleared and full validation run using the display value on the component.\n         * <ul>\n         *   <li>if there are validation errors, then <code class=\"prettyprint\">value</code>\n         *   property is not updated and the error is shown.\n         *   </li>\n         *   <li>if no errors result from the validation, the <code class=\"prettyprint\">value</code>\n         *   property is updated; page author can listen to the <code class=\"prettyprint\">valueChanged</code>\n         *   event to clear custom errors.</li>\n         * </ul>\n         * </li>\n         * <li>if component is invalid and has deferred messages when validators changes, it does\n         * nothing other than the steps it performs always.</li>\n         * </ul>\n         * </p>\n         *\n         * <h4>Clearing Messages</h4>\n         * <ul>\n         * <li>Only messages created by the component are cleared.</li>\n         * <li><code class=\"prettyprint\">messagesCustom</code> property is not cleared.</li>\n         * </ul>\n         * </p>\n         * <br/>\n         *\n         * @example <caption>Initialize the component with a Validator instance:</caption>\n         * &lt;oj-input-number validators='[[[myRegExpValidator]]]'>\n         * &lt;/oj-input-number>\n         * self.myRegExpValidator = new RegExpValidator({\n         *   pattern: \"[a-zA-Z0-9]{3,}\",\n         *   messageDetail: \"You must enter at least 3 letters or numbers\"});\n         * @example <caption>Initialize the component with a custom validator:</caption>\n         * // A custom validator whose validate method, ensures that the value is not 100.\n         * self.no100Validator = {\n         *   'validate' : function (value) {\n         *      value = value + \"\";\n         *      if (value === 100) {\n         *        throw new Error(\"You cannot enter a value that is 100!!\");\n         *      }\n         *      return true;\n         *    },\n         *    'getHint': function() {\n         *       return null;\n         *    }\n         *  };\n         * ...\n         * HTML\n         * ----\n         * &lt;oj-input-number validators='[[[no100Validator,someOtherValidator]]]'>\n         * &lt;/oj-input-number>\n         *\n         * @example <caption>Get or set the <code class=\"prettyprint\">validators</code> property after initialization:</caption>\n         * // getter\n         * var validators = myComp.validators;\n         *\n         * // setter\n         * myComp.validators = myValidators;\n         * @expose\n         * @access public\n         * @instance\n         * @memberof oj.ojInputNumber\n         * @ojshortdesc Specifies a list of validators for performing validation by the element. See the Help documentation for more information.\n         * @ojsignature  [{ target: \"Type\",\n         *       value: \"Array<oj.Validator<number>|oj.AsyncValidator<number>\",\n         *       jsdocOverride: true},\n         * { target: \"Type\",\n         *       value: \"Array<oj.Validator<number>|oj.AsyncValidator<number>|\n         *       oj.Validation.RegisteredValidator>\",\n         *       consumedBy: 'tsdep'}]\n         * @ojdeprecated {since: '8.0.0', target: 'memberType', value: ['oj.Validation.RegisteredValidator'],\n         *                description: 'Defining a validator with an object literal with validator type and\n         *                  its options (aka JSON format) has been deprecated and does nothing. If needed, you can\n         *                  make the JSON format work again by importing the deprecated ojvalidation-number module.'}\n         * @type {Array.<Object>}\n         * @default []\n         */\n\n        validators: [],\n        /**\n         * The value of the component. Value must be a number or null.\n         *\n         * <p>\n         * When <code class=\"prettyprint\">value</code> property changes due to programmatic\n         * intervention, the component always clears all messages\n         * including <code class=\"prettyprint\">messagesCustom</code>, runs deferred validation, and\n         * always refreshes UI display value.</br>\n         *\n         * <h4>Running Validation</h4>\n         * <ul>\n         * <li>component always runs deferred validation; if there is a validation error the\n         * <code class=\"prettyprint\">valid</code> property is updated.</li>\n         * </ul>\n         * </p>\n         *\n         * @example <caption>Initialize the component with the <code class=\"prettyprint\">value</code> attribute specified:</caption>\n         * &lt;oj-input-number value='10'>&lt;/oj-input-number>\n         * @example <caption>Get or set <code class=\"prettyprint\">value</code> attribute, after initialization:</caption>\n         * // Getter: returns 10\n         * var val = myComp.value;\n         * // Setter: sets 20\n         * myComp.value = 20;\n         *\n         * @expose\n         * @access public\n         * @instance\n         * @default null\n         * @ojwriteback\n         * @ojeventgroup common\n         * @memberof oj.ojInputNumber\n         * @ojshortdesc The value of the component, which must be either a number or null. See the Help documentation for more information.\n         * @type {?number}\n         */\n        value: null,\n        /**\n         * The type of virtual keyboard to display for entering a value on mobile browsers. This attribute has no effect on desktop browsers.\n         * @example <caption>Initialize the component with the <code class=\"prettyprint\">virtual-keyboard</code> attribute:</caption>\n         * &lt;oj-input-number virtual-keyboard=\"number\">&lt;/oj-input-number>\n         *\n         * @example <caption>Get or set the <code class=\"prettyprint\">virtualKeyboard</code> property after initialization:</caption>\n         * // Getter\n         * var virtualKeyboard = myComp.virtualKeyboard;\n         *\n         * // Setter\n         * myComp.virtualKeyboard = \"number\";\n         *\n         * @expose\n         * @instance\n         * @memberof oj.ojInputNumber\n         * @ojshortdesc The type of virtual keyboard to display for entering a value on mobile browsers. See the Help documentation for more information.\n         * @type {string}\n         * @ojvalue {string} \"auto\" The component will determine the best mobile virtual keyboard to use. For example, it may look at the converter's resolvedOptions\n         *                          to determine if it formats using non-numeric characters or not. If it formats using non-numeric characters, like oj-input-number's default\n         *                          converter for 'en-US' loocale (1000 formats to \"1,000\"), then it will use \"text\".\n         * @ojvalue {string} \"number\" Use a mobile virtual keyboard for entering numbers. If using \"number\", you must set the converter attribute to a converter\n         *                            that formats to numeric characters only, otherwise the value will not be shown. The reason for this\n         *                            is oj-input-number uses the browser native input type='number'  and when you set an input value that contains a non-numeric character,\n         *                              browsers do not display the value. For example, \"1,000\" would not be shown. And oj-input-number's default converter for 'en-US' locale formats using non-numeric characters, e.g., 1000 formats to \"1,000\".\n         *                            <p>Note that on Android and Windows Mobile, the \"number\" keyboard does\n         *                            not contain the minus sign.  This value should not be used on fields that\n         *                            accept negative values.</p>\n         * @ojvalue {string} \"text\" Use a mobile virtual keyboard for entering text.\n         * @default \"auto\"\n         * @since 5.0.0\n         */\n        virtualKeyboard: 'auto'\n\n        // Events\n\n        /**\n         * Triggered when the ojInputNumber is created.\n         *\n         * @event\n         * @name create\n         * @memberof oj.ojInputNumber\n         * @instance\n         * @property {Event} event event object\n         * @property {Object} ui Currently empty\n         * @ignore\n         *\n         * @example <caption>Initialize the ojInputNumber with the <code class=\"prettyprint\">create</code> callback specified:</caption>\n         * $( \".selector\" ).ojInputNumber({\n         *     \"create\": function( event, ui ) {}\n         * });\n         *\n         * @example <caption>Bind an event listener to the <code class=\"prettyprint\">ojcreate</code> event:</caption>\n         * $( \".selector\" ).on( \"ojcreate\", function( event, ui ) {} );\n         */\n        // create event declared in superclass, but we still want the above API doc\n      },\n      // P U B L I C    M E T H O D S\n\n      getNodeBySubId: function (locator) {\n        var node = this._superApply(arguments);\n        var subId;\n        if (!node) {\n          subId = locator.subId;\n          if (subId === 'oj-inputnumber-up') {\n            node = this.widget()[0].querySelector('.oj-inputnumber-up');\n          }\n          if (subId === 'oj-inputnumber-down') {\n            node = this.widget()[0].querySelector('.oj-inputnumber-down');\n          }\n          if (subId === 'oj-inputnumber-input') {\n            node = this.widget()[0].querySelector('.oj-inputnumber-input');\n          }\n        }\n        // Non-null locators have to be handled by the component subclasses\n        return node || null;\n      },\n      getSubIdByNode: function (node) {\n        var subId = null;\n\n        if (node != null) {\n          if (node === this.widget()[0].querySelector('.oj-inputnumber-up')) {\n            subId = { subId: 'oj-inputnumber-up' };\n          } else if (node === this.widget()[0].querySelector('.oj-inputnumber-down')) {\n            subId = { subId: 'oj-inputnumber-down' };\n          } else if (node === this.widget()[0].querySelector('.oj-inputnumber-input')) {\n            subId = { subId: 'oj-inputnumber-input' };\n          }\n        }\n\n        return subId || this._superApply(arguments);\n      },\n      /**\n       * Refreshes the inputNumber component\n       * <p>A <code class=\"prettyprint\">refresh()</code> or re-init is required\n       * when an inputNumber is changed in a non-option way, like in the following circumstances:\n       * <ul>\n       *   <li>Button translations change.</li>\n       * </ul>\n       * @expose\n       * @memberof oj.ojInputNumber\n       * @ojshortdesc Refreshes the component.\n       * @access public\n       * @instance\n       * @return {void}\n       * @example <caption>Invoke the <code class=\"prettyprint\">refresh</code> method:</caption>\n       * myComp.refresh();\n       */\n      refresh: function () {\n        this._super();\n        this._setup();\n      },\n      /**\n       * <p>Decrements the value by the specified number of steps.\n       * Without the parameter, a single step is decremented. One step is\n       * defined by the component's step property.\n       * If the component's step property is 0, the stepDown method is a no-op.</p>\n       * <p>If the resulting value is above the max, below the min,\n       * or results in a step mismatch, the value will be adjusted to the closest valid value.</p>\n       * @param {number=} steps - Number of steps to decrement, defaults to 1.\n       * @return {void}\n       * @expose\n       * @instance\n       * @memberof oj.ojInputNumber\n       * @ojshortdesc Decrements the value by the specified number of steps. See the Help documentation for more information.\n       * @access public\n       * @example <caption>Invoke the <code class=\"prettyprint\">stepDown</code> method:</caption>\n       * myComp.stepDown();\n       * @ojdeprecated {since: '14.0.0', description: 'Programmatically change the value instead.'}\n       */\n      stepDown: function (steps) {\n        var step = this.options.step;\n        if (step === 0) {\n          return;\n        }\n        var realStep = (steps != null ? steps : 1) * step * -1;\n        this._step(realStep);\n      },\n      /**\n       * <p>Increments the value by the specified number of steps.\n       * Without the parameter, a single step is incremented. One step is\n       * defined by the component's step property.\n       * If the component's step property is 0, the stepUp method is a no-op.</p>\n       * <p>If the resulting value is above the max, below the min,\n       * or results in a step mismatch, the value will be adjusted to the closest valid value.</p>\n       * @param {number=} steps - Number of steps to increment, defaults to 1.\n       * @return {void}\n       * @expose\n       * @instance\n       * @memberof oj.ojInputNumber\n       * @ojshortdesc Increments the value by the specified number of steps. See the Help documentation for more information.\n       * @access public\n       * @example <caption>Invoke the <code class=\"prettyprint\">stepUp</code> method:</caption>\n       * myComp.stepUp();\n       * @ojdeprecated {since: '14.0.0', description: 'Programmatically change the value instead.'}\n       */\n      stepUp: function (steps) {\n        var step = this.options.step;\n        if (step === 0) {\n          return;\n        }\n        var realStep = (steps != null ? steps : 1) * step;\n        this._step(realStep);\n      },\n\n      /**\n       * Returns a jQuery object containing the element visually representing the inputnumber.\n       *\n       * <p>This method does not accept any arguments.\n       *\n       * @expose\n       * @memberof oj.ojInputNumber\n       * @instance\n       * @return {jQuery} the inputnumber\n       * @access public\n       * @ignore\n       */\n      widget: function () {\n        return $(this.uiInputNumber);\n      },\n\n      // P R O T E C T E D    C O N S T A N T S   A N D   M E T H O D S\n\n      // *********** START WIDGET FACTORY METHODS (they retain _camelcase naming convention) **********\n\n      /**\n       * Called at component create time primarily to initialize options, often using DOM values. This\n       * method is called before _ComponentCreate is called, so components that override this method\n       * should be aware that the component has not been rendered yet. The element DOM is available and\n       * can be relied on to retrieve any default values. <p>\n       * @param {!Object} originalDefaults - original default options defined on the widget and its ancestors.\n       * For example, if we have the step attribute defaulted to 12 in this class, it will be 12. (unless there\n       * is some global default on the component ?)\n       * @param {?Object} constructorOptions - options passed into the widget constructor\n       *\n       * @memberof oj.ojInputNumber\n       * @instance\n       * @protected\n       */\n      _InitOptions: function (originalDefaults, constructorOptions) {\n        var opts = this.options;\n        var self = this;\n\n        // call super class with arguments: originalDefaults and constructorOptions. It will set\n        // the this.options.\n        this._superApply(arguments);\n\n        if (!this._IsCustomElement()) {\n          // 'props' is the list of properties that I need to get from the dom if they aren't already defined in the options.\n          // There is no need to list defaults here like we used to do\n          // since the defaults are in originalDefaults and they are merged in with the options in the this._superApply call.\n\n          // attribute below is the html-5 dom attribute name. If 'option' is different, like in the case of\n          // readonly (readonly html vs readOnly (camelcase) component option), specify both.\n          var props = [\n            { attribute: 'disabled', validateOption: true },\n            { attribute: 'placeholder' },\n            { attribute: 'value' }, // don't coerce here. I do it myself\n            { attribute: 'readonly', option: 'readOnly', validateOption: true },\n            { attribute: 'required', coerceDomValue: true, validateOption: true },\n            { attribute: 'title' },\n            { attribute: 'min' },\n            { attribute: 'max' },\n            { attribute: 'step' }\n          ];\n\n          ojeditablevalue.EditableValueUtils.initializeOptionsFromDom(\n            props,\n            constructorOptions,\n            this,\n            // post-process callback\n            function (initializedOptions) {\n              // coerce regardless of where the option value came from - dom/constructor\n              var toParse = ['value', 'step', 'min', 'max'];\n\n              for (var i = 0; i < toParse.length; i++) {\n                var opt = toParse[i];\n                var value = opt in initializedOptions ? initializedOptions[opt] : opts[opt];\n                if (value != null) {\n                  if (opt === 'step') {\n                    // eslint-disable-next-line no-param-reassign\n                    initializedOptions[opt] = self._parseStep(value);\n                  } else {\n                    // eslint-disable-next-line no-param-reassign\n                    initializedOptions[opt] = self._parse(opt, value);\n                  }\n                }\n              }\n            }\n          );\n        }\n\n        // The custom element bridge framework coerces the options according to the options\n        // @type, so there is no need to do the coercion in _InitOptions\n        // for custom elements like we do above for non-custom-elements.\n        // Check the 'step' to make sure it's in the correct range.\n        if (this._IsCustomElement()) {\n          // this will coerce with a + and throw an error if it is < 0.\n          // since the bridge framework code already coerced step to a number before _InitOptions\n          // was called, all we care about is throwing an error if step < 0.\n          self._parseStep(opts.step);\n        }\n\n        this.initialValue = opts.value;\n\n        // now make sure min < max, else throw an Error\n        if (opts.min != null && opts.max != null) {\n          if (opts.max < opts.min) {\n            throw new Error(\"ojInputNumber's max must not be less than min\");\n          }\n        }\n      },\n      /**\n       * After _ComponentCreate and _AfterCreate,\n       * the widget should be 100% set up. this._super should be called first.\n       * @override\n       * @protected\n       * @instance\n       * @memberof oj.ojInputNumber\n       */\n      _ComponentCreate: function () {\n        this._super();\n\n        this._draw();\n\n        this._inputNumberDefaultValidators = {};\n        this._setup();\n        this._registerEvents();\n        this._focusable({\n          element: $(this.uiInputNumber),\n          applyHighlight: true\n        });\n      },\n      /**\n       * After _ComponentCreate and _AfterCreate,\n       * the widget should be 100% set up. this._super should be called first.\n       * @override\n       * @protected\n       * @instance\n       * @memberof oj.ojInputNumber\n       * @return {void}\n       */\n      _AfterCreate: function () {\n        this._super();\n\n        // Initialize transientValue to be the same as value upon component creation\n        var context = { writeback: true, internalSet: true, readOnly: true };\n        this.option({ transientValue: this.options.value }, { _context: context });\n\n        this._refreshAriaMinMax();\n        // buttons and aria-valuenow and aria-valuetext are updated in _Refresh for value which\n        // is called from EditableValue's _AfterCreate.\n        this.stepQueue = [];\n        this._blurEnterSetValueCounter = 0;\n        if (this._IsCustomElement()) {\n          let labelledBy = this.options.labelledBy;\n          this._initInputIdLabelForConnection(\n            this._GetContentElement()[0],\n            this.widget()[0].id,\n            labelledBy\n          );\n        }\n        // create a readonly div. This also sets the div's textContent with\n        // the converted display value, which is why this is in _AfterCreate.\n        if (this.options.readOnly) {\n          this._createOrUpdateReadonlyDiv(this.element[0]);\n        }\n      },\n\n      /**\n       * Performs post processing after _SetOption() is called. Different options when changed perform\n       * different tasks. See _AfterSetOption[OptionName] method for details.\n       *\n       * @param {string} option\n       * @param {Object|string=} previous\n       * @param {Object=} flags\n       * @protected\n       * @memberof oj.ojInputNumber\n       * @instance\n       * @override\n       */\n      // eslint-disable-next-line no-unused-vars\n      _AfterSetOption: function (option, previous, flags) {\n        this._superApply(arguments);\n        switch (option) {\n          case 'min':\n          case 'max':\n            this._Refresh(option, this.options[option]);\n            break;\n          case 'readOnly':\n            this._AfterSetOptionDisabledReadOnly(option, ojeditablevalue.EditableValueUtils.readOnlyOptionOptions);\n            break;\n          case 'required':\n            this._AfterSetOptionRequired(option);\n            break;\n          case 'validators':\n            this._AfterSetOptionValidators(option);\n            break;\n          case 'asyncValidators':\n            this._AfterSetOptionAsyncValidators(option);\n            break;\n          case 'converter':\n            this._AfterSetOptionConverter(option);\n            break;\n          case 'virtualKeyboard':\n            this._SetInputType(this._ALLOWED_TYPES);\n            break;\n          default:\n            break;\n        }\n      },\n      /**\n       * Whether the a value can be set on the component. For example, if the component is\n       * disabled or readOnly then setting value on component is a no-op.\n       *\n       * @see #_SetValue\n       * @return {boolean}\n       * @memberof oj.ojInputNumber\n       * @override\n       * @instance\n       * @protected\n       */\n      _CanSetValue: function () {\n        var readOnly;\n        var superCanSetValue = this._super();\n\n        if (!superCanSetValue) {\n          return false;\n        }\n\n        readOnly = this.options.readOnly || false;\n        return !readOnly;\n      },\n      /**\n       * Performs post processing after value option changes by taking the following steps.\n       * This method piggybacks on the super's method by using the 'doNotClearMessages' flag to\n       * determine if this was a direct value option programmatic change.\n       *\n       * - Calls super<br/>\n       * - if setOption was from programmatic intervention, <br/>\n       * &nbsp;&nbsp;- reset the this.initialValue which is used to determine the stepBase; <br/>\n       *\n       * @param {string} option\n       * @param {Object=} flags\n       *\n       * @protected\n       * @memberof oj.ojInputNumber\n       * @instance\n       *\n       */\n      _AfterSetOptionValue: function (option, flags) {\n        this._superApply(arguments);\n        var context = flags ? flags._context : null;\n        var isUIValueChange;\n        var doNotClearMessages;\n\n        if (context) {\n          isUIValueChange = !!context.originalEvent;\n          doNotClearMessages = context.doNotClearMessages || false;\n        }\n\n        if (!isUIValueChange) {\n          // value option can be updated directly (i.e., programmatically or through user interaction)\n          // or updated indirectly as a result of some other option changing - e.g., converter,\n          // validators, required etc.\n          // When value changes directly due to programatic intervention (usually page author does this)\n          // then update this.initialValue.\n          if (!doNotClearMessages) {\n            this.initialValue = this.options.value;\n          }\n        }\n      },\n      /**\n       * Called when the display value on the element needs to be updated. This method updates the\n       * (content) element value. Widgets can override this method to update the element\n       * appropriately.\n       *\n       * @param {string} displayValue the new string to be displayed\n       *\n       * @memberof oj.ojInputNumber\n       * @instance\n       * @protected\n       */\n      _SetDisplayValue: function (displayValue) {\n        this._superApply(arguments);\n        if (this.options.readOnly) {\n          let readonlyElem = this._getReadonlyDiv();\n          if (readonlyElem) {\n            // need to set the textContent on its child\n            readonlyElem.textContent = displayValue;\n          }\n        }\n      },\n\n      /**\n       * Whether the component is required.\n       *\n       * @return {boolean} true if required; false\n       *\n       * @memberof oj.ojInputNumber\n       * @instance\n       * @protected\n       * @override\n       */\n      _IsRequired: function () {\n        return this.options.required;\n      },\n      /**\n       * Performs post processing after required option is set by taking the following steps.\n       *\n       * - if component is invalid and has messgesShown -> required: false/true -> clear component errors;\n       * run full validation with UI value (we don't know if the UI error is from a required validator\n       * or something else);<br/>\n       * &nbsp;&nbsp;- if there are validation errors, then value not pushed to model; messagesShown is\n       * updated<br/>\n       * &nbsp;&nbsp;- if no errors result from the validation, push value to model; author needs to\n       * listen to optionChange(value) to clear custom errors.<br/>\n       *\n       * - if component is invalid and has messagesHidden -> required: false -> clear component\n       * errors; no deferred validation is run.<br/>\n       * - if component has no error -> required: true -> run deferred validation (we don't want to flag\n       * errors unnecessarily)<br/>\n       * - messagesCustom is never cleared<br/>\n       *\n       * @param {string} option\n       *\n       * @memberof oj.ojInputNumber\n       * @instance\n       * @protected\n       */\n      _AfterSetOptionRequired: ojeditablevalue.EditableValueUtils._AfterSetOptionRequired,\n      /**\n       * When validators option changes, take the following steps.\n       *\n       * - Clear the cached normalized list of all validator instances. push new hints to messaging.<br/>\n       * - if component is valid -> validators changes -> no change<br/>\n       * - if component is invalid has messagesShown -> validators changes -> clear all component\n       * messages and re-run full validation on displayValue. if there are no errors push value to\n       * model;<br/>\n       * - if component is invalid has messagesHidden -> validators changes -> do nothing; doesn't change\n       * the required-ness of component <br/>\n       * - messagesCustom is not cleared.<br/>\n       *\n       * NOTE: The behavior applies to any option that creates implicit validators - min, max, pattern,\n       * etc. Components can call this method when these options change.\n       *\n       * @memberof oj.ojInputNumber\n       * @instance\n       * @protected\n       */\n      _AfterSetOptionValidators: ojeditablevalue.EditableValueUtils._AfterSetOptionValidators,\n      /**\n       * When async-validators attribute changes, take the following steps.\n       *\n       * - Clear the cached normalized list of all validator instances. push new hints to messaging.<br/>\n       * - if component is valid -> validators changes -> no change<br/>\n       * - if component is invalid has messagesShown -> validators changes -> clear all component\n       * messages and re-run full validation on displayValue. if there are no errors push value to\n       * model;<br/>\n       * - if component is invalid has messagesHidden -> validators changes -> do nothing; doesn't change\n       * the required-ness of component <br/>\n       * - messagesCustom is not cleared.<br/>\n       * @memberof oj.ojInputNumber\n       * @instance\n       * @protected\n       */\n      _AfterSetOptionAsyncValidators: ojeditablevalue.EditableValueUtils._AfterSetOptionAsyncValidators,\n      /**\n       * Performs post processing after converter option changes by taking the following steps.\n       *\n       * - always push new converter hint to messaging <br/>\n       * - if component has no errors -> refresh UI value<br/>\n       * - if component is invalid has messagesShown -> clear all component errors and run full\n       * validation using display value. <br/>\n       * &nbsp;&nbsp;- if there are validation errors, value is not pushed to model; messagesShown is\n       * updated.<br/>\n       * &nbsp;&nbsp;- if no errors result from the validation, push value to model; author needs to\n       * listen to optionChange(value) to clear custom errors.<br/>\n       * - if component is invalid has messagesHidden -> refresh UI value. no need to run deferred\n       * validations. <br/>\n       * - messagesCustom is never cleared<br/>\n       *\n       * @memberof oj.ojInputNumber\n       * @instance\n       * @protected\n       */\n      _AfterSetOptionConverter: ojeditablevalue.EditableValueUtils._AfterSetOptionConverter,\n      /**\n       * Called when converter option changes and we have gotten the new converter\n       * @memberof oj.ojInputNumber\n       * @instance\n       * @protected\n       */\n      _ResetConverter: ojeditablevalue.EditableValueUtils._ResetConverter,\n\n      /**\n       * This method also updates the messaging strategies as hints associated with validators could\n       * have changed.\n       *\n       * @memberof oj.ojInputNumber\n       * @instance\n       * @protected\n       */\n      _ResetAllValidators: function () {\n        this._inputNumberDefaultValidators = {};\n\n        this._superApply(arguments);\n      },\n\n      // *********** END WIDGET FACTORY METHODS **********\n      /**\n       * Need to override since we allow users to set the converter to null, undefined, and etc and when\n       * they do we use the default converter\n       *\n       * @return {Object} a converter instance or null\n       *\n       * @memberof oj.ojInputNumber\n       * @instance\n       * @protected\n       * @override\n       */\n      _GetConverter: function () {\n        if (this.options.converter) {\n          return this._getConverter();\n        }\n        return _getNumberDefaultConverter();\n      },\n      /**\n       * This returns an array of all validators\n       * normalized from the validators option set on the component. <br/>\n       * @return {Array} of validators.\n       * @memberof oj.ojInputNumber\n       * @instance\n       * @protected\n       */\n      _GetNormalizedValidatorsFromOption: ojeditablevalue.EditableValueUtils._GetNormalizedValidatorsFromOption,\n      /**\n       * This returns an array of all async validators\n       * normalized from the async-validators attribute set on the component. <br/>\n       * @return {Array} of validators.\n       * @memberof oj.ojInputNumber\n       * @instance\n       * @protected\n       */\n      _GetNormalizedAsyncValidatorsFromOption:\n        ojeditablevalue.EditableValueUtils._GetNormalizedAsyncValidatorsFromOption,\n      /**\n       * Called to find out if aria-required is unsupported.\n       * @memberof oj.ojInputNumber\n       * @instance\n       * @protected\n       */\n      _AriaRequiredUnsupported: function () {\n        return false;\n      },\n      /**\n       * Handles options specific to inputnumber.\n       * Note that _setOption does not get called during create in the super class.\n       * It only gets called when the component has already been created.\n       * However, we do call _setOption in _draw for certain attributes\n       * (disabled)\n       * @override\n       * @protected\n       * @memberof oj.ojInputNumber\n       */\n      _setOption: function (key, value, flags) {\n        var coercedValue;\n\n        if (!this._IsCustomElement() && (key === 'value' || key === 'max' || key === 'min')) {\n          // we only have to coerce for non-custom-elements since the frameworkd coerces for us for\n          // custom elements.\n          coercedValue = this._parse(key, value);\n        } else if (key === 'step') {\n          coercedValue = this._parseStep(value);\n        } else if (key === 'transientValue') {\n          // transientValue is readOnly, so throw an error and return.\n          Logger.error(key + ' option cannot be set');\n          return;\n        } else {\n          coercedValue = value;\n        }\n\n        // the superclass calls _Refresh. Our _Refresh calls _updateButtons\n        // and refreshes aria-valuenow/valuetext/valuemin/valuemax\n        // call _super with the newly coerced 'value' property.\n        this._super(key, coercedValue, flags);\n\n        if (key === 'value') {\n          // Set transientValue to be the same if value is set programmatically\n          var context = { writeback: true, internalSet: true, readOnly: true };\n          this.option({ transientValue: this.options.value }, { _context: context });\n        }\n\n        if (key === 'max' || key === 'min') {\n          // since validators are immutable, they will contain min + max as local values.\n          // Because of this will need to recreate the Implicit NumberRange validators.\n          // This resets validators and async-validators and runs validation\n          this._AfterSetOptionValidators();\n        }\n\n        // when a dom element supports disabled, use that, and not aria-disabled.\n        // having both is an error.\n        // having aria-disabled on root dom element is ok (if it is added in base class)\n        if (key === 'disabled') {\n          // force it to be a boolean. this is what/how ojbutton, EditableValue does.\n          this.element[0].disabled = !!value;\n        }\n        // when a dom element supports readonly, use that, and not aria-readonly.\n        // having both is an error\n        if (key === 'readOnly') {\n          // if readonly, we remove buttons/spinner functionality.\n          this._createOrDestroyOjButtonset();\n          this.element[0].readOnly = !!value;\n          if (value) {\n            this._createOrUpdateReadonlyDiv(this.element[0]);\n          }\n          this._refreshStateTheming('readOnly', this.options.readOnly);\n        }\n        if (key === 'step') {\n          // if step is 0, we remove buttons/spinner functionality.\n          this._createOrDestroyOjButtonset();\n        }\n        if (key === 'labelledBy') {\n          let labelledBy = this.options.labelledBy;\n          if (labelledBy) {\n            var id = this._GetContentElement()[0].id;\n            this._labelledByUpdatedForInputComp(labelledBy, id);\n          }\n        }\n      },\n      /**\n       * Override of protected base class method.\n       * Method name needn't be quoted since is in externs.js.\n       * @protected\n       * @memberof oj.ojInputNumber\n       * @instance\n       */\n      _destroy: function () {\n        var ret = this._super();\n\n        // destroy the buttonset\n        if (this.buttonSet) {\n          this._destroyOjButtonset();\n        }\n        this.initialValue = null;\n        this.element.off('blur keydown keyup compositionstart compositionend input');\n        //  - DomUtils.unwrap() will avoid unwrapping if the node is being destroyed by Knockout\n        DomUtils.unwrap(this.element, $(this.uiInputNumber));\n        clearTimeout(this.timer);\n\n        return ret;\n      },\n\n      /**\n       * Validates the component's display value using the converter and all validators registered on\n       * the component and updates the <code class=\"prettyprint\">value</code> option by performing the\n       * following steps.\n       *\n       * <p>\n       * <ol>\n       * <li>All messages are cleared, including custom messages added by the app. </li>\n       * <li>If no converter is present then processing continues to next step. If a converter is\n       * present, the UI value is first converted (i.e., parsed). If there is a parse error then\n       * the messages are shown.</li>\n       * <li>If there are no validators setup for the component the <code class=\"prettyprint\">value</code>\n       * option is updated using the display value. Otherwise all\n       * validators are run in sequence using the parsed value from the previous step. The implicit\n       * required validator is run first if the component is marked required. When a validation error is\n       * encountered it is remembered and the next validator in the sequence is run. </li>\n       * <li>At the end of validation if there are errors, the messages are shown.\n       * If there were no errors, then the\n       * <code class=\"prettyprint\">value</code> option is updated.</li>\n       * </ol>\n       *\n       * @example <caption>Validate component using its current value.</caption>\n       * // validate display value and shows messages if there are any to be shown.\n       * myComp.validate();\n       * @example <caption>Validate component and use the Promise's resolved state.</caption>\n       * myComp.validate().then(\n       *  function(result) {\n       *    if(result === \"valid\")\n       *    {\n       *      submitForm();\n       *    }\n       *  });\n       * @return {Promise.<string>} Promise resolves to \"valid\" if there were no converter parse errors and\n       * the component passed all validations.\n       * The Promise resolves to \"invalid\" if there were converter parse errors or\n       * if there were validation errors.\n       *\n       *\n       * @method\n       * @access public\n       * @expose\n       * @instance\n       * @memberof oj.ojInputNumber\n       * @ojshortdesc Validates the component's display value using all validators registered on the component. If there are no validation errors. then the value is updated. See the Help documentation for more information.\n       * @since 4.0.0\n       *\n       */\n      validate: ojeditablevalue.EditableValueUtils.validate,\n      /**\n       * Used for explicit cases where the component needs to be refreshed\n       * (e.g., when the value option changes or other UI gestures).\n       * @override\n       * @protected\n       * @memberof oj.ojInputNumber\n       */\n      // eslint-disable-next-line no-unused-vars\n      _Refresh: function (name, value, forceDisplayValueRefresh) {\n        var valuenow;\n\n        this._superApply(arguments);\n\n        switch (name) {\n          case 'value':\n            valuenow = this.options.value || 0;\n            // this gets called after value option changes, so no need to convert\n            // the display value.\n            this._updateButtonsAria(valuenow);\n\n            break;\n\n          case 'disabled':\n            // We have often said in the JET team that\n            // it makes no sense for an app to disable an invalid value, so it's fine that we\n            // do not use the converted display value here and instead use this.options.value\n            // which is the valid value.\n            valuenow = this.options.value || 0;\n            this._updateButtons(valuenow);\n            break;\n\n          case 'max':\n          case 'min':\n            // It is possible that the value is invalid, like 'foo',\n            // when the app dev changes the min/max\n            // values, so need to use the converted display value instead of this.options.value\n            // which is the last valid value. This way the buttons will be disabled if\n            // the converted display value is invalid and valuenow is undefined.\n            this._refreshAriaMinMax();\n            valuenow = this._getDisplayValueParsed();\n            // disables or enables both the up and down buttons depending upon what the value\n            // is on the screen after conversion plus what min/max are set to.\n            this._updateButtons(valuenow);\n\n            break;\n\n          case 'converter':\n            // we refresh the display value in super.\n            valuenow = this.options.value;\n            this._refreshAriaText(valuenow);\n            break;\n\n          case 'required':\n            this._refreshRequired(value);\n            break;\n\n          default:\n            break;\n        }\n      },\n      /**\n       * @memberof oj.ojInputNumber\n       * @instance\n       * @private\n       */\n      _labelledByUpdatedForInputComp: ojeditablevalue.EditableValueUtils._labelledByUpdatedForInputComp,\n      /**\n       * @memberof oj.ojInputNumber\n       * @instance\n       * @private\n       */\n      _initInputIdLabelForConnection: ojeditablevalue.EditableValueUtils._initInputIdLabelForConnection,\n      /**\n       * @memberof oj.ojInputNumber\n       * @instance\n       * @private\n       */\n      /**\n       * @memberof oj.ojInputNumber\n       * @instance\n       * @private\n       */\n      _linkLabelForInputComp: ojeditablevalue.EditableValueUtils._linkLabelForInputComp,\n      /**\n       * @memberof oj.ojInputNumber\n       * @instance\n       * @private\n       */\n      _refreshRequired: ojeditablevalue.EditableValueUtils._refreshRequired,\n\n      /**\n       * Sets up a synchronous numberRange validator if min and max is set and the\n       * RangeValidator was overridden by a sync validator.\n       *\n       * If the validator is created, it is added to the\n       * this._inputNumberDefaultValidators type->validator instance map\n       *\n       * @ignore\n       * @protected\n       * @override\n       * @instance\n       * @memberof oj.ojInputNumber\n       * @return {Object} returns the implicit sync validators map, where the key is the sync\n       * validator type, e.g., 'numberrange'.\n       */\n      _GetImplicitValidators: function () {\n        var ret = this._superApply(arguments);\n\n        if (this.options.min != null || this.options.max != null) {\n          this._inputNumberDefaultValidators.numberrange = this._getImplicitNumberRangeValidator();\n        }\n\n        return Object.assign(this._inputNumberDefaultValidators, ret);\n      },\n\n      /**\n       * Returns the default styleclass for the component.\n       *\n       * @return {string}\n       * @memberof oj.ojInputNumber\n       * @override\n       * @protected\n       */\n      _GetDefaultStyleClass: function () {\n        return 'oj-inputnumber';\n      },\n\n      /**\n       * This gets called if/when the converter is loading.\n       * We do not want to set the oj-input-number's readonly attribute,\n       * but we do want the UI of readonly. The buttonset may be rendered,\n       * but in theming it is set display:none if oj-read-only is there.\n       * This is preferred for this scenario over removing the buttonset dom\n       * only to add it back again when loading is compolete.\n       * @protected\n       * @override\n       * @instance\n       * @memberof oj.ojInputNumber\n       */\n      _SetLoading: function () {\n        this._super();\n        var readOnly = true;\n\n        this.element[0].readOnly = readOnly;\n        // removes role spinbutton while loading\n        this._refreshRoleSpinbutton(!readOnly);\n      },\n\n      /**\n       *\n       * @protected\n       * @override\n       * @instance\n       * @memberof oj.ojInputNumber\n       */\n      _ClearLoading: function () {\n        this._super();\n        var readOnly = this.options.readOnly;\n        this.element[0].readOnly = readOnly;\n      },\n\n      /**\n       * Returns if the element is a text field element or not.\n       * @memberof oj.ojInputNumber\n       * @instance\n       * @protected\n       * @return {boolean}\n       */\n      _IsTextFieldComponent: function () {\n        return true;\n      },\n\n      /**\n       * Returns the components wrapper under which label needs to be inserted in the inside strategy\n       * For input number we need the label to go under the span so that it occupies the same width\n       * as the input text giving way to the buttons.\n       * @memberof oj.ojInputNumber\n       * @instance\n       * @protected\n       * @return {Element|undefined}\n       */\n      _GetContentWrapper: function () {\n        if (this._IsCustomElement()) {\n          return this._getRootElement().querySelector('.oj-text-field-middle');\n        }\n        return undefined;\n      },\n\n      /**\n       * Return the element on which aria-label can be found.\n       * Usually this is the root element, but some components have aria-label as a transfer attribute,\n       * and aria-label set on the root element is transferred to the inner element.\n       * @memberof! oj.ojInputNumber\n       * @instance\n       * @protected\n       */\n      _GetAriaLabelElement: function () {\n        return this.element[0];\n      },\n\n      // I N T E R N A L   P R I V A T E   C O N S T A N T S    A N D   M E T H O D S\n      //\n      // Subclasses should not override or call these methods\n      /**\n       * @private\n       * @const\n       * @memberof oj.ojInputNumber\n       */\n      _BUNDLE_KEY: {\n        _TOOLTIP_DECREMENT: 'tooltipDecrement',\n        _TOOLTIP_INCREMENT: 'tooltipIncrement'\n      },\n      /**\n       * when below listed options are passed to the component, corresponding CSS will be toggled\n       * @private\n       * @const\n       * @memberof oj.ojInputNumber\n       * @type {Object}\n       */\n      _OPTION_TO_CSS_MAPPING: {\n        readOnly: 'oj-read-only'\n      },\n      /**\n       * Returns the numberRange validator instance.\n       * @private\n       * @memberof oj.ojInputNumber\n       */\n      _getImplicitNumberRangeValidator: function () {\n        var numberRangeValidatorOptions = this._createRangeValidatorOptions();\n        var rangeValidator = new NumberRangeValidator(numberRangeValidatorOptions);\n\n        return rangeValidator;\n      },\n      /**\n       * _setup is called on create and refresh.\n       * @private\n       * @memberof oj.ojInputNumber\n       */\n      _setup: function () {\n        // we only render buttons if not readonly and step > 0.\n        var needsButtonset = this._needsButtonset();\n        if (needsButtonset) {\n          // add/update translated strings to buttons\n          var incrementString = this.getTranslatedString(this._BUNDLE_KEY._TOOLTIP_INCREMENT);\n          var decrementString = this.getTranslatedString(this._BUNDLE_KEY._TOOLTIP_DECREMENT);\n          this.upButton.ojButton({ label: incrementString });\n          this.downButton.ojButton({ label: decrementString });\n        }\n        // update element DOM for readOnly\n        if (typeof this.options.readOnly === 'boolean') {\n          this.element[0].readOnly = this.options.readOnly;\n        }\n        this._refreshStateTheming('readOnly', this.options.readOnly);\n        this._refreshRoleSpinbutton(needsButtonset);\n        this._refreshRequired(this.options.required);\n      },\n      // Mark internal JET components for automation support. The automation\n      // support needs to know while traversing the nodes that the JET button/buttonset\n      // is not the root JET component, but an internal node to a JET component.\n      /**\n       * @private\n       * @memberof oj.ojInputNumber\n       */\n      _markInternalComponents: function () {\n        this.upButton[0].setAttribute('data-oj-internal', '');\n        this.downButton[0].setAttribute('data-oj-internal', '');\n        this.buttonSet[0].setAttribute('data-oj-internal', '');\n      },\n      /**\n       * @private\n       * @memberof oj.ojInputNumber\n       */\n      _createOjButtonset: function () {\n        var buttonSetObj = this._createButtonset();\n        this.inputNumberWrapper.appendChild(buttonSetObj.buttonSet); // @HTMLUpdateOK\n\n        // As the buttons are not in the keyboard sequence at first\n        // we decided it makes sense to add aria-hidden=\"true\" to them\n        // and rely on the up/down arrow keys. However, now we decided to remove aria-hidden because\n        // in voiceover there is no way to access the up/down buttons otherwise.\n        // Still, voiceover is broken due to this webkit bug\n        //  - ios: input number doesn't support vo because of webkit bug\n        var buttons = this.uiInputNumber.querySelectorAll('.oj-inputnumber-button');\n        var len = buttons.length;\n        for (var i = 0; i < len; i++) {\n          buttons[i].setAttribute('tabindex', '-1');\n          buttons[i].setAttribute('aria-hidden', 'true');\n        }\n\n        const buttonChromingDefault =\n          ThemeUtils.getCachedCSSVarValues([\n            '--oj-private-input-number-button-global-chroming-default'\n          ])[0] || 'solid';\n        var buttonsetDiv = buttonSetObj.upButton.parentNode;\n        this.upButton = $(buttonSetObj.upButton).ojButton({\n          display: 'icons',\n          chroming: buttonChromingDefault,\n          label: this.getTranslatedString(this._BUNDLE_KEY._TOOLTIP_INCREMENT),\n          icons: { start: 'oj-component-icon oj-inputnumber-up-icon' }\n        });\n        this.downButton = $(buttonSetObj.downButton).ojButton({\n          display: 'icons',\n          chroming: buttonChromingDefault,\n          label: this.getTranslatedString(this._BUNDLE_KEY._TOOLTIP_DECREMENT),\n          icons: { start: 'oj-component-icon oj-inputnumber-down-icon' }\n        });\n        this.buttonSet = $(buttonsetDiv).ojButtonset({\n          focusManagement: 'none',\n          chroming: buttonChromingDefault\n        });\n        this._markInternalComponents();\n      },\n      /**\n       * destroys the ojButtonset\n       * @private\n       * @memberof oj.ojInputNumber\n       */\n      _destroyOjButtonset: function () {\n        this.buttonSet.ojButtonset('destroy');\n        this.buttonSet.remove();\n        this.upButton = null;\n        this.downButton = null;\n        this.buttonSet = null;\n      },\n      /**\n       * creates or destroys buttonset and adds or removes role=spinbutton.\n       * @private\n       * @memberof oj.ojInputNumber\n       */\n      _createOrDestroyOjButtonset: function () {\n        let needsButtonset = this._needsButtonset();\n        // Create or destroy buttonset\n        if (needsButtonset && this.buttonSet == null) {\n          this._createOjButtonset();\n          this._updateButtons(this.options.value || 0);\n          this.uiInputNumber.classList.add('oj-has-buttons');\n        } else if (!needsButtonset && this.buttonSet) {\n          this._destroyOjButtonset();\n          this.uiInputNumber.classList.remove('oj-has-buttons');\n        }\n        // adds or removes role='spinbutton'.\n        this._refreshRoleSpinbutton(needsButtonset);\n      },\n      /**\n       * @private\n       * @memberof oj.ojInputNumber\n       */\n      _draw: function () {\n        var element = this.element[0];\n\n        element.classList.add('oj-inputnumber-input');\n        element.classList.add('oj-text-field-input');\n        var spanElem = document.createElement('span');\n        spanElem.className = 'oj-inputnumber-wrapper';\n        this.inputNumberWrapper = spanElem;\n        this.uiInputNumber = spanElem;\n\n        var containerElem = document.createElement('div');\n        containerElem.className = 'oj-text-field-container';\n        containerElem.setAttribute('role', 'presentation');\n\n        // only custom element will have an OuterWrapper\n        if (this.OuterWrapper) {\n          containerElem.appendChild(spanElem);\n\n          var middleWrapper = this._CreateMiddleWrapper();\n          spanElem.appendChild(middleWrapper);\n\n          middleWrapper.appendChild(element);\n\n          this.OuterWrapper.appendChild(containerElem); // @HTMLUpdateOK\n          this.uiInputNumber = this.OuterWrapper;\n          this.uiInputNumber.classList.add('oj-inputnumber');\n          this.uiInputNumber.classList.add('oj-component');\n        } else {\n          var divElem = document.createElement('div');\n          divElem.className = 'oj-inputnumber oj-component';\n          element.parentNode.insertBefore(divElem, element); // @HTMLUpdateOK\n          divElem.appendChild(containerElem); // @HTMLUpdateOK\n          containerElem.appendChild(spanElem); // @HTMLUpdateOK\n          spanElem.appendChild(element); // @HTMLUpdateOK\n          this.uiInputNumber = divElem;\n        }\n\n        //\n        // TODO: need to save off attributes and reset on destroy generically.\n        this.saveType = element.type;\n        this._SetInputType(this._ALLOWED_TYPES);\n\n        // Won't create buttons if readonly or if step is 0.\n        if (this._needsButtonset()) {\n          this._createOjButtonset();\n          this.uiInputNumber.classList.add('oj-has-buttons');\n        }\n      },\n      /**\n       * @private\n       * @memberof oj.ojInputNumber\n       */\n      _needsButtonset: function () {\n        return this.options.readOnly !== true && this.options.step > 0;\n      },\n      /**\n       * @private\n       * @memberof oj.ojInputNumber\n       */\n      _createButtonset: function () {\n        var buttonSet = document.createElement('div');\n        buttonSet.className = 'oj-buttonset-width-auto';\n\n        var downButton = document.createElement('button');\n        downButton.setAttribute('type', 'button');\n        downButton.className = 'oj-inputnumber-button oj-inputnumber-down';\n        buttonSet.appendChild(downButton);\n\n        var upButton = document.createElement('button');\n        upButton.setAttribute('type', 'button');\n        upButton.className = 'oj-inputnumber-button oj-inputnumber-up';\n        buttonSet.appendChild(upButton);\n\n        return { buttonSet: buttonSet, downButton: downButton, upButton: upButton };\n      },\n      /**\n       * @private\n       * @memberof oj.ojInputNumber\n       */\n      _start: function () {\n        this.spinning = true;\n        return true;\n      },\n      /**\n       * This is called when the user has clicked up or down, or held down up or down.\n       * If the user is holding down, this means he wants to spin up or down the value until he sees\n       * the value he wants, then he lets up. If the user clicks and doesn't hold down, it\n       * will step up or down in the direction.\n       * @param {Number} i - time to wait before recursively calling _repeat again. Defaults\n       *   to 500.\n       * @param {Number} direction - > 0 steps up, else steps down.\n       * @param {Object=} event an optional event if this was a result of ui interaction.\n       * @param {boolean=} spinning true if we are calling _repeat recursively while the user is holding\n       * down the up/down key or button.\n       * @private\n       * @memberof oj.ojInputNumber\n       */\n      _repeat: function (i, direction, event, spinning) {\n        var stopRepeat = false;\n        var domElem;\n        var busyContext;\n        var self = this;\n        var stepOpt = this.options.step;\n\n        // if direction is > 0, it is going up, else it is going down.\n        // need to check if min/max is reached, and if so, stop the repeat.\n        // we do a quick css check to see if it is disabled.\n        if (direction > 0) {\n          if (this.upButton[0].classList.contains('oj-disabled')) {\n            stopRepeat = true;\n          }\n        } else if (this.downButton[0].classList.contains('oj-disabled')) {\n          stopRepeat = true;\n        }\n        // repeat spinning as long as the key is down and min/max isn't reached\n        // eslint-disable-next-line no-param-reassign\n        i = i || 500;\n\n        clearTimeout(this.timer);\n        // this.timer will be cleared elsewhere, like when the user stops holding down the up/down\n        // arrows. See this._stop\n        this.timer = setTimeout(function () {\n          if (!stopRepeat) {\n            self._repeat(40, direction, event, true);\n          }\n        }, i);\n\n        // I need two paths. When I am 'spinning' and when I click click click the up\n        // or down buton or key individually. When I step individually, I queue up the steps\n        // using this.stepQueue if needed (e.g., a slow async validator)\n        if (!spinning) {\n          this._stepNoStartStop(direction * stepOpt, event);\n        } else {\n          // if we are actually spinning, it is ok to wait on the busyContext before we call\n          // _spin again. _spin increments the value and validates it.\n          domElem = this.element[0];\n          busyContext = oj.Context.getContext(domElem).getBusyContext();\n          if (busyContext.isReady()) {\n            // this clears the stepQueue so that when the user stops holding down\n            // the up/down button/key the number will stop spinning, even if the step\n            // queue isn't empty. e.g., the user clicks up 10 times, but then\n            // holds down the up. When he lets up, the number shouldn't keep going up just\n            // because the stepQueue isn't empty yet.\n            this.stepQueue = [];\n            this._spin(direction * stepOpt, event, true);\n          }\n        }\n      },\n      /**\n       * This gets called when the user clicks the up/down buttons or the up/down arrows\n       * on the keyboard, or the app dev calls stepUp/stepDown. We need to get the current\n       * value, convert it to a number, update it by the step, then validate the new value.\n       * @private\n       * @memberof oj.ojInputNumber\n       * @param {Number} step - Number of steps to increment.\n       * Negative steps means we are decrementing.\n       * @param {Object|null} event an event if this was a result of ui interaction. null otherwise.\n       * @param {boolean} transientOnly true to update transientValue only. false to update both transientValue and value.\n       */\n      _spin: function (step, event, transientOnly) {\n        var adjustedValue;\n        var currentDisplayValue = this._GetDisplayValue();\n        var displayValue = currentDisplayValue || 0;\n        var value = this._ParseValueShowErrors(displayValue);\n\n        // parsing is synchronous, but _SetValue could be async if we have async-validators.\n        if (value !== undefined) {\n          adjustedValue = this._adjustParsedValueOnSpinAndUpdateDisplay(value, step);\n          this._valuePending = transientOnly;\n          return this._SetValue(adjustedValue, event, {\n            validationMode: this._VALIDATION_MODE.VALIDATORS_ONLY,\n            targetOptions: transientOnly ? ['transientValue'] : ['transientValue', 'value']\n          });\n        }\n        // parsing failed if I get here. It is showing the error message, so I can return.\n        this._updateButtonsAria(value);\n        return false;\n      },\n\n      /**\n       * Given the parsed value, it adjusts it by the step, formats, and updates the displayValue,\n       * rawValue, aria-* attributes, and buttons. It returns the adjustedValue.\n       * @return {number} the parsed value incremented by step.\n       * @private\n       * @memberof oj.ojInputNumber\n       */\n      _adjustParsedValueOnSpinAndUpdateDisplay: function (value, step) {\n        var options = this.options;\n        var minOpt = options.min;\n        var maxOpt = options.max;\n        var stepOpt = options.step;\n        var initialValue = this.initialValue;\n        var precision;\n        var adjustedValue;\n        var formatReturn;\n\n        // get the max precision. e.g., min=2.4, initialValue=3.444, maxPrecision is 3.\n        precision = this._precision(minOpt, stepOpt, initialValue);\n\n        adjustedValue = this._adjustValue(\n          value,\n          step,\n          minOpt,\n          maxOpt,\n          stepOpt,\n          precision,\n          initialValue\n        );\n\n        // Show the user what is going to be validated. We are making it so that clicking on the\n        // up/down button is the same as if the user typed in a number and blurred.\n        if (this._CanSetValue()) {\n          // format the value, then add that to the element's input and update rawValue with that.\n          // Passing true means 'do not show error messages or change valid state' since we\n          // do that in _SetValue.\n          formatReturn = this._UpdateElementDisplayValue(adjustedValue, true);\n          if (formatReturn !== undefined) {\n            // keep in sync with the input's val\n            this._updateButtonsAria(adjustedValue);\n          }\n        }\n        return adjustedValue;\n      },\n\n      /**\n       * called from _adjustValue\n       * @private\n       * @memberof oj.ojInputNumber\n       */\n      _precision: function (minOpt, stepOpt, value) {\n        var precision = this._precisionOf(stepOpt);\n\n        if (minOpt != null) {\n          precision = Math.max(precision, this._precisionOf(minOpt));\n        }\n\n        if (value != null) {\n          precision = Math.max(precision, this._precisionOf(value));\n        }\n\n        return precision;\n      },\n      /**\n       * return the number of digits after the '.'\n       * called from _adjustValue->_precision\n       * @private\n       * @memberof oj.ojInputNumber\n       * @param {Number} num - Number from which to calculate the precision\n       */\n      _precisionOf: function (num) {\n        var str = num.toString();\n        var decimal = str.indexOf('.');\n        return decimal === -1 ? 0 : str.length - decimal - 1;\n      },\n      /**\n       * adjust the value to be \"valid\".\n       * The logic follows that of HTML-5's input number.\n       * http://www.w3.org/TR/html5/forms.html#dom-input-stepup\n       * A valid value is one that is a multiple of\n       * step starting at stepBase, where stepBase is min (if present),\n       * else initial value (if present),\n       * else (if type == number) 0\n       * If max is not a valid value, stepUp/stepDown will never go to max. It\n       * will go to the calculated valid max (one that is the largest value\n       * that is an integral multiple of the step, and that is less than or equal\n       * to the maximum.\n       * @private\n       * @memberof oj.ojInputNumber\n       * @param {number} value - the current value\n       * @param {number} step - the step you want to adjust the value by\n       * @param {number} minOpt - the min option\n       * @param {number} maxOpt - the max option\n       * @param {number} stepOpt - the step option\n       * @param {number} precision - the precision @see _precision\n       * @param {number} initialValue - the value when the component was created\n       * @returns {number} - the new value after it has been adjusted\n       */\n      _adjustValue: function (value, step, minOpt, maxOpt, stepOpt, precision, initialValue) {\n        var newValue;\n        var stepBase;\n        var aboveMin;\n        var valueWithFraction;\n\n        if (precision > 0) {\n          valueWithFraction = this._adjustValueForFractions(\n            value,\n            step,\n            minOpt,\n            maxOpt,\n            stepOpt,\n            precision,\n            initialValue\n          );\n          return valueWithFraction;\n        }\n\n        // make sure we're at a valid step when we step up or down.\n        // - find out where we are relative to the base.\n        // follow these rules. use min, else use initial value, else use 0.\n        // https://www.w3.org/TR/html5/forms.html#concept-input-min-zero\n        stepBase = minOpt != null ? minOpt : initialValue;\n        if (stepBase == null) {\n          stepBase = 0;\n        }\n\n        // From http://www.w3.org/TR/html5/forms.html#dom-input-stepup:\n        // If value subtracted from the step base is not an integral multiple\n        // of the step, then set value to the nearest value that, when subtracted\n        // from the step base, is an integral multiple of the allowed value step,\n        // and that is less than value if the method invoked was stepDown() and\n        // more than value if the method invoked was stepUp().\n\n        // is value-stepBase an integral multiple of step?\n        try {\n          // eslint-disable-next-line no-param-reassign\n          value = parseFloat(value.toFixed(precision));\n        } catch (e) {\n          if (e instanceof TypeError) {\n            // I've only seen this fail if they set a null converter.\n            Logger.warn(\n              \"inputNumber's value after conversion is not a number. \\n\" +\n                'The converter must convert the value to a Number. coercing using +'\n            );\n            // eslint-disable-next-line no-param-reassign\n            value = +value; // coerce\n          }\n        }\n        aboveMin = value - stepBase;\n\n        var rounded = Math.round(aboveMin / stepOpt) * stepOpt;\n        rounded = parseFloat(rounded.toFixed(precision));\n        var multiple = rounded === aboveMin;\n\n        if (!multiple) {\n          if (step < 0) {\n            aboveMin = Math.ceil(aboveMin / stepOpt) * stepOpt;\n          } else {\n            aboveMin = Math.floor(aboveMin / stepOpt) * stepOpt;\n          }\n          // rounding is based on 0, so adjust back to our base\n          newValue = stepBase + aboveMin + step;\n        } else {\n          newValue = value + step;\n        }\n\n        // fix precision from bad JS floating point math\n        // toFixed returns the newValue with a specific # of digits after the\n        // decimal point (this_precision() looks at max of step/min/value's # of\n        // digits.\n        newValue = parseFloat(newValue.toFixed(precision));\n\n        if (minOpt != null && newValue < minOpt) {\n          return minOpt;\n        }\n\n        if (maxOpt != null && newValue > maxOpt) {\n          var validMax = Math.floor((maxOpt - stepBase) / stepOpt) * stepOpt + stepBase;\n          // fix precision from bad JS floating point math\n          validMax = parseFloat(validMax.toFixed(precision));\n          return validMax;\n        }\n\n        return newValue;\n      },\n      /**\n       * Call this from _adjustValue when you have numbers with precision > 0. This method\n       * multiples everything by Math.pow(10,precision), calls _adjustValue with these numbers so that\n       * the math works, then divides the result by Math.pow(10,precision) to get it back to fractions.\n       * This is to work around the issue with Javascript's binary floating-point numbers not being\n       * great about adding decimal fractions. e.g., 0.1 + 0.2 is not equal to 0.3. It is\n       * an intentional consequence of the IEEE Standard for Binary Floating-Point Arithmetic (IEEE 754)\n       * @private\n       * @memberof oj.ojInputNumber\n       * @param {number} value - the current value\n       * @param {number} step - the step you want to adjust the value by\n       * @param {number} minOpt - the min option\n       * @param {number} maxOpt - the max option\n       * @param {number} stepOpt - the step option\n       * @param {number} precision - the precision @see _precision\n       * @param {number} initialValue - the value when the component was created\n       * @returns {number}\n       */\n      _adjustValueForFractions: function (\n        value,\n        step,\n        minOpt,\n        maxOpt,\n        stepOpt,\n        precision,\n        initialValue\n      ) {\n        // don't call this function if precision is 0\n        oj.Assert.assert(precision > 0);\n        var power = Math.pow(10, precision);\n        // if minOpt, maxOpt, stepOpt are undefined, keep them that way\n        // when we adjust the values to make them decimals, they should be whole numbers.\n        // javascript sometimes gives them fractions (\n        // e.g., 10000000.45*100=1000000044.9999999), so everywhere here we multiply\n        // by power, round the value to make it a whole number.\n        var minOptPower = minOpt != null ? Math.round(minOpt * power) : minOpt;\n        var maxOptPower = maxOpt != null ? Math.round(maxOpt * power) : maxOpt;\n        var stepOptPower = Math.round(stepOpt * power);\n\n        var adjustValuePower = this._adjustValue(\n          Math.round(value * power),\n          Math.round(step * power),\n          minOptPower,\n          maxOptPower,\n          stepOptPower,\n          0,\n          Math.round(initialValue * power)\n        );\n        return adjustValuePower / power;\n      },\n      /**\n       * @private\n       * @memberof oj.ojInputNumber\n       */\n      _stop: function (event) {\n        if (!this.spinning) {\n          return;\n        }\n        if (this._valuePending) {\n          // transientValue would have been validated, so simply set value to it.\n          // Normally when the value is updated, EditableValue._AfterSetOptionValue checks if it\n          // needs to run deferred validation and refresh UI display value.  Since we\n          // get here only from UI event, neither of those are necessary, so there is no\n          // need to call _AfterSetOptionValue.\n          var context = { originalEvent: event, internalSet: true };\n          this.option({ value: this.options.transientValue }, { _context: context });\n          this._valuePending = false;\n        }\n        clearTimeout(this.timer);\n        this.spinning = false;\n      },\n      /**\n       * @private\n       * @memberof oj.ojInputNumber\n       * @return {boolean} true if there is no touch detected within the last 500 ms\n       */\n      _isRealMouseEvent: function () {\n        return !DomUtils.recentTouchEnd();\n      },\n      /**\n       * disables or enables both the up and down buttons depending upon what the value\n       * is on the screen after conversion plus what min/max are set to.\n       * e.g., $10.00 is on the screen, valuenow is 10\n       * @private\n       * @memberof oj.ojInputNumber\n       */\n      _updateButtons: function (valuenow) {\n        var options = this.options;\n        var maxOpt = options.max;\n        var minOpt = options.min;\n        var downButton = this.downButton;\n        var upButton = this.upButton;\n        var downButtonDisabledAlready;\n        var upButtonDisabledAlready;\n        var isMaxOptNonNull = maxOpt != null;\n        var isMinOptNonNull = minOpt != null;\n\n        if (!downButton && !upButton) {\n          return;\n        }\n\n        // to prevent the overhead of disabling a button that is already disabled, check to see\n        // if it is already disabled already.\n        downButtonDisabledAlready = downButton[0].classList.contains('oj-disabled');\n        upButtonDisabledAlready = upButton[0].classList.contains('oj-disabled');\n\n        if (\n          options.disabled ||\n          valuenow === undefined ||\n          (isMaxOptNonNull && isMinOptNonNull && maxOpt === minOpt && valuenow === maxOpt)\n        ) {\n          if (!downButtonDisabledAlready) {\n            downButton.ojButton('disable');\n          }\n          if (!upButtonDisabledAlready) {\n            upButton.ojButton('disable');\n          }\n        } else if (isMaxOptNonNull && valuenow >= maxOpt) {\n          if (downButtonDisabledAlready) {\n            downButton.ojButton('enable');\n          }\n          if (!upButtonDisabledAlready) {\n            upButton.ojButton('disable');\n          }\n        } else if (isMinOptNonNull && valuenow <= minOpt) {\n          if (!downButtonDisabledAlready) {\n            downButton.ojButton('disable');\n          }\n          if (upButtonDisabledAlready) {\n            upButton.ojButton('enable');\n          }\n        } else {\n          if (downButtonDisabledAlready) {\n            downButton.ojButton('enable');\n          }\n          if (upButtonDisabledAlready) {\n            upButton.ojButton('enable');\n          }\n        }\n      },\n      /**\n       * Returns the normalized converter instance.\n       *\n       * @return {Object} a converter instance or null\n       * @memberof oj.ojInputNumber\n       * @instance\n       * @private\n       */\n      _getConverter: ojeditablevalue.EditableValueUtils._GetConverter,\n      /**\n       * Draw a readonly div or update one. When readonly, this div is shown and\n       * the input has display:none on it through theming, and vice versa.\n       * We set the textContent in _SetDisplayValue() if readonly\n       * @param {HTMLElement} pass in this.element[0]\n       * @memberof oj.ojInputNumber\n       * @instance\n       * @private\n       */\n      _createOrUpdateReadonlyDiv: ojeditablevalue.EditableValueUtils._createOrUpdateReadonlyDiv,\n      /**\n       * Returns the converted display value.\n       * This function gets the display value (or 0 if no display value), then parses it using\n       * the converter.\n       * The converted display value is used for 'valuenow'. For example,\n       * the display value might be $6.00, but we want valuenow to be 6.\n       * @private\n       * @memberof oj.ojInputNumber\n       */\n      _getDisplayValueParsed: function () {\n        var value;\n        var displayValue;\n        try {\n          displayValue = this._GetDisplayValue() || 0;\n          // if displayValue is not parseable, say it is 'abc',\n          // then _parseValue throws an error. catch it and move on.\n          value = this._parseValue(displayValue);\n        } catch (e) {\n          // catch the error, set value to undefined, and continue to update\n          // the buttons. both the up/down buttons will be disabled in this case.\n          value = undefined;\n        }\n        return value;\n      },\n      /**\n       * This calls _SetValue to parse, validate, and format the user's input.\n       * If we have async validators, this may happen asynchronously.\n       * If asynchronous and a new call is made to this method,\n       * it will ignore the Promise resolution from the previous request.\n       * @param {Object=} event the ui interaction event.\n       * @private\n       * @memberof oj.ojInputNumber\n       */\n      _blurEnterSetValue: function (event) {\n        var val = this.element.val();\n        var valuenow;\n        var setValueReturn;\n        var self = this;\n        var currentCounter;\n\n        this._stop(event);\n        // clear step queue\n        this.stepQueue = [];\n        // used to ignore if we get newer blurs\n        this._blurEnterSetValueCounter += 1;\n        currentCounter = this._blurEnterSetValueCounter;\n\n        this._valuePending = false;\n        setValueReturn = this._SetValue(val, event, { targetOptions: ['transientValue', 'value'] });\n\n        if (setValueReturn instanceof Promise) {\n          // We already set BusyContext in _SetValue\n          setValueReturn.then(function (setValueResolved) {\n            // valuenow/buttons are updated already in _Refresh for value option.\n            // handle the case where it wasn't.\n            // ignore if we got a more recent blur/enter while this one was still waiting.\n            if (currentCounter === self._blurEnterSetValueCounter) {\n              if (!setValueResolved) {\n                // If setValueResolved is false, there was an error in _SetValue parse/validate\n                // or it was ignored. Since we deal with ignoring ourselves,\n                // then we can rule that out.\n                valuenow = self._getDisplayValueParsed();\n                // we get here if parse is synchronous but validate is async, and validate\n                // failed.\n                self._updateButtonsAria(valuenow);\n              }\n            }\n          });\n        } else {\n          valuenow = setValueReturn ? this.options.value : this._getDisplayValueParsed();\n          // disables or enables both the up and down buttons depending upon what the value\n          // is on the screen after conversion plus what min/max are set to.\n          this._updateButtonsAria(valuenow);\n        }\n      },\n      /**\n       * @private\n       * @memberof oj.ojInputNumber\n       */\n      _updateButtonsAria: function (valuenow) {\n        this._refreshAriaValueNowText(valuenow);\n        this._updateButtons(valuenow);\n      },\n      /**\n       * Get the options for a number range validator, async or sync.\n       * Use the 'min' and 'max' options.\n       * @return {Object} the options\n       * @private\n       * @memberof oj.ojInputNumber\n       */\n      _createRangeValidatorOptions: function () {\n        var options = this.options;\n        var minOpt = options.min;\n        var maxOpt = options.max;\n        var newMin = minOpt != null ? minOpt : undefined;\n        var newMax = maxOpt != null ? maxOpt : undefined;\n        var translations = options.translations;\n        var translationsOptionNumberRange = translations ? translations.numberRange || {} : {};\n        var hintMin;\n        var hintMax;\n        var hintInRange;\n        var hintExact;\n        var messageDetailRangeOverflow;\n        var messageDetailRangeUnderflow;\n        var messageDetailExact;\n        var messageSummaryRangeOverflow;\n        var messageSummaryRangeUnderflow;\n        var translationsHint = translationsOptionNumberRange.hint || {};\n        var translationsMessageDetail = translationsOptionNumberRange.messageDetail || {};\n        var translationsMessageSummary = translationsOptionNumberRange.messageSummary || {};\n        var numberRangeValidatorOptions;\n\n        // First check if the translations hint/messageDetail/messageSummary options are set, and if\n        // so, use them.\n        // This is how the app dev could use inputNumber's translations option.\n        // var element = $(\"#spin\").ojInputNumber(\n        //      {value: 10, min: -50,\n        //        translations:\n        //        {numberRange:\n        //          {hint:\n        //            {min: 'Translations Option Test: Please enter a number greater than or equal to {min}',\n        //             max: 'Translations Option Test: Please enter a number less than or equal to {max}',\n        //             inRange: 'Translations Option Test: Please enter a number between {min} and {max}'\n        //            },\n        //            messageDetail:\n        //            {rangeUnderflow:\n        //            'Translations Option Test: The number {value} must be greater than or equal to {min}',\n        //              rangeOverflow:\n        //              'Translations Option Test: The number {value} must be less than or equal to {max}'\n        //            }\n        //          }\n        //        } // end numberRange\n        if (translationsHint !== null) {\n          hintMin = translationsHint.min || null;\n          hintMax = translationsHint.max || null;\n          hintInRange = translationsHint.inRange || null;\n          hintExact = translationsHint.exact || null;\n        }\n        if (translationsMessageDetail !== null) {\n          messageDetailRangeOverflow = translationsMessageDetail.rangeOverflow || null;\n          messageDetailRangeUnderflow = translationsMessageDetail.rangeUnderflow || null;\n          messageDetailExact = translationsMessageDetail.exact || null;\n        }\n        if (translationsMessageSummary !== null) {\n          messageSummaryRangeOverflow = translationsMessageSummary.rangeOverflow || null;\n          messageSummaryRangeUnderflow = translationsMessageSummary.rangeUnderflow || null;\n        }\n\n        // unless the translations options for the numberrange were set, the hints and messageDetails\n        // and messageSummaries will be null and we'll pick up the default strings from the\n        // NumberRangeValidator.\n        numberRangeValidatorOptions = {\n          min: newMin,\n          max: newMax,\n          hint: {\n            min: hintMin || null,\n            max: hintMax || null,\n            inRange: hintInRange || null,\n            exact: hintExact || null\n          },\n          messageDetail: {\n            rangeOverflow: messageDetailRangeOverflow || null,\n            rangeUnderflow: messageDetailRangeUnderflow || null,\n            exact: messageDetailExact || null\n          },\n          messageSummary: {\n            rangeOverflow: messageSummaryRangeOverflow || null,\n            rangeUnderflow: messageSummaryRangeUnderflow || null\n          },\n          converter: this._GetConverter()\n        };\n\n        return numberRangeValidatorOptions;\n      },\n\n      // The user can clear out min/max by setting the option to null, so we\n      // do not coerce null.\n      /**\n       * @param {string} option name of the option. this will show up in the error if thrown\n       * @param val value to parse\n       * @throws {Error} if option value is invalid\n       * @private\n       * @memberof oj.ojInputNumber\n       */\n      _parse: function (option, val) {\n        var returnValue;\n        if (val !== null) {\n          returnValue = +val;\n        } else {\n          returnValue = val;\n        }\n\n        // isNaN(null) returns false, which is what we want\n        if (isNaN(returnValue)) {\n          throw new Error(\"ojInputNumber's \" + option + ' option is not a number');\n        }\n\n        return returnValue;\n      },\n      /**\n       * parse the step's value\n       * We are following the behavior of HTML-5 the best we can. According\n       * to the spec, it says step must be a number greater than 0.\n       * Chrome defaults it to 1 if it is not.\n       * In v8.0 we added the feature to not step or show buttons if\n       * step is 0.\n       * @throws {Error} if option value is invalid\n       * @private\n       * @memberof oj.ojInputNumber\n       */\n      _parseStep: function (val) {\n        var defaultStep = 1;\n        var parsedStep;\n        if (val === null) {\n          return defaultStep;\n        }\n        if (val === '') {\n          // throw an exception\n          throw new Error('Invalid step for ojInputNumber; step must be a number 0 or greater.');\n        }\n\n        parsedStep = this._parse('step', val);\n        if (parsedStep < 0) {\n          // throw an exception\n          throw new Error('Invalid step for ojInputNumber; step must be 0 or greater.');\n        }\n        return parsedStep;\n      },\n      /**\n       * Toggles css selector on the widget. E.g., when readOnly option changes,\n       * the oj-read-only selector needs to be toggled.\n       * @param {string} option\n       * @param {Object|string|boolean} value\n       * @private\n       * @memberof oj.ojInputNumber\n       */\n      _refreshStateTheming: function (option, value) {\n        if (Object.keys(this._OPTION_TO_CSS_MAPPING).indexOf(option) !== -1) {\n          // value is a boolean\n          if (value) {\n            this.widget()[0].classList.add(this._OPTION_TO_CSS_MAPPING[option]);\n          } else {\n            this.widget()[0].classList.remove(this._OPTION_TO_CSS_MAPPING[option]);\n          }\n        }\n      },\n      /**\n       * The role spinbutton needs to be toggled.\n       * If the up/down buttons are not rendered, then we do not want the\n       * role spinbutton.\n       * E.g., We don't have role spinbutton on readOnly inputNumber.\n       * @param {boolean} needsRole\n       * @private\n       * @memberof oj.ojInputNumber\n       */\n      _refreshRoleSpinbutton: function (needsRole) {\n        if (!needsRole) {\n          this.element[0].removeAttribute('role');\n        } else {\n          this.element[0].setAttribute('role', 'spinbutton'); // @HTMLUpdateOK\n        }\n      },\n      /**\n       * @private\n       * @memberof oj.ojInputNumber\n       */\n      _refreshAriaMinMax: function () {\n        this._setAttr('aria-valuemin', this.options.min);\n        this._setAttr('aria-valuemax', this.options.max);\n      },\n      /**\n       * Update aria-valuenow to valuenow and aria-valuetext to the\n       * displayValue if it is different than valuenow.\n       * If valuenow is undefined, then aria-valuenow is skippped; it's not set or removed,\n       * so it will be the last known valid value.\n       * Rules for aria-valuenow/aria-valuetext:\n       * if the input value shown to the user can be parsed to a valid non-formatted number,\n       * I'll set aria-valuenow, else it won't be there at all.\n       * if the input value shown is not equal to what aria-valuenow is,\n       * set aria-valuetext, e.g.,\n       * USD 10.00 for aria-valuetext, 10 for aria-valuenow.\n       * else it won't be there at all.\n       * My goal is for voiceover to read what is in the field, showing to the user.\n       * @private\n       * @memberof oj.ojInputNumber\n       */\n      _refreshAriaValueNowText: function (valuenow) {\n        this._setAttr('aria-valuenow', valuenow);\n        this._refreshAriaText(valuenow);\n      },\n      /* updates the aria-text if needed */\n      /**\n       * @private\n       * @memberof oj.ojInputNumber\n       */\n      _refreshAriaText: function (valuenow) {\n        var valuetext = this.element.val();\n\n        if (valuetext !== '' && !this._CompareOptionValues('value', '' + valuenow, valuetext)) {\n          this._setAttr('aria-valuetext', valuetext);\n        } else {\n          this._setAttr('aria-valuetext', null);\n        }\n      },\n      /**\n       * Set an element attribute using jQuery logic, but javascript apis.\n       * This allows easy replacement of jQuery attr() calls.\n       * @param {string} attrName the attribute to set\n       * @param {any} value the attribute value\n       * @private\n       * @memberof oj.ojInputNumber\n       */\n      _setAttr: function (attrName, value) {\n        if (value !== undefined) {\n          if (value === null) {\n            this.element[0].removeAttribute(attrName);\n          } else {\n            this.element[0].setAttribute(attrName, value); // @HTMLUpdateOK\n          }\n        }\n      },\n      /**\n       * Step the inputnumber value up or down.\n       * If this is async because of async validators,\n       * then we queue up the step requests, so if a user clicks three times, but updating is slow\n       * due to slow validators, the user still sees the result of his three clicks\n       * at the end. This is different than when the user holds down the up/down\n       * key/button.\n       * @private\n       * @memberof oj.ojInputNumber\n       * @param {Number} step - Number of steps to increment, like 10 or 1. If undefined, we\n       * pull from the this.stepQueue queue.\n       * @param {boolean} up If true step up, else step down.\n       * @param {Object=} event an optional event if this was a result of ui interaction.\n       */\n      _stepNoStartStop: function (step, event) {\n        var currentStepObject;\n        var currentSpinStep;\n        var currentEvent;\n        // this.stepQueue = []; initialized in _AfterCreate and cleared if spinning or blurEnter\n        var spinPromise;\n        var self = this;\n\n        if (step === undefined) {\n          // pull from the queue. If it's empty, return.\n          if (this.stepQueue.length === 0) {\n            return;\n          }\n          currentStepObject = this.stepQueue.shift();\n          currentSpinStep = currentStepObject.step;\n          currentEvent = currentStepObject.event;\n        } else {\n          // if we are already processing something in the queue, push new step request\n          //  to the queue, and return.\n          if (this.stepQueue.length >= 1) {\n            this.stepQueue.push({ step: step, event: event });\n            return;\n          }\n          currentSpinStep = step;\n          currentEvent = event;\n        }\n\n        spinPromise = this._spin(currentSpinStep, currentEvent, false);\n        if (spinPromise instanceof Promise) {\n          this.stepQueue.push({ step: currentSpinStep, event: currentEvent });\n          spinPromise.then(function () {\n            // pop it off because it has been processed. This is used as a 'flag' that we\n            // are awaiting the promise to resolve.\n            self.stepQueue.shift();\n            // continue stepping if stepQueue is not empty.\n            self._stepNoStartStop(undefined, currentEvent);\n          });\n        }\n      },\n\n      /**\n       * step the inputnumber value up or down.\n       * @private\n       * @memberof oj.ojInputNumber\n       * @param {Number} step - Number of steps to increment, like 10 or 1 or -10.\n       * @param {Object=} event an optional event if this was a result of ui interaction.\n       */\n      _step: function (step, event) {\n        this._start();\n        this._stepNoStartStop(step, event);\n        this._stop(event);\n      },\n\n      /**\n       * Set the type of the input element based on virtualKeyboard option.\n       * @memberof oj.ojInputNumber\n       * @instance\n       * @protected\n       * @ignore\n       */\n      _SetInputType: ojeditablevalue.EditableValueUtils._SetInputType,\n\n      /**\n       * Events registerd without the passive option\n       * @private\n       * @memberof oj.ojInputNumber\n       * @ignore\n       */\n      _regularEventsAndListeners: {\n        compositionstart: function () {\n          // See _isComposing in InputBase for comments on what this does\n          this._isComposing = true;\n        },\n        compositionend: function (event) {\n          this._isComposing = false;\n          this._SetRawValue(this.element.val(), event);\n        },\n        input: function (event) {\n          if (!this._isComposing) {\n            this._SetRawValue(this.element.val(), event);\n          }\n        },\n        keydown: function (event) {\n          var keyCode = $.ui.keyCode;\n          switch (event.keyCode) {\n            case keyCode.ENTER:\n              this._blurEnterSetValue(event);\n              event.preventDefault();\n              break;\n            case keyCode.UP:\n              // same as if you used the up and down buttons\n              // if buttons aren't there, then up/down keys shouldn't be\n              // there as well.\n              if (this._needsButtonset()) {\n                if (!this.spinning) {\n                  this._start();\n                  this._repeat(null, 1, event);\n                }\n              }\n              event.preventDefault();\n\n              break;\n            case keyCode.DOWN:\n              if (this._needsButtonset()) {\n                if (!this.spinning) {\n                  this._start();\n                  this._repeat(null, -1, event);\n                }\n              }\n              event.preventDefault();\n              break;\n            default:\n              break;\n          }\n        },\n        keyup: function (event) {\n          var keyCode = $.ui.keyCode;\n\n          switch (event.keyCode) {\n            case keyCode.UP:\n            case keyCode.DOWN:\n              this._stop(event);\n              break;\n            default:\n              this._stop(event);\n              break;\n          }\n        },\n        blur: function (event) {\n          this._blurEnterSetValue(event);\n        },\n        'touchend .oj-inputnumber-button': function (event) {\n          this._stop(event);\n        },\n        'touchcancel .oj-inputnumber-button': function (event) {\n          this._stop(event);\n        },\n        'mousedown .oj-inputnumber-button.oj-enabled': function (event) {\n          if (this._isRealMouseEvent(event)) {\n            this._start();\n\n            this._repeat(\n              null,\n              event.currentTarget.classList.contains('oj-inputnumber-up') ? 1 : -1,\n              event\n            );\n          }\n        },\n        'mouseup .oj-inputnumber-button': function (event) {\n          if (this._isRealMouseEvent(event)) {\n            this._stop(event);\n          }\n        },\n        'mouseenter .oj-inputnumber-button.oj-enabled': function (event) {\n          // button will add oj-active if mouse was down while mouseleave and kept down\n          if (!event.currentTarget.classList.contains('oj-active')) {\n            return;\n          }\n          if (this._isRealMouseEvent(event)) {\n            this._start();\n\n            this._repeat(\n              null,\n              event.currentTarget.classList.contains('oj-inputnumber-up') ? 1 : -1,\n              event\n            );\n          }\n        },\n        // TODO: do we really want to consider this a stop?\n        // shouldn't we just stop the repeater and wait until mouseup before\n        // we trigger the stop event?\n        'mouseleave .oj-inputnumber-button': function (event) {\n          if (this._isRealMouseEvent(event)) {\n            this._stop(event);\n          }\n        }\n      },\n\n      /**\n       * Events registerd with the passive option\n       * @private\n       * @memberof oj.ojInputNumber\n       * @ignore\n       */\n      _passiveEventsAndListeners: {\n        'touchstart .oj-inputnumber-button.oj-enabled': function (event) {\n          this._start();\n          this._repeat(\n            null,\n            event.currentTarget.classList.contains('oj-inputnumber-up') ? 1 : -1,\n            event\n          );\n        }\n      },\n\n      /**\n       * Register event listeners\n       * @memberof oj.ojInputNumber\n       * @private\n       * @ignore\n       */\n      _registerEvents: function () {\n        // register all regular events\n        this._on(this._regularEventsAndListeners);\n        // will register these with the passive option in 8.1.0\n        this._on(this._passiveEventsAndListeners);\n      }\n    });\n\n    Components.setDefaultOptions({\n      ojInputNumber: {\n        step: Components.createDynamicPropertyGetter(function () {\n          return ThemeUtils.getCachedCSSVarValues([\n            '--oj-private-input-number-global-step-default'\n          ])[0];\n        }),\n        converter: Components.createDynamicPropertyGetter(function () {\n          if (_sDefaultNumberConverter == null) {\n            _sDefaultNumberConverter = _getNumberDefaultConverter();\n          }\n          return _sDefaultNumberConverter;\n        })\n      }\n    });\n  })(); // end of inputNumber wrapper function\n\n});\n","/**\n * @license\n * Copyright (c) 2014, 2023, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\ndefine(['ojs/ojcore-base', 'ojs/ojdataprovider', 'ojs/ojeventtarget'], function (oj, ojdataprovider, ojeventtarget) { 'use strict';\n\n    oj = oj && Object.prototype.hasOwnProperty.call(oj, 'default') ? oj['default'] : oj;\n\n    /**\n     * @preserve Copyright 2013 jQuery Foundation and other contributors\n     * Released under the MIT license.\n     * http://jquery.org/license\n     */\n\n    /* jslint browser: true,devel:true*/\n    /**\n     *\n     * @since 4.1.0\n     * @export\n     * @final\n     * @class ListDataProviderView\n     * @ojtsmodule\n     * @implements DataProvider\n     * @classdesc Provides list based optimizations for DataProvider and adds some support for providing state\n     * for certain operations. e.g supports {@link DataProvider#fetchFirst} starting at arbitrary key or index offset, sortCriteria,\n     * and field mapping. Please see the select demos for examples of DataMapping [Select]{@link oj.ojSelect}\n     * @param {DataProvider} dataProvider the DataProvider.\n     * @param {ListDataProviderView.Options=} options Options for the ListDataProviderView\n     * @ojsignature [{target: \"Type\",\n     *               value: \"class ListDataProviderView<K, D, Kin, Din> implements DataProvider<K, D>\",\n     *               genericParameters: [{\"name\": \"K\", \"description\": \"Type of output key\"}, {\"name\": \"D\", \"description\": \"Type of output data\"},\n     *                    {\"name\": \"Kin\", \"description\": \"Type of input key\"}, {\"name\": \"Din\", \"description\": \"Type of input data\"}]},\n     *               {target: \"Type\",\n     *               value: \"DataProvider<Kin, Din>\",\n     *               for: \"dataProvider\"},\n     *               {target: \"Type\",\n     *                value: \"ListDataProviderView.Options<K, D, Kin, Din>\",\n     *                for: \"options\"}]\n     * @ojtsimport {module: \"ojdataprovider\", type: \"AMD\", imported: [\"DataProvider\", \"SortCriterion\", \"FetchByKeysParameters\",\n     *   \"ContainsKeysResults\",\"FetchByKeysResults\",\"FetchByOffsetParameters\",\"FetchByOffsetResults\", \"DataMapping\",\n     *   \"FetchListResult\",\"FetchListParameters\", \"FetchAttribute\", \"DataFilter\"]}\n     */\n\n    /**\n     * @typedef {Object} ListDataProviderView.Options\n     * @property {any=} from - key to start fetching from. This will be applied first before offset is applied.\n     * @property {number=} offset - offset to start fetching from.\n     * @property {Array=} sortCriteria - {@link SortCriterion} to apply to the data.\n     * @property {DataMapping=} dataMapping - mapping to apply to the data.\n     * @property {Array=} attributes - fetch attributes to apply\n     * @property {DataFilter.Filter=} filterCriterion - filter criterion to apply. If the DataProvider does not support filtering then\n     *        ListDataProviderView will do local filtering of the data.\n     * @ojsignature [\n     *  {target: \"Type\", value: \"<K, D, Kin, Din>\", for: \"genericTypeParameters\"},\n     *  {target: \"Type\", value: \"Kin=\", for: \"from\"},\n     *  {target: \"Type\", value: \"number=\", for: \"offset\"},\n     *  {target: \"Type\", value: \"Array.<SortCriterion<D>>\", for: \"sortCriteria\"},\n     *  {target: \"Type\", value: \"DataMapping<K, D, Kin, Din>\", for: \"dataMapping\"},\n     *  {target: \"Type\", value: \"Array<string | FetchAttribute>\", for: \"attributes\"},\n     *  {target: \"Type\", value: \"DataFilter.Filter<D>=\", for: \"filterCriterion\"}\n     * ]\n     */\n\n    /**\n     * @inheritdoc\n     * @memberof ListDataProviderView\n     * @instance\n     * @method\n     * @name containsKeys\n     */\n\n    /**\n     * Get an AsyncIterable object for iterating the data.\n     * <p>\n     * AsyncIterable contains a Symbol.asyncIterator method that returns an AsyncIterator.\n     * AsyncIterator contains a “next” method for fetching the next block of data.\n     * </p><p>\n     * The \"next\" method returns a promise that resolves to an object, which contains a \"value\" property for the data and a \"done\" property\n     * that is set to true when there is no more data to be fetched.  The \"done\" property should be set to true only if there is no \"value\"\n     * in the result.  Note that \"done\" only reflects whether the iterator is done at the time \"next\" is called.  Future calls to \"next\"\n     * may or may not return more rows for a mutable data source.\n     * </p>\n     * <p>\n     * Please see the <a href=\"DataProvider.html#custom-implementations-section\">DataProvider documentation</a> for\n     * more information on custom implementations.\n     * </p>\n     *\n     * @param {FetchListParameters=} params fetch parameters\n     * @return {AsyncIterable.<FetchListResult>} AsyncIterable with {@link FetchListResult}\n     * @see {@link https://github.com/tc39/proposal-async-iteration} for further information on AsyncIterable.\n     * @export\n     * @expose\n     * @memberof ListDataProviderView\n     * @instance\n     * @method\n     * @name fetchFirst\n     * @ojsignature {target: \"Type\",\n     *               value: \"(parameters?: FetchListParameters<D>): AsyncIterable<FetchListResult<K, D>>\"}\n     * @ojtsexample <caption>Get an asyncIterator and then fetch first block of data by executing next() on the iterator. Subsequent blocks can be fetched by executing next() again.</caption>\n     * let asyncIterator = dataprovider.fetchFirst(options)[Symbol.asyncIterator]();\n     * let result = await asyncIterator.next();\n     * let value = result.value;\n     * let data = value.data;\n     * let keys = value.metadata.map(function(val) {\n     *   return val.key;\n     * });\n     * // true or false for done\n     * let done = result.done;\n     */\n\n    /**\n     * @inheritdoc\n     * @memberof ListDataProviderView\n     * @instance\n     * @method\n     * @name fetchByKeys\n     */\n\n    /**\n     * @inheritdoc\n     * @memberof ListDataProviderView\n     * @instance\n     * @method\n     * @name fetchByOffset\n     */\n\n    /**\n     * @inheritdoc\n     * @memberof ListDataProviderView\n     * @instance\n     * @method\n     * @name getCapability\n     */\n\n    /**\n     * @inheritdoc\n     * @memberof ListDataProviderView\n     * @instance\n     * @method\n     * @name getTotalSize\n     */\n\n    /**\n     * @inheritdoc\n     * @memberof ListDataProviderView\n     * @instance\n     * @method\n     * @name isEmpty\n     */\n\n    /**\n     * @inheritdoc\n     * @memberof ListDataProviderView\n     * @instance\n     * @method\n     * @name addEventListener\n     */\n\n    /**\n     * @inheritdoc\n     * @memberof ListDataProviderView\n     * @instance\n     * @method\n     * @name removeEventListener\n     */\n\n    /**\n     * @inheritdoc\n     * @memberof ListDataProviderView\n     * @instance\n     * @method\n     * @name dispatchEvent\n     */\n\n    /**\n     * Optional key to start fetching from. Used to set on the ListDataProviderView instance instead of through the constructor.\n     *\n     *\n     * @since 4.1.0\n     * @export\n     * @expose\n     * @memberof ListDataProviderView\n     * @instance\n     * @name from\n     * @type {any}\n     * @ojsignature {target: \"Type\",\n     *               value: \"?Kin\"}\n     * @ojtsexample <caption>set the key to start fetching from</caption>\n     * dataprovider.from = '1234';\n     */\n\n    /**\n     * Optional offset to start fetching from. Used to set on the ListDataProviderView instance instead of through the constructor.. Should be greater than or equal to zero.\n     * If a negative offset is used then it will be treated as zero.\n     *\n     *\n     * @since 4.1.0\n     * @export\n     * @expose\n     * @memberof ListDataProviderView\n     * @instance\n     * @name offset\n     * @type {number=}\n     * @ojsignature {target: \"Type\",\n     *               value: \"?number\"}\n     * @ojtsexample <caption>set the offset to start fetching from</caption>\n     * dataprovider.offset = 5;\n     */\n\n    /**\n     * Optional sortCriteria to apply. Used to set on the ListDataProviderView instance instead of through the constructor.\n     *\n     *\n     * @since 4.1.0\n     * @export\n     * @expose\n     * @memberof ListDataProviderView\n     * @instance\n     * @name sortCriteria\n     * @type {Array.<SortCriterion>=}\n     * @ojsignature {target: \"Type\",\n     *               value: \"?Array<SortCriterion<D>>\"}\n     * @ojtsexample <caption>set the sortCriteria for fetching</caption>\n     * dataprovider.sortCriteria = [{attribute: 'DepartmentName', direction: 'ascending'}];\n     */\n\n    /**\n     * Optional dataMapping to apply. Used to set on the ListDataProviderView instance instead of through the constructor.\n     *\n     *\n     * @since 4.1.0\n     * @export\n     * @expose\n     * @memberof ListDataProviderView\n     * @instance\n     * @name dataMapping\n     * @type {DataMapping=}\n     * @ojsignature {target: \"Type\",\n     *               value: \"?DataMapping<K, D, Kin, Din>\"}\n     * @ojtsexample <caption>set the data mapping for fetching</caption>\n     * dataprovider.dataMapping = function (item) {\n     *   let data = item.data;\n     *   let mappedItem = {};\n     *   mappedItem.data = {};\n     *   mappedItem.data.label = data.name;\n     *   mappedItem.data.value = data.id;\n     *   mappedItem.metadata = { key: data.id };\n     *   return mappedItem;\n     * };\n     */\n\n    /**\n     * Optional fetch attributes to apply. Used to set on the ListDataProviderView instance instead of through the constructor.\n     *\n     *\n     * @since 4.1.0\n     * @export\n     * @expose\n     * @memberof ListDataProviderView\n     * @instance\n     * @name attributes\n     * @type {Array<string | FetchAttribute>=}\n     * @ojsignature {target: \"Type\",\n     *               value: \"?Array<string | FetchAttribute>\"}\n     * @ojtsexample <caption>set the attribute filter for fetching</caption>\n     * dataprovider.attributes = ['!lastName', '@default']; // all attributes except lastName\n     */\n\n    /**\n     * Optional filter criterion to apply. Used to set on the ListDataProviderView instance instead of through the constructor.\n     *\n     *\n     * @since 7.0.0\n     * @export\n     * @expose\n     * @memberof ListDataProviderView\n     * @instance\n     * @name filterCriterion\n     * @type {DataFilter.Filter=}\n     * @ojsignature {target: \"Type\",\n     *               value: \"?DataFilter.Filter<D>\"}\n     * @ojtsexample <caption>set the filter criterion for fetching</caption>\n     * let filterDef = {op: '$or', criteria: [{op: '$eq', value: {name: 'Bob'}}, {op: '$gt', value: {level: 'Low'}}]};\n     * dataprovider.filterCriterion = FilterFactory.getFilter({filterDef}); // create a standard filter using the filterFactory.\n     */\n\n    // end of jsdoc\n\n    class ListDataProviderView {\n        constructor(dataProvider, options) {\n            var _a;\n            this.dataProvider = dataProvider;\n            this.options = options;\n            this._noFilterSupport = false;\n            this.AsyncIterable = (_a = class {\n                    constructor(_parent, _asyncIterator) {\n                        this._parent = _parent;\n                        this._asyncIterator = _asyncIterator;\n                        this[Symbol.asyncIterator] = () => {\n                            return this._asyncIterator;\n                        };\n                    }\n                },\n                Symbol.asyncIterator,\n                _a);\n            this.AsyncIterator = class {\n                constructor(_parent, _nextFunc, _params) {\n                    this._parent = _parent;\n                    this._nextFunc = _nextFunc;\n                    this._params = _params;\n                }\n                ['next']() {\n                    const signal = this._params?.signal;\n                    if (signal && signal.aborted) {\n                        const reason = signal.reason;\n                        return Promise.reject(new DOMException(reason, 'AbortError'));\n                    }\n                    return new Promise((resolve, reject) => {\n                        if (signal) {\n                            const reason = signal.reason;\n                            signal.addEventListener('abort', (e) => {\n                                return reject(new DOMException(reason, 'AbortError'));\n                            });\n                        }\n                        const result = this._nextFunc(this._params);\n                        return resolve(result);\n                    });\n                }\n            };\n            this.AsyncIteratorYieldResult = class {\n                constructor(_parent, value) {\n                    this._parent = _parent;\n                    this.value = value;\n                    this[ListDataProviderView._VALUE] = value;\n                    this[ListDataProviderView._DONE] = false;\n                }\n            };\n            this.AsyncIteratorReturnResult = class {\n                constructor(_parent, value) {\n                    this._parent = _parent;\n                    this.value = value;\n                    this[ListDataProviderView._VALUE] = value;\n                    this[ListDataProviderView._DONE] = true;\n                }\n            };\n            this.FetchListResult = class {\n                constructor(_parent, fetchParameters, data, metadata, totalFilteredRowCount) {\n                    this._parent = _parent;\n                    this.fetchParameters = fetchParameters;\n                    this.data = data;\n                    this.metadata = metadata;\n                    this.totalFilteredRowCount = totalFilteredRowCount;\n                    this[ListDataProviderView._FETCHPARAMETERS] = fetchParameters;\n                    this[ListDataProviderView._DATA] = data;\n                    this[ListDataProviderView._METADATA] = metadata;\n                    if (fetchParameters && fetchParameters.includeFilteredRowCount === 'enabled') {\n                        this[ListDataProviderView._TOTALFILTEREDROWCOUNR] = totalFilteredRowCount;\n                    }\n                }\n            };\n            this.Item = class {\n                constructor(_parent, metadata, data) {\n                    this._parent = _parent;\n                    this.metadata = metadata;\n                    this.data = data;\n                    this[ListDataProviderView._METADATA] = metadata;\n                    this[ListDataProviderView._DATA] = data;\n                }\n            };\n            this.ItemMetadata = class {\n                constructor(_parent, key) {\n                    this._parent = _parent;\n                    this.key = key;\n                    this[ListDataProviderView._KEY] = key;\n                }\n            };\n            this.FetchListParameters = class {\n                constructor(_parent, params, size, sortCriteria, filterCriterion, attributes, signal) {\n                    this._parent = _parent;\n                    this.params = params;\n                    this.size = size;\n                    this.sortCriteria = sortCriteria;\n                    this.filterCriterion = filterCriterion;\n                    this.attributes = attributes;\n                    this.signal = signal;\n                    if (params) {\n                        Object.keys(params).forEach((prop) => {\n                            this[prop] = params[prop];\n                        });\n                    }\n                    this[ListDataProviderView._SIZE] = size;\n                    if (sortCriteria) {\n                        this[ListDataProviderView._SORTCRITERIA] = sortCriteria;\n                    }\n                    if (filterCriterion) {\n                        this[ListDataProviderView._FILTERCRITERION] = filterCriterion;\n                    }\n                    if (attributes) {\n                        this[ListDataProviderView._FETCHATTRIBUTES] = attributes;\n                    }\n                    if (signal) {\n                        this[ListDataProviderView._SIGNAL] = signal;\n                    }\n                }\n            };\n            this.FetchByKeysParameters = class {\n                constructor(_parent, keys, params, attributes) {\n                    this._parent = _parent;\n                    this.keys = keys;\n                    this.params = params;\n                    this.attributes = attributes;\n                    if (params) {\n                        Object.keys(params).forEach((prop) => {\n                            this[prop] = params[prop];\n                        });\n                    }\n                    if (keys) {\n                        this[ListDataProviderView._KEYS] = keys;\n                    }\n                    if (attributes) {\n                        this[ListDataProviderView._FETCHATTRIBUTES] = attributes;\n                    }\n                }\n            };\n            this.FetchByOffsetParameters = class {\n                constructor(_parent, offset, params, size, sortCriteria, filterCriterion, attributes, signal) {\n                    this._parent = _parent;\n                    this.offset = offset;\n                    this.params = params;\n                    this.size = size;\n                    this.sortCriteria = sortCriteria;\n                    this.filterCriterion = filterCriterion;\n                    this.attributes = attributes;\n                    this.signal = signal;\n                    if (params) {\n                        Object.keys(params).forEach((prop) => {\n                            this[prop] = params[prop];\n                        });\n                    }\n                    if (size) {\n                        this[ListDataProviderView._SIZE] = size;\n                    }\n                    if (sortCriteria) {\n                        this[ListDataProviderView._SORTCRITERIA] = sortCriteria;\n                    }\n                    if (offset) {\n                        this[ListDataProviderView._OFFSET] = offset;\n                    }\n                    if (filterCriterion) {\n                        this[ListDataProviderView._FILTERCRITERION] = filterCriterion;\n                    }\n                    if (attributes) {\n                        this[ListDataProviderView._FETCHATTRIBUTES] = attributes;\n                    }\n                    if (signal) {\n                        this[ListDataProviderView._SIGNAL] = signal;\n                    }\n                }\n            };\n            this.FetchByKeysResults = class {\n                constructor(_parent, fetchParameters, results) {\n                    this._parent = _parent;\n                    this.fetchParameters = fetchParameters;\n                    this.results = results;\n                    this[ListDataProviderView._FETCHPARAMETERS] = fetchParameters;\n                    this[ListDataProviderView._RESULTS] = results;\n                }\n            };\n            this.ContainsKeysResults = class {\n                constructor(_parent, containsParameters, results) {\n                    this._parent = _parent;\n                    this.containsParameters = containsParameters;\n                    this.results = results;\n                    this[ListDataProviderView._CONTAINSPARAMETERS] = containsParameters;\n                    this[ListDataProviderView._RESULTS] = results;\n                }\n            };\n            this.FetchByOffsetResults = class {\n                constructor(_parent, fetchParameters, results, done, totalFilteredRowCount) {\n                    this._parent = _parent;\n                    this.fetchParameters = fetchParameters;\n                    this.results = results;\n                    this.done = done;\n                    this.totalFilteredRowCount = totalFilteredRowCount;\n                    this[ListDataProviderView._FETCHPARAMETERS] = fetchParameters;\n                    this[ListDataProviderView._RESULTS] = results;\n                    this[ListDataProviderView._DONE] = done;\n                    if (fetchParameters && fetchParameters.includeFilteredRowCount === 'enabled') {\n                        this[ListDataProviderView._TOTALFILTEREDROWCOUNR] = totalFilteredRowCount;\n                    }\n                }\n            };\n            this[ListDataProviderView._INTERNAL_FROM] =\n                this.options == null ? null : this.options[ListDataProviderView._FROM];\n            this[ListDataProviderView._INTERNAL_OFFSET] =\n                this.options == null\n                    ? 0\n                    : this.options[ListDataProviderView._OFFSET] > 0\n                        ? this.options[ListDataProviderView._OFFSET]\n                        : 0;\n            this[ListDataProviderView._INTERNAL_SORTCRITERIA] =\n                this.options == null ? null : this.options[ListDataProviderView._SORTCRITERIA];\n            this[ListDataProviderView._INTERNAL_DATAMAPPING] =\n                this.options == null ? null : this.options[ListDataProviderView._DATAMAPPING];\n            this[ListDataProviderView._INTERNAL_FETCHATTRIBUTES] =\n                this.options == null ? null : this.options[ListDataProviderView._FETCHATTRIBUTES];\n            this[ListDataProviderView._INTERNAL_FILTERCRITERION] =\n                this.options == null ? null : this.options[ListDataProviderView._FILTERCRITERION];\n            this._addEventListeners(dataProvider);\n            if (dataProvider.getCapability && !dataProvider.getCapability('filter')) {\n                this._noFilterSupport = true;\n            }\n            Object.defineProperty(this, 'from', {\n                set(value) {\n                    this[ListDataProviderView._INTERNAL_FROM] = value;\n                    this.dispatchEvent(new ojdataprovider.DataProviderRefreshEvent());\n                },\n                get() {\n                    return this[ListDataProviderView._INTERNAL_FROM];\n                },\n                enumerable: true\n            });\n            Object.defineProperty(this, 'offset', {\n                set(value) {\n                    this[ListDataProviderView._INTERNAL_OFFSET] = value;\n                    this.dispatchEvent(new ojdataprovider.DataProviderRefreshEvent());\n                },\n                get() {\n                    return this[ListDataProviderView._INTERNAL_OFFSET];\n                },\n                enumerable: true\n            });\n            Object.defineProperty(this, 'sortCriteria', {\n                set(value) {\n                    this[ListDataProviderView._INTERNAL_SORTCRITERIA] = value;\n                    this.dispatchEvent(new ojdataprovider.DataProviderRefreshEvent());\n                },\n                get() {\n                    return this[ListDataProviderView._INTERNAL_SORTCRITERIA];\n                },\n                enumerable: true\n            });\n            Object.defineProperty(this, 'dataMapping', {\n                set(value) {\n                    this[ListDataProviderView._INTERNAL_DATAMAPPING] = value;\n                    this.dispatchEvent(new ojdataprovider.DataProviderRefreshEvent());\n                },\n                get() {\n                    return this[ListDataProviderView._INTERNAL_DATAMAPPING];\n                },\n                enumerable: true\n            });\n            Object.defineProperty(this, 'attributes', {\n                set(value) {\n                    this[ListDataProviderView._INTERNAL_FETCHATTRIBUTES] = value;\n                    this.dispatchEvent(new ojdataprovider.DataProviderRefreshEvent());\n                },\n                get() {\n                    return this[ListDataProviderView._INTERNAL_FETCHATTRIBUTES];\n                },\n                enumerable: true\n            });\n            Object.defineProperty(this, 'filterCriterion', {\n                set(value) {\n                    this[ListDataProviderView._INTERNAL_FILTERCRITERION] = value;\n                    this.dispatchEvent(new ojdataprovider.DataProviderRefreshEvent());\n                },\n                get() {\n                    return this[ListDataProviderView._INTERNAL_FILTERCRITERION];\n                },\n                enumerable: true\n            });\n        }\n        containsKeys(params) {\n            if (this.dataProvider[ListDataProviderView._CONTAINSKEYS]) {\n                return this.dataProvider[ListDataProviderView._CONTAINSKEYS](params);\n            }\n            else {\n                return this.fetchByKeys(params).then((fetchByKeysResult) => {\n                    const results = new Set();\n                    params[ListDataProviderView._KEYS].forEach((key) => {\n                        if (fetchByKeysResult[ListDataProviderView._RESULTS].get(key) != null) {\n                            results.add(key);\n                        }\n                    });\n                    return Promise.resolve(new this.ContainsKeysResults(this, params, results));\n                });\n            }\n        }\n        fetchByKeys(params) {\n            const keys = params != null ? params[ListDataProviderView._KEYS] : null;\n            let fetchAttributes = params != null ? params[ListDataProviderView._FETCHATTRIBUTES] : null;\n            if (fetchAttributes == null) {\n                fetchAttributes = this[ListDataProviderView._INTERNAL_FETCHATTRIBUTES];\n            }\n            const signal = params?.signal;\n            if (signal && signal.aborted) {\n                const reason = signal.reason;\n                return Promise.reject(new DOMException(reason, 'AbortError'));\n            }\n            return new Promise((resolve, reject) => {\n                if (signal) {\n                    const reason = signal.reason;\n                    signal.addEventListener('abort', (e) => {\n                        return reject(new DOMException(reason, 'AbortError'));\n                    });\n                }\n                const updatedParams = new this.FetchByKeysParameters(this, keys, params, fetchAttributes);\n                if (this.dataProvider[ListDataProviderView._FETCHBYKEYS]) {\n                    return resolve(this.dataProvider[ListDataProviderView._FETCHBYKEYS](updatedParams).then((value) => {\n                        const resultMap = value[ListDataProviderView._RESULTS];\n                        const mappedResultMap = new Map();\n                        resultMap.forEach((value, key) => {\n                            const mappedItem = this._getMappedItems([value]);\n                            mappedResultMap.set(key, mappedItem[0]);\n                        });\n                        return new this.FetchByKeysResults(this, updatedParams, mappedResultMap);\n                    }));\n                }\n                else {\n                    const options = new this.FetchListParameters(this, null, ListDataProviderView._DEFAULT_SIZE, null, null, fetchAttributes);\n                    const resultMap = new Map();\n                    const dataProviderAsyncIterator = this.dataProvider[ListDataProviderView._FETCHFIRST](options)[Symbol.asyncIterator]();\n                    return resolve(this._fetchNextSet(params, dataProviderAsyncIterator, resultMap).then((resultMap) => {\n                        const mappedResultMap = new Map();\n                        resultMap.forEach((value, key) => {\n                            const mappedItem = this._getMappedItems([value]);\n                            mappedResultMap.set(key, mappedItem[0]);\n                        });\n                        return new this.FetchByKeysResults(this, updatedParams, mappedResultMap);\n                    }));\n                }\n            });\n        }\n        fetchByOffset(params) {\n            const offset = params != null ? params[ListDataProviderView._OFFSET] : null;\n            const size = params != null ? params[ListDataProviderView._SIZE] : null;\n            let fetchAttributes = params != null ? params[ListDataProviderView._FETCHATTRIBUTES] : null;\n            if (fetchAttributes == null) {\n                fetchAttributes = this[ListDataProviderView._INTERNAL_FETCHATTRIBUTES];\n            }\n            let sortCriteria = params != null ? params[ListDataProviderView._SORTCRITERIA] : null;\n            if (sortCriteria == null) {\n                sortCriteria = this[ListDataProviderView._INTERNAL_SORTCRITERIA];\n            }\n            const mappedSortCriteria = this._getMappedSortCriteria(sortCriteria);\n            const filterCriterion = this._combineFilters(params);\n            const signal = params?.signal;\n            if (signal && signal.aborted) {\n                const reason = signal.reason;\n                return Promise.reject(new DOMException(reason, 'AbortError'));\n            }\n            return new Promise((resolve, reject) => {\n                if (signal) {\n                    const reason = signal.reason;\n                    signal.addEventListener('abort', (e) => {\n                        return reject(new DOMException(reason, 'AbortError'));\n                    });\n                }\n                const mappedFilterCriterion = this._getMappedFilterCriterion(filterCriterion);\n                const updatedParams = new this.FetchByOffsetParameters(this, offset, params, size, mappedSortCriteria, mappedFilterCriterion, fetchAttributes);\n                return resolve(this.dataProvider[ListDataProviderView._FETCHBYOFFSET](updatedParams).then((value) => {\n                    const resultArray = value[ListDataProviderView._RESULTS];\n                    const done = value[ListDataProviderView._DONE];\n                    const totalFilteredRowCount = value[ListDataProviderView._TOTALFILTEREDROWCOUNR];\n                    const mappedResultArray = new Array();\n                    resultArray.forEach((value) => {\n                        const mappedItem = this._getMappedItems([value]);\n                        mappedResultArray.push(mappedItem[0]);\n                    });\n                    return new this.FetchByOffsetResults(this, updatedParams, mappedResultArray, done, totalFilteredRowCount);\n                }));\n            });\n        }\n        fetchFirst(params) {\n            const cachedData = {};\n            cachedData[ListDataProviderView._ITEMS] = [];\n            cachedData[ListDataProviderView._DONE] = false;\n            cachedData[ListDataProviderView._STARTINDEX] = 0;\n            cachedData[ListDataProviderView._LASTDONEHASDATA] = false;\n            const size = params != null ? params[ListDataProviderView._SIZE] : null;\n            const signal = params?.signal;\n            let sortCriteria = params != null ? params[ListDataProviderView._SORTCRITERIA] : null;\n            if (sortCriteria == null) {\n                sortCriteria = this[ListDataProviderView._INTERNAL_SORTCRITERIA];\n            }\n            const mappedSortCriteria = this._getMappedSortCriteria(sortCriteria);\n            const filterCriterion = this._combineFilters(params);\n            const mappedFilterCriterion = this._getMappedFilterCriterion(filterCriterion);\n            let fetchAttributes = params != null ? params[ListDataProviderView._FETCHATTRIBUTES] : null;\n            if (fetchAttributes == null) {\n                fetchAttributes = this[ListDataProviderView._INTERNAL_FETCHATTRIBUTES];\n            }\n            if (this[ListDataProviderView._INTERNAL_FROM] == null &&\n                this[ListDataProviderView._INTERNAL_OFFSET] > 0) {\n                let offset = this[ListDataProviderView._INTERNAL_OFFSET];\n                return new this.AsyncIterable(this, new this.AsyncIterator(this, ((cachedData) => {\n                    return () => {\n                        const updatedParams = new this.FetchByOffsetParameters(this, offset, null, size, mappedSortCriteria, mappedFilterCriterion, fetchAttributes, signal);\n                        return this.dataProvider[ListDataProviderView._FETCHBYOFFSET](updatedParams).then((result) => {\n                            const results = result['results'];\n                            offset = offset + results.length;\n                            const mappedResult = this._getMappedItems(results);\n                            this._cacheResult(cachedData, mappedResult);\n                            cachedData[ListDataProviderView._DONE] = result[ListDataProviderView._DONE];\n                            const data = mappedResult.map((value) => {\n                                return value[ListDataProviderView._DATA];\n                            });\n                            const metadata = mappedResult.map((value) => {\n                                return value[ListDataProviderView._METADATA];\n                            });\n                            const resultFetchParams = result[ListDataProviderView._FETCHPARAMETERS];\n                            const resultSortCriteria = resultFetchParams != null\n                                ? resultFetchParams[ListDataProviderView._SORTCRITERIA]\n                                : null;\n                            const resultFilterCriterion = resultFetchParams != null\n                                ? resultFetchParams[ListDataProviderView._FILTERCRITERION]\n                                : null;\n                            const unmappedResultSortCriteria = this._getUnmappedSortCriteria(resultSortCriteria);\n                            const unmappedResultFilterCriterion = this._getUnmappedFilterCriterion(resultFilterCriterion);\n                            const resultParams = new this.FetchByOffsetParameters(this, this[ListDataProviderView._INTERNAL_OFFSET], null, size, unmappedResultSortCriteria, unmappedResultFilterCriterion);\n                            if (cachedData[ListDataProviderView._DONE]) {\n                                return Promise.resolve(new this.AsyncIteratorReturnResult(this, new this.FetchListResult(this, resultParams, data, metadata)));\n                            }\n                            return Promise.resolve(new this.AsyncIteratorYieldResult(this, new this.FetchListResult(this, resultParams, data, metadata)));\n                        });\n                    };\n                })(cachedData), params));\n            }\n            else {\n                const updatedParams = new this.FetchListParameters(this, params, size, mappedSortCriteria, mappedFilterCriterion, fetchAttributes, signal);\n                const cachedAsyncIterator = this.dataProvider[ListDataProviderView._FETCHFIRST](updatedParams)[Symbol.asyncIterator]();\n                return new this.AsyncIterable(this, new this.AsyncIterator(this, ((cachedData, cachedAsyncIterator) => {\n                    return () => {\n                        if (cachedData[ListDataProviderView._LASTDONEHASDATA]) {\n                            cachedData[ListDataProviderView._LASTDONEHASDATA] = false;\n                            return Promise.resolve(new this.AsyncIteratorReturnResult(this, new this.FetchListResult(this, params, [], [], this._totalFilteredRowCount)));\n                        }\n                        return cachedAsyncIterator.next().then((result) => {\n                            let resultValue = result[ListDataProviderView._VALUE];\n                            if (!resultValue) {\n                                resultValue = { data: [], metadata: [], fetchParameters: null };\n                            }\n                            const data = resultValue[ListDataProviderView._DATA];\n                            const totalFilteredRowCount = resultValue.totalFilteredRowCount;\n                            const metadata = resultValue[ListDataProviderView._METADATA];\n                            const items = data.map((value, index) => {\n                                return new this.Item(this, metadata[index], data[index]);\n                            });\n                            if (this._noFilterSupport) {\n                                this._filterResult(mappedFilterCriterion, items);\n                            }\n                            this._totalFilteredRowCount = totalFilteredRowCount;\n                            const mappedResult = this._getMappedItems(items);\n                            this._cacheResult(cachedData, mappedResult);\n                            cachedData[ListDataProviderView._DONE] = result[ListDataProviderView._DONE];\n                            const size = params != null ? params[ListDataProviderView._SIZE] : null;\n                            const offset = params != null ? params[ListDataProviderView._OFFSET] : null;\n                            const resultFetchParams = resultValue[ListDataProviderView._FETCHPARAMETERS];\n                            const resultSortCriteria = resultFetchParams != null\n                                ? resultFetchParams[ListDataProviderView._SORTCRITERIA]\n                                : null;\n                            const resultFilterCriterion = resultFetchParams != null\n                                ? resultFetchParams[ListDataProviderView._FILTERCRITERION]\n                                : null;\n                            const unmappedResultSortCriteria = this._getUnmappedSortCriteria(resultSortCriteria);\n                            const unmappedResultFilterCriterion = this._getUnmappedFilterCriterion(resultFilterCriterion);\n                            const resultParams = new this.FetchListParameters(this, params, size, unmappedResultSortCriteria, unmappedResultFilterCriterion);\n                            return this._fetchUntilKey(resultParams, this[ListDataProviderView._INTERNAL_FROM], cachedData, cachedAsyncIterator).then(() => {\n                                return this._fetchUntilOffset(resultParams, this[ListDataProviderView._INTERNAL_OFFSET] +\n                                    cachedData[ListDataProviderView._STARTINDEX], data.length, cachedData, cachedAsyncIterator, totalFilteredRowCount);\n                            });\n                        });\n                    };\n                })(cachedData, cachedAsyncIterator), params));\n            }\n        }\n        getCapability(capabilityName) {\n            return this.dataProvider.getCapability(capabilityName);\n        }\n        getTotalSize() {\n            return this.dataProvider.getTotalSize();\n        }\n        isEmpty() {\n            return this.dataProvider.isEmpty();\n        }\n        _fetchNextSet(params, dataProviderAsyncIterator, resultMap) {\n            return dataProviderAsyncIterator.next().then((result) => {\n                let value = result[ListDataProviderView._VALUE];\n                if (!value) {\n                    value = { data: [], metadata: [], fetchParameters: null };\n                }\n                const data = value[ListDataProviderView._DATA];\n                const metadata = value[ListDataProviderView._METADATA];\n                const keys = metadata.map((metadata) => {\n                    return metadata[ListDataProviderView._KEY];\n                });\n                let foundAllKeys = true;\n                params[ListDataProviderView._KEYS].forEach((findKey) => {\n                    if (!resultMap.has(findKey)) {\n                        keys.map((key, index) => {\n                            if (oj.Object.compareValues(key, findKey)) {\n                                resultMap.set(findKey, new this.Item(this, metadata[index], data[index]));\n                            }\n                        });\n                    }\n                    if (!resultMap.has(findKey)) {\n                        foundAllKeys = false;\n                    }\n                });\n                if (!foundAllKeys && !result[ListDataProviderView._DONE]) {\n                    return this._fetchNextSet(params, dataProviderAsyncIterator, resultMap);\n                }\n                else {\n                    return resultMap;\n                }\n            });\n        }\n        _fetchUntilKey(params, key, cachedData, cachedAsyncIterator) {\n            if (key != null) {\n                const resultItems = cachedData[ListDataProviderView._ITEMS].filter((resultItem) => {\n                    if (oj.KeyUtils.equals(resultItem[ListDataProviderView._METADATA][ListDataProviderView._KEY], key)) {\n                        return true;\n                    }\n                });\n                if (resultItems.length > 0) {\n                    const itemIndex = cachedData[ListDataProviderView._ITEMS].indexOf(resultItems[0]);\n                    cachedData[ListDataProviderView._ITEMS] = cachedData[ListDataProviderView._ITEMS].slice(itemIndex, cachedData[ListDataProviderView._ITEMS].length);\n                }\n                else if (!cachedData[ListDataProviderView._DONE]) {\n                    return cachedAsyncIterator.next().then((nextResult) => {\n                        let value = nextResult[ListDataProviderView._VALUE];\n                        if (!value) {\n                            value = { data: [], metadata: [], fetchParameters: null };\n                        }\n                        const data = value[ListDataProviderView._DATA];\n                        const metadata = value[ListDataProviderView._METADATA];\n                        const items = data.map((value, index) => {\n                            return new this.Item(this, metadata[index], data[index]);\n                        });\n                        const mappedResult = this._getMappedItems(items);\n                        this._cacheResult(cachedData, mappedResult);\n                        cachedData[ListDataProviderView._DONE] = nextResult[ListDataProviderView._DONE];\n                        return this._fetchUntilKey(nextResult[ListDataProviderView._FETCHPARAMETERS], mappedResult[ListDataProviderView._KEYS], cachedData, cachedAsyncIterator);\n                    });\n                }\n                else {\n                    cachedData[ListDataProviderView._ITEMS] = [];\n                }\n            }\n            return Promise.resolve(null);\n        }\n        _fetchUntilOffset(params, offset, resultSize, cachedData, cachedAsyncIterator, totalFilteredRowCount) {\n            const fetchSize = params != null\n                ? params[ListDataProviderView._SIZE] > 0\n                    ? params[ListDataProviderView._SIZE]\n                    : resultSize\n                : resultSize;\n            offset = offset > 0 ? offset : 0;\n            const cachedItems = cachedData[ListDataProviderView._ITEMS].slice(offset, offset + fetchSize);\n            if (this._noFilterSupport) {\n                const mappedFilterCriterion = this._getMappedFilterCriterion(params[ListDataProviderView._FILTERCRITERION]);\n                this._filterResult(mappedFilterCriterion, cachedItems);\n            }\n            if (params &&\n                params[ListDataProviderView._SIZE] > 0 &&\n                cachedItems.length < fetchSize &&\n                !cachedData[ListDataProviderView._DONE]) {\n                return cachedAsyncIterator.next().then((nextResult) => {\n                    let value = nextResult[ListDataProviderView._VALUE];\n                    if (!value) {\n                        value = { data: [], metadata: [], fetchParameters: null };\n                    }\n                    const data = value[ListDataProviderView._DATA];\n                    const metadata = value[ListDataProviderView._METADATA];\n                    const items = data.map((value, index) => {\n                        return new this.Item(this, metadata[index], data[index]);\n                    });\n                    if (this._noFilterSupport) {\n                        const mappedFilterCriterion = this._getMappedFilterCriterion(params[ListDataProviderView._FILTERCRITERION]);\n                        this._filterResult(mappedFilterCriterion, items);\n                    }\n                    if (nextResult.done && items.length > 0) {\n                        cachedData[ListDataProviderView._LASTDONEHASDATA] = true;\n                    }\n                    const mappedResult = this._getMappedItems(items);\n                    this._cacheResult(cachedData, mappedResult);\n                    cachedData[ListDataProviderView._DONE] = nextResult[ListDataProviderView._DONE];\n                    return this._fetchUntilOffset(params, offset, data.length, cachedData, cachedAsyncIterator, totalFilteredRowCount);\n                });\n            }\n            return this._createResultPromise(params, cachedData, cachedItems, totalFilteredRowCount);\n        }\n        _createResultPromise(params, cachedData, cachedItems, totalFilteredRowCount) {\n            cachedData[ListDataProviderView._STARTINDEX] =\n                cachedData[ListDataProviderView._STARTINDEX] + cachedItems.length;\n            const data = cachedItems.map((item) => {\n                return item[ListDataProviderView._DATA];\n            });\n            const metadata = cachedItems.map((item) => {\n                return item[ListDataProviderView._METADATA];\n            });\n            let isDone = false;\n            if (cachedData[ListDataProviderView._DONE]) {\n                if (data.length === 0) {\n                    isDone = true;\n                }\n            }\n            if (isDone) {\n                return Promise.resolve(new this.AsyncIteratorReturnResult(this, new this.FetchListResult(this, params, data, metadata, totalFilteredRowCount)));\n            }\n            return Promise.resolve(new this.AsyncIteratorYieldResult(this, new this.FetchListResult(this, params, data, metadata, totalFilteredRowCount)));\n        }\n        _cacheResult(cachedData, items) {\n            items.forEach((value) => {\n                cachedData[ListDataProviderView._ITEMS].push(value);\n            });\n        }\n        _filterResult(filterCriterion, items) {\n            if (filterCriterion) {\n                if (!filterCriterion.filter) {\n                    filterCriterion = ojdataprovider.FilterFactory.getFilter({ filterDef: filterCriterion });\n                }\n                let i = items.length - 1;\n                while (i >= 0) {\n                    if (!filterCriterion.filter(items[i][ListDataProviderView._DATA])) {\n                        items.splice(i, 1);\n                    }\n                    i--;\n                }\n            }\n        }\n        _getMappedItems(items) {\n            if (this[ListDataProviderView._INTERNAL_DATAMAPPING] != null) {\n                const mapFields = this[ListDataProviderView._INTERNAL_DATAMAPPING][ListDataProviderView._MAPFIELDS];\n                if (mapFields != null && items != null && items.length > 0) {\n                    const mappedItems = items.map((value) => {\n                        return mapFields.bind(this)(value);\n                    });\n                    return mappedItems;\n                }\n            }\n            return items;\n        }\n        _combineFilters(params) {\n            const filters = [];\n            let i = 0;\n            if (params != null && params[ListDataProviderView._FILTERCRITERION] != null) {\n                filters[i] = params[ListDataProviderView._FILTERCRITERION];\n                i++;\n            }\n            if (this[ListDataProviderView._INTERNAL_FILTERCRITERION] != null) {\n                filters[i] = this[ListDataProviderView._INTERNAL_FILTERCRITERION];\n            }\n            let filterCriterion;\n            if (filters.length == 0) {\n                filterCriterion = null;\n            }\n            else if (filters.length == 1) {\n                filterCriterion = filters[0];\n            }\n            else {\n                filterCriterion = ojdataprovider.FilterFactory.getFilter({ filterDef: { op: '$and', criteria: filters } });\n            }\n            return filterCriterion;\n        }\n        _getMappedFilterCriterion(filterCriterion) {\n            if (this[ListDataProviderView._INTERNAL_DATAMAPPING] != null) {\n                const mappedFilterCriterion = this[ListDataProviderView._INTERNAL_DATAMAPPING][ListDataProviderView._MAPFILTERCRITERION];\n                if (mappedFilterCriterion != null && filterCriterion != null) {\n                    return mappedFilterCriterion(filterCriterion);\n                }\n            }\n            return filterCriterion;\n        }\n        _getMappedSortCriteria(sortCriteria) {\n            if (this[ListDataProviderView._INTERNAL_DATAMAPPING] != null) {\n                const mapSortCriteria = this[ListDataProviderView._INTERNAL_DATAMAPPING][ListDataProviderView._MAPSORTCRITERIA];\n                if (mapSortCriteria != null && sortCriteria != null && sortCriteria.length > 0) {\n                    return mapSortCriteria(sortCriteria);\n                }\n            }\n            return sortCriteria;\n        }\n        _getUnmappedSortCriteria(sortCriteria) {\n            if (this[ListDataProviderView._INTERNAL_DATAMAPPING] != null) {\n                const unmapSortCriteria = this[ListDataProviderView._INTERNAL_DATAMAPPING][ListDataProviderView._UNMAPSORTCRITERIA];\n                if (unmapSortCriteria != null && sortCriteria != null && sortCriteria.length > 0) {\n                    return unmapSortCriteria(sortCriteria);\n                }\n            }\n            return sortCriteria;\n        }\n        _getUnmappedFilterCriterion(filter) {\n            if (this[ListDataProviderView._INTERNAL_DATAMAPPING] != null) {\n                const unmapFilterCriterion = this[ListDataProviderView._INTERNAL_DATAMAPPING][ListDataProviderView._UNMAPFILTERCRITERION];\n                if (unmapFilterCriterion != null && filter != null) {\n                    return unmapFilterCriterion(filter);\n                }\n            }\n            return filter;\n        }\n        _addEventListeners(dataprovider) {\n            dataprovider[ListDataProviderView._ADDEVENTLISTENER](ListDataProviderView._REFRESH, (event) => {\n                this.dispatchEvent(event);\n            });\n            dataprovider[ListDataProviderView._ADDEVENTLISTENER](ListDataProviderView._MUTATE, (event) => {\n                this.dispatchEvent(event);\n            });\n        }\n    }\n    ListDataProviderView._KEY = 'key';\n    ListDataProviderView._KEYS = 'keys';\n    ListDataProviderView._DATA = 'data';\n    ListDataProviderView._STARTINDEX = 'startIndex';\n    ListDataProviderView._SORT = 'sort';\n    ListDataProviderView._INTERNAL_SORTCRITERIA = '_sortCriteria';\n    ListDataProviderView._SORTCRITERIA = 'sortCriteria';\n    ListDataProviderView._INTERNAL_FILTERCRITERION = '_filterCriterion';\n    ListDataProviderView._FILTERCRITERION = 'filterCriterion';\n    ListDataProviderView._METADATA = 'metadata';\n    ListDataProviderView._ITEMS = 'items';\n    ListDataProviderView._INTERNAL_FROM = '_from';\n    ListDataProviderView._INTERNAL_OFFSET = '_offset';\n    ListDataProviderView._FROM = 'from';\n    ListDataProviderView._OFFSET = 'offset';\n    ListDataProviderView._REFRESH = 'refresh';\n    ListDataProviderView._MUTATE = 'mutate';\n    ListDataProviderView._SIZE = 'size';\n    ListDataProviderView._FETCHPARAMETERS = 'fetchParameters';\n    ListDataProviderView._VALUE = 'value';\n    ListDataProviderView._DONE = 'done';\n    ListDataProviderView._LASTDONEHASDATA = 'lastDoneHasData';\n    ListDataProviderView._INTERNAL_DATAMAPPING = '_dataMapping';\n    ListDataProviderView._DATAMAPPING = 'dataMapping';\n    ListDataProviderView._MAPFIELDS = 'mapFields';\n    ListDataProviderView._MAPSORTCRITERIA = 'mapSortCriteria';\n    ListDataProviderView._MAPFILTERCRITERION = 'mapFilterCriterion';\n    ListDataProviderView._UNMAPSORTCRITERIA = 'unmapSortCriteria';\n    ListDataProviderView._UNMAPFILTERCRITERION = 'unmapFilterCriterion';\n    ListDataProviderView._RESULTS = 'results';\n    ListDataProviderView._CONTAINSPARAMETERS = 'containsParameters';\n    ListDataProviderView._DEFAULT_SIZE = 25;\n    ListDataProviderView._CONTAINSKEYS = 'containsKeys';\n    ListDataProviderView._FETCHBYKEYS = 'fetchByKeys';\n    ListDataProviderView._FETCHBYOFFSET = 'fetchByOffset';\n    ListDataProviderView._FETCHFIRST = 'fetchFirst';\n    ListDataProviderView._ADDEVENTLISTENER = 'addEventListener';\n    ListDataProviderView._INTERNAL_FETCHATTRIBUTES = '_attributes';\n    ListDataProviderView._FETCHATTRIBUTES = 'attributes';\n    ListDataProviderView._TOTALFILTEREDROWCOUNR = 'totalFilteredRowCount';\n    ListDataProviderView._SIGNAL = 'signal';\n    ojeventtarget.EventTargetMixin.applyMixin(ListDataProviderView);\n    oj._registerLegacyNamespaceProp('ListDataProviderView', ListDataProviderView);\n\n    return ListDataProviderView;\n\n});\n","/**\n * @license\n * Copyright (c) 2014, 2023, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\ndefine(['exports', 'ojs/ojcore-base', 'ojs/ojconfig', 'ojL10n!ojtranslations/nls/localeElements', 'ojs/ojcalendarutils'], function (exports, oj, Config, ojldimport, ojcalendarutils) { 'use strict';\n\n  oj = oj && Object.prototype.hasOwnProperty.call(oj, 'default') ? oj['default'] : oj;\n  ojldimport = ojldimport && Object.prototype.hasOwnProperty.call(ojldimport, 'default') ? ojldimport['default'] : ojldimport;\n\n  var ojld = ojldimport;\n\n  /**\n   * @namespace oj.LocaleData\n   * @classdesc Locale Data Services\n   * @export\n   * @since 0.6.0\n   * @ojtsmodule\n   * @hideconstructor\n   */\n  const LocaleData = {};\n\n  oj._registerLegacyNamespaceProp('LocaleData', LocaleData);\n\n  /**\n   * Sets the Locale Elements bundle used by JET\n   * If an AMD loader (such as Require.js) is not present, this method should be called by the application to provide\n   * a Locale Elements for JET.\n   * This method may also be used by an application that wants to completely replace the Locale Elements bundle that is automatically\n   * fetched by an AMD loader.\n   * @param {Object} bundle resource bundle that should be used by the framework\n   * @return {void}\n   * @export\n   * @method setBundle\n   * @memberof oj.LocaleData\n   */\n  LocaleData.setBundle = function (bundle) {\n    LocaleData._bundle = bundle;\n  };\n\n  /**\n   * Retrieves the first day of week for the current locale's region\n   * @return {number} a numeric representation of the first week day of the week:\n   * 0 for Sunday, 1 for Monday, etc.\n   * @export\n   * @method getFirstDayOfWeek\n   * @memberof oj.LocaleData\n   */\n  LocaleData.getFirstDayOfWeek = function () {\n    return LocaleData._getWeekData('firstDay');\n  };\n\n  /**\n   * Retrieves the first weekend day for the current locale's region\n   * @return {number} a numeric representation of the first weekend day:\n   * 0 for Sunday, 1 for Monday, etc.\n   * @export\n   * @method getWeekendStart\n   * @memberof oj.LocaleData\n   */\n  LocaleData.getWeekendStart = function () {\n    return LocaleData._getWeekData('weekendStart');\n  };\n\n  /**\n   * Retrieves the last weekend day for the current locale's region\n   * @return {number} a numeric representation of the last weekend day:\n   * 0 for Sunday, 1 for Monday, etc.\n   * @export\n   * @method getWeekendEnd\n   * @memberof oj.LocaleData\n   */\n  LocaleData.getWeekendEnd = function () {\n    return LocaleData._getWeekData('weekendEnd');\n  };\n\n  /**\n   * Retrieves locale-specific names of the days of the week\n   * @return {Array.<string>} names of the days from Sunday through Sturday\n   * @param {string} [type] - the type of the name. Currently, \"abbreviated\", \"narrow\" and \"wide\" are supported\n   * @ojsignature { target:\"Type\", for: \"type\", value: \"'abbreviated'|'narrow'|'wide'\"}\n   * @export\n   * @method getDayNames\n   * @memberof oj.LocaleData\n   */\n  LocaleData.getDayNames = function (type) {\n    if (type == null || (type !== 'abbreviated' && type !== 'narrow')) {\n      // eslint-disable-next-line no-param-reassign\n      type = 'wide';\n    }\n    var days = LocaleData._getCalendarData().days['stand-alone'][type];\n\n    return [days.sun, days.mon, days.tue, days.wed, days.thu, days.fri, days.sat];\n  };\n\n  /**\n   * Retrieves locale-specific names of months\n   * @return {Array.<string>} names of months from January through December\n   * @param {string} [type] - the type of the name. Currently, \"abbreviated\", \"narrow\" and \"wide\" are supported\n   * @ojsignature { target:\"Type\", for: \"type\", value: \"'abbreviated'|'narrow'|'wide'\"}\n   * @export\n   * @method getMonthNames\n   * @memberof oj.LocaleData\n   */\n  LocaleData.getMonthNames = function (type) {\n    if (type == null || (type !== 'abbreviated' && type !== 'narrow')) {\n      // eslint-disable-next-line no-param-reassign\n      type = 'wide';\n    }\n    var months = LocaleData._getCalendarData().months['stand-alone'][type];\n\n    return [\n      months['1'],\n      months['2'],\n      months['3'],\n      months['4'],\n      months['5'],\n      months['6'],\n      months['7'],\n      months['8'],\n      months['9'],\n      months['10'],\n      months['11'],\n      months['12']\n    ];\n  };\n\n  /**\n   * Retrieves whether month is displayed prior to year\n   * @return {boolean} whether month is prior to year\n   * @export\n   * @method isMonthPriorToYear\n   * @memberof oj.LocaleData\n   * @ojdeprecated [{since: \"11.0.0\", description: \"This is used internally by the oj-date-picker component,\n   *  and should not be called by application code. If the functionality is needed, use Intl.DateTimeFormat.formatToParts\n   *  instead which returns the formatted pieces in order.\"}]\n   */\n  LocaleData.isMonthPriorToYear = function () {\n    var options = { dateStyle: 'long' };\n    var locale = Config.getLocale();\n    var d = new Date();\n    var intlFormatter = new Intl.DateTimeFormat(locale, options);\n    var parts = intlFormatter.formatToParts(d);\n    var monthIndex = parts.findIndex((obj) => obj.type === 'month');\n    var yearIndex = parts.findIndex((obj) => obj.type === 'year');\n    return monthIndex < yearIndex;\n  };\n\n  /**\n   * @hidden\n   * @private\n   */\n  LocaleData._getWeekData = function (key) {\n    var b = LocaleData.__getBundle();\n    var defRegion = '001';\n    var region = LocaleData._getRegion() || defRegion;\n\n    var data = b.supplemental.weekData[key];\n\n    var val = data[region];\n\n    if (val === undefined) {\n      val = data[defRegion];\n    }\n\n    return val;\n  };\n\n  /**\n   * @hidden\n   * @private\n   */\n  LocaleData._getCalendarData = function () {\n    var locale = Config.getLocale();\n    var cal = ojcalendarutils.CalendarUtils.getCalendar(locale, 'gregory');\n    return cal;\n  };\n\n  /**\n   * @hidden\n   * @private\n   */\n  LocaleData._getRegion = function () {\n    var locale = Config.getLocale();\n    if (locale) {\n      var tokens = locale.toUpperCase().split(/-|_/);\n      if (tokens.length >= 2) {\n        var tag = tokens[1];\n        if (tag.length === 4) {\n          // this is a script tag\n          if (tokens.length >= 3) {\n            return tokens[2];\n          }\n        } else {\n          return tag;\n        }\n      }\n    }\n    // try default region\n    var b = LocaleData.__getBundle();\n    var regions = b.supplemental.defaultRegion;\n    return regions[locale];\n  };\n\n  /**\n   * @hidden\n   * @private\n   */\n  LocaleData.__getBundle = function () {\n    var b = LocaleData._bundle;\n    if (b) {\n      return b;\n    }\n    return ojld;\n  };\n\n  /**\n   * Called from oj.Config after AMD loader fetches LocaleElements for the new locale.\n   *\n   * @hidden\n   * @private\n   *\n   */\n  LocaleData.__updateBundle = function (bundle) {\n    ojld = bundle;\n  };\n\n  const getDayNames = LocaleData.getDayNames;\n  const getFirstDayOfWeek = LocaleData.getFirstDayOfWeek;\n  const getMonthNames = LocaleData.getMonthNames;\n  const getWeekendEnd = LocaleData.getWeekendEnd;\n  const getWeekendStart = LocaleData.getWeekendStart;\n  const isMonthPriorToYear = LocaleData.isMonthPriorToYear;\n  const setBundle = LocaleData.setBundle;\n  const __getBundle = LocaleData.__getBundle;\n  const _getCalendarData = LocaleData._getCalendarData;\n\n  exports.__getBundle = __getBundle;\n  exports._getCalendarData = _getCalendarData;\n  exports.getDayNames = getDayNames;\n  exports.getFirstDayOfWeek = getFirstDayOfWeek;\n  exports.getMonthNames = getMonthNames;\n  exports.getWeekendEnd = getWeekendEnd;\n  exports.getWeekendStart = getWeekendStart;\n  exports.isMonthPriorToYear = isMonthPriorToYear;\n  exports.setBundle = setBundle;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n});\n","/**\n * @license\n * Copyright (c) 2014, 2023, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\ndefine(['exports', 'preact/jsx-runtime', 'ojs/ojtranslation', 'ojs/ojvcomponent', 'preact', 'ojs/ojdomutils'], function (exports, jsxRuntime, Translations, ojvcomponent, preact, DomUtils) { 'use strict';\n\n    var __decorate = (null && null.__decorate) || function (decorators, target, key, desc) {\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\n    };\n    exports.Selector = class Selector extends preact.Component {\n        constructor(props) {\n            super(props);\n            this._handleFocusin = (event) => {\n                this.setState({ focus: true });\n            };\n            this._handleFocusout = (event) => {\n                this.setState({ focus: false });\n            };\n            this._checkboxListener = (event) => {\n                const { selectedKeys, rowKey, selectionMode } = this.props;\n                let newSelectedKeys;\n                if (selectedKeys != null) {\n                    if (event.target.checked) {\n                        if (selectionMode === 'multiple') {\n                            newSelectedKeys = selectedKeys.add([rowKey]);\n                        }\n                        else if (selectionMode === 'all') {\n                            newSelectedKeys = selectedKeys.addAll();\n                        }\n                        else if (selectionMode === 'single' && !selectedKeys.has(rowKey)) {\n                            newSelectedKeys = selectedKeys.clear().add([rowKey]);\n                        }\n                    }\n                    else {\n                        if (selectionMode === 'all') {\n                            newSelectedKeys = selectedKeys.clear();\n                        }\n                        else {\n                            newSelectedKeys = selectedKeys.delete([rowKey]);\n                        }\n                    }\n                    this.props.onSelectedKeysChanged?.(newSelectedKeys);\n                    this.props.onIndeterminateChanged?.(false);\n                }\n            };\n            this.state = {\n                focus: false\n            };\n        }\n        render(props, state) {\n            const { rowKey, indeterminate } = props;\n            const isSelected = this._isSelected(rowKey);\n            let spanClass = 'oj-selector-wrapper oj-component-icon';\n            if (indeterminate) {\n                spanClass += ' oj-indeterminate';\n            }\n            else if (isSelected) {\n                spanClass += ' oj-selected';\n            }\n            if (state.focus && !DomUtils.recentPointer()) {\n                spanClass += ' oj-focus-highlight';\n            }\n            const ariaLabelledby = props['aria-labelledby'] || null;\n            const ariaLabel = props['aria-label'] == null || props['aria-label']?.trim() == ''\n                ? null\n                : props['aria-label'] +\n                    (isSelected\n                        ? Translations.getTranslatedString('oj-ojSelector.checkboxAriaLabelSelected')\n                        : Translations.getTranslatedString('oj-ojSelector.checkboxAriaLabelUnselected'));\n            return (jsxRuntime.jsx(ojvcomponent.Root, { class: \"oj-selector\", children: jsxRuntime.jsx(\"span\", { class: spanClass, children: jsxRuntime.jsx(\"input\", { type: \"checkbox\", class: \"oj-selectorbox\", \"data-oj-clickthrough\": \"disabled\", \"aria-label\": ariaLabel, \"aria-labelledby\": ariaLabelledby, checked: isSelected, onfocusin: this._handleFocusin, onfocusout: this._handleFocusout, onClick: this._checkboxListener }) }) }));\n        }\n        _isSelected(rowKey) {\n            const { selectedKeys, selectionMode } = this.props;\n            if (!selectedKeys) {\n                return false;\n            }\n            return selectionMode === 'all' ? selectedKeys.isAddAll() : selectedKeys.has(rowKey);\n        }\n    };\n    exports.Selector.defaultProps = {\n        rowKey: null,\n        indeterminate: false,\n        selectedKeys: null,\n        selectionMode: 'multiple'\n    };\n    exports.Selector._metadata = { \"properties\": { \"rowKey\": { \"type\": \"any\" }, \"indeterminate\": { \"type\": \"boolean\", \"writeback\": true }, \"selectedKeys\": { \"type\": \"object\", \"writeback\": true }, \"selectionMode\": { \"type\": \"string\", \"enumValues\": [\"all\", \"multiple\", \"single\"] } }, \"extension\": { \"_WRITEBACK_PROPS\": [\"selectedKeys\", \"indeterminate\"], \"_READ_ONLY_PROPS\": [], \"_OBSERVED_GLOBAL_PROPS\": [\"aria-label\", \"aria-labelledby\"] } };\n    exports.Selector = __decorate([\n        ojvcomponent.customElement('oj-selector')\n    ], exports.Selector);\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n});\n","/**\n * @license\n * Copyright (c) 2014, 2023, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\ndefine(['touchr', 'ojdnd', 'ojs/ojeditablevalue', 'ojs/ojinputnumber', 'ojs/ojmenu', 'ojs/ojpopup', 'ojs/ojdialog', 'ojs/ojbutton', 'ojs/ojdatasource-common', 'ojs/ojdataprovideradapter', 'ojs/ojlistdataproviderview', 'ojs/ojselector', 'ojs/ojcore-base', 'jquery', 'ojs/ojdomutils', 'ojs/ojlogger', 'ojs/ojcontext', 'ojs/ojconfig', 'ojs/ojtranslation', 'ojs/ojthemeutils', 'ojs/ojcomponentcore', 'ojs/ojdatacollection-common', 'ojs/ojanimation', 'ojs/ojdomscroller', 'ojs/ojcustomelement-utils', '@oracle/oraclejet-preact/hooks/UNSAFE_useFormVariantContext', 'ojs/ojkeyset', 'ojs/ojvalidator-regexp', 'ojs/ojkeyboardfocus-utils'], function (touchr, ojdnd, ojeditablevalue, ojinputnumber, ojmenu, ojpopup, ojdialog, ojbutton, ojdatasourceCommon, ojdataprovideradapter, ListDataProviderView, ojselector, oj, $, DomUtils, Logger, Context, Config, ojtranslation, ThemeUtils, ojcomponentcore, DataCollectionUtils, ojanimation, DomScroller, ojcustomelementUtils, UNSAFE_useFormVariantContext, ojkeyset, RegExpValidator, ojkeyboardfocusUtils) { 'use strict';\n\n  ListDataProviderView = ListDataProviderView && Object.prototype.hasOwnProperty.call(ListDataProviderView, 'default') ? ListDataProviderView['default'] : ListDataProviderView;\n  oj = oj && Object.prototype.hasOwnProperty.call(oj, 'default') ? oj['default'] : oj;\n  $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n  Context = Context && Object.prototype.hasOwnProperty.call(Context, 'default') ? Context['default'] : Context;\n  DomScroller = DomScroller && Object.prototype.hasOwnProperty.call(DomScroller, 'default') ? DomScroller['default'] : DomScroller;\n  RegExpValidator = RegExpValidator && Object.prototype.hasOwnProperty.call(RegExpValidator, 'default') ? RegExpValidator['default'] : RegExpValidator;\n\n  // eslint-disable-next-line wrap-iife\n  (function () {\nvar __oj_table_metadata = \n{\n  \"properties\": {\n    \"accessibility\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"rowHeader\": {\n          \"type\": \"string|Array<string>\"\n        }\n      }\n    },\n    \"addRowDisplay\": {\n      \"type\": \"string\",\n      \"enumValues\": [\n        \"hidden\",\n        \"top\"\n      ],\n      \"value\": \"top\"\n    },\n    \"as\": {\n      \"type\": \"string\",\n      \"value\": \"\"\n    },\n    \"columns\": {\n      \"type\": \"Array<Object>\",\n      \"writeback\": true\n    },\n    \"columnsDefault\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"className\": {\n          \"type\": \"string\"\n        },\n        \"field\": {\n          \"type\": \"string\"\n        },\n        \"footerClassName\": {\n          \"type\": \"string\"\n        },\n        \"footerRenderer\": {\n          \"type\": \"function\"\n        },\n        \"footerStyle\": {\n          \"type\": \"string\"\n        },\n        \"footerTemplate\": {\n          \"type\": \"string\"\n        },\n        \"headerClassName\": {\n          \"type\": \"string\"\n        },\n        \"headerRenderer\": {\n          \"type\": \"function\"\n        },\n        \"headerStyle\": {\n          \"type\": \"string\"\n        },\n        \"headerTemplate\": {\n          \"type\": \"string\"\n        },\n        \"headerText\": {\n          \"type\": \"string\"\n        },\n        \"maxWidth\": {\n          \"type\": \"string|number\"\n        },\n        \"minWidth\": {\n          \"type\": \"string|number\",\n          \"value\": \"auto\"\n        },\n        \"renderer\": {\n          \"type\": \"function\"\n        },\n        \"resizable\": {\n          \"type\": \"string\",\n          \"enumValues\": [\n            \"disabled\",\n            \"enabled\"\n          ],\n          \"value\": \"disabled\"\n        },\n        \"showRequired\": {\n          \"type\": \"boolean\",\n          \"value\": false\n        },\n        \"sortProperty\": {\n          \"type\": \"string\"\n        },\n        \"sortable\": {\n          \"type\": \"string\",\n          \"enumValues\": [\n            \"auto\",\n            \"disabled\",\n            \"enabled\"\n          ],\n          \"value\": \"auto\"\n        },\n        \"style\": {\n          \"type\": \"string\"\n        },\n        \"template\": {\n          \"type\": \"string\"\n        },\n        \"weight\": {\n          \"type\": \"number\",\n          \"value\": 1\n        },\n        \"width\": {\n          \"type\": \"string|number\"\n        }\n      }\n    },\n    \"currentRow\": {\n      \"type\": \"object\",\n      \"writeback\": true\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"extension\": {\n        \"webelement\": {\n          \"exceptionStatus\": [\n            {\n              \"type\": \"unsupported\",\n              \"since\": \"13.0.0\",\n              \"description\": \"Data sets from a DataProvider cannot be sent to WebDriverJS; use ViewModels or page variables instead.\"\n            }\n          ]\n        }\n      }\n    },\n    \"display\": {\n      \"type\": \"string\",\n      \"enumValues\": [\n        \"grid\",\n        \"list\"\n      ],\n      \"value\": \"list\"\n    },\n    \"dnd\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"drag\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"rows\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"dataTypes\": {\n                  \"type\": \"string|Array<string>\"\n                },\n                \"drag\": {\n                  \"type\": \"function\"\n                },\n                \"dragEnd\": {\n                  \"type\": \"function\"\n                },\n                \"dragStart\": {\n                  \"type\": \"function\"\n                }\n              }\n            }\n          }\n        },\n        \"drop\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"columns\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"dataTypes\": {\n                  \"type\": \"string|Array<string>\"\n                },\n                \"dragEnter\": {\n                  \"type\": \"function\"\n                },\n                \"dragLeave\": {\n                  \"type\": \"function\"\n                },\n                \"dragOver\": {\n                  \"type\": \"function\"\n                },\n                \"drop\": {\n                  \"type\": \"function\"\n                }\n              }\n            },\n            \"rows\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"dataTypes\": {\n                  \"type\": \"string|Array<string>\"\n                },\n                \"dragEnter\": {\n                  \"type\": \"function\"\n                },\n                \"dragLeave\": {\n                  \"type\": \"function\"\n                },\n                \"dragOver\": {\n                  \"type\": \"function\"\n                },\n                \"drop\": {\n                  \"type\": \"function\"\n                }\n              }\n            }\n          }\n        },\n        \"reorder\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"columns\": {\n              \"type\": \"string\",\n              \"enumValues\": [\n                \"disabled\",\n                \"enabled\"\n              ],\n              \"value\": \"disabled\"\n            }\n          }\n        }\n      }\n    },\n    \"editMode\": {\n      \"type\": \"string\",\n      \"enumValues\": [\n        \"none\",\n        \"rowEdit\"\n      ],\n      \"value\": \"none\"\n    },\n    \"editRow\": {\n      \"type\": \"object\",\n      \"writeback\": true,\n      \"value\": {\n        \"rowKey\": null,\n        \"rowIndex\": -1\n      }\n    },\n    \"firstSelectedRow\": {\n      \"type\": \"object\",\n      \"writeback\": true,\n      \"readOnly\": true,\n      \"value\": {\n        \"key\": null,\n        \"data\": null\n      },\n      \"properties\": {\n        \"data\": {\n          \"type\": \"any\"\n        },\n        \"key\": {\n          \"type\": \"any\"\n        }\n      }\n    },\n    \"horizontalGridVisible\": {\n      \"type\": \"string\",\n      \"enumValues\": [\n        \"auto\",\n        \"disabled\",\n        \"enabled\"\n      ],\n      \"value\": \"auto\"\n    },\n    \"layout\": {\n      \"type\": \"string\",\n      \"enumValues\": [\n        \"contents\",\n        \"fixed\"\n      ],\n      \"value\": \"contents\"\n    },\n    \"row\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"editable\": {\n          \"type\": \"function\"\n        },\n        \"selectable\": {\n          \"type\": \"function\"\n        },\n        \"sticky\": {\n          \"type\": \"function\"\n        }\n      }\n    },\n    \"rowRenderer\": {\n      \"type\": \"function\"\n    },\n    \"scrollPolicy\": {\n      \"type\": \"string\",\n      \"enumValues\": [\n        \"auto\",\n        \"loadAll\",\n        \"loadMoreOnScroll\"\n      ],\n      \"value\": \"auto\"\n    },\n    \"scrollPolicyOptions\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"fetchSize\": {\n          \"type\": \"number\",\n          \"value\": 25\n        },\n        \"maxCount\": {\n          \"type\": \"number\",\n          \"value\": 500\n        },\n        \"scroller\": {\n          \"type\": \"string\"\n        },\n        \"scrollerOffsetBottom\": {\n          \"type\": \"number\"\n        },\n        \"scrollerOffsetEnd\": {\n          \"type\": \"number\"\n        },\n        \"scrollerOffsetStart\": {\n          \"type\": \"number\"\n        },\n        \"scrollerOffsetTop\": {\n          \"type\": \"number\"\n        }\n      }\n    },\n    \"scrollPosition\": {\n      \"type\": \"object\",\n      \"writeback\": true,\n      \"value\": {\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"properties\": {\n        \"columnIndex\": {\n          \"type\": \"number\"\n        },\n        \"columnKey\": {\n          \"type\": \"any\"\n        },\n        \"offsetX\": {\n          \"type\": \"number\"\n        },\n        \"offsetY\": {\n          \"type\": \"number\"\n        },\n        \"rowIndex\": {\n          \"type\": \"number\"\n        },\n        \"rowKey\": {\n          \"type\": \"any\"\n        },\n        \"x\": {\n          \"type\": \"number\"\n        },\n        \"y\": {\n          \"type\": \"number\"\n        }\n      }\n    },\n    \"scrollToKey\": {\n      \"type\": \"string\",\n      \"enumValues\": [\n        \"always\",\n        \"auto\",\n        \"capability\",\n        \"never\"\n      ],\n      \"value\": \"auto\"\n    },\n    \"selectAllControl\": {\n      \"type\": \"string\",\n      \"enumValues\": [\n        \"hidden\",\n        \"visible\"\n      ],\n      \"value\": \"visible\"\n    },\n    \"selected\": {\n      \"type\": \"object\",\n      \"writeback\": true,\n      \"properties\": {\n        \"column\": {\n          \"type\": \"KeySet\",\n          \"writeback\": true\n        },\n        \"row\": {\n          \"type\": \"KeySet\",\n          \"writeback\": true\n        }\n      }\n    },\n    \"selection\": {\n      \"type\": \"Array<Object>\",\n      \"writeback\": true,\n      \"value\": []\n    },\n    \"selectionMode\": {\n      \"type\": \"Object<string, string>\",\n      \"properties\": {\n        \"column\": {\n          \"type\": \"string\",\n          \"enumValues\": [\n            \"multiple\",\n            \"none\",\n            \"single\"\n          ]\n        },\n        \"row\": {\n          \"type\": \"string\",\n          \"enumValues\": [\n            \"multiple\",\n            \"none\",\n            \"single\"\n          ]\n        }\n      }\n    },\n    \"selectionRequired\": {\n      \"type\": \"boolean\",\n      \"value\": false\n    },\n    \"translations\": {\n      \"type\": \"object\",\n      \"value\": {},\n      \"properties\": {\n        \"accessibleAddRow\": {\n          \"type\": \"string\"\n        },\n        \"accessibleColumnContext\": {\n          \"type\": \"string\"\n        },\n        \"accessibleColumnFooterContext\": {\n          \"type\": \"string\"\n        },\n        \"accessibleColumnHeaderContext\": {\n          \"type\": \"string\"\n        },\n        \"accessibleColumnsSpan\": {\n          \"type\": \"string\"\n        },\n        \"accessibleContainsControls\": {\n          \"type\": \"string\"\n        },\n        \"accessibleRowContext\": {\n          \"type\": \"string\"\n        },\n        \"accessibleSortAscending\": {\n          \"type\": \"string\"\n        },\n        \"accessibleSortDescending\": {\n          \"type\": \"string\"\n        },\n        \"accessibleSortable\": {\n          \"type\": \"string\"\n        },\n        \"accessibleStateSelected\": {\n          \"type\": \"string\"\n        },\n        \"accessibleStateUnselected\": {\n          \"type\": \"string\"\n        },\n        \"accessibleSummaryEstimate\": {\n          \"type\": \"string\"\n        },\n        \"accessibleSummaryExact\": {\n          \"type\": \"string\"\n        },\n        \"editableSummary\": {\n          \"type\": \"string\"\n        },\n        \"labelAccSelectionAffordanceBottom\": {\n          \"type\": \"string\"\n        },\n        \"labelAccSelectionAffordanceTop\": {\n          \"type\": \"string\"\n        },\n        \"labelColumnWidth\": {\n          \"type\": \"string\"\n        },\n        \"labelDisableNonContiguousSelection\": {\n          \"type\": \"string\"\n        },\n        \"labelEditRow\": {\n          \"type\": \"string\"\n        },\n        \"labelEnableNonContiguousSelection\": {\n          \"type\": \"string\"\n        },\n        \"labelResize\": {\n          \"type\": \"string\"\n        },\n        \"labelResizeColumn\": {\n          \"type\": \"string\"\n        },\n        \"labelResizeColumnDialog\": {\n          \"type\": \"string\"\n        },\n        \"labelResizeDialogApply\": {\n          \"type\": \"string\"\n        },\n        \"labelResizePopupCancel\": {\n          \"type\": \"string\"\n        },\n        \"labelResizePopupSpinner\": {\n          \"type\": \"string\"\n        },\n        \"labelResizePopupSubmit\": {\n          \"type\": \"string\"\n        },\n        \"labelSelectAllRows\": {\n          \"type\": \"string\"\n        },\n        \"labelSelectAndEditRow\": {\n          \"type\": \"string\"\n        },\n        \"labelSelectColum\": {\n          \"type\": \"string\"\n        },\n        \"labelSelectRow\": {\n          \"type\": \"string\"\n        },\n        \"labelSort\": {\n          \"type\": \"string\"\n        },\n        \"labelSortAsc\": {\n          \"type\": \"string\"\n        },\n        \"labelSortDsc\": {\n          \"type\": \"string\"\n        },\n        \"msgColumnResizeWidthValidation\": {\n          \"type\": \"string\"\n        },\n        \"msgFetchingData\": {\n          \"type\": \"string\"\n        },\n        \"msgInitializing\": {\n          \"type\": \"string\"\n        },\n        \"msgNoData\": {\n          \"type\": \"string\"\n        },\n        \"msgScrollPolicyMaxCountDetail\": {\n          \"type\": \"string\"\n        },\n        \"msgScrollPolicyMaxCountSummary\": {\n          \"type\": \"string\"\n        },\n        \"msgStatusSortAscending\": {\n          \"type\": \"string\"\n        },\n        \"msgStatusSortDescending\": {\n          \"type\": \"string\"\n        },\n        \"tooltipRequired\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"verticalGridVisible\": {\n      \"type\": \"string\",\n      \"enumValues\": [\n        \"auto\",\n        \"disabled\",\n        \"enabled\"\n      ],\n      \"value\": \"auto\"\n    }\n  },\n  \"methods\": {\n    \"getContextByNode\": {},\n    \"getDataForVisibleRow\": {},\n    \"getProperty\": {},\n    \"refresh\": {},\n    \"refreshRow\": {},\n    \"setProperties\": {},\n    \"setProperty\": {},\n    \"getNodeBySubId\": {},\n    \"getSubIdByNode\": {}\n  },\n  \"events\": {\n    \"ojAnimateEnd\": {},\n    \"ojAnimateStart\": {},\n    \"ojBeforeCurrentRow\": {},\n    \"ojBeforeRowAddEnd\": {},\n    \"ojBeforeRowEdit\": {},\n    \"ojBeforeRowEditEnd\": {},\n    \"ojRowAction\": {},\n    \"ojSort\": {}\n  },\n  \"extension\": {}\n};\n    __oj_table_metadata.extension._WIDGET_NAME = 'ojTable';\n    __oj_table_metadata.extension._INNER_ELEM = 'table';\n    oj.CustomElementBridge.register('oj-table', {\n      metadata: oj.CollectionUtils.mergeDeep(__oj_table_metadata, {\n        properties: {\n          userAssistanceDensity: {\n            binding: {\n              provide: [\n                { name: 'containerUserAssistanceDensity', default: 'compact' },\n                { name: 'userAssistanceDensity', default: 'compact' }\n              ]\n            }\n          }\n        }\n      })\n    });\n  })();\n\n  /**\n   * <table class=\"keyboard-table\">\n   *   <thead>\n   *     <tr>\n   *       <th>Target</th>\n   *       <th>Gesture</th>\n   *       <th>Action</th>\n   *     </tr>\n   *   </thead>\n   *   <tbody>\n   *     <tr>\n   *       <td rowspan=\"2\">Cell</td>\n   *       <td><kbd>Tap</kbd></td>\n   *       <td>Focus on the row. If <code class=\"prettyprint\">selectionMode</code> for rows is enabled, selects the row as well.\n   *       If multiple selection is enabled the selection handles will appear. Tapping a different row will deselect the previous selection.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Press & Hold</kbd></td>\n   *       <td>Display context menu</td>\n   *     </tr>\n   *\n   *     <tr>\n   *       <td rowspan=\"2\">Column Header</td>\n   *       <td><kbd>Tap</kbd></td>\n   *       <td>Focus on the header. If <code class=\"prettyprint\">selectionMode</code> for columns is enabled, selects the column as well.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Press & Hold</kbd></td>\n   *       <td>Display context menu</td>\n   *     </tr>\n   *   </tbody>\n   * </table>\n   *\n   * @ojfragment touchDoc - Used in touch section of classdesc, and standalone gesture doc\n   * @memberof oj.ojTable\n   */\n\n  /**\n   * <table class=\"keyboard-table\">\n   *   <thead>\n   *     <tr>\n   *       <th>Target</th>\n   *       <th>Key</th>\n   *       <th>Action</th>\n   *     </tr>\n   *   </thead>\n   *   <tbody>\n   *   <tr>\n   *       <td rowspan=\"16\">Cell</td>\n   *       <td><kbd>Tab</kbd></td>\n   *       <td>The first Tab into the Table moves focus to the first column header. The second Tab moves focus to the next focusable element outside of the Table.\n   *           <br>If focus is on a row and the row is actionable then Tab moves focus to the next focusable element within the row. If focus is already on the last focusable element then focus will wrap to the first focusable element in the row.\n   *           <br>If <code class=\"prettyprint\">editMode</code> is rowEdit, please see the section 'Cell in EditableRow'.\n   *       </td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Shift+Tab</kbd></td>\n   *       <td>The first Shift+Tab into the Table moves focus to the first column header. The second Shift+Tab moves focus to the previous focusable element outside of the Table.\n   *           <br>If focus is on a row and the row is actionable then Shift+Tab moves focus to the previous focusable element within the row. If focus is already on the first focusable element then focus will wrap to the last focusable element in the row.\n   *           <br>If <code class=\"prettyprint\">editMode</code> is rowEdit, please see the section 'Cell in EditableRow'.\n   *       </td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>DownArrow</kbd></td>\n   *       <td>Move focus to the next row.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Shift+DownArrow</kbd></td>\n   *       <td>Select and move focus to the next row.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Shift+F10</kbd></td>\n   *       <td>Display context menu.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Ctrl+DownArrow</kbd></td>\n   *       <td>Move focus to the column footer.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>UpArrow</kbd></td>\n   *       <td>Move focus to the previous row. If at the first row then move to the column header.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Shift+UpArrow</kbd></td>\n   *       <td>Select and move focus to the previous row.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Ctrl+UpArrow</kbd></td>\n   *       <td>Move focus to the column header.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>LeftArrow</kbd></td>\n   *       <td>Move accessibility focus to the cell to the left (only applies when using a screen reader).</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>RightArrow</kbd></td>\n   *       <td>Move accessibility focus to the cell to the right (only applies when using a screen reader).</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Home</kbd></td>\n   *       <td>Move focus to first row.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>End</kbd></td>\n   *       <td>Move focus to last row.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Space</kbd></td>\n   *       <td>Select row.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Enter</kbd></td>\n   *       <td>If the table <code class=\"prettyprint\">editMode</code> is rowEdit then make the current row editable.\n   *           <br>If the table <code class=\"prettyprint\">editMode</code> is none then toggle the current row to actionable mode if there exists a tabbable element in the row. Once toggled to actionable mode, focus will be moved to be first tabbable element in the row.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>F2</kbd></td>\n   *       <td>Toggle the current row to actionable mode if there exists a tabbable element in the row. Once toggled to actionable mode, focus will be moved to be first tabbable element in the row.\n   *       </td>\n   *     </tr>\n   *     <tr>\n   *       <td rowspan=\"17\">Cell in Editable Row</td>\n   *       <td><kbd>Tab</kbd></td>\n   *       <td>Move focus to next editable cell or focusable element in the row.\n   *           <br>If focus is on the last editable cell or focusable element in the row, make the next row editable and move focus to the first editable cell or focusable element in the next row.\n   *           <br>If focus is on the last editable cell or focusable element in the last row, move focus to next focusable element on the page (outside table).\n   *       </td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Shift+Tab</kbd></td>\n   *       <td>Move focus to previous editable cell or focusable element in the row.\n   *           <br>If focus is on the first editable cell or focusable element in the row, make the previous row editable and move focus to the last editable cell or focusable element in the previous row.\n   *           <br>If focus is on the first editable cell or focusable element in the first row, move focus to previous focusable element on the page (outside table).\n   *       </td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>DownArrow</kbd></td>\n   *       <td>Handled in the editable cell.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Shift+DownArrow</kbd></td>\n   *       <td>Handled in the editable cell.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Ctrl+DownArrow</kbd></td>\n   *       <td>Handled in the editable cell.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>UpArrow</kbd></td>\n   *       <td>Handled in the editable cell.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Shift+UpArrow</kbd></td>\n   *       <td>Handled in the editable cell.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Ctrl+UpArrow</kbd></td>\n   *       <td>Handled in the editable cell.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>LeftArrow</kbd></td>\n   *       <td>Handled in the editable cell.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>RightArrow</kbd></td>\n   *       <td>Handled by the editable cell.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Home</kbd></td>\n   *       <td>Handled in the editable cell.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>End</kbd></td>\n   *       <td>Handled in the editable cell.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Space</kbd></td>\n   *       <td>Handled in the editable cell.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Enter</kbd></td>\n   *       <td>Focus the next editable cell in the current column of the next editable row.\n   *          <br>If last row is editable then make it readonly.\n   *       </td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Shift+Enter</kbd></td>\n   *       <td>Make the previous row editable and move focus to the editable cell in current column in the previous row.\n   *          <br>If first row is editable then make it readonly.\n   *       </td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>F2</kbd></td>\n   *       <td>Handled in the editable cell.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Esc</kbd></td>\n   *       <td>Make the current row readonly.</td>\n   *     </tr>\n   *     <tr>\n   *       <td rowspan=\"17\">Column Header</td>\n   *       <td><kbd>Tab</kbd></td>\n   *       <td>Navigate to next focusable element on page (outside table).</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Shift+Tab</kbd></td>\n   *       <td>Navigate to previous focusable element on page (outside table).</td>\n   *     </tr>\n   *      <tr>\n   *       <td><kbd>Shift+F10</kbd></td>\n   *       <td>Display context menu.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>DownArrow</kbd></td>\n   *       <td>Move focus to the first row.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Ctrl+DownArrow</kbd></td>\n   *       <td>Move focus to the column footer.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>UpArrow</kbd></td>\n   *       <td>Do nothing.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Ctrl+UpArrow</kbd></td>\n   *       <td>Do nothing.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>LeftArrow</kbd></td>\n   *       <td>Move focus to previous column header.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Shift+LeftArrow</kbd></td>\n   *       <td>Select and move focus to previous column header.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>RightArrow</kbd></td>\n   *       <td>Move focus to next column header.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Shift+RightArrow</kbd></td>\n   *       <td>Select and move focus to next column header.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Home</kbd></td>\n   *       <td>Move focus to first column header.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>End</kbd></td>\n   *       <td>Move focus to last column header.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Enter</kbd></td>\n   *       <td>Toggle the sort order of the column if the column is sortable.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Space</kbd></td>\n   *       <td>Select column.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>F2</kbd></td>\n   *       <td>Toggle the column header region to actionable mode if there exists a tabbable element in the region. Once toggled to actionable mode, focus will be moved to be first tabbable element in the region.\n   *       </td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Esc</kbd></td>\n   *       <td>Exit actionable mode.</td>\n   *     </tr>\n   *     <tr>\n   *       <td rowspan=\"16\">Column Footer</td>\n   *       <td><kbd>Tab</kbd></td>\n   *       <td>Navigate to next focusable element on page (outside table).</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Shift+Tab</kbd></td>\n   *       <td>Navigate to previous focusable element on page (outside table).</td>\n   *     </tr>\n   *      <tr>\n   *       <td><kbd>Shift+F10</kbd></td>\n   *       <td>Display context menu.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>DownArrow</kbd></td>\n   *       <td>Do nothing.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Ctrl+DownArrow</kbd></td>\n   *       <td>Do nothing.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>UpArrow</kbd></td>\n   *       <td>Move focus to the last row.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Ctrl+UpArrow</kbd></td>\n   *       <td>Move focus to the column header.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>LeftArrow</kbd></td>\n   *       <td>Move focus to previous column footer.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Shift+LeftArrow</kbd></td>\n   *       <td>Select and move focus to previous column footer.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>RightArrow</kbd></td>\n   *       <td>Move focus to next column footer.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Shift+RightArrow</kbd></td>\n   *       <td>Select and move focus to next column footer.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Home</kbd></td>\n   *       <td>Move focus to first column footer.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>End</kbd></td>\n   *       <td>Move focus to last column footer.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Space</kbd></td>\n   *       <td>Select column.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>F2</kbd></td>\n   *       <td>Toggle the column footer region to actionable mode if there exists a tabbable element in the region. Once toggled to actionable mode, focus will be moved to be first tabbable element in the region.\n   *       </td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>Esc</kbd></td>\n   *       <td>Exit actionable mode.</td>\n   *     </tr>\n   *   </tbody>\n   * </table>\n   *\n   * @ojfragment keyboardDoc - Used in keyboard section of classdesc, and standalone gesture doc\n   * @memberof oj.ojTable\n   */\n\n  /**\n   * <p>Applications can customize animations triggered by actions in Table by overriding action specific style classes on the animated item.\n   *    To disable animations for all tables, the CSS variable values can be modified to specify empty effects. See the documentation of <a href=\"AnimationUtils.html\">AnimationUtils</a>\n   *    class for details.</p>\n   *\n   * <p>The following are actions in which applications can use to customize animation effects.\n   * <table class=\"keyboard-table\">\n   *   <thead>\n   *     <tr>\n   *       <th>Action</th>\n   *       <th>Description</th>\n   *     </tr>\n   *   </thead>\n   *   <tbody>\n   *     <tr>\n   *       <td><kbd>add</kbd></td>\n   *       <td>When a new row is added to the TableDataSource associated with Table.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>remove</kbd></td>\n   *       <td>When an existing row is removed from the TableDataSource associated with Table.</td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>update</kbd></td>\n   *       <td>When an existing row is updated in the TableDataSource associated with Table.</td>\n   *     </tr>\n   *   </tbody>\n   * </table>\n   *\n   * @ojfragment animationDoc - Used in animation section of classdesc\n   * @memberof oj.ojTable\n   */\n\n  /**\n   * <p>Table supports the following custom data attributes.\n   * <table class=\"keyboard-table\">\n   *   <thead>\n   *     <tr>\n   *       <th>Name</th>\n   *       <th>Description</th>\n   *       <th>Example</th>\n   *     </tr>\n   *   </thead>\n   *   <tbody>\n   *     <tr>\n   *       <td><kbd>data-oj-as</kbd></td>\n   *       <td>Provides an alias for a specific template instance and has the same subproperties as the $current variable.</td>\n   *       <td>\n   *         <pre class=\"prettyprint\"><code>&lt;oj-table id=\"table\">\n   *   &lt;template slot=\"cellTemplate\" data-oj-as=\"cell\">\n   *   &lt;/template>\n   * &lt;/oj-table></code></pre>\n   *       </td>\n   *     </tr>\n   *     <tr>\n   *       <td><kbd>data-oj-clickthrough</kbd></td>\n   *       <td><p>Specify on any element inside a cell where you want to control whether the Table should perform actions triggered\n   *           by a click event originating from the element or one of its descendants.</p>\n   *           <p>For example, if you specify this attribute with a value of \"disabled\" on a button inside a cell, then the Table\n   *           will not select or set the corresponding row as current when a user clicks on the button.</p>\n   *       </td>\n   *       <td>\n   *         <pre class=\"prettyprint\"><code>&lt;oj-table id=\"table\">\n   *   &lt;template slot=\"cellTemplate\">\n   *     &lt;oj-button data-oj-clickthrough=\"disabled\">&lt;/oj-button\n   *   &lt;/template>\n   * &lt;/oj-table></code></pre>\n   *       </td>\n   *     </tr>\n   *   </tbody>\n   * </table>\n   *\n   * @ojfragment customAttrDoc - Used in custom data attributes section of classdesc\n   * @memberof oj.ojTable\n   */\n\n  /**\n   * <p>Named slot for the Table's default header template. The slot content must be a &lt;template> element. The content of the template should not include the &lt;td> element, only what's inside it.</p>\n   *\n   * <p>If the value of any column's <code class=\"prettyprint\">template</code>, <code class=\"prettyprint\">headerTemplate</code>, or <code class=\"prettyprint\">footerTemplate</code> property conflicts with this named slot, this slot will only be used for that column.\n   * Similarly, if a value is supplied for the deprecated <code class=\"prettyprint\">columns-default.header-template</code> attribute, that named slot will be used as the default header template slot instead of this named slot.</p>\n   *\n   * @ojslot headerTemplate\n   * @memberof oj.ojTable\n   * @ojtemplateslotprops oj.ojTable.HeaderTemplateContext\n   *\n   * @example <caption>Initialize the Table with the <code class=\"prettyprint\">headerTemplate</code> slot specified:</caption>\n   * &lt;oj-table>\n   *   &lt;div slot='headerTemplate'>&lt;oj-bind-text>&lt;/oj-bind-text>&lt;/div>\n   * &lt;/oj-table>\n   */\n  /**\n   * <p>Named slot for the Table's default cell template. The slot content must be a &lt;template> element. The content of the template should not include the &lt;td> element, only what's inside it.</p>\n   *\n   * <p>If the value of any column's <code class=\"prettyprint\">template</code>, <code class=\"prettyprint\">headerTemplate</code>, or <code class=\"prettyprint\">footerTemplate</code> property conflicts with this named slot, this slot will only be used for that column.\n   * Similarly, if a value is supplied for the deprecated <code class=\"prettyprint\">columns-default.template</code> attribute, that named slot will be used as the default cell template slot instead of this named slot.</p>\n   * <p>When the template is executed for the cell, it will have access to the binding context containing the following properties:</p>\n   * <ul>\n   *   <li>$current - An object that contains information for the current cell being rendered (See the table below for a list of properties available on $current)</li>\n   *   <li>alias - If data-oj-as attribute was specified, the value will be used to provide an application-named alias for $current.</li>\n   * </ul>\n   *\n   * @ojslot cellTemplate\n   * @memberof oj.ojTable\n   * @ojtemplateslotprops oj.ojTable.CellTemplateContext\n   *\n   * @example <caption>Initialize the Table with the <code class=\"prettyprint\">cellTemplate</code> slot specified:</caption>\n   * &lt;oj-table>\n   *   &lt;div slot='cellTemplate'>&lt;oj-bind-text>&lt;/oj-bind-text>&lt;/div>\n   * &lt;/oj-table>\n   */\n  /**\n   * @typedef {Object} oj.ojTable.RowTemplateContext Context passed into default and row-specific templates.\n   * @property {Element} componentElement The &lt;oj-table> custom element.\n   * @property {any} data The data for the current row being rendered.\n   * @property {number} index The zero-based index of the current row during initial rendering.  Note the index is not updated in response to row additions and removals.\n   * @property {any} key The key of the current row being rendered.\n   * @property {Object} rowContext Context of the row.\n   * @property {\"edit\"|\"navigation\"} mode The mode of the row containing the cell.  It can be \"edit\" or \"navigation\".\n   * @property {Item<K, D>} item  The Item<K, D> for the row being rendered.\n   * @property {\"on\"|\"off\"} editable On if row is editable, off if editing has been disabled.\n   * @property {DataProvider<K, D> | null} datasource The \"data\" attribute of the Table.\n   * @ojdeprecated [{target:\"property\", for: \"componentElement\", since:\"10.0.0\", description:\"Use HTMLDocument methods to retrieve this element.\" },\n   * {target:\"property\", for: \"data\", since:\"10.0.0\", description:\"Use RowTemplateContext.item.data instead.\" },\n   * {target:\"property\", for: \"key\", since:\"10.0.0\", description:\"Use RowTemplateContext.item.key instead.\" },\n   * {target:\"property\", for: \"rowContext\", since:\"10.0.0\", description:\"Use Top level RowTemplateContext APIs instead.\" }]\n   * @ojsignature {target:\"Type\", value:\"<K,D>\", for:\"genericTypeParameters\"}\n   */\n  /**\n   * <p>Named slot for the Table's default row template. The slot content must be a &lt;template> element.\n   * The content of the template can include the &lt;tr> element or the child of the &lt;tr> element.</p>\n   *\n   * <p>If using a rowTemplate to configure the display of rows, the Table will handle any change in column reordering due\n   * to a dnd operation internally. Any application logic behind rowTemplate definitions should not dynamically respond to\n   * 'columns' change notifications pushed due to dnd reorder operations. Once an application or an external source updates\n   * the Table's 'columns' attribute though, the Table will no longer honor any previous user-performed dnd reorder operations,\n   * and any relevant changes in logic needed for the rowTemplate definitions must be handled by the application.</p>\n   *\n   * <p>When providing inline template content that includes table-specific markup such as &lt;tr> or &lt;td> elements, applications\n   * are responsible for ensuring that the content provided is valid HTML. For example, providing an &lt;oj-bind-if> element as the child\n   * of a &lt;tr> is not valid HTML, and will not function as intended. To enable this type of dynamic template functionality, the entire\n   * Table can be defined within an &lt;oj-module>, or an &lt;oj-bind-dom> element can be provided as the child of an inline template.</p>\n   *\n   * @ojslot rowTemplate\n   * @memberof oj.ojTable\n   * @ojtemplateslotprops oj.ojTable.RowTemplateContext\n   * @ojunsupportedbrowsers [\"IE11\"]\n   *\n   * @example <caption>Initialize the Table with the <code class=\"prettyprint\">rowTemplate</code> slot specified:</caption>\n   * &lt;oj-table>\n   *   &lt;div slot='rowTemplate'>&lt;oj-bind-text>&lt;/oj-bind-text>&lt;/div>\n   * &lt;/oj-table>\n   */\n  /**\n   * <p>Named slot for the Table's default footer template. The slot content must be a &lt;template> element. The content of the template should not include the &lt;td> element, only what's inside it.</p>\n   *\n   * <p>If the value of any column's <code class=\"prettyprint\">template</code>, <code class=\"prettyprint\">headerTemplate</code>, or <code class=\"prettyprint\">footerTemplate</code> property conflicts with this named slot, this slot will only be used for that column.\n   * Similarly, if a value is supplied for the deprecated <code class=\"prettyprint\">columns-default.footer-template</code> attribute, that named slot will be used as the default footer template slot instead of this named slot.</p>\n   *\n   * @ojslot footerTemplate\n   * @memberof oj.ojTable\n   * @ojtemplateslotprops oj.ojTable.FooterTemplateContext\n   *\n   * @example <caption>Initialize the Table with the <code class=\"prettyprint\">footerTemplate</code> slot specified:</caption>\n   * &lt;oj-table>\n   *   &lt;div slot='footerTemplate'>&lt;oj-bind-text>&lt;/oj-bind-text>&lt;/div>\n   * &lt;/oj-table>\n   */\n  /**\n   * @typedef {Object} oj.ojTable.AddRowTemplateContext Context passed into add row template.\n   * @property {DataProvider<K, D> | null} datasource The \"data\" attribute of the Table.\n   * @property {function(boolean):void} [submitAddRow] This function can be used to programatically submit or cancel row. Should pass true while canceling submit.\n   * @ojsignature {target:\"Type\", value:\"<K,D>\", for:\"genericTypeParameters\"}\n   */\n  /**\n   * <p>Named slot used to render add new row at the top of the table. The slot content must be a &lt;template> element.\n   * The content of the template can include the &lt;tr> element or the child of the &lt;tr> element.</p>\n   *\n   * <p>If using an addRowTemplate to configure the display of rows, the Table will handle any change in column reordering due\n   * to a dnd operation internally. Any application logic behind addRowTemplate definitions should not dynamically respond to\n   * 'columns' change notifications pushed due to dnd reorder operations. Once an application or an external source updates\n   * the Table's 'columns' attribute though, the Table will no longer honor any previous user-performed dnd reorder operations,\n   * and any relevant changes in logic needed for the addRowTemplate definitions must be handled by the application.</p>\n   *\n   * <p>When providing inline template content that includes table-specific markup such as &lt;tr> or &lt;td> elements, applications\n   * are responsible for ensuring that the content provided is valid HTML. For example, providing an &lt;oj-bind-if> element as the child\n   * of a &lt;tr> is not valid HTML, and will not function as intended. To enable this type of dynamic template functionality, the entire\n   * Table can be defined within an &lt;oj-module>, or an &lt;oj-bind-dom> element can be provided as the child of an inline template.</p>\n   *\n   * @ojslot addRowTemplate\n   * @memberof oj.ojTable\n   * @ojtemplateslotprops oj.ojTable.AddRowTemplateContext\n   * @ojunsupportedbrowsers [\"IE11\"]\n   *\n   * @example <caption>Initialize the Table with the <code class=\"prettyprint\">addRowTemplate</code> slot specified:</caption>\n   * &lt;oj-table>\n   *   &lt;div slot='addRowTemplate'>&lt;oj-bind-text>&lt;/oj-bind-text>&lt;/div>\n   * &lt;/oj-table>\n   */\n  /**\n   * @typedef {Object} oj.ojTable.AddRowCellTemplateContext Context passed into column specific add row template.\n   * @property {number} columnIndex The zero-based index of the current column during initial rendering.\n   * @property {any} columnKey The key of the current column being rendered.\n   * @property {DataProvider<K, D> | null} datasource The \"data\" attribute of the Table.\n   * @property {function(boolean):void} [submitAddRow] This function can be used to programatically submit or cancel row. Should pass true while canceling submit.\n   * @ojsignature [{target:\"Type\", value:\"keyof D\", for:\"columnKey\", jsdocOverride:true},\n   * {target:\"Type\", value:\"<K,D>\", for:\"genericTypeParameters\"}]\n   */\n  /**\n   * <p>Named slot used to render add new row at the top of the table. The slot content must be a &lt;template> element.\n   * The content of the template should not include the &lt;td> element, only what's inside it.</p>\n   *\n   * @ojslot addRowCellTemplate\n   * @memberof oj.ojTable\n   * @ojtemplateslotprops oj.ojTable.AddRowCellTemplateContext\n   * @ojunsupportedbrowsers [\"IE11\"]\n   *\n   * @example <caption>Initialize the Table with the <code class=\"prettyprint\">addRowCellTemplate</code> slot specified:</caption>\n   * &lt;oj-table>\n   *   &lt;div slot='addRowCellTemplate'>&lt;oj-bind-text>&lt;/oj-bind-text>&lt;/div>\n   * &lt;/oj-table>\n   */\n  /**\n   * <p>Named slot for the Table's bottom panel where applications can add content such as a paging control. The Table will render the content provided at the bottom of the Table element.\n   * The content specified should not include any styling that may conflict with the Table's positioning. Unsupported styling includes, but is not limited to, margins and absolute positioning.</p>\n   *\n   * @ojslot bottom\n   * @memberof oj.ojTable\n   * @ojdeprecated {since: '13.0.0', description: 'This is an anti-pattern. Please use high-water mark scrolling and page layouts instead.'}\n   *\n   * @example <caption>Initialize the Table with the <code class=\"prettyprint\">bottom</code> slot specified:</caption>\n   * &lt;oj-table>\n   *   &lt;div slot='bottom'>&lt;oj-paging-control>&lt;/oj-paging-control>&lt;/div>\n   * &lt;/oj-table>\n   */\n  /**\n   * <p>The <code class=\"prettyprint\">noData</code> slot is used to specify the content to display when the table is empty.\n   * The slot content must be a &lt;template> element. If not specified then a default no data message will be displayed.\n   *\n   * @ojslot noData\n   * @memberof oj.ojTable\n   * @ojtemplateslotprops {}\n   *\n   * @example <caption>Initialize the Table with the <code class=\"prettyprint\">noData</code> slot specified:</caption>\n   * &lt;oj-table>\n   *   &lt;template slot='noData'>\n   *     &lt;span>&lt;oj-button>Add Data&lt;/span>\n   *   &lt;template>\n   * &lt;/oj-table>\n   */\n\n  // SubId Locators **************************************************************\n\n  /**\n   * <p>Sub-ID for the Table element's cells.</p>\n   * To lookup a cell the locator object should have the following:\n   * <ul>\n   * <li><b>subId</b>: 'oj-table-cell'</li>\n   * <li><b>rowIndex</b>: the zero based absolute row index</li>\n   * <li><b>columnIndex</b>: the zero based absolute column index</li>\n   * </ul>\n   *\n   * @ojsubid oj-table-cell\n   * @memberof oj.ojTable\n   *\n   * @example <caption>Get the cell at row index 1 and column index 2:</caption>\n   * var node = myTable.getNodeBySubId( {'subId': 'oj-table-cell', 'rowIndex': 1, 'columnIndex': 2} );\n   */\n\n  /**\n   * <p>Sub-ID for the Table element's headers.</p>\n   *\n   *  To lookup a header the locator object should have the following:\n   * <ul>\n   * <li><b>subId</b>: 'oj-table-header'</li>\n   * <li><b>index</b>: the zero based absolute column index.</li>\n   * </ul>\n   *\n   * @ojsubid oj-table-header\n   * @memberof oj.ojTable\n   *\n   * @example <caption>Get the header at the specified location:</caption>\n   * var node = myTable.getNodeBySubId( {'subId': 'oj-table-header', 'index':0} );\n   */\n\n  /**\n   * <p>Sub-ID for the Table element's sort ascending icon in column headers.</p>\n   *\n   * To lookup a sort icon the locator object should have the following:\n   * <ul>\n   * <li><b>subId</b>: 'oj-table-sort-ascending'</li>\n   * <li><b>index</b>: the zero based absolute column index</li>\n   * </ul>\n   *\n   * @ojsubid oj-table-sort-ascending\n   * @memberof oj.ojTable\n   *\n   * @example <caption>Get the sort ascending icon from the header at the specified location:</caption>\n   * var node = myTable.getNodeBySubId( {'subId': 'oj-table-sort-ascending', 'index':0} );\n   */\n\n  /**\n   * <p>Sub-ID for the Table element's sort descending icon in column headers.</p>\n   *\n   * To lookup a sort icon the locator object should have the following:\n   * <ul>\n   * <li><b>subId</b>: 'oj-table-sort-descending'</li>\n   * <li><b>index</b>: the zero based absolute column index</li>\n   * </ul>\n   *\n   * @ojsubid oj-table-sort-descending\n   * @memberof oj.ojTable\n   *\n   * @example <caption>Get the sort descending icon from the header at the specified location:</caption>\n   * var node = myTable.getNodeBySubId( {'subId': 'oj-table-sort-descending', 'index':0} );\n   */\n\n  /**\n   * <p>Sub-ID for the Table element's footers.</p>\n   *\n   *  To lookup a footer the locator object should have the following:\n   * <ul>\n   * <li><b>subId</b>: 'oj-table-footer'</li>\n   * <li><b>index</b>: the zero based absolute column index.</li>\n   * </ul>\n   *\n   * @ojsubid oj-table-footer\n   * @memberof oj.ojTable\n   *\n   * @example <caption>Get the header at the specified location:</caption>\n   * var node = myTable.getNodeBySubId( {'subId': 'oj-table-footer', 'index':0} );\n   */\n\n  // Node Context Objects ********************************************************\n\n  /**\n   * <p>Context for the Table element's cells.</p>\n   *\n   * @property {number} rowIndex the zero based absolute row index\n   * @property {number} columnIndex the zero based absolute column index\n   * @property {string} key the row key\n   *\n   * @ojnodecontext oj-table-cell\n   * @memberof oj.ojTable\n   */\n\n  /**\n   * <p>Context for the Table element's headers.</p>\n   *\n   * @property {number} index the zero based absolute column index\n   *\n   * @ojnodecontext oj-table-header\n   * @memberof oj.ojTable\n   */\n\n  /**\n   * <p>Context for the Table element's footers.</p>\n   *\n   * @property {number} index the zero based absolute column index\n   *\n   * @ojnodecontext oj-table-footer\n   * @memberof oj.ojTable\n   */\n\n  /**\n   * Specifies the current selected rows in the table.\n   * @expose\n   * @name selected.row\n   * @memberof! oj.ojTable\n   * @instance\n   * @type {KeySet}\n   * @default new oj.KeySetImpl();\n   * @ojsignature {target:\"Type\", value:\"oj.KeySet<K>\"}\n   * @ojwriteback\n   */\n\n  /**\n   * Specifies the current selected columns in the table.\n   * @expose\n   * @name selected.column\n   * @memberof! oj.ojTable\n   * @instance\n   * @type {KeySet}\n   * @default new oj.KeySetImpl();\n   * @ojsignature {target:\"Type\", value:\"oj.KeySet<K>\"}\n   * @ojwriteback\n   */\n\n  /**\n   * Creates a new Table\n   * @constructor\n   * @private\n   */\n  const Table = function () {};\n\n  /**\n   * @private\n   */\n  Table._BUNDLE_KEY = {\n    _MSG_FETCHING_DATA: 'msgFetchingData',\n    _MSG_NO_DATA: 'msgNoData',\n    _MSG_INITIALIZING: 'msgInitializing',\n    _MSG_STATUS_SORT_ASC: 'msgStatusSortAscending',\n    _MSG_STATUS_SORT_DSC: 'msgStatusSortDescending',\n    _LABEL_SELECT_COLUMN: 'labelSelectColumn',\n    _LABEL_SELECT_ALL_ROWS: 'labelSelectAllRows',\n    _LABEL_SELECT_ROW: 'labelSelectRow',\n    _LABEL_EDIT_ROW: 'labelEditRow',\n    _LABEL_SELECT_AND_EDIT_ROW: 'labelSelectAndEditRow'\n  };\n\n  /**\n   * @private\n   */\n  Table._LOGGER_MSG = {\n    _ERR_PRECURRENTROW_ERROR_SUMMARY: 'Did not change current row due to error.',\n    _ERR_PRECURRENTROW_ERROR_DETAIL: 'Error detail: {error}.',\n    _ERR_CURRENTROW_UNAVAILABLE_INDEX_SUMMARY:\n      'Did not change current row due to unavailable row index.',\n    _ERR_CURRENTROW_UNAVAILABLE_INDEX_DETAIL: 'Unavailable row index: {rowIdx}.',\n    _ERR_REFRESHROW_INVALID_INDEX_SUMMARY: 'Invalid row index value.',\n    _ERR_REFRESHROW_INVALID_INDEX_DETAIL: 'Row index: {rowIdx}.',\n    _ERR_DATA_INVALID_TYPE_SUMMARY: 'Invalid data type.',\n    _ERR_DATA_INVALID_TYPE_DETAIL: 'Please specify the appropriate data type.',\n    _ERR_ELEMENT_INVALID_TYPE_SUMMARY: 'Invalid element type.',\n    _ERR_ELEMENT_INVALID_TYPE_DETAIL: 'Only a <table> element can be specified for ojTable.'\n  };\n\n  /**\n   * @private\n   */\n  Table._UPDATE = {\n    _ADD_ROW_DISPLAY: 'addRowDisplay',\n    _ATTACHED: 'attached',\n    _DATA_REFRESH: 'dataRefresh',\n    _DATA_SORT: 'dataSort',\n    _RESIZE: 'resize',\n    _REFRESH: 'refresh',\n    _COL_REORDER: 'colReorder',\n    _COL_RESIZE: 'colResize',\n    _ROW_REFRESH: 'rowRefresh',\n    _ROWS_ADDED: 'rowsAdded',\n    _ROWS_REMOVED: 'rowsRemoved',\n    _SHOWN: 'shown'\n  };\n\n  /**\n   * @private\n   */\n  Table._SUB_ID = {\n    _TABLE_CELL: 'oj-table-cell',\n    _TABLE_HEADER: 'oj-table-header',\n    _TABLE_FOOTER: 'oj-table-footer',\n    _TABLE_SORT_ASCENDING: 'oj-table-sort-ascending',\n    _TABLE_SORT_DESCENDING: 'oj-table-sort-descending'\n  };\n\n  /**\n   * @private\n   */\n  Table._POSITION = {\n    _START_TOP: 'start top',\n    _START_BOTTOM: 'start bottom'\n  };\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._FIELD_ID = 'id';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._CONST_ATTRIBUTE = 'attribute';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._CONST_DATA = 'data';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._CONST_METADATA = 'metadata';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._CONST_INDEXES = 'indexes';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._CONST_INDEX = 'index';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._CONST_KEY = 'key';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._CONST_KEYS = 'keys';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._CONST_AFTERKEYS = 'afterKeys';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._CONST_ADDBEFOREKEYS = 'addBeforeKeys';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._CONST_CLIENTID = 'clientId';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._CONST_SIGNAL = 'signal';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._CONST_STARTINDEX = 'startIndex';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._CONST_ENDINDEX = 'endIndex';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._CONST_PAGESIZE = 'size';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._CONST_OFFSET = 'offset';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._CONST_SILENT = 'silent';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._CONST_COLUMN = 'column';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._CONST_ROW = 'row';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._CONST_VALUE = 'value';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._CONST_SORTCRITERIA = 'sortCriteria';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._CONST_ON = 'on';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._CONST_OFF = 'off';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._COLUMN_HEADER_ID = '_headerColumn';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._COLUMN_HEADER_TEXT_ID = '_headerColumnText';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._COLUMN_HEADER_ASC_ID = '_headerColumnAsc';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._COLUMN_HEADER_DSC_ID = '_headerColumnDsc';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._COLUMN_HEADER_ID_PREFIX = '_hdrCol';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._COLUMN_HEADER_ROW_SELECT_ID = '_hdrColRowSel';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._FOCUS_CALLED = '_focusedCalled';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._ROW_TEMPLATE = 'rowTemplate';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._CELL_TEMPLATE = 'template';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._HEADER_TEMPLATE = 'headerTemplate';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._FOOTER_TEMPLATE = 'footerTemplate';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._OPTION_AUTO = 'auto';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._OPTION_ENABLED = 'enabled';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  Table._OPTION_DISABLED = 'disabled';\n\n  /**\n   * @private\n   */\n  Table._OPTION_DISPLAY = {\n    _LIST: 'list',\n    _GRID: 'grid'\n  };\n\n  /**\n   * @private\n   */\n  Table._OPTION_EDIT_MODE = {\n    _NONE: 'none',\n    _ROW_EDIT: 'rowEdit'\n  };\n\n  /**\n   * @private\n   */\n  Table._OPTION_FROZEN_EDGE = {\n    _END: 'end',\n    _START: 'start'\n  };\n\n  /**\n   * @private\n   */\n  Table._OPTION_SELECTION_MODES = {\n    _SINGLE: 'single',\n    _MULTIPLE: 'multiple',\n    _NONE: 'none'\n  };\n\n  /**\n   * @private\n   */\n  Table._OPTION_SCROLL_POLICY = {\n    _AUTO: 'auto',\n    _LOADMORE_ON_SCROLL: 'loadMoreOnScroll',\n    _LOAD_ALL: 'loadAll'\n  };\n\n  /**\n   * @private\n   */\n  Table._COLUMN_SORT_ORDER = {\n    _ASCENDING: 'ascending',\n    _DESCENDING: 'descending'\n  };\n\n  /**\n   * @private\n   */\n  Table._DND_REORDER_TABLE_ID_DATA_KEY = 'oj-table-dnd-reorder-table-id';\n\n  /**\n   * @private\n   */\n  Table._CURRENT_ROW_STATUS = {\n    _UPDATED: 'updated',\n    _IGNORED: 'ignored',\n    _VETOED: 'vetoed',\n    _ERROR: 'error'\n  };\n\n  /**\n   * @private\n   */\n  Table._ROW_ITEM_EXPANDO = 'oj-table-oj-row-item';\n\n  /**\n   * @private\n   */\n  Table._DATA_OJ_COMMAND = 'data-oj-command';\n\n  /**\n   * @private\n   */\n  Table._DATA_OJ_EDITABLE = 'data-oj-editable';\n\n  /**\n   * @private\n   */\n  Table._DATA_OJ_SELECTABLE = 'data-oj-selectable';\n\n  /**\n   * @private\n   */\n  Table._DATA_OJ_COLUMNIDX = 'data-oj-columnIdx';\n\n  /**\n   * @private\n   */\n  Table._VALIDATOR_PATTERN = '^[1-9][0-9]*$';\n\n  /**\n   * @private\n   */\n  Table._DATA_OJ_BINDING_PROVIDER = 'data-oj-binding-provider';\n\n  /**\n   * @private\n   */\n  Table._BATCH_PROCESS_SIZE_WHEN_IDLE = 5;\n\n  /**\n   * @private\n   */\n  Table.RESIZE_OFFSET = 10;\n\n  /**\n   * @private\n   */\n  Table.SIZING_ERROR_MARGIN = 0.05;\n\n  /**\n   * @private\n   */\n  Table.CONTENT_FLICKER_TIMEOUT = 20;\n\n  /**\n   * @private\n   */\n  Table._SELECTOR_OFF_COLSPAN_OFFSET = 1;\n\n  /**\n   * @private\n   */\n  Table._CSS_Vars = {\n    enableSticky: '--oj-private-table-global-sticky-default',\n    enableSelector: '--oj-private-table-global-enable-selector-default',\n    showIndicatorDelay: '--oj-private-core-global-loading-indicator-delay-duration',\n    loadIndicator: '--oj-private-table-global-load-indicator-default',\n    horizontalGridVisible: '--oj-private-table-global-display-list-horizontal-grid-visible-default',\n    addAnimation: '--oj-private-table-global-add-animation',\n    removeAnimation: '--oj-private-table-global-remove-animation',\n    updateAnimation: '--oj-private-table-global-update-animation'\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._isStickyLayoutEnabled = function () {\n    if (this._getDefaultOptions().enableSticky === 'true') {\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._isStickyRowsEnabled = function () {\n    if (this._isStickyLayoutEnabled() && this.options.row != null) {\n      return typeof this.options.row.sticky === 'function';\n    }\n    return false;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._isFixedLayoutEnabled = function () {\n    return this.options.layout === 'fixed';\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._isTableStretchEnabled = function () {\n    var tableContainer = this._getTableContainer();\n    return tableContainer.classList.contains(Table.CSS_CLASSES._TABLE_STRETCH_CLASS);\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._isExternalScrollEnabled = function () {\n    // external scroller is only supported with 'sticky' layout\n    if (this._isStickyLayoutEnabled()) {\n      var scrollPolicyOptions = this.options.scrollPolicyOptions;\n      if (scrollPolicyOptions != null) {\n        return scrollPolicyOptions.scroller != null;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Invokes app provided row.selectable capability callback if available.\n   * @param {Object} item The oj-item data.\n   * @return {string} 'on' or 'off'\n   * @private\n   */\n  Table.prototype._invokeRowSelectableCallback = function (item) {\n    return this._invokeActionCallback(item, 'selectable', Table._CONST_ON);\n  };\n\n  /**\n   * Invokes app provided row.editable capability callback if available.\n   * @param {Object} item The oj-item data.\n   * @return {string} 'on' or 'off'\n   * @private\n   */\n  Table.prototype._invokeRowEditableCallback = function (item) {\n    return this._invokeActionCallback(item, 'editable', Table._CONST_ON);\n  };\n\n  /**\n   * Invokes app provided row.sticky capability callback if available.\n   * @param {Object} item The oj-item data.\n   * @return {string} 'on' or 'off'\n   * @private\n   */\n  Table.prototype._invokeRowStickyCallback = function (item) {\n    return this._invokeActionCallback(item, 'sticky', Table._CONST_OFF);\n  };\n\n  /**\n   * Invokes app provided row API capability callbacks based on action name value.\n   * @param {Object} item The oj-item data.\n   * @param {string} actionName The action name: ('editable', 'selectable', 'sticky').\n   * @param {boolean} defaultVal The default value when no callback is provided.\n   * @return {string} 'on' or 'off'\n   * @private\n   */\n  Table.prototype._invokeActionCallback = function (item, actionName, defaultVal) {\n    const capability = this.options.row[actionName];\n    if (typeof capability === 'function') {\n      return capability(item);\n    }\n    return defaultVal;\n  };\n\n  /**\n   * Return whether the node is editable\n   * @param {Node} node  DOM Node\n   * @return {boolean} true or false\n   * @private\n   */\n  Table.prototype._isNodeEditable = function (node) {\n    return this._isNodeType(node, /^INPUT|TEXTAREA/);\n  };\n\n  /**\n   * Return whether the node is clickable\n   * @param {Node} node  DOM Node\n   * @return {boolean} true or false\n   * @private\n   */\n  Table.prototype._isNodeClickable = function (node) {\n    return this._isNodeType(node, /SELECT|OPTION|BUTTON|^A\\b/);\n  };\n\n  /**\n   * Return whether the node or any of its ancestors is draggable\n   * @param {Node} node  DOM Node\n   * @return {boolean} true or false\n   * @private\n   */\n  Table.prototype._isNodeDraggable = function (node) {\n    return this._getFirstAncestor(node, \"[draggable='true']\", true) != null;\n  };\n\n  /**\n   * Return whether the node is editable or clickable\n   * @param {Node} node  DOM Node\n   * @param {Object} type regex\n   * @return {boolean} true or false\n   * @private\n   */\n  Table.prototype._isNodeType = function (node, type) {\n    var table = this._getTable();\n    while (node != null && node !== table) {\n      var nodeName = node.nodeName;\n      if (nodeName === Table.DOM_ELEMENT._TD || nodeName === Table.DOM_ELEMENT._TH) {\n        break;\n      }\n\n      // If the node is a text node, move up the hierarchy to only operate on elements\n      // (on at least the mobile platforms, the node may be a text node)\n      if (node.nodeType !== 3) {\n        // 3 is Node.TEXT_NODE\n        if (nodeName.match(type)) {\n          var tabIndex = node.getAttribute(Table.DOM_ATTR._TABINDEX);\n          // ignore elements with tabIndex == -1\n          if (tabIndex !== -1) {\n            return true;\n          }\n        }\n      }\n      // eslint-disable-next-line no-param-reassign\n      node = node.parentNode;\n    }\n    return false;\n  };\n\n  /**\n   * Set waiting state and show the Fetching Data... status message.\n   * @private\n   */\n  Table.prototype._setDataWaitingState = function (showMessage) {\n    if (showMessage !== false) {\n      if (!this._isExternalScrollEnabled()) {\n        this._clearScrollBuffer();\n      }\n      this._showStatusMessage();\n      this._hideNoDataMessage();\n    }\n    this._dataFetching = true;\n    if (!this._dataResolveFunc) {\n      this._dataResolveFunc = this._addComponentBusyState('is waiting for data.');\n    }\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._checkViewportRejected = function () {\n    this._animateOnFetch = false;\n    this._clearDataWaitingState();\n  };\n\n  /**\n   * Clear waiting state and hide the Fetching Data... status message.\n   * @private\n   */\n  Table.prototype._clearDataWaitingState = function (ignoreStatusMessage) {\n    if (this._pendingFetchStale) {\n      this._pendingFetchStale = false;\n      this._queueTask(\n        function () {\n          this._getLayoutManager().notifyTableUpdate(Table._UPDATE._DATA_REFRESH);\n          this._beforeDataRefresh();\n          return this._invokeDataFetchRows(this._pendingFetchOptions);\n        }.bind(this)\n      );\n    } else {\n      if (!ignoreStatusMessage) {\n        this._hideStatusMessage();\n      }\n      this._dataFetching = false;\n      this._pendingFetchStale = false;\n      this._pendingFetchOptions = null;\n      if (this._dataResolveFunc) {\n        this._dataResolveFunc();\n        this._dataResolveFunc = null;\n      }\n    }\n  };\n\n  /**\n   * Called by component to declare rendering is not finished. This method currently\n   * handles the ready state for the component page level BusyContext\n   * @private\n   */\n  Table.prototype._setComponentNotReady = function () {\n    // For page level BusyContext\n    // If we've already registered a busy state with the page's busy context, don't need to do anything further\n    if (!this._readyResolveFunc) {\n      this._readyResolveFunc = this._addComponentBusyState('is being loaded.');\n    }\n  };\n\n  /**\n   * Called by component to declare rendering is finished. This method currently\n   * handles the page level BusyContext.\n   * @private\n   */\n  Table.prototype._setComponentReady = function () {\n    if (this._readyResolveFunc) {\n      this._readyResolveFunc();\n      this._readyResolveFunc = null;\n    }\n  };\n\n  /**\n   * Called by component to add a busy state and return the resolve function\n   * to call when the busy state can be removed.\n   * @param {String} msg the description of the busy state\n   * @private\n   */\n  Table.prototype._addComponentBusyState = function (msg) {\n    var busyContext = Context.getContext(this.element[0]).getBusyContext();\n    var options = {\n      description: \"The component identified by '\" + this._getTableId() + \"' \" + msg\n    };\n    return busyContext.addBusyState(options);\n  };\n\n  /**\n   * Creates a new component busy state, and adds it to the busy state stack.\n   * @param {String} msg the description of the busy state\n   * @return {Function} the resolve function to call when busy state can be removed.\n   * @private\n   */\n  Table.prototype._createComponentBusyState = function (msg) {\n    var busyStateResolveFunc = this._addComponentBusyState(msg);\n    if (this._busyStateStack == null) {\n      this._busyStateStack = [];\n    }\n    this._busyStateStack.push(busyStateResolveFunc);\n    return busyStateResolveFunc;\n  };\n\n  /**\n   * Clears the busy state corresponding to the specified resolve function.\n   * @param {Function} busyStateResolveFunc the specified resolve function\n   * @private\n   */\n  Table.prototype._clearComponentBusyState = function (busyStateResolveFunc) {\n    if (this._busyStateStack) {\n      var index = this._busyStateStack.indexOf(busyStateResolveFunc);\n      if (index !== -1) {\n        busyStateResolveFunc();\n        this._busyStateStack.splice(index, 1);\n      }\n    }\n  };\n\n  /**\n   * Clears all busy states in the pending busy state stack.\n   * @private\n   */\n  Table.prototype._clearBusyStateStack = function () {\n    if (this._busyStateStack) {\n      for (var i = 0; i < this._busyStateStack.length; i++) {\n        this._busyStateStack[i]();\n      }\n      this._busyStateStack = null;\n    }\n  };\n\n  /**\n   * Sets the 'focusout' busy state.\n   * @private\n   */\n  Table.prototype._setFocusoutBusyState = function () {\n    if (!this._focusoutResolveFunc) {\n      this._focusoutResolveFunc = this._addComponentBusyState('is handling focusout.');\n    }\n  };\n\n  /**\n   * Clears the 'focusout' busy state.\n   * @private\n   */\n  Table.prototype._clearFocusoutBusyState = function () {\n    if (this._focusoutResolveFunc) {\n      this._focusoutResolveFunc();\n      this._focusoutResolveFunc = null;\n    }\n  };\n\n  /**\n   * Sets the 'idleRender' busy state.\n   * @private\n   */\n  Table.prototype._setIdleRenderBusyState = function () {\n    if (!this._idleRenderResolveFunc) {\n      this._idleRenderResolveFunc = this._addComponentBusyState('is waiting for idle rendering.');\n    }\n  };\n\n  /**\n   * Clears the 'idleRender' busy state.\n   * @private\n   */\n  Table.prototype._clearIdleRenderBusyState = function () {\n    if (this._idleRenderResolveFunc) {\n      this._idleRenderResolveFunc();\n      this._idleRenderResolveFunc = null;\n    }\n  };\n\n  /**\n   * Sets the 'scrollPos' busy state.\n   * @private\n   */\n  Table.prototype._setScrollPosBusyState = function () {\n    if (!this._scrollPosResolveFunc) {\n      this._scrollPosResolveFunc = this._addComponentBusyState('is handling scroll position.');\n    }\n  };\n\n  /**\n   * Clears the 'scrollPos' busy state.\n   * @private\n   */\n  Table.prototype._clearScrollPosBusyState = function () {\n    if (this._scrollPosResolveFunc) {\n      this._scrollPosResolveFunc();\n      this._scrollPosResolveFunc = null;\n    }\n  };\n\n  /**\n   * Clears all busy states that are currently set on the Table.\n   * @private\n   */\n  Table.prototype._clearAllComponentBusyStates = function () {\n    this._clearBusyStateStack();\n    // clear any pending fetch state to ensure clearing data waiting state below does not queue addition fetches\n    this._pendingFetchStale = false;\n    this._clearDataWaitingState();\n    this._clearFocusoutBusyState();\n    this._clearIdleRenderBusyState();\n    this._clearScrollPosBusyState();\n    this._setComponentReady();\n  };\n\n  /**\n   * Performs the cleanup necessary for 'destroy()' and 'ReleaseResources()' calls.\n   * @param {boolean=} isDestroy whether this is a result of a call to 'destroy()'\n   * @private\n   */\n  Table.prototype._cleanComponent = function (isDestroy) {\n    // cleanup needed for both, 'destroy()' and 'ReleaseResources()' calls\n    this._animateOnFetch = null;\n    this._isEditPending = null;\n    this._active = null;\n    this._isTableTab = null;\n    this._dataFetching = null;\n    this._controller = null;\n    this._isAddRowRendered = false;\n    this._isRowRemovalRequired = null;\n    this._renderedTableHeaderColumns = false;\n\n    // clear any pending timeouts\n    this._clearAllComponentTimeouts();\n    // remove any pending busy states\n    this._clearAllComponentBusyStates();\n    // remove any descendant popup focus listeners\n    this._clearOpenPopupListeners();\n    // clear any pending animation frames\n    this._clearIdleCallback();\n    // clear any existing DomScroller references\n    this._unregisterDomScroller();\n    // clear the current layout manager, and any listeners it has setup\n    this._clearLayoutManager();\n    // clear the current internal acc state\n    this._cleanAccStatus();\n\n    if (isDestroy) {\n      // cleanup needed for 'destroy()' call only\n      $(this._getTableBody()).removeAttr(ojcomponentcore._OJ_CONTAINER_ATTR);\n      $(this._getTableBody()).removeAttr(Context._OJ_CONTEXT_ATTRIBUTE);\n\n      this.element.children().remove('.' + Table.CSS_CLASSES._TABLE_HEADER_CLASS);\n      this.element.children().remove('.' + Table.CSS_CLASSES._TABLE_BODY_CLASS);\n      this.element.children().remove('.' + Table.CSS_CLASSES._TABLE_FOOTER_CLASS);\n      this.element.children().remove('.' + Table.CSS_CLASSES._TABLE_STATUS_MESSAGE_CLASS);\n      this.element.children().remove('.' + Table.CSS_CLASSES._TABLE_BODY_MESSAGE_ROW_CLASS);\n\n      //  - DomUtils.unwrap() will avoid unwrapping if the node is being destroyed by Knockout\n      DomUtils.unwrap(this.element, $(this._getTableContainer()));\n\n      this.element[0].classList.remove(Table.CSS_CLASSES._TABLE_CLASS);\n\n      // If this._data is a TableDataSourceAdapter, call destroy so that it can remove listeners\n      // on the underlying DataSource to avoid stranding memory\n      if (this._data instanceof oj.TableDataSourceAdapter) {\n        this._data.destroy();\n      }\n\n      this._componentDestroyed = true;\n    } else {\n      // cleanup needed for 'ReleaseResources()' call only\n\n      // unregister the listeners on the datasource\n      this._unregisterDataSourceEventListeners();\n      this._unregisterResizeListener();\n    }\n\n    // If any template is being used, clean up the nodes to avoid memory leak in Knockout\n    if (\n      this._hasHeaderTemplate ||\n      this._hasCellTemplate ||\n      this._hasFooterTemplate ||\n      this._hasRowTemplate ||\n      this._hasAddRowTemplate ||\n      this._hasNoDataTemplate\n    ) {\n      this._cleanTemplateNodes(this.element[0]);\n    }\n  };\n\n  /**\n   * Clears all pending component timeouts.\n   * @private\n   */\n  Table.prototype._clearAllComponentTimeouts = function () {\n    this._clearFocusoutTimeout();\n    this._clearShowStatusTimeout();\n    this._clearTableBodyHideTimeout();\n    this._clearTableFooterHideTimeout();\n    this._clearNotifyAttachedTimeout();\n    this._clearBrowserAutoScrollTimeout();\n  };\n\n  /**\n   * Clears any pending focusout timeout.\n   * @private\n   */\n  Table.prototype._clearFocusoutTimeout = function () {\n    if (this._focusoutTimeout) {\n      clearTimeout(this._focusoutTimeout);\n      this._focusoutTimeout = null;\n    }\n  };\n\n  /**\n   * Clears any pending show status timeout.\n   * @private\n   */\n  Table.prototype._clearShowStatusTimeout = function () {\n    if (this._showStatusTimeout) {\n      clearTimeout(this._showStatusTimeout);\n      this._showStatusTimeout = null;\n    }\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._initializeTableBodyHide = function (tableBody) {\n    this._clearTableBodyHideTimeout();\n    // prettier-ignore\n    this._bodyVisibilityTimeout = setTimeout( // @HTMLUpdateOK\n      function () {\n        // eslint-disable-next-line no-param-reassign\n        tableBody.style[Table.CSS_PROP._VISIBILITY] = Table.CSS_VAL._HIDDEN;\n        this._bodyVisibilityTimeout = null;\n      }.bind(this),\n      Table.CONTENT_FLICKER_TIMEOUT\n    );\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._clearTableBodyHideTimeout = function () {\n    if (this._bodyVisibilityTimeout != null) {\n      clearTimeout(this._bodyVisibilityTimeout);\n      this._bodyVisibilityTimeout = null;\n    }\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._initializeTableFooterHide = function (tableFooter) {\n    this._clearTableFooterHideTimeout();\n    // prettier-ignore\n    this._footerVisibilityTimeout = setTimeout( // @HTMLUpdateOK\n      function () {\n        // eslint-disable-next-line no-param-reassign\n        tableFooter.style[Table.CSS_PROP._VISIBILITY] = Table.CSS_VAL._HIDDEN;\n        this._footerVisibilityTimeout = null;\n      }.bind(this),\n      Table.CONTENT_FLICKER_TIMEOUT\n    );\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._clearTableFooterHideTimeout = function () {\n    if (this._footerVisibilityTimeout != null) {\n      clearTimeout(this._footerVisibilityTimeout);\n      this._footerVisibilityTimeout = null;\n    }\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._clearBrowserAutoScrollTimeout = function () {\n    if (this._browserAutoScrollTimeout != null) {\n      clearTimeout(this._browserAutoScrollTimeout);\n      this._browserAutoScrollTimeout = null;\n      this._browserAutoScrollInitPos = null;\n    }\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._setFinalTask = function (task) {\n    this._finalTask = task ? task.bind(this) : undefined;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._hasPendingTasks = function () {\n    return this._taskCount > 0;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._hasAdditionalPendingTasks = function () {\n    return this._taskCount > 1;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._queueTask = function (task) {\n    if (!this._pendingTasks) {\n      this._taskCount = 0;\n      this._pendingTasks = Promise.resolve();\n      this._setComponentNotReady();\n    }\n    this._taskCount += 1;\n    this._pendingTasks = this._pendingTasks\n      .then(\n        function () {\n          if (!this._componentDestroyed) {\n            return task.bind(this)();\n          }\n          return undefined;\n        }.bind(this)\n      )\n      .then(\n        function (value) {\n          this._taskCount -= 1;\n          if (this._taskCount === 0) {\n            this._pendingTasks = null;\n            try {\n              if (!this._componentDestroyed) {\n                if (this._finalTask) {\n                  this._finalTask();\n                }\n                this._trigger('ready');\n              }\n            } catch (err) {\n              Logger.error(err);\n            }\n            // Need to remove busy state even if the component is destroyed\n            this._setComponentReady();\n          }\n          return value;\n        }.bind(this),\n        function (error) {\n          this._taskCount -= 1;\n          if (this._taskCount === 0) {\n            this._pendingTasks = null;\n            Logger.error(error);\n            this._setComponentReady();\n          }\n\n          return Promise.reject(error);\n        }.bind(this)\n      );\n\n    return this._pendingTasks;\n  };\n\n  /**\n   * @override\n   * @private\n   */\n  Table.prototype._draw = function () {\n    this._setFinalTask(\n      function () {\n        this._syncTableSizing();\n        if (this._initialSelectionStateValidated) {\n          this._syncSelectionState();\n        } else {\n          this._validateInitialSelectionState();\n        }\n        if (this._resetAriaLabel) {\n          this._updateAccStatusInfo();\n        }\n        this._resetAriaLabel = false;\n      }.bind(this)\n    );\n\n    if (!this.element.is('table')) {\n      var errSummary = Table._LOGGER_MSG._ERR_ELEMENT_INVALID_TYPE_SUMMARY;\n      var errDetail = Table._LOGGER_MSG._ERR_ELEMENT_INVALID_TYPE_DETAIL;\n      throw new RangeError(errSummary + '\\n' + errDetail);\n    }\n\n    // add css class to element\n    this.element[0].classList.add(Table.CSS_CLASSES._TABLE_ELEMENT_CLASS);\n    this.element[0].setAttribute(Table.DOM_ATTR._ROLE, 'application'); // @HTMLUpdateOK\n\n    // create the initial table structure\n    this._createInitialTable(this._isTableHeaderless(), this._isTableFooterless());\n    // style the initial table structure\n    this._styleInitialTable();\n\n    this._queueTask(\n      function () {\n        this._getLayoutManager().notifyTableUpdate(Table._UPDATE._REFRESH);\n        this._processSlottedChildren();\n      }.bind(this)\n    );\n\n    if (this.options.disabled) {\n      this.disable();\n    }\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._refresh = function () {\n    if (this._dataFetching && this._controller) {\n      this._controller.abort();\n    }\n    var initFetch = false;\n    this._active = null;\n    this._pendingFetchOptions = null;\n\n    if (this._dataOption !== this.options[Table._CONST_DATA]) {\n      this._clearCachedDataMetadata();\n\n      if (this._data == null) {\n        // need to do an initial fetch\n        initFetch = true;\n      }\n    }\n    var contextMenu = this._GetContextMenu();\n    if (contextMenu != null && contextMenu !== this._getContextMenuElement()) {\n      this._createContextMenuContainer();\n    }\n    this._isAddRowRendered = false;\n    this._clearLayoutManager();\n    this._clearCachedDom();\n    this._clearCachedStyling();\n    this._refreshContextMenu();\n    // if status message skeletons are already shown, do not reset them\n    if (!this._statusMessageShown || !this._isSkeletonSupport()) {\n      this._refreshTableStatusMessage();\n    }\n    this._clearIdleCallback();\n\n    // update edit state based on row removals before rows are removed to ensure row context is available\n    if (this._hasEditableRow()) {\n      // exit edit mode if editable row is deleted - treat as cancelling the edit\n      this._setTableEditable(false, true);\n    }\n\n    if (initFetch) {\n      return this._initFetch();\n    }\n\n    return this._queueTask(\n      function () {\n        this._getLayoutManager().notifyTableUpdate(Table._UPDATE._REFRESH);\n        return this._invokeDataFetchRows();\n      }.bind(this)\n    );\n  };\n\n  /**\n   * @param {Object} resultObject Object containing data array, key array, and index array\n   * @param {number} startIndex start index\n   * @return {Promise} Promise Return Promise which is resolved when the DOM has been updated and\n   * all JET components in it have been resolved.\n   * @private\n   */\n  Table.prototype._refreshAll = function (resultObject, startIndex) {\n    var promiseArray = [];\n    if (this._isColumnMetadataUpdated() || !this._isTableHeaderColumnsRendered()) {\n      this._clearCachedMetadata();\n      promiseArray.push(this._refreshTableHeader());\n\n      // see if we need to clear the sort. If the column we sorted on is no\n      // longer there then clear it.\n      if (this._sortColumn != null) {\n        var foundColumn = false;\n        var columns = this._getColumnDefs();\n        var columnsCount = columns.length;\n        for (var i = 0; i < columnsCount; i++) {\n          var column = columns[i];\n          if (oj.Object.compareValues(column, this._sortColumn)) {\n            foundColumn = true;\n            break;\n          }\n        }\n        if (!foundColumn) {\n          this._initFetch(null, true);\n        }\n      }\n    }\n    promiseArray.push(this._refreshTableFooter());\n    promiseArray.push(this._refreshTableBody(resultObject, startIndex));\n\n    return Promise.all(promiseArray);\n  };\n\n  /**\n   * Refresh the table header\n   * @private\n   */\n  Table.prototype._refreshTableHeader = function () {\n    try {\n      var self = this;\n      var i;\n      var columns = this._getColumnDefs();\n      var columnsCount = columns.length;\n\n      // replace existing col elements\n      var tableColGroup = this._getTableColGroup();\n      if (tableColGroup != null) {\n        // ensure body and footer are hidden before modifying / removing existing col elements\n        var tableBody = this._getTableBody();\n        if (tableBody != null) {\n          tableBody.style[Table.CSS_PROP._VISIBILITY] = Table.CSS_VAL._HIDDEN;\n        }\n        var tableFooter = this._getTableFooter();\n        if (tableFooter != null) {\n          tableFooter.style[Table.CSS_PROP._VISIBILITY] = Table.CSS_VAL._HIDDEN;\n        }\n\n        $(tableColGroup).empty();\n        if (this._isGutterStartColumnEnabled()) {\n          let tableGutterCol = this._createTableGutterCol();\n          tableColGroup.appendChild(tableGutterCol); // @HTMLUpdateOK\n        }\n        if (this._isDefaultSelectorEnabled()) {\n          var tableSelectorCol = this._createTableSelectorCol();\n          tableColGroup.appendChild(tableSelectorCol); // @HTMLUpdateOK\n        }\n        for (i = 0; i < columnsCount; i++) {\n          var tableCol = this._createTableCol();\n          tableColGroup.appendChild(tableCol); // @HTMLUpdateOK\n        }\n        if (this._isGutterEndColumnEnabled()) {\n          let tableGutterCol = this._createTableGutterCol();\n          tableColGroup.appendChild(tableGutterCol); // @HTMLUpdateOK\n        }\n      }\n\n      // replace existing legacy width buffer cells\n      var tableLegacyWidthBuffer = this._getTableBodyLegacyWidthBuffer();\n      if (tableLegacyWidthBuffer != null) {\n        $(tableLegacyWidthBuffer).empty();\n        for (i = 0; i < columnsCount; i++) {\n          var widthBufferCell = this._createTableBodyCell();\n          widthBufferCell.classList.add(Table.CSS_CLASSES._TABLE_LEGACY_WIDTH_BUFFER_CELL_CLASS);\n          tableLegacyWidthBuffer.appendChild(widthBufferCell); // @HTMLUpdateOK\n        }\n      }\n\n      var tableHeader = this._getTableHeader();\n      if (!tableHeader) {\n        if (this._isTableHeaderless()) {\n          return Promise.resolve();\n        }\n\n        // metadata could have been updated to add column headers\n        tableHeader = this._createTableHeader();\n        this._styleTableHeader(tableHeader);\n      }\n\n      var tableHeaderRow = this._getTableHeaderRow();\n      this._unregisterChildStateListeners(tableHeaderRow);\n\n      if (this._hasHeaderTemplate) {\n        this._cleanTemplateNodes(tableHeaderRow);\n        this._hasHeaderTemplate = false;\n      }\n\n      // remove all the existing column headers\n      $(tableHeaderRow).empty();\n\n      for (i = 0; i < columnsCount; i++) {\n        var headerColumn = null;\n        var column = columns[i];\n        var headerRenderer = this._getColumnRenderer(i, 'header');\n        if (headerRenderer) {\n          headerColumn = this._createTableHeaderColumn(i);\n          // if headerRenderer is defined then call that\n          var headerContext = this._getRendererContextObject(headerColumn, {});\n          // Copy additional properties to top-level context to work with custom element\n          var context = {\n            headerContext: headerContext,\n            columnIndex: i,\n            data: column.headerText,\n            componentElement: headerContext.componentElement,\n            parentElement: headerContext.parentElement\n          };\n\n          if (column.sortable === Table._OPTION_ENABLED) {\n            // add the sortable icon renderer\n            context.columnHeaderSortableIconRenderer = function (options, delegateRenderer) {\n              self._columnHeaderSortableIconRenderer(this, delegateRenderer);\n            };\n          } else {\n            context.columnHeaderDefaultRenderer = function (options, delegateRenderer) {\n              self._columnHeaderDefaultRenderer(this, delegateRenderer);\n            };\n          }\n          var rendererContent = headerRenderer(context);\n          if (rendererContent != null) {\n            // if the renderer returned a value then we clear the default content\n            $(headerColumn).empty();\n          }\n          if (!DataCollectionUtils.applyRendererContent(headerColumn, rendererContent)) {\n            // if the renderer didn't append content then the existing\n            // headerColumn was manipulated. So get it and set the required\n            // attributes just in case it was replaced or the attributes\n            // got removed\n            headerColumn = $(tableHeaderRow).children()[i];\n            this._setTableHeaderColumnAttributes(i, headerColumn);\n            this._styleTableHeaderColumn(i, headerColumn, false);\n          }\n          headerColumn.classList.add(Table.CSS_CLASSES._COLUMN_CUSTOM_HEADER_CLASS);\n        } else {\n          var headerSlotTemplate = this._getSlotTemplate(column[Table._HEADER_TEMPLATE]);\n          if (headerSlotTemplate == null && this._isDefaultHeaderTemplateSlotValid()) {\n            headerSlotTemplate = this._getSlotTemplate('headerTemplate');\n          }\n          if (headerSlotTemplate) {\n            var componentElement = this._getRootElement();\n            var templateEngine = this._getTemplateEngine();\n            if (templateEngine != null) {\n              headerColumn = this._createTableHeaderColumn(i, true);\n              headerColumn.classList.add(Table.CSS_CLASSES._COLUMN_CUSTOM_HEADER_CLASS);\n              var slotContext = this._getHeaderSlotTemplateContextObject(column.headerText, i);\n              var headerContent = templateEngine.execute(\n                componentElement,\n                headerSlotTemplate,\n                slotContext,\n                this.options.as,\n                headerColumn,\n                new Map([[UNSAFE_useFormVariantContext.FormVariantContext, 'embedded']])\n              );\n              if (!(headerContent instanceof Array)) {\n                headerContent = [headerContent];\n              }\n\n              // eslint-disable-next-line no-loop-func\n              headerContent.map(function (content) {\n                headerColumn.appendChild(content);\n                return undefined;\n              });\n              this._hasHeaderTemplate = true;\n            }\n          }\n        }\n        // if headerColumn was not populated by template or renderer above, generate default headerColumn\n        if (!headerColumn) {\n          this._createTableHeaderColumn(i);\n        }\n      }\n      if (this._isGutterEndColumnEnabled()) {\n        let tableGutterEnd = this._createTableGutterCell('header', 'end');\n        tableHeaderRow.appendChild(tableGutterEnd); // @HTMLUpdateOK\n      }\n      if (this._isDefaultSelectorEnabled()) {\n        var tableHeaderSelectorColumn = this._createTableHeaderSelectorColumn();\n        // prettier-ignore\n        tableHeaderRow.insertBefore( // @HTMLUpdateOK\n          tableHeaderSelectorColumn,\n          tableHeaderRow.firstChild\n        );\n      }\n      if (this._isGutterStartColumnEnabled()) {\n        let tableGutterStart = this._createTableGutterCell('header', 'start');\n        // prettier-ignore\n        tableHeaderRow.insertBefore( // @HTMLUpdateOK\n          tableGutterStart,\n          tableHeaderRow.firstChild\n        );\n      }\n      this._renderedTableHeaderColumns = true;\n\n      // optimize initial sizing for state between fetch start and refreshTableDimensions call\n      this._getLayoutManager().optimizeInitialColumnWidths();\n\n      return this._finalizeNonBodyRowRendering([tableHeaderRow]);\n    } catch (renderError) {\n      return Promise.reject(renderError);\n    }\n  };\n\n  /**\n   * Refresh the table footer\n   * @private\n   */\n  Table.prototype._refreshTableFooter = function () {\n    try {\n      var columns = this._getColumnDefs();\n      var tableFooter = this._getTableFooter();\n      if (!tableFooter) {\n        if (this._isTableFooterless()) {\n          return Promise.resolve();\n        }\n\n        // metadata could have been updated to add column headers\n        tableFooter = this._createTableFooter();\n        this._styleTableFooter(tableFooter);\n      }\n\n      this._initializeTableFooterHide(tableFooter);\n      var tableFooterRow = this._getTableFooterRow();\n\n      if (this._hasFooterTemplate) {\n        this._cleanTemplateNodes(tableFooterRow);\n        this._hasFooterTemplate = false;\n      }\n      // remove all the existing footer cells\n      $(tableFooterRow).empty();\n\n      if (columns.length > 0) {\n        var isDefaultFooterTemplateSlotValid = this._isDefaultFooterTemplateSlotValid();\n        var columnsCount = columns.length;\n        for (var i = 0; i < columnsCount; i++) {\n          var column = columns[i];\n          var footerRenderer = this._getColumnRenderer(i, 'footer');\n          var footerCell = this._createTableFooterCell();\n          this._styleTableFooterCell(i, footerCell);\n          this._insertTableFooterCell(i, footerCell);\n\n          if (footerRenderer) {\n            // if footerRenderer is defined then call that\n            var footerContext = this._getRendererContextObject(footerCell, {});\n            // Copy additional properties to top-level context to work with custom element\n            var context = {\n              footerContext: footerContext,\n              columnIndex: i,\n              componentElement: footerContext.componentElement,\n              parentElement: footerContext.parentElement\n            };\n            if (!DataCollectionUtils.applyRendererContent(footerCell, footerRenderer(context))) {\n              // if the renderer didn't append content then the existing\n              // footer cell was manipulated. So get it and set the required\n              // attributes just in case it was replaced or the attributes\n              // got removed\n              footerCell = $(tableFooterRow).children()[i];\n              this._setTableFooterColumnAttributes(i, footerCell);\n              this._styleTableFooterCell(i, footerCell);\n            }\n          } else {\n            var footerSlotTemplate = this._getSlotTemplate(column[Table._FOOTER_TEMPLATE]);\n            if (footerSlotTemplate == null && isDefaultFooterTemplateSlotValid) {\n              footerSlotTemplate = this._getSlotTemplate('footerTemplate');\n            }\n            if (footerSlotTemplate) {\n              var componentElement = this._getRootElement();\n              var templateEngine = this._getTemplateEngine();\n              if (templateEngine != null) {\n                var slotContext = this._getFooterSlotTemplateContextObject(i);\n                var footerContent = templateEngine.execute(\n                  componentElement,\n                  footerSlotTemplate,\n                  slotContext,\n                  this.options.as,\n                  footerCell,\n                  new Map([[UNSAFE_useFormVariantContext.FormVariantContext, 'embedded']])\n                );\n                if (!(footerContent instanceof Array)) {\n                  footerContent = [footerContent];\n                }\n\n                // eslint-disable-next-line no-loop-func\n                footerContent.map(function (content) {\n                  footerCell.appendChild(content);\n                  return undefined;\n                });\n                this._hasFooterTemplate = true;\n              }\n            }\n          }\n        }\n        if (this._isGutterEndColumnEnabled()) {\n          let tableGutterEnd = this._createTableGutterCell('footer', 'end');\n          tableFooterRow.appendChild(tableGutterEnd); // @HTMLUpdateOK\n        }\n        if (this._isDefaultSelectorEnabled()) {\n          var footerSelectorCell = this._createTableFooterSelectorCell();\n          tableFooterRow.insertBefore(footerSelectorCell, tableFooterRow.firstChild);\n        }\n        if (this._isGutterStartColumnEnabled()) {\n          let tableGutterStart = this._createTableGutterCell('footer', 'start');\n          // prettier-ignore\n          tableFooterRow.insertBefore( // @HTMLUpdateOK\n            tableGutterStart,\n            tableFooterRow.firstChild\n          );\n        }\n      }\n      return this._finalizeNonBodyRowRendering([tableFooterRow]);\n    } catch (renderError) {\n      return Promise.reject(renderError);\n    }\n  };\n\n  /**\n   * Refresh the entire table body with data from the datasource\n   * @param {Object} resultObject Object containing data array, key array, and index array\n   * @param {number} startIndex start index\n   * @param {boolean=} keepVisible whether the table body should remain visible\n   * @return {Promise} Promise Return Promise which is resolved when the DOM has been updated and\n   * all JET components in it have been resolved.\n   * @private\n   */\n  Table.prototype._refreshTableBody = function (resultObject, startIndex, keepVisible) {\n    var tableBody = this._getTableBody();\n    if (tableBody == null) {\n      return Promise.resolve();\n    }\n\n    // Reset _scrollLeft and scrollTop to 0 if undefined to prevent later issues.\n    this._scrollLeft = this._scrollLeft === undefined ? 0 : this._scrollLeft;\n    this._scrollTop = this._scrollTop === undefined ? 0 : this._scrollTop;\n\n    var bodyPromiseArray = [];\n    bodyPromiseArray.push(this._refreshAddNewRowPlaceholder(true));\n    bodyPromiseArray.push(this._finalizeTableBody(resultObject, startIndex, tableBody, keepVisible));\n    return Promise.all(bodyPromiseArray);\n  };\n\n  Table.prototype._finalizeTableBody = function (resultObject, startIndex, tableBody, keepVisible) {\n    var i;\n    var resetFocus;\n    var rows = this._getRowIdxRowArray(resultObject, startIndex);\n    // if no new rows, and no existing rows, show no data message\n    if (rows.length === 0 && (startIndex === 0 || this._getTableBodyRows().length === 0)) {\n      resetFocus = this._clearTableBodyRowsFromIndex(startIndex);\n      this._showNoDataMessage();\n      if (resetFocus) {\n        this._getTable().focus();\n      }\n      return this._finalizeNonBodyRowRendering([tableBody]);\n    }\n\n    const tableBodyDocFrag = document.createDocumentFragment();\n    // for the pre-fetching case, we'll render items during idle cycles\n    // don't do it when the scroll is caused by handling scroll position\n    if (\n      startIndex > 0 &&\n      this._isLoadMoreOnScroll() &&\n      !this._isLastRowInViewport() &&\n      !this._fetchBySyncScroll\n    ) {\n      return new Promise(\n        function (resolve, reject) {\n          this._setIdleRenderBusyState();\n\n          // clone the rows array since we'll manipulate it\n          this._renderRowsWhenIdle(\n            rows.slice(0),\n            tableBody,\n            tableBodyDocFrag,\n            [],\n            startIndex,\n            resolve,\n            reject,\n            resultObject.isMouseWheel\n          );\n        }.bind(this)\n      );\n    }\n    var rowIdxArray = [];\n    var rowsCount = rows.length;\n    var renderRowPromiseArray = [];\n    for (i = 0; i < rowsCount; i++) {\n      rowIdxArray.push(rows[i].rowIdx);\n      renderRowPromiseArray.push(this._renderRow(rows[i], tableBodyDocFrag, startIndex));\n    }\n    var hasAnimation = this._animateOnFetch && this._IsCustomElement();\n    this._animateOnFetch = false;\n\n    return Promise.all(renderRowPromiseArray).then(\n      function (addedTableBodyRows) {\n        resetFocus = this._clearTableBodyRowsFromIndex(startIndex);\n        if (!keepVisible) {\n          this._initializeTableBodyHide(tableBody);\n        }\n        this._getLayoutManager().handleAfterRowsProcessed(tableBodyDocFrag);\n        this._appendElementToTableBody(tableBodyDocFrag, tableBody);\n        if (resetFocus) {\n          this._getTable().focus();\n        }\n        if (hasAnimation) {\n          return this._animateVisibleRows(addedTableBodyRows, rowIdxArray, 'add').then(\n            function () {\n              return this._afterRowsRendered(tableBody);\n            }.bind(this)\n          );\n        }\n        return this._afterRowsRendered(tableBody);\n      }.bind(this),\n      function (renderError) {\n        return Promise.reject(renderError);\n      }\n    );\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._clearTableBodyRowsFromIndex = function (startIndex) {\n    var checkFocus = this._getTableBody().contains(document.activeElement);\n    var resetFocus = false;\n    if (startIndex === 0) {\n      if (checkFocus) {\n        resetFocus = true;\n      }\n      this._removeAllTableBodyRows();\n    } else {\n      var tableBodyRowsCount = this._getTableBodyRows().length;\n      if (tableBodyRowsCount > 0) {\n        for (var i = tableBodyRowsCount - 1; i >= startIndex; i--) {\n          if (checkFocus) {\n            var tableBodyRow = this._getTableBodyRow(i);\n            if (tableBodyRow != null && tableBodyRow.contains(document.activeElement)) {\n              resetFocus = true;\n              checkFocus = false;\n            }\n          }\n          this._removeTableBodyRow(i);\n        }\n      }\n    }\n    this._clearCachedDomRowData();\n    this._hideNoDataMessage();\n    this._isRowRemovalRequired = false;\n    return resetFocus;\n  };\n\n  /**\n   * Returns whether the selector is enabled\n   * @return {boolean} true or false\n   * @private\n   */\n  Table.prototype._isDefaultSelectorEnabled = function () {\n    if (\n      this._getDefaultOptions().enableSelector === 'true' &&\n      this._getRowSelectionMode() === Table._OPTION_SELECTION_MODES._MULTIPLE\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * Refresh the row at a particular index with the row data\n   * @param {number} rowIdx  row index relative to the start of the table\n   * @param {Object} row  row and key object\n   * @param {Object=} tableBodyRow tr element\n   * @param {Object=} docFrag  document fragment\n   * @param {number=} docFragStartIdx  document fragment row start index\n   * @param {boolean=} isRefresh whether this is a specific row refresh\n   * @return {Element|null} tableBodyRow  DOM element\n   * @private\n   */\n  Table.prototype._refreshTableBodyRow = function (\n    rowIdx,\n    row,\n    tableBodyRow,\n    docFrag,\n    docFragStartIdx,\n    isRefresh\n  ) {\n    try {\n      var rowRenderer = this._getRowRenderer();\n\n      if (isNaN(rowIdx) || rowIdx < 0) {\n        // validate rowIdx value\n        Logger.error('Error: Invalid rowIdx value: ' + rowIdx);\n      }\n\n      if (tableBodyRow == null) {\n        // check if we already have a <tr> element at that index\n        // eslint-disable-next-line no-param-reassign\n        tableBodyRow = this._getTableBodyRow(rowIdx);\n        if (!tableBodyRow) {\n          // if not return\n          return Promise.resolve(null);\n        }\n\n        if (this._hasCellTemplate || this._hasRowTemplate) {\n          this._cleanTemplateNodes(tableBodyRow);\n          // No need to set this._hasCellTemplate to false here since only one row is refreshed\n        }\n        $(tableBodyRow).empty();\n      }\n\n      var currentRow = this._getCurrentRow();\n      currentRow = currentRow || {};\n      var rowContext = this._getRendererContextObject(tableBodyRow, {\n        row: row,\n        isCurrentRow: currentRow.rowIndex === rowIdx\n      });\n      rowContext.editable = this._invokeRowEditableCallback(tableBodyRow[Table._ROW_ITEM_EXPANDO]);\n      const selectable = this._invokeRowSelectableCallback(tableBodyRow[Table._ROW_ITEM_EXPANDO]);\n\n      // Copy additional properties to top-level context to work with custom element\n      var context = {\n        rowContext: rowContext,\n        row: row[Table._CONST_DATA],\n        componentElement: rowContext.componentElement,\n        parentElement: rowContext.parentElement,\n        data: row[Table._CONST_DATA]\n      };\n\n      var checkForChildRow = false;\n      var tableBody = this._getTableBody();\n      if (\n        rowRenderer != null ||\n        (this._isDefaultRowTemplateSlotValid() && this._getSlotTemplate('rowTemplate') !== null)\n      ) {\n        if (rowRenderer != null) {\n          var rowContent = rowRenderer(context);\n          if (rowContent != null) {\n            // if the renderer returned a value then we set it as the content\n            // for the row\n            tableBodyRow.appendChild(rowContent); // @HTMLUpdateOK\n          } else if (docFrag == null) {\n            // if the renderer didn't return a value then the existing\n            // row was manipulated. So get it and set the required\n            // attributes just in case it was replaced or the attributes\n            // got removed\n            // eslint-disable-next-line no-param-reassign\n            tableBodyRow = this._getRawTableBodyRow(rowIdx);\n          } else {\n            // eslint-disable-next-line no-param-reassign\n            docFragStartIdx = docFragStartIdx == null ? 0 : docFragStartIdx;\n            if (!docFrag.children) {\n              // use jquery children() because documentFragments do not have\n              // good browser support for .children\n              // eslint-disable-next-line no-param-reassign\n              tableBodyRow = $(docFrag).children()[rowIdx - docFragStartIdx];\n            } else {\n              // eslint-disable-next-line no-param-reassign\n              tableBodyRow = docFrag.children[rowIdx - docFragStartIdx];\n            }\n          }\n        } else {\n          var rowSlotTemplate = this._getSlotTemplate('rowTemplate');\n          var componentElement = this._getRootElement();\n          var templateEngine = this._getTemplateEngine();\n          if (templateEngine != null) {\n            var slotContext = this._getRowSlotTemplateContextObject(context);\n\n            // tableBodyRow may be replaced, so we need to pass in the <tbody> element itself to ensure\n            // busy context parent traversal continues to function correctly\n            var nodes = templateEngine.execute(\n              componentElement,\n              rowSlotTemplate,\n              slotContext,\n              this.options.as,\n              tableBody,\n              new Map([[UNSAFE_useFormVariantContext.FormVariantContext, 'embedded']])\n            );\n            for (let i = 0; i < nodes.length; i++) {\n              var node = nodes[i];\n              if (node.tagName === 'TR') {\n                tableBodyRow.parentNode.replaceChild(node, tableBodyRow);\n                // eslint-disable-next-line no-param-reassign\n                tableBodyRow = node;\n                checkForChildRow = false;\n                break;\n              } else {\n                tableBodyRow.appendChild(node); // @HTMLUpdateOK\n                checkForChildRow = true;\n              }\n            }\n            this._hasRowTemplate = true;\n          }\n        }\n        // need to ensure we wait for child busy states of deferred contents to clear properly\n        // eslint-disable-next-line no-param-reassign\n        tableBodyRow._ojReportBusy = tableBody;\n\n        return this._waitForAllElementsToResolve([tableBodyRow]).then(\n          function () {\n            // check to see if deferred content turned into a TR if one not previously found\n            if (checkForChildRow) {\n              var rowChildren = tableBodyRow.children;\n              for (let i = 0; i < rowChildren.length; i++) {\n                var child = rowChildren[i];\n                if (child.tagName === 'TR') {\n                  tableBodyRow.parentNode.replaceChild(child, tableBodyRow);\n                  // eslint-disable-next-line no-param-reassign\n                  tableBodyRow = child;\n\n                  // need to ensure we wait for child busy states of deferred contents to clear properly\n                  // eslint-disable-next-line no-param-reassign\n                  tableBodyRow._ojReportBusy = tableBody;\n                  break;\n                }\n              }\n            }\n            this._setTableBodyRowAttributes(row, tableBodyRow);\n            this._clearCachedDomRowData();\n            this._styleTableBodyRow(tableBodyRow, false);\n\n            // set the cell attributes and styling.\n            var tableBodyCells = this._getTableElementsByTagName(tableBodyRow, Table.DOM_ELEMENT._TD);\n            var tableBodyCellsCount = tableBodyCells.length;\n            var tableBodyCell;\n            for (let i = 0; i < tableBodyCellsCount; i++) {\n              tableBodyCell = tableBodyCells[i];\n              this._setTableBodyCellAttributes(rowIdx, row[Table._CONST_KEY], i, tableBodyCell);\n              this._styleTableBodyCell(i, tableBodyCell, false);\n            }\n\n            // sort the re-ordered columns in place\n            if (this._columnsDestMap != null) {\n              for (let i = 0; i < this._columnsDestMap.length; i++) {\n                var moveTableBodyCell = tableBodyCells[this._columnsDestMap[i]];\n                moveTableBodyCell.parentNode.appendChild(moveTableBodyCell); // @HTMLUpdateOK\n              }\n            }\n            return this._finalizeTableBodyCellsRefresh(\n              tableBodyRow,\n              row,\n              rowIdx,\n              rowContext.editable,\n              selectable,\n              isRefresh\n            );\n          }.bind(this)\n        );\n      }\n      this._setTableBodyRowAttributes(row, tableBodyRow);\n      this._tableBodyRowDefaultRenderer(rowIdx, row, context);\n      return this._finalizeTableBodyCellsRefresh(\n        tableBodyRow,\n        row,\n        rowIdx,\n        rowContext.editable,\n        selectable,\n        isRefresh\n      );\n    } catch (renderError) {\n      return Promise.reject(renderError);\n    }\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._finalizeTableBodyCellsRefresh = function (\n    tableBodyRow,\n    row,\n    rowIdx,\n    editable,\n    selectable,\n    isRefresh\n  ) {\n    var columns = this._getColumnDefs();\n    if (columns.length > 0) {\n      if (this._isDefaultSelectorEnabled() && selectable !== Table._CONST_OFF) {\n        this._createTableBodyDefaultSelector(row.key, tableBodyRow);\n      }\n      if (this._isGutterStartColumnEnabled()) {\n        let tableGutterStart = this._createTableGutterCell('body', 'start');\n        // prettier-ignore\n        tableBodyRow.insertBefore( // @HTMLUpdateOK\n          tableGutterStart,\n          tableBodyRow.firstChild\n        );\n      }\n      if (this._isGutterEndColumnEnabled()) {\n        let tableGutterEnd = this._createTableGutterCell('body', 'end');\n        tableBodyRow.appendChild(tableGutterEnd); // @HTMLUpdateOK\n      }\n    }\n    if (selectable === Table._CONST_OFF && columns.length > 0 && this._isDefaultSelectorEnabled()) {\n      // eslint-disable-next-line no-param-reassign\n      this._getTableBodyCells(rowIdx, tableBodyRow)[0].colSpan += Table._SELECTOR_OFF_COLSPAN_OFFSET;\n    }\n    // immediately apply styling to newly refreshed row when possible\n    this._getLayoutManager().handleRowRefresh(rowIdx, tableBodyRow, isRefresh);\n\n    // eslint-disable-next-line no-param-reassign\n    tableBodyRow[Table._DATA_OJ_EDITABLE] = editable;\n\n    // eslint-disable-next-line no-param-reassign\n    tableBodyRow[Table._DATA_OJ_SELECTABLE] = selectable;\n\n    return Promise.resolve(tableBodyRow);\n  };\n\n  /**\n   * Refresh the add row placeholder if it exists\n   * @param {boolean=} skipTopUpdate whether to skip applying 'top' values to the row cells\n   * @private\n   */\n  Table.prototype._refreshAddNewRowPlaceholder = function (skipTopUpdate) {\n    let placeHolderRow = this._getPlaceHolderRow();\n    if (!this._isAddNewRowEnabled()) {\n      if (placeHolderRow != null) {\n        if (this._hasActiveAddRow()) {\n          if (!this._isTableHeaderless()) {\n            var visibleIndex = this._getFirstVisibleColumnIndex(0, true);\n            this._setActiveHeader(visibleIndex);\n          } else if (this._getTableBodyRows().length > 0) {\n            this._setActiveRow(0, null, true);\n          } else {\n            this._setActiveNoData();\n          }\n        }\n        this._cleanTemplateNodes(placeHolderRow);\n        $(placeHolderRow).remove();\n        this._hasAddRowTemplate = false;\n        this._setTableActionableMode(false);\n      }\n      this._isAddRowRendered = false;\n      return Promise.resolve(false);\n    }\n\n    if (!this._isAddRowRendered) {\n      const templateEngine = this._getTemplateEngine();\n      const addRowTemplate = this._getSlotTemplate('addRowTemplate');\n      const addRowCellTemplate = this._getSlotTemplate('addRowCellTemplate');\n      if (templateEngine !== null) {\n        let slotContext;\n        let submitAddRow = function (cancelAdd) {\n          this._handleAddRow(cancelAdd, null);\n        }.bind(this);\n        const componentElement = this._getRootElement();\n        const tableBody = this._getTableBody();\n\n        if (placeHolderRow != null) {\n          this._cleanTemplateNodes(placeHolderRow);\n          $(placeHolderRow).empty();\n        }\n        if (placeHolderRow == null) {\n          placeHolderRow = this._createTableBodyRow();\n        }\n        tableBody.insertBefore(placeHolderRow, tableBody.firstChild);\n\n        var addRowCell;\n        var checkForChildRow = false;\n        if (addRowTemplate != null && this._isDefaultAddRowTemplateSlotValid()) {\n          slotContext = this._getRowSlotTemplateContextObject({}, true);\n          slotContext.submitAddRow = submitAddRow;\n          const nodes = templateEngine.execute(\n            componentElement,\n            addRowTemplate,\n            slotContext,\n            this.options.as,\n            tableBody\n          );\n          for (let i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (node.tagName === 'TR') {\n              placeHolderRow.parentNode.replaceChild(node, placeHolderRow);\n              placeHolderRow = node;\n              // need to ensure we wait for child busy states of deferred contents to clear properly\n              placeHolderRow._ojReportBusy = tableBody;\n              checkForChildRow = false;\n              break;\n            } else {\n              placeHolderRow.appendChild(node); // @HTMLUpdateOK\n              checkForChildRow = true;\n            }\n          }\n          return this._waitForAllElementsToResolve([placeHolderRow]).then(\n            function () {\n              // check to see if deferred content turned into a TR if one not previously found\n              if (checkForChildRow) {\n                var rowChildren = placeHolderRow.children;\n                for (let i = 0; i < rowChildren.length; i++) {\n                  var child = rowChildren[i];\n                  if (child.tagName === 'TR') {\n                    placeHolderRow.parentNode.replaceChild(child, placeHolderRow);\n                    // eslint-disable-next-line no-param-reassign\n                    placeHolderRow = child;\n\n                    // need to ensure we wait for child busy states of deferred contents to clear properly\n                    placeHolderRow._ojReportBusy = tableBody;\n                    break;\n                  }\n                }\n              }\n              // make sure to honor any reordered columns when re-rendering the add row content from a row template\n              if (this._columnsDestMap != null) {\n                var renderedCells = this._getPlaceHolderRowCells(placeHolderRow);\n                for (let i = 0; i < this._columnsDestMap.length; i++) {\n                  var moveAddRowCell = renderedCells[this._columnsDestMap[i]];\n                  moveAddRowCell.parentNode.appendChild(moveAddRowCell); // @HTMLUpdateOK\n                }\n              }\n              return this._finalizePlaceHolderRowSetup(placeHolderRow, skipTopUpdate);\n            }.bind(this)\n          );\n        } else if (addRowCellTemplate !== null && this._isDefaultAddRowCellTemplateSlotValid()) {\n          var columns = this._getColumnDefs();\n          var columnsCount = columns.length;\n          for (var j = 0; j < columnsCount; j++) {\n            addRowCell = this._createTableBodyCell();\n            placeHolderRow.appendChild(addRowCell);\n            slotContext = this._getCellSlotTemplateContextObject({ columnIndex: j }, true);\n            slotContext.submitAddRow = submitAddRow;\n            var cellContent = templateEngine.execute(\n              componentElement,\n              addRowCellTemplate,\n              slotContext,\n              this.options.as,\n              tableBody\n            );\n            if (!(cellContent instanceof Array)) {\n              cellContent = [cellContent];\n            }\n            for (let i = 0; i < cellContent.length; i++) {\n              addRowCell.appendChild(cellContent[i]);\n            }\n          }\n          return this._finalizePlaceHolderRowSetup(placeHolderRow, skipTopUpdate);\n        }\n      }\n    }\n    return Promise.resolve(false);\n  };\n\n  Table.prototype._finalizePlaceHolderRowSetup = function (placeHolderRow, skipTopUpdate) {\n    placeHolderRow.classList.add(Table.CSS_CLASSES._TABLE_ADD_ROW_PLACEHOLDER_CLASS);\n\n    // set the cell attributes and styling.\n    let addRowCell;\n    let addRowCells = this._getPlaceHolderRowCells(placeHolderRow);\n    for (let i = 0; i < addRowCells.length; i++) {\n      addRowCell = addRowCells[i];\n      this._styleTableAddRowCell(i, addRowCell);\n    }\n\n    this._isAddRowRendered = true;\n    this._hasAddRowTemplate = true;\n    if (this._isDefaultSelectorEnabled()) {\n      // If multiple selection is enabled add placeholder cell in the selector place\n      addRowCell = document.createElement(Table.DOM_ELEMENT._TD); // @HTMLUpdateOK\n      placeHolderRow.insertBefore(addRowCell, placeHolderRow.firstChild); // @HTMLUpdateOK\n      addRowCell.classList.add(Table.CSS_CLASSES._TABLE_FROZEN_START);\n      if (this._isVerticalGridEnabled()) {\n        addRowCell.classList.add(Table.CSS_CLASSES._TABLE_VGRID_LINES_CLASS);\n      }\n    }\n    if (this._isGutterStartColumnEnabled()) {\n      let tableGutterStart = this._createTableGutterCell('body', 'start');\n      placeHolderRow.insertBefore(tableGutterStart, placeHolderRow.firstChild); // @HTMLUpdateOK\n    }\n    if (this._isGutterEndColumnEnabled()) {\n      let tableGutterEnd = this._createTableGutterCell('body', 'end');\n      placeHolderRow.appendChild(tableGutterEnd); // @HTMLUpdateOK\n    }\n    if (!skipTopUpdate) {\n      this._getLayoutManager()._updateStickyRowTops();\n    }\n    return this._finalizeNonBodyRowRendering([placeHolderRow]);\n  };\n\n  /**\n   * Waits for any child components of the table body to finish rendering.\n   * Disables any and all focusable elements within the given rows if not editable.\n   * @param {Array<Element>} rowElements the row elements to finalize\n   * @returns {Promise}\n   * @private\n   */\n  Table.prototype._finalizeBodyRowRendering = function (rowElements) {\n    var tableBody = this._getTableBody();\n    return this._waitForAllElementsToResolve([tableBody]).then(\n      function () {\n        var editableRowKey = this._hasEditableRow() ? this._getEditableRowKey() : null;\n        var actionableModeRowKey =\n          this._isTableActionableMode() && this._active ? this._active.key : null;\n        rowElements.forEach(\n          function (tableBodyRow) {\n            if (tableBodyRow != null) {\n              var rowKey = this._getRowKey(tableBodyRow);\n              // disable all focusable content unless this is the current edit row or actionable row\n              if (\n                !(editableRowKey != null && oj.KeyUtils.equals(rowKey, editableRowKey)) &&\n                !(actionableModeRowKey != null && oj.KeyUtils.equals(rowKey, actionableModeRowKey))\n              ) {\n                DataCollectionUtils.disableAllFocusableElements(tableBodyRow, null, true);\n              }\n            }\n          }.bind(this)\n        );\n        return Promise.resolve(true);\n      }.bind(this)\n    );\n  };\n\n  /**\n   * Waits for any child components of the header or footer row to finish rendering.\n   * Disables any and all focusable elements within the given rows.\n   * @param {Array<Element>} rowElements the row elements to finalize\n   * @returns {Promise}\n   * @private\n   */\n  Table.prototype._finalizeNonBodyRowRendering = function (rowElements) {\n    return this._waitForAllElementsToResolve(rowElements).then(function () {\n      rowElements.forEach(function (rowElement) {\n        DataCollectionUtils.disableAllFocusableElements(rowElement, null, true);\n      });\n      return Promise.resolve(true);\n    });\n  };\n\n  /**\n   * Returns a Promise which resolves when all JET elements in the array have resolved\n   * @param {Array<Element>} elements Array of DOM elements\n   * @return {Promise} Promise which resolves when all child JET elements have resolved\n   * @private\n   */\n  Table.prototype._waitForAllElementsToResolve = function (elements) {\n    var busyContextPromiseArray = [];\n    elements.forEach(function (element) {\n      // Only wait on busyContext of non-null elements. Otherwise, busy state lock can occur\n      if (element) {\n        busyContextPromiseArray.push(Context.getContext(element).getBusyContext().whenReady());\n      }\n    });\n    return Promise.all(busyContextPromiseArray);\n  };\n\n  /**\n   * Internal method for refreshRow\n   * @param {number} rowIdx  Index of the row to refresh.\n   * @param {boolean} resetFocus  true to reset focus if needed; false to ignore focus.\n   * @param {boolean=} skipDataChecks true if the data checks can safely be skipped.\n   * @param {boolean=} useCache true if this should use previously cached row data.\n   * @param {Object} rowItem The oj-item data.\n   * @return {Promise.<boolean>} Promise resolves when done to true if refreshed, false if not\n   * @private\n   */\n  Table.prototype._refreshRow = function (rowIdx, resetFocus, skipDataChecks, useCache, rowItem) {\n    var dataprovider = this._getData();\n    var tableBodyRow = this._getTableBodyRow(rowIdx);\n\n    if (!skipDataChecks) {\n      // if no data then bail\n      if (!dataprovider) {\n        return Promise.resolve(false);\n      }\n\n      if (!tableBodyRow) {\n        // validate rowIdx value\n        var errSummary = Table._LOGGER_MSG._ERR_REFRESHROW_INVALID_INDEX_SUMMARY;\n        var errDetail = ojtranslation.applyParameters(Table._LOGGER_MSG._ERR_REFRESHROW_INVALID_INDEX_DETAIL, {\n          rowIdx: rowIdx.toString()\n        });\n        throw new RangeError(errSummary + '\\n' + errDetail);\n      }\n    }\n\n    // get row at rowIdx\n    var rowKey = this._getRowKeyForRowIdx(rowIdx);\n    this._getLayoutManager().notifyTableUpdate(Table._UPDATE._ROW_REFRESH);\n\n    var dataPromise;\n    if (useCache) {\n      // use existing row data cache\n      var resultsMap = new Map();\n      if (rowItem == null) {\n        // eslint-disable-next-line no-param-reassign\n        rowItem = {\n          data: tableBodyRow[Table._ROW_ITEM_EXPANDO].data,\n          metadata: tableBodyRow[Table._ROW_ITEM_EXPANDO].metadata\n        };\n      }\n      resultsMap.set(rowKey, rowItem);\n      dataPromise = Promise.resolve({ results: resultsMap });\n    } else {\n      // trigger fetchByKeys to get the new row data instead\n      dataPromise = dataprovider.fetchByKeys({ keys: new Set([rowKey]) });\n    }\n    return dataPromise.then(\n      function (keyResult) {\n        if (keyResult == null || keyResult.results == null || keyResult.results.size === 0) {\n          return Promise.resolve(false);\n        }\n\n        // Find out if the row contains the focus element.  Focus will be lost to the document body after refresh.\n        // eslint-disable-next-line no-param-reassign\n        resetFocus = resetFocus && tableBodyRow.contains(document.activeElement);\n\n        var rowResults = keyResult.results.get(rowKey);\n        return this._refreshTableBodyRow(\n          rowIdx,\n          {\n            data: rowResults.data,\n            metadata: rowResults.metadata,\n            index: rowIdx,\n            key: rowKey\n          },\n          null,\n          null,\n          null,\n          true\n        ).then(\n          function (refreshedRow) {\n            // Give the focus back to the table if needed.  currentRow is retained after refresh.\n            if (resetFocus) {\n              this._getTable().focus();\n            }\n            if (refreshedRow == null) {\n              // in case of null row, just resolve promise as there is no element to wait on\n              return Promise.resolve(true);\n            }\n            return this._finalizeBodyRowRendering([refreshedRow]);\n          }.bind(this)\n        );\n      }.bind(this)\n    );\n  };\n\n  /**\n   * Refresh the status message\n   * @private\n   */\n  Table.prototype._refreshTableStatusMessage = function () {\n    var tableStatusMessage = this._getTableStatusMessage();\n    if (tableStatusMessage != null) {\n      $(tableStatusMessage).remove();\n    }\n    this._createTableStatusMessage();\n  };\n\n  /**\n   * Show the Fetching Data... status message.\n   * @private\n   */\n  Table.prototype._showStatusMessage = function () {\n    if (this._showStatusTimeout) {\n      return;\n    }\n    if (!this._statusMessageShown) {\n      var tempSkeletonRow = this._getTableTempSkeletonRow();\n      if (tempSkeletonRow != null) {\n        // clear progressive loading if present\n        this._getTableBody().removeChild(tempSkeletonRow);\n      }\n      // clear any existing table rows (if a sort for example)\n      if (this._isSkeletonSupport()) {\n        var dataprovider = this._getData();\n        if (dataprovider instanceof oj.TableDataSourceAdapter) {\n          // if using legacy data source, and start index is greater than 0, leave current rows (paging loadMore case)\n          var adapterStartIndex = dataprovider._startIndex;\n          if (adapterStartIndex != null && adapterStartIndex > 0) {\n            return;\n          }\n        }\n        if (this._isExternalScrollEnabled()) {\n          this._bufferScrollerForLastRow();\n        }\n        this._isRowRemovalRequired = true;\n      }\n      // prettier-ignore\n      this._showStatusTimeout = setTimeout( // @HTMLUpdateOK\n        function () {\n          var resetFocus = false;\n          if (this._isSkeletonSupport() && this._isRowRemovalRequired) {\n            resetFocus = this._clearTableBodyRowsFromIndex(0);\n          }\n          this._refreshTableStatusPosition(true);\n          if (resetFocus) {\n            this._getTable().focus();\n          }\n          this._showStatusTimeout = null;\n        }.bind(this),\n        this._getShowStatusDelay()\n      );\n    }\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._showProgressiveLoading = function () {\n    var tableBodyRows = this._getTableBodyRows();\n    var tempSkeletonRow = this._getTableTempSkeletonRow();\n    if (tableBodyRows != null && tableBodyRows.length > 0 && !tempSkeletonRow) {\n      // add temporary table row for load more on scroll skeleton behavior\n      tempSkeletonRow = this._createTableBodyRow();\n      tempSkeletonRow.classList.add(Table.CSS_CLASSES._TABLE_FETCH_SKELETON_ROW_CLASS);\n      var tempCell = this._createTableBodyCell();\n      var columnsCount = this._getColumnDefs().length;\n      if (this._isGutterStartColumnEnabled()) {\n        columnsCount += 1;\n      }\n      if (this._isGutterEndColumnEnabled()) {\n        columnsCount += 1;\n      }\n      tempCell.colSpan = this._isDefaultSelectorEnabled() ? columnsCount + 1 : columnsCount;\n      tempCell.classList.add(Table.CSS_CLASSES._TABLE_SKELETON_CELL_CLASS);\n      for (var i = 0; i < 3; i++) {\n        tempCell.appendChild(this._createSkeletonRow()); // @HTMLUpdateOK\n      }\n      tempSkeletonRow.appendChild(tempCell); // @HTMLUpdateOK\n      this._appendElementToTableBody(tempSkeletonRow, this._getTableBody());\n      this._skeletonHWMSFadeInEndListener = function () {\n        tempSkeletonRow.classList.remove(Table.CSS_CLASSES._ANIMATION_SKELETON_FADE_IN_CLASS);\n        var skeletons = tempSkeletonRow.querySelectorAll('.oj-table-skeleton');\n        skeletons.forEach(function (row) {\n          row.classList.add('oj-animation-skeleton');\n        });\n        tempSkeletonRow.removeEventListener('animationend', this._skeletonHWMSFadeInEndListener);\n      }.bind(this);\n      tempSkeletonRow.addEventListener('animationend', this._skeletonHWMSFadeInEndListener);\n      tempSkeletonRow.classList.add(Table.CSS_CLASSES._ANIMATION_SKELETON_FADE_IN_CLASS);\n    }\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._insertSkeletonRow = function (rowElem, rowIdx) {\n    if (this._isSkeletonSupport()) {\n      var pendingRow;\n      if (rowElem != null) {\n        pendingRow = rowElem;\n      } else if (rowIdx === -1) {\n        pendingRow = this._getPlaceHolderRow();\n      } else {\n        pendingRow = this._getTableBodyRow(rowIdx);\n      }\n      if (pendingRow != null) {\n        // add temporary table row for load more on scroll skeleton behavior\n        var existingCells = pendingRow.children;\n        for (var i = 0; i < existingCells.length; i++) {\n          existingCells[i].classList.add(Table.CSS_CLASSES._TABLE_HIDDEN_CELL_CLASS);\n        }\n        var skeletonCell = this._createTableBodyCell();\n        var columnsCount = this._getColumnDefs().length;\n        if (this._isGutterStartColumnEnabled()) {\n          columnsCount += 1;\n        }\n        if (this._isGutterEndColumnEnabled()) {\n          columnsCount += 1;\n        }\n        skeletonCell.colSpan = this._isDefaultSelectorEnabled() ? columnsCount + 1 : columnsCount;\n        skeletonCell.classList.add(Table.CSS_CLASSES._TABLE_SKELETON_CELL_CLASS);\n        if (rowIdx === -1) {\n          skeletonCell.style[Table.CSS_PROP._TOP] = existingCells[0].style.top;\n        }\n        var skeletonRow = this._createSkeletonRow();\n        skeletonCell.appendChild(skeletonRow); // @HTMLUpdateOK\n        pendingRow.insertBefore(skeletonCell, pendingRow.firstChild); // @HTMLUpdateOK\n\n        this._skeletonHWMSFadeInEndListener = function () {\n          skeletonRow.classList.remove(Table.CSS_CLASSES._ANIMATION_SKELETON_FADE_IN_CLASS);\n          var skeletons = skeletonRow.querySelectorAll('.oj-table-skeleton');\n          skeletons.forEach(function (row) {\n            row.classList.add('oj-animation-skeleton');\n          });\n          skeletonRow.removeEventListener('animationend', this._skeletonHWMSFadeInEndListener);\n        }.bind(this);\n        skeletonRow.addEventListener('animationend', this._skeletonHWMSFadeInEndListener);\n        skeletonRow.classList.add(Table.CSS_CLASSES._ANIMATION_SKELETON_FADE_IN_CLASS);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._removeSkeletonRow = function (rowElem, rowIdx) {\n    if (this._isSkeletonSupport()) {\n      var pendingRow;\n      if (rowElem != null) {\n        pendingRow = rowElem;\n      } else if (rowIdx === -1) {\n        pendingRow = this._getPlaceHolderRow();\n      } else {\n        pendingRow = this._getTableBodyRow(rowIdx);\n      }\n      if (pendingRow != null) {\n        // remove temporary table row for pending skeleton behavior\n        var skeletonCell = pendingRow.children[0];\n        if (\n          skeletonCell != null &&\n          skeletonCell.classList.contains(Table.CSS_CLASSES._TABLE_SKELETON_CELL_CLASS)\n        ) {\n          var skeletonRow = skeletonCell.children[0];\n          if (skeletonRow != null) {\n            skeletonRow.classList.remove(Table.CSS_CLASSES._ANIMATION_SKELETON_FADE_IN_CLASS);\n            skeletonRow.removeEventListener('animationend', this._skeletonHWMSFadeInEndListener);\n          }\n          pendingRow.removeChild(skeletonCell);\n        }\n        var existingCells = pendingRow.children;\n        for (var i = 0; i < existingCells.length; i++) {\n          existingCells[i].classList.remove(Table.CSS_CLASSES._TABLE_HIDDEN_CELL_CLASS);\n        }\n      }\n    }\n  };\n\n  /**\n   * Hide the Fetching Data... status message.\n   * @private\n   */\n  Table.prototype._hideStatusMessage = function () {\n    this._clearShowStatusTimeout();\n    var tempSkeletonRow = this._getTableTempSkeletonRow();\n    if (this._statusMessageShown || tempSkeletonRow) {\n      var statusMessage = this._getTableStatusMessage();\n      statusMessage.style[Table.CSS_PROP._DISPLAY] = Table.CSS_VAL._NONE;\n\n      if (this._isSkeletonSupport()) {\n        if (tempSkeletonRow) {\n          this._getTableBody().removeChild(tempSkeletonRow);\n        } else {\n          var skeletons = statusMessage.childNodes;\n          for (var i = skeletons.length; i > 0; i--) {\n            statusMessage.removeChild(skeletons[i - 1]);\n          }\n        }\n      }\n      this._statusMessageShown = false;\n    }\n  };\n\n  /**\n   * Return whether the status message is shown\n   * @return {boolean} true or false\n   * @private\n   */\n  Table.prototype._isStatusMessageShown = function () {\n    return this._statusMessageShown;\n  };\n\n  /**\n   * Gets all the default options\n   * @return {Object} The default options value\n   * @private\n   */\n  Table.prototype._getDefaultOptions = function () {\n    if (this._defaultOptions == null) {\n      this._defaultOptions = {};\n      const keys = Object.keys(Table._CSS_Vars);\n      const vars = keys.map((key) => Table._CSS_Vars[key]);\n      const values = ThemeUtils.getCachedCSSVarValues(vars);\n      keys.forEach((key, i) => {\n        this._defaultOptions[key] = values[i];\n      });\n    }\n    return this._defaultOptions;\n  };\n\n  /**\n   * Retrieve the delay before showing status\n   * @return {number} the delay in ms\n   * @private\n   */\n  Table.prototype._getShowStatusDelay = function () {\n    return DomUtils.getCSSTimeUnitAsMillis(this._getDefaultOptions().showIndicatorDelay);\n  };\n\n  /**\n   * Whether or not skeleton loading should be used\n   * @private\n   */\n  Table.prototype._isSkeletonSupport = function () {\n    return this._getDefaultOptions().loadIndicator === 'skeleton';\n  };\n\n  /**\n   * Show the 'No data to display.' or 'Initializing...' message.\n   * @private\n   */\n  Table.prototype._showNoDataMessage = function () {\n    if (!this._noDataMessageShown) {\n      var messageRow = this._getTableBodyMessageRow();\n      var dataprovider = this._getData();\n      var noDataTemplate = this._getSlotTemplate('noData');\n      if (this._isDefaultTemplateSlotValid('noData') && noDataTemplate !== null) {\n        var table = this._getTable();\n        var tableBody = this._getTableBody();\n        table.classList.add(Table.CSS_CLASSES._TABLE_NO_DATA_CONTAINER_CLASS);\n        var noDataContentRow = document.createElement(Table.DOM_ELEMENT._TR); // @HTMLUpdateOK\n        noDataContentRow.id = this.createSubId('noData');\n        noDataContentRow.classList.add(Table.CSS_CLASSES._TABLE_NO_DATA_ROW_CLASS);\n        this._appendElementToTableBody(noDataContentRow, tableBody);\n        if (this._isGutterStartColumnEnabled()) {\n          let gutterCell = this._createTableGutterCell('body', 'start');\n          noDataContentRow.appendChild(gutterCell); // @HTMLUpdateOK\n        }\n        var noDataContentCell = document.createElement(Table.DOM_ELEMENT._TD); // @HTMLUpdateOK\n        var columnCount = this._getColumnDefs().length;\n        if (this._isDefaultSelectorEnabled()) {\n          // eslint-disable-next-line no-param-reassign\n          columnCount += 1;\n        }\n        noDataContentCell.setAttribute(Table.DOM_ATTR._COLSPAN, columnCount); // @HTMLUpdateOK\n        noDataContentRow.appendChild(noDataContentCell); // @HTMLUpdateOK\n        if (this._isGutterEndColumnEnabled()) {\n          let gutterCell = this._createTableGutterCell('body', 'end');\n          noDataContentRow.appendChild(gutterCell); // @HTMLUpdateOK\n        }\n        var templateEngine = this._getTemplateEngine();\n        if (templateEngine != null) {\n          var nodes = templateEngine.execute(\n            this._getRootElement(),\n            noDataTemplate,\n            {},\n            null,\n            tableBody\n          );\n          nodes.forEach(function (node) {\n            noDataContentCell.appendChild(node); // @HTMLUpdateOK\n          });\n          this._hasNoDataTemplate = true;\n        }\n      } else {\n        var emptyTextMsg = null;\n        if (this.options.emptyText != null) {\n          emptyTextMsg = this.options.emptyText;\n        } else {\n          emptyTextMsg = this.getTranslatedString(Table._BUNDLE_KEY._MSG_NO_DATA);\n        }\n        // if data is null then we are initializing\n        var messageText =\n          dataprovider != null\n            ? emptyTextMsg\n            : this.getTranslatedString(Table._BUNDLE_KEY._MSG_INITIALIZING);\n\n        if (messageRow == null) {\n          this._createTableBodyMessageRow(this._getColumnDefs().length, messageText);\n        } else {\n          this._setTableBodyMessage(messageText);\n        }\n      }\n      this._noDataMessageShown = true;\n    }\n  };\n\n  /**\n   * Hide the 'No data to display.' message.\n   * @private\n   */\n  Table.prototype._hideNoDataMessage = function () {\n    if (this._noDataMessageShown) {\n      var tableBodyMessageRow = this._getTableBodyMessageRow();\n      if (tableBodyMessageRow != null) {\n        $(tableBodyMessageRow).remove();\n      } else {\n        var table = this._getTable();\n        if (table.classList.contains(Table.CSS_CLASSES._TABLE_NO_DATA_CONTAINER_CLASS)) {\n          table.classList.remove(Table.CSS_CLASSES._TABLE_NO_DATA_CONTAINER_CLASS);\n          var noDataRow = this._getTableNoDataRow();\n          if (noDataRow != null) {\n            this._cleanTemplateNodes(noDataRow);\n            $(noDataRow).remove();\n            this._hasNoDataTemplate = false;\n          }\n        }\n      }\n      this._noDataMessageShown = false;\n    }\n  };\n\n  /**\n   * Callback from the resize popup box\n   * @param {Event} event the event that triggered the popup button press\n   * @private\n   */\n  Table.prototype._handleContextMenuResizePopup = function () {\n    let columnIdx;\n    let widthValue;\n    const isRedwood = ThemeUtils.parseJSONFromFontFamily('oj-theme-json').behavior === 'redwood';\n    if (!isRedwood) {\n      let spinner = document.getElementById(this._getTableUID() + '_resize_popup_spinner');\n      let popup = this._getContextMenuResizePopup();\n      columnIdx = parseInt(popup.getAttribute(Table._DATA_OJ_COLUMNIDX), 10);\n      if (this._IsCustomElement() && spinner.valid === 'valid') {\n        widthValue = spinner.value;\n        popup.close();\n      } else if (\n        !this._IsCustomElement() &&\n        $(spinner).ojInputNumber('option', 'valid') === 'valid'\n      ) {\n        widthValue = $(spinner).ojInputNumber('option', 'value');\n        $(popup).ojPopup('close');\n      } else {\n        return;\n      }\n    } else {\n      let columnWidthInput = document.getElementById(\n        this._getTableUID() + '_resize_column_width_input'\n      );\n      let dialog = this._getContextMenuResizeDialog();\n      columnIdx = parseInt(dialog.getAttribute(Table._DATA_OJ_COLUMNIDX), 10);\n      if (this._IsCustomElement() && columnWidthInput.valid === 'valid') {\n        widthValue = columnWidthInput.value;\n        dialog.close();\n      } else if (\n        !this._IsCustomElement() &&\n        $(columnWidthInput).ojInputNumber('option', 'valid') === 'valid'\n      ) {\n        widthValue = $(columnWidthInput).ojInputNumber('option', 'value');\n        $(dialog).ojDialog('close');\n      } else {\n        return;\n      }\n    }\n    var clonedColumnsOption = [];\n    var columnsCount = this.options.columns.length;\n\n    for (var i = 0; i < columnsCount; i++) {\n      clonedColumnsOption[i] = $.extend({}, {}, this.options.columns[i]);\n    }\n    var minWidth = this._getLayoutManager().getMinimumForcedOffsetWidth(columnIdx);\n    clonedColumnsOption[columnIdx].width = Math.max(widthValue, minWidth);\n    this.option('columns', clonedColumnsOption, {\n      _context: {\n        writeback: true,\n        internalSet: true\n      }\n    });\n    this._clearCachedMetadata();\n    this._queueTask(\n      function () {\n        var layoutManager = this._getLayoutManager();\n        layoutManager.notifyTableUpdate(Table._UPDATE._COL_RESIZE);\n        // delay the focus to ensure table is fully updated before focus is restored\n        // prettier-ignore\n        setTimeout( // @HTMLUpdateOK\n          function () {\n            this._getTable().focus();\n          }.bind(this),\n          0\n        );\n      }.bind(this)\n    );\n  };\n\n  /**\n   * Handle an ojselect event on a menu item, if sort call the handler on the core.\n   * If resize prompt the user with a popup\n   * @private\n   */\n  Table.prototype._handleContextMenuSelect = function (event, ui) {\n    var item;\n    if (ui) {\n      item = ui.item;\n    } else {\n      item = $(event.target);\n    }\n    var menuItemCommand = item.attr(Table._DATA_OJ_COMMAND);\n    var headerColumn = this._getFirstAncestor(\n      this._contextMenuEvent.target,\n      '.' + Table.CSS_CLASSES._COLUMN_HEADER_CELL_CLASS,\n      true\n    );\n    headerColumn = headerColumn == null ? this._contextMenuEventHeaderColumn : headerColumn;\n    var tableBodyCell = this._getFirstAncestor(\n      this._contextMenuEvent.target,\n      '.' + Table.CSS_CLASSES._TABLE_DATA_CELL_CLASS,\n      true\n    );\n    var columnIdx = null;\n\n    if (headerColumn != null) {\n      columnIdx = this._getElementColumnIdx(headerColumn);\n    } else if (tableBodyCell != null) {\n      columnIdx = this._getElementColumnIdx(tableBodyCell);\n    }\n    if (columnIdx === null) {\n      return;\n    }\n\n    if (menuItemCommand === 'oj-table-sortAsc') {\n      this._handleSortTableHeaderColumn(columnIdx, true, event);\n    } else if (menuItemCommand === 'oj-table-sortDsc') {\n      this._handleSortTableHeaderColumn(columnIdx, false, event);\n    } else if (menuItemCommand === 'oj-table-enableNonContiguousSelection') {\n      this._nonContiguousSelection = true;\n      this._removeTableBodyRowTouchSelectionAffordance();\n      // update to disable command\n      item.attr(Table._DATA_OJ_COMMAND, 'oj-table-disableNonContiguousSelection'); // @HTMLUpdateOK\n      item.children().first().text(this.getTranslatedString('labelDisableNonContiguousSelection'));\n    } else if (menuItemCommand === 'oj-table-disableNonContiguousSelection') {\n      this._nonContiguousSelection = false;\n      // update to enable command\n      item.attr(Table._DATA_OJ_COMMAND, 'oj-table-enableNonContiguousSelection'); // @HTMLUpdateOK\n      item.children().first().text(this.getTranslatedString('labelEnableNonContiguousSelection'));\n    } else if (menuItemCommand === 'oj-table-resize') {\n      var target = headerColumn || tableBodyCell;\n      var columnWidth = this._getLayoutManager().getColumnWidthProperty(target);\n\n      var launcher = headerColumn != null ? headerColumn : tableBodyCell;\n\n      const isRedwood = ThemeUtils.parseJSONFromFontFamily('oj-theme-json').behavior === 'redwood';\n      if (!isRedwood) {\n        let popup = this._getContextMenuResizePopup();\n        popup.setAttribute(Table._DATA_OJ_COLUMNIDX, columnIdx); // @HTMLUpdateOK\n\n        let spinner = document.getElementById(this._getTableUID() + '_resize_popup_spinner');\n        if (this._IsCustomElement()) {\n          spinner.value = Math.round(columnWidth);\n          popup.open(launcher);\n        } else {\n          $(spinner).ojInputNumber('option', 'value', Math.round(columnWidth));\n          $(popup).ojPopup('open', launcher);\n        }\n      } else {\n        let dialog = this._getContextMenuResizeDialog();\n        dialog.setAttribute(Table._DATA_OJ_COLUMNIDX, columnIdx); // @HTMLUpdateOK\n\n        let columnWidthInput = document.getElementById(\n          this._getTableUID() + '_resize_column_width_input'\n        );\n        if (this._IsCustomElement()) {\n          columnWidthInput.value = Math.round(columnWidth);\n          dialog.open(launcher);\n        } else {\n          $(columnWidthInput).ojInputNumber('option', 'value', Math.round(columnWidth));\n          $(dialog).ojDialog('open', launcher);\n        }\n      }\n    }\n  };\n\n  /**\n   * Register event listeners for resize the container DOM element.\n   * @private\n   */\n  Table.prototype._registerResizeListener = function () {\n    var element = this._getTableContainer();\n    if (!this._resizeListener) {\n      this._resizeListener = function () {\n        var layoutManager = this._getLayoutManager();\n        var containerStyle = window.getComputedStyle(this._getTableContainer());\n        // Check if the width and height values should result in a sizing refresh\n        if (\n          layoutManager.isSizingRefreshRequired(\n            layoutManager.getExactOffsetWidth(containerStyle),\n            layoutManager.getExactOffsetHeight(containerStyle)\n          )\n        ) {\n          layoutManager.notifyTableUpdate(Table._UPDATE._RESIZE);\n          // refresh dimensions if no tasks are pending since refresh dimensions runs during final task\n          if (!this._hasPendingTasks()) {\n            this._syncTableSizing(true);\n          }\n        }\n      }.bind(this);\n    }\n    if (!this._isResizeListenerAdded) {\n      DomUtils.addResizeListener(element, this._resizeListener, 50, true);\n      this._isResizeListenerAdded = true;\n    }\n  };\n\n  /**\n   * Unregister event listeners for resize the container DOM element.\n   * @private\n   */\n  Table.prototype._unregisterResizeListener = function () {\n    var element = this._getTableContainer();\n    DomUtils.removeResizeListener(element, this._resizeListener);\n    this._isResizeListenerAdded = false;\n  };\n\n  /**\n   * Unregister _focusable(), etc, which were added to the child elements\n   * @param {Element} parent div DOM element\n   * @private\n   */\n  Table.prototype._unregisterChildStateListeners = function (parent) {\n    var elements = parent.querySelectorAll('*');\n    for (var i = 0; i < elements.length; i++) {\n      this._UnregisterChildNode(elements[i]);\n    }\n  };\n\n  /**\n   * Is loadMoreOnScroll\n   * @return {boolean} true or false\n   * @private\n   */\n  Table.prototype._isLoadMoreOnScroll = function () {\n    if (this.options.scrollPolicy === Table._OPTION_SCROLL_POLICY._AUTO) {\n      // maintain old 'auto' behavior for legacy DataSource\n      return !(this._data instanceof oj.TableDataSourceAdapter);\n    }\n    return this.options.scrollPolicy !== Table._OPTION_SCROLL_POLICY._LOAD_ALL;\n  };\n\n  /**\n   * Returns whether the table is headerless\n   * @return {boolean} true or false\n   * @private\n   */\n  Table.prototype._isTableHeaderless = function () {\n    var columns = this._getColumnDefs();\n    var columnsCount = columns.length;\n    for (var i = 0; i < columnsCount; i++) {\n      var headerSlotTemplate = this._getSlotTemplate(columns[i][Table._HEADER_TEMPLATE]);\n      if (\n        columns[i].headerText != null ||\n        columns[i].headerStyle != null ||\n        (columns[i].sortable != null && columns[i].sortable !== Table._OPTION_DISABLED) ||\n        columns[i].sortProperty != null ||\n        columns[i].headerRenderer != null ||\n        headerSlotTemplate != null\n      ) {\n        return false;\n      }\n    }\n    // check for default slot header template\n    if (this._isDefaultHeaderTemplateSlotValid()) {\n      var defaultHeaderSlotTemplate = this._getSlotTemplate('headerTemplate');\n      if (defaultHeaderSlotTemplate != null) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  /**\n   * Returns whether the table is footerless\n   * @return {boolean} true or false\n   * @private\n   */\n  Table.prototype._isTableFooterless = function () {\n    var columns = this._getColumnDefs();\n    var columnsCount = columns.length;\n\n    for (var i = 0; i < columnsCount; i++) {\n      var footerRenderer = this._getColumnRenderer(i, 'footer');\n      var footerSlotTemplate = this._getSlotTemplate(columns[i][Table._FOOTER_TEMPLATE]);\n\n      if (footerRenderer != null) {\n        return false;\n      }\n      if (footerSlotTemplate != null) {\n        return false;\n      }\n    }\n    // check for default slot footer template\n    if (this._isDefaultFooterTemplateSlotValid()) {\n      var defaultFooterSlotTemplate = this._getSlotTemplate('footerTemplate');\n      if (defaultFooterSlotTemplate != null) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  /**\n   * Returns whether the table header columns were rendered\n   * @return {boolean} true or false\n   * @private\n   */\n  Table.prototype._isTableHeaderColumnsRendered = function () {\n    return this._renderedTableHeaderColumns === true;\n  };\n\n  /**\n   * Returns whether the table refresh is needed based on option change\n   * @param {string} key option key\n   * @param {Object} value option value\n   * @param {Object} flags object containing additional context (subkey, subproperty, etc...)\n   * @return {boolean} true or false\n   * @private\n   */\n  Table.prototype._isTableRefreshNeeded = function (key, value, flags) {\n    var currentOptions = this.options;\n    var refresh;\n\n    if (\n      (key === 'contextMenu' && value === '#' + this._getTableUID() + '_contextmenu') ||\n      (key === 'columns' && !this._isColumnMetadataUpdated(value)) ||\n      key === 'scrollToKey' ||\n      key === 'addRowDisplay' ||\n      key === 'scrollPosition' ||\n      key === 'selection' ||\n      key === 'selected' ||\n      key === 'currentRow' ||\n      key === 'editRow' ||\n      (key === 'scrollPolicyOptions' &&\n        this._isStickyLayoutEnabled() &&\n        flags != null &&\n        (flags.subkey === 'scrollerOffsetTop' ||\n          flags.subkey === 'scrollerOffsetBottom' ||\n          flags.subkey === 'scrollerOffsetStart' ||\n          flags.subkey === 'scrollerOffsetEnd'))\n    ) {\n      refresh = false;\n    } else if (!oj.Object.compareValues(value, currentOptions[key])) {\n      if (key === 'verticalGridVisible' || key === 'display') {\n        this._renderedTableHeaderColumns = false;\n      }\n      refresh = true;\n    } else {\n      refresh = false;\n    }\n\n    return refresh;\n  };\n\n  /**\n   * Returns whether any of the table columns are sortable\n   * @return {boolean} true or false\n   * @private\n   */\n  Table.prototype._isTableSortable = function () {\n    var columns = this._getColumnDefs();\n    var columnsCount = columns.length;\n    for (var i = 0; i < columnsCount; i++) {\n      if (columns[i].sortable === Table._OPTION_ENABLED) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Returns whether any of the table columns are resizable\n   * @return {boolean} true or false\n   * @private\n   */\n  Table.prototype._isTableColumnsResizable = function () {\n    var columns = this._getColumnDefs();\n    var columnsCount = columns.length;\n    for (var i = 0; i < columnsCount; i++) {\n      if (columns[i].resizable === Table._OPTION_ENABLED) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Determine if the current agent is touch device\n   * @private\n   */\n  Table.prototype._isTouchDevice = function () {\n    if (this._isTouch == null) {\n      this._isTouch = DataCollectionUtils.isMobileTouchDevice();\n    }\n    return this._isTouch;\n  };\n\n  /**\n   * Process any slotted children and move them into the correct location\n   * @private\n   */\n  Table.prototype._processSlottedChildren = function () {\n    var tableBottomSlot = this._getTableBottomSlot();\n    if (tableBottomSlot != null) {\n      // clear the existing bottom slot\n      $(tableBottomSlot).remove();\n    }\n    var slotMap = ojcustomelementUtils.CustomElementUtils.getSlotMap(this._getRootElement());\n\n    var slots = Object.keys(slotMap);\n    for (var j = 0; j < slots.length; j++) {\n      var slot = slots[j];\n      if (slot === 'bottom') {\n        var slotElements = slotMap[slot];\n\n        if (slotElements != null) {\n          tableBottomSlot = this._createTableBottomSlot();\n          for (var i = 0; i < slotElements.length; i++) {\n            tableBottomSlot.appendChild(slotElements[i]);\n          }\n        }\n      }\n    }\n  };\n\n  /**\n   * Handler for column sort\n   * @param {number} columnIdx  column index\n   * @param {boolean} ascending  sort order ascending\n   * @param {Object} event\n   * @private\n   */\n  Table.prototype._handleSortTableHeaderColumn = function (columnIdx, ascending, event) {\n    // clear the sorted indicator on any other column\n    this._clearSortedHeaderColumn(columnIdx);\n    // get the column metadata\n    var column = this._getColumnDefs()[columnIdx];\n    // get which field to sort on\n    var sortField = column.sortProperty == null ? column.field : column.sortProperty;\n    // invoke sort on the data\n    this._invokeDataSort(sortField, ascending, event);\n    this._sortColumn = column;\n    this._refreshSortTableHeaderColumn(sortField, ascending);\n  };\n\n  /**\n   * Process any sort from the fetch\n   * @param {Object} result result of the fetch\n   * @private\n   */\n  Table.prototype._processFetchSort = function (result) {\n    try {\n      var fetchParameters = result.fetchParameters;\n      var sortCriteria = fetchParameters[Table._CONST_SORTCRITERIA];\n      if (sortCriteria != null && sortCriteria.length > 0) {\n        var sortAttribute = sortCriteria[0].attribute;\n        var sortDirection = sortCriteria[0].direction === Table._COLUMN_SORT_ORDER._ASCENDING;\n        this._refreshSortTableHeaderColumn(sortAttribute, sortDirection);\n        // set the current row\n        this._setCurrentRow(this.options.currentRow);\n      } else {\n        this._clearSortedHeaderColumn();\n      }\n    } catch (e) {\n      Logger.error(e);\n    }\n  };\n\n  /**\n   * Callback handler mouse move/enter for column headers.\n   * @private\n   */\n  Table.prototype._handleMouseEnterColumnHeader = function (element) {\n    if (element) {\n      if (this._isColumnSelectionEnabled()) {\n        element.classList.add(Table.MARKER_STYLE_CLASSES._HOVER);\n      }\n      // get the column index of the header element\n      var columnIdx = this._getElementColumnIdx(element);\n\n      // add hover class if element is sort icon\n      if (\n        element.classList.contains(Table.CSS_CLASSES._COLUMN_HEADER_ASC_ICON_CLASS) ||\n        element.classList.contains(Table.CSS_CLASSES._COLUMN_HEADER_DSC_ICON_CLASS) ||\n        element.classList.contains(Table.CSS_CLASSES._COLUMN_HEADER_DEFAULT_SORT_ICON_CLASS)\n      ) {\n        element.classList.add(Table.MARKER_STYLE_CLASSES._HOVER);\n      }\n      // show sort icon on hover\n      this._showTableHeaderColumnSortIcon(columnIdx);\n    }\n  };\n\n  /**\n   * Callback handler mouse leave for column headers.\n   * @private\n   */\n  Table.prototype._handleMouseLeaveColumnHeader = function (element) {\n    if (element) {\n      element.classList.remove(Table.MARKER_STYLE_CLASSES._HOVER);\n      // get the column index of the header element\n      var columnIdx = this._getElementColumnIdx(element);\n      // hide the sort icon for the header\n      this._hideTableHeaderColumnSortIcon(columnIdx);\n    }\n  };\n\n  /**\n   * Show the column header sort icon\n   * @param {number} columnIdx  column index\n   * @private\n   */\n  Table.prototype._showTableHeaderColumnSortIcon = function (columnIdx) {\n    if (this._getColumnDefs()[columnIdx].sortable === Table._OPTION_ENABLED) {\n      var tableHeaderColumn = this._getTableHeaderColumn(columnIdx);\n      if (!tableHeaderColumn) {\n        return;\n      }\n      // we should only show the ascending sort icon if the column is not sorted\n      var sorted = $(tableHeaderColumn).data('sorted');\n      if (sorted == null) {\n        var sortContainer = this._getSortIconContainer(tableHeaderColumn);\n        var sortIcon = this._getSortIcon(tableHeaderColumn);\n        if (sortContainer != null && sortIcon != null) {\n          sortIcon.classList.remove(Table.MARKER_STYLE_CLASSES._DISABLED);\n          sortIcon.classList.add(Table.MARKER_STYLE_CLASSES._ENABLED);\n          sortIcon.classList.add(Table.MARKER_STYLE_CLASSES._DEFAULT);\n        }\n      }\n    }\n  };\n\n  /**\n   * Hide the column header sort icon\n   * @param {number} columnIdx  column index\n   * @private\n   */\n  Table.prototype._hideTableHeaderColumnSortIcon = function (columnIdx) {\n    // check if the column is sortable. If not, then there won't be any sort icons\n    if (this._getColumnDefs()[columnIdx].sortable === Table._OPTION_ENABLED) {\n      var tableHeaderColumn = this._getTableHeaderColumn(columnIdx);\n      // check if the column is currently sorted\n      var sorted = $(tableHeaderColumn).data('sorted');\n      if (sorted == null) {\n        var sortContainer = this._getSortIconContainer(tableHeaderColumn);\n        var sortIcon = this._getSortIcon(tableHeaderColumn);\n        if (sortContainer != null && sortIcon != null) {\n          sortContainer.setAttribute(Table.DOM_ATTR._TITLE, this.getTranslatedString('labelSortAsc')); // @HTMLUpdateOK\n          sortIcon.classList.remove(Table.CSS_CLASSES._COLUMN_HEADER_DSC_ICON_CLASS);\n          sortIcon.classList.remove(Table.CSS_CLASSES._COLUMN_HEADER_ASC_ICON_CLASS);\n          sortIcon.classList.add(Table.CSS_CLASSES._COLUMN_HEADER_DEFAULT_SORT_ICON_CLASS);\n          sortIcon.classList.add(Table.MARKER_STYLE_CLASSES._DISABLED);\n          sortIcon.classList.remove(Table.MARKER_STYLE_CLASSES._ENABLED);\n          sortIcon.classList.remove(Table.MARKER_STYLE_CLASSES._DEFAULT);\n        }\n      }\n    }\n  };\n\n  /**\n   * Handler for column sort\n   * @param {string} key sort key\n   * @param {boolean} ascending  sort order ascending\n   * @private\n   */\n  Table.prototype._refreshSortTableHeaderColumn = function (key, ascending) {\n    var columns = this._getColumnDefs();\n    var columnIdx = null;\n    var columnsCount = columns.length;\n    var sortIcon;\n\n    for (var i = 0; i < columnsCount; i++) {\n      var column = columns[i];\n      var sortField = column.sortProperty == null ? column.field : column.sortProperty;\n\n      if (key === sortField) {\n        columnIdx = i;\n        break;\n      }\n    }\n    if (columnIdx == null) {\n      return;\n    }\n\n    // clear the sorted indicator on any other column\n    this._clearSortedHeaderColumn(columnIdx);\n    // get the column header DOM element\n    var tableHeaderColumn = this._getTableHeaderColumn(columnIdx);\n    if (tableHeaderColumn == null) {\n      return;\n    }\n\n    var sorted = $(tableHeaderColumn).data('sorted');\n    var sortContainer = this._getSortIconContainer(tableHeaderColumn);\n    sortIcon = this._getSortIcon(tableHeaderColumn);\n    if (sortIcon != null) {\n      sortIcon.classList.add(Table.MARKER_STYLE_CLASSES._DEFAULT);\n      sortIcon.classList.remove(Table.MARKER_STYLE_CLASSES._DISABLED);\n    }\n\n    if (ascending && sorted !== Table._COLUMN_SORT_ORDER._ASCENDING) {\n      // store sort order on the DOM element\n      $(tableHeaderColumn).data('sorted', Table._COLUMN_SORT_ORDER._ASCENDING);\n\n      if (sortIcon != null) {\n        sortContainer.setAttribute(Table.DOM_ATTR._TITLE, this.getTranslatedString('labelSortDsc')); // @HTMLUpdateOK\n        sortIcon.classList.remove(Table.CSS_CLASSES._COLUMN_HEADER_DEFAULT_SORT_ICON_CLASS);\n        sortIcon.classList.remove(Table.CSS_CLASSES._COLUMN_HEADER_DSC_ICON_CLASS);\n        sortIcon.classList.add(Table.CSS_CLASSES._COLUMN_HEADER_ASC_ICON_CLASS);\n      }\n    } else if (!ascending && sorted !== Table._COLUMN_SORT_ORDER._DESCENDING) {\n      // store sort order on the DOM element\n      $(tableHeaderColumn).data('sorted', Table._COLUMN_SORT_ORDER._DESCENDING);\n      if (sortIcon != null) {\n        sortContainer.setAttribute(Table.DOM_ATTR._TITLE, this.getTranslatedString('labelSortAsc')); // @HTMLUpdateOK\n        sortIcon.classList.remove(Table.CSS_CLASSES._COLUMN_HEADER_DEFAULT_SORT_ICON_CLASS);\n        sortIcon.classList.remove(Table.CSS_CLASSES._COLUMN_HEADER_ASC_ICON_CLASS);\n        sortIcon.classList.add(Table.CSS_CLASSES._COLUMN_HEADER_DSC_ICON_CLASS);\n      }\n    }\n  };\n\n  /**\n   * Return the currently sorted column index\n   * @return {number|null} column index\n   * @private\n   */\n  Table.prototype._getSortedTableHeaderColumnIdx = function () {\n    var tableHeaderColumns = this._getTableHeaderColumns();\n\n    for (var i = 0; i < tableHeaderColumns.length; i++) {\n      // sorted column will have the sorted data attr\n      var sorted = $(tableHeaderColumns[i]).data('sorted');\n      if (sorted != null) {\n        return i;\n      }\n    }\n    return null;\n  };\n\n  /**\n   * Clear the sorted column header indicator. Note this does not affect the order\n   * of the data. This is just to clear the UI indication.\n   * @param {number|null} columnIdx  column index\n   * @private\n   */\n  Table.prototype._clearSortedHeaderColumn = function (columnIdx) {\n    var sortedTableHeaderColumnIdx = this._getSortedTableHeaderColumnIdx();\n    if (sortedTableHeaderColumnIdx != null) {\n      var sortedTableHeaderColumn = this._getTableHeaderColumn(sortedTableHeaderColumnIdx);\n      $(sortedTableHeaderColumn).data('sorted', null);\n\n      if (columnIdx == null || sortedTableHeaderColumnIdx !== columnIdx) {\n        this._hideTableHeaderColumnSortIcon(sortedTableHeaderColumnIdx);\n      } else {\n        var sortIcon = this._getSortIcon(sortedTableHeaderColumn);\n        if (sortIcon != null) {\n          sortIcon.classList.remove(Table.MARKER_STYLE_CLASSES._SELECTED);\n        }\n      }\n    }\n  };\n\n  /**\n   * Return the column definitions\n   * @return {Array} array of column metadata Objects.\n   * @private\n   */\n  Table.prototype._getColumnDefs = function () {\n    // cache the columns array in this._columnDefArray\n    if (!this._columnDefArray) {\n      this._columnDefArray = this._getColumnMetadata();\n    }\n    return this._columnDefArray;\n  };\n\n  /**\n   * Return the column metadata in sorted oder.\n   * @return {Array} array of column metadata Objects.\n   * @private\n   */\n  Table.prototype._getColumnMetadata = function (columnsOption) {\n    // get the columns metadata\n    var columns = columnsOption != null ? columnsOption : this.options.columns;\n    var columnsDefault = this.options.columnsDefault;\n\n    if (\n      (columns.length === 0 ||\n        (columns.length === 1 &&\n          columns[0].id == null &&\n          columns[0].headerText == null &&\n          columns[0].field == null)) &&\n      columnsDefault.headerText == null &&\n      columnsDefault.field == null\n    ) {\n      return [];\n    }\n\n    var i;\n    var defaultedColumns = [];\n    var columnsCount = columns.length;\n    for (i = 0; i < columnsCount; i++) {\n      defaultedColumns[i] = $.extend({}, columnsDefault, columns[i]);\n    }\n\n    var columnsSortedArray = [];\n    // add the rest of the columns in the array\n    var defaultedColumnsCount = defaultedColumns.length;\n    for (i = 0; i < defaultedColumnsCount; i++) {\n      columnsSortedArray.push(defaultedColumns[i]);\n    }\n\n    var data = this._getData();\n    var sortSupportedData = false;\n    if (data != null && data.getCapability('sort') != null) {\n      sortSupportedData = true;\n    }\n\n    for (i = 0; i < defaultedColumnsCount; i++) {\n      // generate ids for columns which don't have it specified\n      if (columnsSortedArray[i][Table._FIELD_ID] == null) {\n        columnsSortedArray[i][Table._FIELD_ID] = Table._COLUMN_HEADER_ID_PREFIX + i;\n      }\n      // for the columns which have sortable = 'auto' check the datasource\n      // and enable or disable\n      if (\n        sortSupportedData &&\n        (columnsSortedArray[i].sortable == null ||\n          columnsSortedArray[i].sortable === Table._OPTION_AUTO)\n      ) {\n        columnsSortedArray[i].sortable = Table._OPTION_ENABLED;\n      }\n    }\n    return columnsSortedArray;\n  };\n\n  /**\n   * Return the column renderer\n   * @param {number} columnIdx  column index\n   * @param {String} type  renderer type\n   * @return {Object} renderer\n   * @private\n   */\n  Table.prototype._getColumnRenderer = function (columnIdx, type) {\n    var columns = this._getColumnDefs();\n    var column = columns[columnIdx];\n    var renderer = null;\n    if (type === 'cell') {\n      renderer = column.renderer;\n    } else if (type === 'footer') {\n      renderer = column.footerRenderer;\n    } else if (type === 'header') {\n      renderer = column.headerRenderer;\n    }\n    return this._WrapCustomElementRenderer(renderer);\n  };\n\n  /**\n   * Return the row renderer\n   * @return {Object} renderer\n   * @private\n   */\n  Table.prototype._getRowRenderer = function () {\n    return this._WrapCustomElementRenderer(this.options.rowRenderer);\n  };\n\n  /**\n   * Returns true if the last row is in viewport.  Otherwise returns false (including no data).\n   * @private\n   */\n  Table.prototype._isLastRowInViewport = function () {\n    var tableBodyRows = this._getTableBodyRows();\n    var lastRow = tableBodyRows[tableBodyRows.length - 1];\n    var vertOverflowDiff = this._getLayoutManager().getVerticalOverflowDiff(lastRow);\n    return vertOverflowDiff.bottom - lastRow.offsetHeight <= 0;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._registerDomScroller = function () {\n    // clear any existing DomScroller references\n    this._unregisterDomScroller();\n    var controller = this._controller;\n\n    var layoutManager = this._getLayoutManager();\n    this._domScrollerSuccessFunc = function (result) {\n      // do not hide progressive loading until rows are fully rendered except for animation case\n      this._clearDataWaitingState(!this._animateOnFetch);\n      if (result != null) {\n        // return early if the fetch was aborted\n        if (DataCollectionUtils.isFetchAborted(result)) {\n          this._hideStatusMessage();\n          this._clearScrollBuffer();\n          return;\n        }\n        this._noMoreData = false;\n        if (result.maxCountLimit) {\n          // set if there will be no more data returned from the DomScroller going forward\n          this._noMoreData = true;\n          this._handleScrollerMaxRowCount();\n        }\n        var value = result[Table._CONST_VALUE];\n        if (value != null) {\n          var data = value[Table._CONST_DATA];\n          var keys = value.metadata.map(function (_value) {\n            return _value[Table._CONST_KEY];\n          });\n          var metadataArray = value[Table._CONST_METADATA];\n\n          if (data.length > 0) {\n            // pause scroll tracking for case where fetched rows take time to fully render\n            if (this._domScroller != null) {\n              this._domScroller.pauseScrollTracking();\n            }\n            this._queueTask(\n              function () {\n                var i;\n                // remove any duplicate rows that are already in the DOM\n                for (i = keys.length - 1; i >= 0; i--) {\n                  if (this._getRowIdxForRowKey(keys[i]) !== null) {\n                    data.splice(i, 1);\n                    keys.splice(i, 1);\n                    metadataArray.splice(i, 1);\n                  }\n                }\n                if (data.length > 0) {\n                  layoutManager.notifyTableUpdate(Table._UPDATE._ROWS_ADDED);\n                  var tableBodyRows = this._getTableBodyRows();\n                  var rowCount = tableBodyRows.length;\n                  var indexArray = [];\n                  for (i = 0; i < data.length; i++) {\n                    indexArray[i] = rowCount + i;\n                  }\n                  return this._refreshTableBody(\n                    {\n                      isMouseWheel: result.isMouseWheel,\n                      data: data,\n                      keys: keys,\n                      metadata: metadataArray,\n                      indexes: indexArray\n                    },\n                    rowCount,\n                    true\n                  ).then(\n                    function () {\n                      // resume scroll tracking once row rendering is completed\n                      if (this._domScroller != null) {\n                        this._domScroller.resumeScrollTracking();\n                      }\n                      this._hideStatusMessage();\n                      // cached dimensions are cleared on refreshTableDimension, but since\n                      // we are skipping that, we'll need to explicitly clear them\n                      layoutManager.clearCachedDimensions();\n                      if (result.done) {\n                        this._noMoreData = true;\n                        this._syncScrollPosition();\n                      } else {\n                        this._syncScrollPosition(null, this._scrollPosition != null);\n                      }\n                    }.bind(this),\n                    // eslint-disable-next-line no-unused-vars\n                    function (reason) {\n                      // eventually fire error event here along with reason for rejection\n                      this._hideStatusMessage();\n                    }.bind(this)\n                  );\n                }\n                // resume scroll tracking if no new rows were returned\n                if (this._domScroller != null) {\n                  this._domScroller.resumeScrollTracking();\n                }\n                this._hideStatusMessage();\n                return Promise.resolve();\n              }.bind(this)\n            );\n            return;\n          }\n        }\n        this._hideStatusMessage();\n        if (result.done) {\n          this._noMoreData = true;\n          this._clearScrollBuffer();\n          this._syncScrollPosition();\n        } else {\n          this._clearScrollBuffer();\n          this._syncScrollPosition(null, this._scrollPosition != null);\n        }\n      } else {\n        // for case where result != null, the syncPosition would be done in final task\n        this._hideStatusMessage();\n        this._clearScrollBuffer();\n        this._syncScrollPosition();\n      }\n    }.bind(this);\n\n    // eslint-disable-next-line no-unused-vars\n    this._domScrollerErrorFunc = function (reason) {\n      // only clear data waiting state on abort if fetch is stale (mutation / refresh events)\n      if (controller && controller.signal.aborted && this._pendingFetchStale) {\n        this._clearDataWaitingState();\n      }\n      this._clearScrollBuffer();\n    }.bind(this);\n\n    var tableBodyRows = this._getTableBodyRows();\n    var rowCount = tableBodyRows.length;\n    this._requiresDomScrollerRefresh = false;\n    this._domScroller = new DomScroller(layoutManager.getScroller(), this._getData(), {\n      asyncIterator: this._dataProviderAsyncIterator,\n      contentElement: layoutManager.getContentElement(),\n      fetchSize: this.options.scrollPolicyOptions.fetchSize,\n      maxCount: this.options.scrollPolicyOptions.maxCount,\n      initialRowCount: rowCount,\n      controller: controller,\n      success: this._domScrollerSuccessFunc.bind(this),\n      error: this._domScrollerErrorFunc.bind(this),\n      localKeyValidator: function (key) {\n        return this._findRowElementByKey(key) !== null;\n      }.bind(this),\n      beforeFetch: function (scrollTop) {\n        if (this._idleCallback == null) {\n          this._fetchBySyncScroll = Math.abs(this._scrollY - scrollTop) <= 1;\n          this._setDataWaitingState(false);\n          if (this._isSkeletonSupport()) {\n            this._showProgressiveLoading();\n          } else {\n            this._showStatusMessage();\n          }\n          return true;\n        }\n        return false;\n      }.bind(this),\n      beforeScroll: this._clearScrollPosBusyState.bind(this),\n      // set fetch trigger to 2px to create a buffer for browser quirks where scrollHeight is\n      // greater than clientHeight in some cases. Otherwise, domScroller fetching is broken.\n      fetchTrigger: 4\n    });\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._unregisterDomScroller = function () {\n    if (this._domScroller != null) {\n      this._domScroller.destroy();\n      this._domScroller = null;\n    }\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._updateHeaderTop = function (top) {\n    if (this._isDefaultSelectorEnabled()) {\n      var headerSelector = this._getTableSelectorColumn();\n      if (headerSelector != null) {\n        headerSelector.style[Table.CSS_PROP._TOP] = top + 'px';\n      }\n    }\n    var tableHeaderColumns = this._getTableHeaderColumns();\n    for (var i = 0; i < tableHeaderColumns.length; i++) {\n      tableHeaderColumns[i].style[Table.CSS_PROP._TOP] = top + 'px';\n    }\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._updateFooterBottom = function (bottom) {\n    if (this._isDefaultSelectorEnabled()) {\n      var footerSelector = this._getTableFooterSelectorCell();\n      if (footerSelector != null) {\n        footerSelector.style[Table.CSS_PROP._BOTTOM] = bottom + 'px';\n      }\n    }\n    var footerCells = this._getTableFooterCells();\n    for (var i = 0; i < footerCells.length; i++) {\n      footerCells[i].style[Table.CSS_PROP._BOTTOM] = bottom + 'px';\n    }\n  };\n\n  /**\n   * Callback handler max fetch count.\n   * @private\n   */\n  Table.prototype._handleScrollerMaxRowCount = function () {\n    var errSummary = this.getTranslatedString('msgScrollPolicyMaxCountSummary');\n    var errDetail = this.getTranslatedString('msgScrollPolicyMaxCountDetail');\n    Logger.info(errSummary + '\\n' + errDetail);\n  };\n\n  /**\n   * Clear idle callback\n   * @private\n   */\n  Table.prototype._clearIdleCallback = function () {\n    if (this._idleCallback != null) {\n      if (!DataCollectionUtils.isRequestIdleCallbackSupported()) {\n        window.cancelAnimationFrame(this._idleCallback);\n      } else {\n        window.cancelIdleCallback(this._idleCallback);\n        // requestAnimationFrame might have been used\n        window.cancelAnimationFrame(this._idleCallback);\n      }\n      this._idleCallback = null;\n    }\n  };\n\n  /**\n   * Helper for requestIdleCallback and possible fallback\n   * @private\n   */\n  Table.prototype._requestIdleCallback = function (isMouseWheel, callback) {\n    // IE/legacy Edge/Safari do not support requestIdleCallback, use requestAnimationFrame as fall back\n    if (!DataCollectionUtils.isRequestIdleCallbackSupported()) {\n      this._idleCallback = window.requestAnimationFrame(function () {\n        callback();\n      });\n      return;\n    }\n\n    var idleTimeout = window.setTimeout(function () {\n      this._idleCallback = window.requestAnimationFrame(function () {\n        callback();\n      });\n      idleTimeout = null;\n    }, 250);\n\n    // Chromium has an issue with requestIdleCallback when mouse wheel is used, see Chrome :\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=822269\n    var options;\n    if (isMouseWheel && DataCollectionUtils.isBlink()) {\n      options = { timeout: 100 };\n    }\n    this._idleCallback = window.requestIdleCallback(function (idleDeadline) {\n      if (idleTimeout == null) {\n        return;\n      }\n      window.clearTimeout(idleTimeout);\n      callback(idleDeadline);\n    }, options);\n  };\n\n  /**\n   * Renders fetched rows in idle cycle (or animation frame if not supported)\n   * @private\n   */\n  Table.prototype._renderRowsWhenIdle = function (\n    rows,\n    tableBody,\n    tableBodyDocFrag,\n    renderRowPromiseArray,\n    startIndex,\n    resolve,\n    reject,\n    isMouseWheel\n  ) {\n    var self = this;\n    if (rows.length === 0) {\n      this._idleCallback = null;\n      Promise.all(renderRowPromiseArray).then(\n        function () {\n          var resetFocus = self._clearTableBodyRowsFromIndex(startIndex);\n          self._getLayoutManager().handleAfterRowsProcessed(tableBodyDocFrag);\n          self._appendElementToTableBody(tableBodyDocFrag, tableBody);\n          if (resetFocus) {\n            self._getTable().focus();\n          }\n          self._afterRowsRendered(tableBody).then(\n            function (value) {\n              resolve(value);\n            },\n            function (reason) {\n              reject(reason);\n            }\n          );\n        },\n        function (reason) {\n          reject(reason);\n        }\n      );\n      return;\n    }\n    var rowProcessed = 0;\n\n    function afterRowsProcessed() {\n      window.requestAnimationFrame(function () {\n        self._renderRowsWhenIdle(\n          rows,\n          tableBody,\n          tableBodyDocFrag,\n          renderRowPromiseArray,\n          startIndex,\n          resolve,\n          reject,\n          isMouseWheel\n        );\n\n        // to resolve an issue where on Firefox scroll with mouse wheel will randomly reset scrolltop\n        // after DOM append\n        if (\n          isMouseWheel &&\n          DataCollectionUtils.isFirefox() &&\n          tableBody.scrollTop !== self._scrollTop\n        ) {\n          // eslint-disable-next-line no-param-reassign\n          tableBody.scrollTop = self._scrollTop;\n        }\n      });\n    }\n\n    function renderRowsWithIdleDeadline(idleDeadline) {\n      var timeRemaining = idleDeadline.timeRemaining();\n      var lastTimeTaken = 0;\n      while (timeRemaining > lastTimeTaken || idleDeadline.didTimeout) {\n        if (rows.length === 0) {\n          break;\n        }\n        if (rowProcessed === 0 && !self._getLayoutManager().isTableWidthConstrained()) {\n          // eslint-disable-next-line no-param-reassign\n          tableBody.style[Table.CSS_PROP._OVERFLOW_X] = 'hidden';\n        }\n        renderRowPromiseArray.push(self._renderRow(rows.shift(), tableBodyDocFrag, startIndex));\n        rowProcessed += 1;\n        lastTimeTaken = timeRemaining - idleDeadline.timeRemaining();\n        timeRemaining = idleDeadline.timeRemaining();\n      }\n      afterRowsProcessed();\n    }\n\n    function renderRowsWithoutIdleDeadline() {\n      for (var i = 0; i < Table._BATCH_PROCESS_SIZE_WHEN_IDLE; i++) {\n        if (rows.length === 0) {\n          break;\n        }\n        if (rowProcessed === 0 && !self._getLayoutManager().isTableWidthConstrained()) {\n          // eslint-disable-next-line no-param-reassign\n          tableBody.style[Table.CSS_PROP._OVERFLOW_X] = 'hidden';\n        }\n        renderRowPromiseArray.push(self._renderRow(rows.shift(), tableBodyDocFrag, startIndex));\n        rowProcessed += 1;\n      }\n      afterRowsProcessed();\n    }\n\n    try {\n      this._requestIdleCallback(isMouseWheel, function (idleDeadline) {\n        if (idleDeadline === undefined) {\n          renderRowsWithoutIdleDeadline();\n        } else {\n          renderRowsWithIdleDeadline(idleDeadline);\n        }\n      });\n    } catch (renderError) {\n      reject(renderError);\n    }\n  };\n\n  /**\n   * Renders one row of data\n   * @private\n   */\n  Table.prototype._renderRow = function (rowData, tableBodyDocFrag, startIndex) {\n    var row = rowData.row;\n    var rowIdx = rowData.rowIdx;\n    if (row != null) {\n      var tableBodyRow = this._createTableBodyRow();\n      this._setTableBodyRowAttributes(row, tableBodyRow);\n      this._styleTableBodyRow(tableBodyRow, true);\n      this._insertTableBodyRow(rowIdx, tableBodyRow, tableBodyDocFrag);\n      return this._refreshTableBodyRow(rowIdx, row, tableBodyRow, tableBodyDocFrag, startIndex);\n    }\n    return Promise.resolve(null);\n  };\n\n  /**\n   * Invoked after all the rows in a single fetch are rendered\n   * @private\n   */\n  Table.prototype._afterRowsRendered = function (tableBody) {\n    this._clearCachedDomRowData();\n    this._clearIdleRenderBusyState();\n\n    // only bother calling subtree attached if there are potentially\n    // components in our rows\n    if (this._hasRowOrCellRendererOrTemplate()) {\n      ojcomponentcore.subtreeAttached(tableBody);\n    }\n\n    var tableBodyRows = this._getTableBodyRows();\n    if (tableBodyRows.length > 0) {\n      return this._finalizeBodyRowRendering(tableBodyRows);\n    }\n    return Promise.resolve(true);\n  };\n\n  /**\n   * Return all the row indexes for elements with a particular style class\n   * @param {string} styleClass  style class\n   * @return {Array} Array of row indexes\n   * @private\n   */\n  Table.prototype._getRowIdxsForElementsWithStyleClass = function (styleClass) {\n    var elements = this._tableQuerySelectorAll(this._getTable(), styleClass);\n    var rowIdxs = [];\n    if (elements && elements.length > 0) {\n      var elementsCount = elements.length;\n      for (var i = 0; i < elementsCount; i++) {\n        var rowIdx = this._getElementRowIdx(elements[i]);\n\n        var alreadyAdded = false;\n        var rowIdxsCount = rowIdxs.length;\n        for (var j = 0; j < rowIdxsCount; j++) {\n          if (rowIdxs[j] === rowIdx) {\n            alreadyAdded = true;\n          }\n        }\n        if (!alreadyAdded) {\n          rowIdxs.push(rowIdx);\n        }\n      }\n    }\n    return rowIdxs;\n  };\n\n  /**\n   * Return all the column indexes for elements with a particular style class\n   * @param {string} styleClass  style class\n   * @return {Array} Array of column indexes\n   * @private\n   */\n  Table.prototype._getColumnIdxsForElementsWithStyleClass = function (styleClass) {\n    var elements = this._tableQuerySelectorAll(this._getTable(), styleClass);\n    var columnIdxs = [];\n    if (elements && elements.length > 0) {\n      var elementsCount = elements.length;\n      for (var i = 0; i < elementsCount; i++) {\n        var columnIdx = this._getElementColumnIdx(elements[i]);\n        var alreadyAdded = false;\n        if (\n          columnIdx === null &&\n          (elements[i].classList.contains(Table.CSS_CLASSES._COLUMN_HEADER_SELECTOR_CELL_CLASS) ||\n            elements[i].classList.contains(Table.CSS_CLASSES._TABLE_FOOTER_SELECTOR_CELL_CLASS))\n        ) {\n          columnIdx = -1;\n        }\n        var columnIdxsCount = columnIdxs.length;\n        for (var j = 0; j < columnIdxsCount; j++) {\n          if (columnIdxs[j] === columnIdx) {\n            alreadyAdded = true;\n          }\n        }\n        if (!alreadyAdded) {\n          columnIdxs.push(columnIdx);\n        }\n      }\n    }\n    return columnIdxs;\n  };\n\n  /**\n   * Refreshes the Table's sizing, and ensures the Table's viewport is satisfied.\n   * @param {boolean=} skipSizingRequiredCheck whether the sizing required check should be skipped\n   * @private\n   */\n  Table.prototype._syncTableSizing = function (skipSizingRequiredCheck) {\n    var layoutManager = this._getLayoutManager();\n    if (\n      layoutManager.isTableLayoutRefreshRequired() &&\n      (skipSizingRequiredCheck || layoutManager.isSizingRefreshRequired())\n    ) {\n      layoutManager.refreshTableDimensions();\n    }\n    var scrollBufferHeight = this._updateScrollBufferHeight();\n    // if loadMoreOnScroll then check if we have underflow and do a fetch if we do\n    if (this._isLoadMoreOnScroll() && !this._dataFetching && this._domScroller) {\n      this._setDataWaitingState(false);\n      this._domScroller\n        .checkViewport(scrollBufferHeight > 0 || this._noDataMessageShown)\n        .then(this._domScrollerSuccessFunc, this._checkViewportRejected.bind(this));\n      // syncScrollPosition would be invoked after data are fetched and new rows are rendered\n    } else {\n      // syncScrollPosition must be done after sizing is done (refreshTableDimensions is invoked)\n      this._clearScrollBuffer();\n      this._syncScrollPosition();\n    }\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._updateScrollBufferHeight = function () {\n    var scrollBufferHeight = 0;\n    var layoutManager = this._getLayoutManager();\n    var scrollBuffer = this._getTableBodyScrollBuffer();\n    if (scrollBuffer != null) {\n      scrollBufferHeight = scrollBuffer.offsetHeight;\n      if (scrollBufferHeight > 0) {\n        var bottomOverflowDiff = layoutManager.getVerticalOverflowDiff(scrollBuffer).bottom;\n        var newScrollBufferHeight = Math.min(\n          Math.max(0, scrollBufferHeight - bottomOverflowDiff),\n          scrollBufferHeight\n        );\n        if (newScrollBufferHeight !== scrollBufferHeight) {\n          scrollBufferHeight = newScrollBufferHeight;\n          scrollBuffer.style[Table.CSS_PROP._HEIGHT] = scrollBufferHeight + Table.CSS_VAL._PX;\n        }\n      }\n    }\n    return scrollBufferHeight;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._clearScrollBuffer = function () {\n    var scrollBuffer = this._getTableBodyScrollBuffer();\n    if (scrollBuffer != null) {\n      // make sure to update 'scrollTop' or browser may try and restore previous scroll position if rows are added back\n      var scrollBufferHeight = scrollBuffer.offsetHeight;\n      if (scrollBufferHeight > 0) {\n        var layoutManager = this._getLayoutManager();\n        var bottomOverflowDiff = layoutManager.getVerticalOverflowDiff(scrollBuffer).bottom;\n        var bufferPixelsInView = Math.max(0, scrollBufferHeight - bottomOverflowDiff);\n        if (bufferPixelsInView > 0) {\n          var $scrollingElement = $(layoutManager.getScroller());\n          $scrollingElement.scrollTop($scrollingElement.scrollTop() - bufferPixelsInView);\n          this._skipScrollUpdate = false;\n          layoutManager.updateCurrentScrollState();\n        }\n      }\n      this._getTableBody().removeChild(scrollBuffer);\n      this._clearDomCache(Table.CSS_CLASSES._TABLE_BUFFER_ROW_CLASS);\n    }\n  };\n\n  /**\n   * Animate only the visibles in the provided row array\n   * @param tableBodyRows Array of tr DOM elements\n   * @param rowIdxArray Array of row indexes for the tr elements\n   * @param action Animation action\n   * @return Promise Return a Promise which resolves when the animation is complete\n   * @private\n   */\n  Table.prototype._animateVisibleRows = function (tableBodyRows, rowIdxArray, action) {\n    // eslint-disable-next-line no-param-reassign\n    action = this._animationActionOverride == null ? action : this._animationActionOverride;\n\n    if (!this._hasAdditionalPendingTasks()) {\n      var i;\n      this._animationActionOverride = null;\n      var visibleRowIdxArray = this._getVisibleRowIdxs();\n      var nonVisibleRowIdxArray = [];\n\n      // remove any invalid rows and index pairs that may be present\n      for (i = tableBodyRows.length - 1; i >= 0; i--) {\n        if (tableBodyRows[i] == null) {\n          tableBodyRows.splice(i, 1);\n          rowIdxArray.splice(i, 1);\n        }\n      }\n\n      for (i = 0; i < rowIdxArray.length; i++) {\n        if (visibleRowIdxArray.indexOf(rowIdxArray[i]) === -1) {\n          nonVisibleRowIdxArray.push(rowIdxArray[i]);\n        }\n      }\n      nonVisibleRowIdxArray.sort(function (a, b) {\n        return a - b;\n      });\n      for (i = nonVisibleRowIdxArray.length - 1; i >= 0; i--) {\n        tableBodyRows.splice(nonVisibleRowIdxArray[i], 1);\n      }\n      // remove resize listeners to prevent triggering resize notifications\n      this._unregisterResizeListener();\n      return this._animateTableBodyRows(tableBodyRows, action).then(\n        function () {\n          this._registerResizeListener();\n        }.bind(this)\n      );\n    }\n    this._animationActionOverride = 'update';\n    return Promise.resolve();\n  };\n\n  /**\n   * Clean descendant nodes created by template\n   * @param {Element} rootNode - the root node to clean recursively\n   * @private\n   */\n  Table.prototype._cleanTemplateNodes = function (rootNode) {\n    var templateEngine = this._getTemplateEngine();\n    if (templateEngine != null) {\n      templateEngine.clean(rootNode, this._getRootElement());\n    }\n  };\n\n  /**\n   * Clear any cached metadata\n   * @private\n   */\n  Table.prototype._clearCachedMetadata = function () {\n    this._columnDefArray = null;\n    this._setTableActionableMode(false);\n  };\n\n  /**\n   * Returns the inline template element inside an oj-table slot\n   * @param {string} slotName slot name\n   * @return {Element|null} the inline template element\n   * @private\n   */\n  Table.prototype._getSlotTemplate = function (slotName) {\n    if (this._IsCustomElement() && slotName) {\n      var slotMap = ojcustomelementUtils.CustomElementUtils.getSlotMap(this._getRootElement());\n      var slot = slotMap[slotName];\n      if (slot && slot.length > 0 && slot[0].tagName.toLowerCase() === 'template') {\n        return slot[0];\n      }\n    }\n    return null;\n  };\n\n  /**\n   * Returns false if the 'cellTemplate' slot name is specified by a column's template, headerTemplate, or footerTemplate.\n   * @return {boolean} false if the 'cellTemplate' slot name is specified by a column's template, headerTemplate, or footerTemplate.\n   * @private\n   */\n  Table.prototype._isDefaultCellTemplateSlotValid = function () {\n    return this._isDefaultTemplateSlotValid('cellTemplate');\n  };\n\n  /**\n   * Returns false if the 'rowTemplate' slot name is specified by a column's template, headerTemplate, or footerTemplate.\n   * @return {boolean} false if the 'rowTemplate' slot name is specified by a column's template, headerTemplate, or footerTemplate.\n   * @private\n   */\n  Table.prototype._isDefaultRowTemplateSlotValid = function () {\n    return this._isDefaultTemplateSlotValid('rowTemplate');\n  };\n\n  /**\n   * Returns false if the 'headerTemplate' slot name is specified by a column's template, headerTemplate, or footerTemplate.\n   * @return {boolean} false if the 'headerTemplate' slot name is specified by a column's template, headerTemplate, or footerTemplate.\n   * @private\n   */\n  Table.prototype._isDefaultHeaderTemplateSlotValid = function () {\n    return this._isDefaultTemplateSlotValid('headerTemplate');\n  };\n\n  /**\n   * Returns false if the 'footerTemplate' slot name is specified by a column's template, headerTemplate, or footerTemplate.\n   * @return {boolean} false if the 'footerTemplate' slot name is specified by a column's template, headerTemplate, or footerTemplate.\n   * @private\n   */\n  Table.prototype._isDefaultFooterTemplateSlotValid = function () {\n    return this._isDefaultTemplateSlotValid('footerTemplate');\n  };\n\n  /**\n   * Returns false if the 'addRowTemplate' slot name is specified by a column's template, headerTemplate, or footerTemplate.\n   * @return {boolean} false if the 'addRowTemplate' slot name is specified by a column's template, headerTemplate, or footerTemplate.\n   * @private\n   */\n  Table.prototype._isDefaultAddRowTemplateSlotValid = function () {\n    return this._isDefaultTemplateSlotValid('addRowTemplate');\n  };\n\n  /**\n   * Returns false if the 'addRowCellTemplate' slot name is specified by a column's template, headerTemplate, or footerTemplate.\n   * @return {boolean} false if the 'addRowCellTemplate' slot name is specified by a column's template, headerTemplate, or footerTemplate.\n   * @private\n   */\n  Table.prototype._isDefaultAddRowCellTemplateSlotValid = function () {\n    return this._isDefaultTemplateSlotValid('addRowCellTemplate');\n  };\n\n  /**\n   * Returns false if the supplied slot name is specified by a column's template, headerTemplate, or footerTemplate.\n   * @param {String} defaultSlotName the default slot name to validate\n   * @return {boolean} false if the 'footerTemplate' slot name is specified by a column's template, headerTemplate, or footerTemplate.\n   * @private\n   */\n  Table.prototype._isDefaultTemplateSlotValid = function (defaultSlotName) {\n    var columns = this._getColumnDefs();\n    var columnsCount = columns.length;\n    for (var i = 0; i < columnsCount; i++) {\n      var cellTemplateName = columns[i][Table._CELL_TEMPLATE];\n      var headerTemplateName = columns[i][Table._HEADER_TEMPLATE];\n      var footerTemplateName = columns[i][Table._FOOTER_TEMPLATE];\n      if (\n        defaultSlotName === cellTemplateName ||\n        defaultSlotName === headerTemplateName ||\n        defaultSlotName === footerTemplateName\n      ) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  /**\n   * Return the template engine or null\n   * @return {Object|null} template engine\n   * @private\n   */\n  Table.prototype._getTemplateEngine = function () {\n    return this._templateEngine;\n  };\n\n  /**\n   * Return the visible row indexes\n   * @return {Array} array of row indexes\n   * @private\n   */\n  Table.prototype._getVisibleRowIdxs = function () {\n    // return the row indexes of all rows in the viewport\n    var i;\n    var visibleRowIdxArray = [];\n\n    var tableBody = this._getTableBody();\n    var tableBodyRows = this._getTableBodyRows();\n    if (tableBodyRows.length > 0 && tableBody.offsetHeight > 0) {\n      var windowHeight = $(window).height();\n      var scrollerRect = this._getLayoutManager().getScroller().getBoundingClientRect();\n\n      // check if not visible at all\n      if (scrollerRect.top > windowHeight) {\n        return visibleRowIdxArray;\n      }\n      // if the table is fully visible or partially visible, work out which\n      // rows are visible\n\n      // find out where the start of the row is\n      var tableElemX = scrollerRect.left >= 0 ? scrollerRect.left + 1 : scrollerRect.right - 1;\n\n      // check the first visible row\n      var viewportTop = scrollerRect.top >= 0 ? scrollerRect.top : 0;\n      var tableTopElems = this._filterTableOwnedElements(\n        document.elementsFromPoint(tableElemX, viewportTop)\n      );\n      var startRowIdx;\n      for (i = 0; i < tableTopElems.length; i++) {\n        if (tableTopElems[i].nodeName === Table.DOM_ELEMENT._TD) {\n          startRowIdx = this._getElementRowIdx(tableTopElems[i]);\n          break;\n        }\n      }\n      if (startRowIdx == null) {\n        // if row index could not be found, default to the first row\n        startRowIdx = 0;\n      }\n\n      // the last visible row is at the bottom of the viewport\n      var viewportBottom;\n      if (scrollerRect.bottom > windowHeight) {\n        // the last visible row is at the bottom of the viewport\n        viewportBottom = windowHeight - 1;\n      } else {\n        var borderBottomWidth =\n          parseInt(window.getComputedStyle(tableBody).borderBottomWidth, 10) || 0;\n        viewportBottom = scrollerRect.bottom >= 0 ? scrollerRect.bottom - borderBottomWidth - 1 : 0;\n      }\n      var lastRowIdx;\n      var tableBottomElems = document.elementsFromPoint(tableElemX, viewportBottom);\n      for (i = 0; i < tableBottomElems.length; i++) {\n        if (tableBottomElems[i].nodeName === Table.DOM_ELEMENT._TD) {\n          lastRowIdx = this._getElementRowIdx(tableBottomElems[i]);\n          break;\n        }\n      }\n      if (lastRowIdx == null) {\n        // if row index could not be found, default to the last row\n        lastRowIdx = tableBodyRows.length - 1;\n      }\n\n      for (i = startRowIdx; i <= lastRowIdx; i++) {\n        visibleRowIdxArray.push(i);\n      }\n    }\n    return visibleRowIdxArray;\n  };\n\n  /**\n   * Has row or cell renderer or template\n   * @param {number|null} columnIdx  column index\n   * @return {boolean} true or false\n   * @private\n   */\n  Table.prototype._hasRowOrCellRendererOrTemplate = function (columnIdx) {\n    var rowRenderer = this._getRowRenderer();\n    if (rowRenderer != null) {\n      return true;\n    }\n\n    var cellRenderer = null;\n    var cellSlotTemplate = null;\n    var columns = this._getColumnDefs();\n    if (columnIdx != null) {\n      cellRenderer = this._getColumnRenderer(columnIdx, 'cell');\n      cellSlotTemplate = this._getSlotTemplate(columns[columnIdx][Table._CELL_TEMPLATE]);\n    } else {\n      var columnsCount = columns.length;\n      for (var i = 0; i < columnsCount; i++) {\n        cellRenderer = this._getColumnRenderer(i, 'cell');\n        if (cellRenderer != null) {\n          break;\n        }\n        cellSlotTemplate = this._getSlotTemplate(columns[i][Table._CELL_TEMPLATE]);\n        if (cellSlotTemplate != null) {\n          break;\n        }\n      }\n    }\n    if (cellRenderer != null || cellSlotTemplate != null) {\n      return true;\n    }\n    // check for default slot row template\n    if (this._isDefaultRowTemplateSlotValid()) {\n      var defaultRowSlotTemplate = this._getSlotTemplate('rowTemplate');\n      if (defaultRowSlotTemplate != null) {\n        return true;\n      }\n    }\n    // check for default slot cell template\n    if (this._isDefaultCellTemplateSlotValid()) {\n      var defaultCellSlotTemplate = this._getSlotTemplate('cellTemplate');\n      if (defaultCellSlotTemplate != null) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Do an initial fetch\n   * @param {Object} options options for the fetch\n   * @param {boolean} isSortUpdate whether to force fetch from sort update\n   * @private\n   */\n  Table.prototype._initFetch = function (options, isSortUpdate) {\n    var updatedOptions = options || {};\n    var dataprovider = this._getData();\n    var layoutManager = this._getLayoutManager();\n    // do an initial fetch if a TableDataSource\n    // paging control should do the fetches for PagingTableDataSource\n    if (\n      dataprovider != null &&\n      oj.DataProviderFeatureChecker.isDataProvider(dataprovider) &&\n      (!this._isPagingModelDataProvider() || isSortUpdate)\n    ) {\n      return this._queueTask(\n        function () {\n          layoutManager.notifyTableUpdate(\n            isSortUpdate ? Table._UPDATE._DATA_SORT : Table._UPDATE._REFRESH\n          );\n          if (!this._isExternalScrollEnabled()) {\n            // reset the scrollTop when we do an initial fetch\n            this._scrollTop = 0;\n            layoutManager.getScroller().scrollTop = 0;\n          }\n          if (dataprovider instanceof oj.TableDataSourceAdapter) {\n            updatedOptions.fetchType = 'init';\n            if (this._isLoadMoreOnScroll()) {\n              updatedOptions[Table._CONST_OFFSET] = 0;\n            }\n          }\n          return this._invokeDataFetchRows(updatedOptions);\n        }.bind(this)\n      );\n    } else if (dataprovider == null) {\n      return this._queueTask(function () {\n        layoutManager.notifyTableUpdate(Table._UPDATE._REFRESH);\n        var promiseArray = [];\n        promiseArray.push(this._refreshTableHeader());\n        promiseArray.push(this._refreshTableBody());\n        promiseArray.push(this._refreshTableFooter());\n\n        return Promise.all(promiseArray);\n      });\n    }\n    return undefined;\n  };\n\n  /**\n   * Initialize the template engine\n   * @private\n   */\n  Table.prototype._initTemplateEngine = function () {\n    // initialize the template engine\n    this._queueTask(\n      function () {\n        var enginePromise;\n        try {\n          const templateOptions = {\n            customElement: this._GetCustomElement()\n          };\n          enginePromise = Config.__getTemplateEngine(templateOptions).then(\n            function (engine) {\n              this._templateEngine = engine;\n            }.bind(this),\n            function (err) {\n              Logger.warn(err);\n            }\n          );\n        } catch (err) {\n          Logger.warn(err);\n          enginePromise = Promise.resolve(null);\n        }\n        return enginePromise;\n      }.bind(this)\n    );\n  };\n\n  /**\n   * Creates an updated options object used when calling fetchFirst on the data provider.\n   * @param {Object=} options initial options for the fetch.\n   * @return {Object} updated options for the fetch.\n   * @private\n   */\n  Table.prototype._initializeFetchFirstOptions = function (options) {\n    var updatedOptions = options || {};\n\n    // Create a clientId symbol that uniquely identify this consumer so that\n    // DataProvider which supports it can optimize resources\n    this._clientId = this._clientId || Symbol();\n    this._controller = new AbortController();\n    updatedOptions[Table._CONST_CLIENTID] = this._clientId;\n    updatedOptions[Table._CONST_SIGNAL] = this._controller.signal;\n\n    if (!updatedOptions[Table._CONST_PAGESIZE] && this._isLoadMoreOnScroll()) {\n      updatedOptions[Table._CONST_PAGESIZE] = this.options.scrollPolicyOptions.fetchSize;\n    } else {\n      updatedOptions[Table._CONST_PAGESIZE] = -1;\n    }\n    // explicitly silence events to keep backward compatibility\n    updatedOptions[Table._CONST_SILENT] = true;\n    return updatedOptions;\n  };\n\n  /**\n   * Checks whether the key is inside the metadata array\n   * @private\n   */\n  Table.prototype._containsKey = function (key, metadata) {\n    for (var i = 0; i < metadata.length; i++) {\n      if (oj.KeyUtils.equals(metadata[i].key, key)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Fetch rows\n   * @param {Object} options options for the fetch\n   * @return {Promise} Promise resolves with the result when done.\n   * @private\n   */\n  Table.prototype._invokeDataFetchRows = function (options) {\n    var updatedOptions = this._initializeFetchFirstOptions(options);\n    var dataprovider = this._getData();\n    if (dataprovider != null) {\n      return new Promise(\n        function (resolve) {\n          var controller = this._controller;\n          this._animateOnFetch = false;\n          this._noMoreData = false;\n          this._pendingFetchOptions = updatedOptions;\n          this._setDataWaitingState(true);\n          this._hasRefreshInQueue = false;\n          this._dataProviderAsyncIterator = dataprovider\n            .fetchFirst(updatedOptions)\n            [Symbol.asyncIterator]();\n\n          var helperFunction = function (result, currentMetadata, scrollToKey) {\n            var updatedScrollToKey = scrollToKey;\n            // checks whether the key is fetched, otherwise we'll continue to fetch\n            if (scrollToKey == null || this._containsKey(scrollToKey, currentMetadata)) {\n              updatedScrollToKey = null;\n            }\n            // skip additional fetching if done, or are no longer searching for a row with loadMoreOnScroll\n            // if it has getPageCount method, it is a pagingTableDataSource so skip this fetch process.\n            if (\n              result.done ||\n              (updatedScrollToKey == null &&\n                (this._isLoadMoreOnScroll() || typeof dataprovider.getPageCount === 'function'))\n            ) {\n              return result;\n            }\n\n            var nextPromise = this._dataProviderAsyncIterator.next();\n            return nextPromise.then(\n              function (value) {\n                // return early if the fetch was aborted\n                if (DataCollectionUtils.isFetchAborted(value)) {\n                  return Promise.reject(true);\n                }\n\n                // eslint-disable-next-line no-param-reassign\n                result.done = value.done;\n                // eslint-disable-next-line no-param-reassign\n                result.value.data = result.value.data.concat(value.value.data);\n                // eslint-disable-next-line no-param-reassign\n                result.value.metadata = result.value.metadata.concat(value.value.metadata);\n                return helperFunction(result, value.value.metadata, updatedScrollToKey);\n              },\n              function (reason) {\n                return Promise.reject(reason);\n              }\n            );\n          }.bind(this);\n\n          var promiseArray = [];\n          promiseArray.push(this._dataProviderAsyncIterator.next());\n          promiseArray.push(this._getScrollToKey());\n          if (!this._isTableHeaderColumnsRendered()) {\n            promiseArray.push(this._refreshTableHeader());\n          }\n\n          Promise.all(promiseArray)\n            .then(\n              function (values) {\n                var result = values[0];\n                // return early if the fetch was aborted\n                if (DataCollectionUtils.isFetchAborted(result)) {\n                  return Promise.reject(true);\n                }\n                var scrollToKey = values[1];\n                return helperFunction(result, result[Table._CONST_VALUE].metadata, scrollToKey);\n              },\n              function (reason) {\n                return Promise.reject(reason);\n              }\n            )\n            .then(\n              function (result) {\n                var value = result[Table._CONST_VALUE];\n                var data = value[Table._CONST_DATA];\n                var keys = value.metadata.map(function (_value) {\n                  return _value[Table._CONST_KEY];\n                });\n\n                var offset = 0;\n                if (dataprovider instanceof oj.TableDataSourceAdapter) {\n                  offset = dataprovider[Table._CONST_OFFSET];\n                }\n                var startIndex = 0;\n                if (this._isPagingModelDataProvider()) {\n                  startIndex = dataprovider.getStartItemIndex();\n                }\n                var indexArray = [];\n                var resultDataCount = data.length;\n\n                for (var i = 0; i < resultDataCount; i++) {\n                  indexArray[i] = offset + startIndex + i;\n                }\n                var metadataArray = value[Table._CONST_METADATA];\n\n                // Need to clear DOM scroller before refreshAll potentially triggers\n                // additional data fetches when syncing scroll position\n                this._unregisterDomScroller();\n\n                if (result.maxCountLimit) {\n                  this._noMoreData = true;\n                  this._handleScrollerMaxRowCount();\n                } else if (result.done) {\n                  this._noMoreData = true;\n                }\n\n                this._refreshAll(\n                  {\n                    data: data,\n                    metadata: metadataArray,\n                    keys: keys,\n                    indexes: indexArray\n                  },\n                  offset\n                ).then(\n                  function () {\n                    this._clearDataWaitingState();\n                    this._processFetchSort(value);\n                    if (this._isLoadMoreOnScroll()) {\n                      this._registerDomScroller();\n                    }\n                    resolve(result);\n                  }.bind(this),\n                  // eslint-disable-next-line no-unused-vars\n                  function (reason) {\n                    // eventually fire error event here along with reason for rejection\n                    this._clearDataWaitingState();\n                    var tableBody = this._getTableBody();\n                    var tableBodyRows = this._getTableBodyRows();\n                    if (tableBodyRows.length === 0) {\n                      this._showNoDataMessage();\n                      this._finalizeNonBodyRowRendering([tableBody]).then(function () {\n                        resolve(null);\n                      });\n                    } else {\n                      resolve(null);\n                    }\n                  }.bind(this)\n                );\n              }.bind(this),\n              // eslint-disable-next-line no-unused-vars\n              function (reason) {\n                if (controller && controller.signal.aborted) {\n                  this._clearDataWaitingState(true);\n                  resolve(null);\n                } else {\n                  // eventually fire error event here along with reason for rejection\n                  this._clearDataWaitingState();\n                  var tableBody = this._getTableBody();\n                  var tableBodyRows = this._getTableBodyRows();\n                  if (tableBodyRows.length === 0) {\n                    this._showNoDataMessage();\n                    this._finalizeNonBodyRowRendering([tableBody]).then(function () {\n                      resolve(null);\n                    });\n                  } else {\n                    resolve(null);\n                  }\n                }\n              }.bind(this)\n            );\n        }.bind(this)\n      );\n    }\n    return Promise.resolve(null);\n  };\n\n  /**\n   * Invoke sort on a field. This function is called when a user clicks the\n   * column header sort icons\n   * @param {string} sortField  field name\n   * @param {boolean} ascending  sort order ascending\n   * @param {Object} event\n   * @private\n   */\n  Table.prototype._invokeDataSort = function (sortField, ascending, event) {\n    this._resetAriaLabel = true;\n    var dataprovider = this._getData();\n    // if no data then bail\n    if (!dataprovider) {\n      return;\n    }\n\n    // if already handling a fetch, abort fetch\n    if (this._dataFetching && this._controller) {\n      this._controller.abort();\n    }\n\n    var sortCriteria = [];\n    var sortCriterion = {};\n    sortCriterion[Table._CONST_ATTRIBUTE] = sortField;\n    if (ascending) {\n      sortCriterion.direction = Table._COLUMN_SORT_ORDER._ASCENDING;\n    } else {\n      sortCriterion.direction = Table._COLUMN_SORT_ORDER._DESCENDING;\n    }\n    sortCriteria.push(sortCriterion);\n    this._trigger('sort', event, {\n      header: sortCriteria[0][Table._CONST_ATTRIBUTE],\n      direction: sortCriteria[0].direction\n    });\n    this._beforeDataRefresh(true);\n    // show the Fetching Data... message\n    this._showStatusMessage();\n    this._initFetch({ sortCriteria: sortCriteria }, true);\n  };\n\n  /**\n   * Whether the columns have been updated\n   * @return {boolean} true or false\n   * @private\n   */\n  Table.prototype._isColumnMetadataUpdated = function (columnOptions) {\n    if (this._columnDefArray != null) {\n      var columnsMetadata = this._getColumnMetadata(columnOptions);\n      if (this._columnDefArray.length !== columnsMetadata.length) {\n        return true;\n      }\n      var columnsMetadataCount = columnsMetadata.length;\n      for (var i = 0; i < columnsMetadataCount; i++) {\n        var props = Object.keys(columnsMetadata[i]);\n        for (var j = 0; j < props.length; j++) {\n          var prop = props[j];\n          if (columnsMetadata[i][prop] !== this._columnDefArray[i][prop]) {\n            if (\n              prop !== 'id' ||\n              columnsMetadata[i][prop] == null ||\n              columnsMetadata[i][prop].indexOf(Table._COLUMN_HEADER_ID_PREFIX) !== 0 ||\n              this._columnDefArray[i][prop] == null ||\n              this._columnDefArray[i][prop].indexOf(Table._COLUMN_HEADER_ID_PREFIX) !== 0\n            ) {\n              // ignore generated ids\n              return true;\n            }\n          }\n        }\n      }\n      return false;\n    }\n    return true;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._getColumnKeys = function () {\n    var columnKeys = [];\n    var columns = this._getColumnDefs();\n    for (var i = 0; i < columns.length; i++) {\n      columnKeys.push(columns[i][Table._FIELD_ID]);\n    }\n    return columnKeys;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._getLocalRowKeys = function () {\n    var rowKeys = [];\n    var tableBodyRows = this._getTableBodyRows();\n    for (var i = 0; i < tableBodyRows.length; i++) {\n      rowKeys.push(tableBodyRows[i][Table._ROW_ITEM_EXPANDO].key);\n    }\n    return rowKeys;\n  };\n\n  Table.prototype._hasMoreToFetch = function () {\n    if (this._isLoadMoreOnScroll()) {\n      return !this._noMoreData;\n    }\n    return false;\n  };\n\n  /**\n   * Clear any cached data metadata\n   * @private\n   */\n  Table.prototype._clearCachedDataMetadata = function () {\n    if (this._data != null) {\n      this._unregisterDataSourceEventListeners();\n    }\n    this._data = null;\n  };\n\n  /**\n   * Return the column index for column key.\n   * @param {Object} columnKey column key\n   * @return {number|null} column index\n   * @private\n   */\n  Table.prototype._getColumnIdxForColumnKey = function (columnKey) {\n    var columns = this._getColumnDefs();\n    var columnsCount = columns.length;\n    for (var i = 0; i < columnsCount; i++) {\n      var column = columns[i];\n      if (oj.KeyUtils.equals(column.id, columnKey)) {\n        return i;\n      }\n    }\n    return null;\n  };\n\n  /**\n   * Return the column key for column index.\n   * @param {number} columnIdx column index\n   * @return {Object} column key\n   * @private\n   */\n  Table.prototype._getColumnKeyForColumnIdx = function (columnIdx) {\n    var columns = this._getColumnDefs();\n    if (columnIdx < columns.length) {\n      return columns[columnIdx][Table._FIELD_ID];\n    }\n    return null;\n  };\n\n  /**\n   * Return an array with row and row indices relative to the table row indices\n   * @param {Object} resultObject Object containing data array, key array, and index array\n   * @param {number} startIndex start index\n   * @return {Array} Array of rows and row index\n   * @private\n   */\n  Table.prototype._getRowIdxRowArray = function (resultObject, startIndex) {\n    var rowIdxRowArray = [];\n    if (resultObject != null) {\n      var indexesCount = resultObject[Table._CONST_INDEXES].length;\n      for (var i = 0; i < indexesCount; i++) {\n        rowIdxRowArray.push({\n          row: {\n            data: resultObject[Table._CONST_DATA][i],\n            metadata: resultObject[Table._CONST_METADATA]\n              ? resultObject[Table._CONST_METADATA][i]\n              : null,\n            key: resultObject[Table._CONST_KEYS][i],\n            index: resultObject[Table._CONST_INDEXES][i]\n          },\n          rowIdx: startIndex + i\n        });\n      }\n    }\n    return rowIdxRowArray;\n  };\n\n  /**\n   * Return the row index for row key. Only loop through displayed rows.\n   * @param {Object} rowKey row key\n   * @return {number|null} row index\n   * @private\n   */\n  Table.prototype._getRowIdxForRowKey = function (rowKey) {\n    var tableBodyRows = this._getTableBodyRows();\n    if (tableBodyRows.length > 0) {\n      var tableBodyRowsCount = tableBodyRows.length;\n      for (var i = 0; i < tableBodyRowsCount; i++) {\n        if (oj.KeyUtils.equals(tableBodyRows[i][Table._ROW_ITEM_EXPANDO].key, rowKey)) {\n          return i;\n        }\n      }\n    }\n    return null;\n  };\n\n  /**\n   * Return the datasource's row index for the row key.\n   * @param {Object} rowKey row key\n   * @return {number|null} row index\n   * @private\n   */\n  Table.prototype._getDataSourceRowIndexForRowKey = function (rowKey) {\n    var tableBodyRows = this._getTableBodyRows();\n    if (tableBodyRows.length > 0) {\n      var tableBodyRowsCount = tableBodyRows.length;\n      for (var i = 0; i < tableBodyRowsCount; i++) {\n        if (oj.KeyUtils.equals(tableBodyRows[i][Table._ROW_ITEM_EXPANDO].key, rowKey)) {\n          var dataprovider = this._getData();\n          var offset = 0;\n          if (this._isPagingModelDataProvider()) {\n            offset = dataprovider.getStartItemIndex();\n          }\n          return i + offset;\n        }\n      }\n    }\n    return null;\n  };\n\n  /**\n   * Return the row key for datasource's row index.\n   * @param {number} rowIndex row index\n   * @return {any} row key\n   * @private\n   */\n  Table.prototype._getRowKeyForDataSourceRowIndex = function (rowIndex) {\n    var tableBodyRows = this._getTableBodyRows();\n    if (tableBodyRows.length > 0) {\n      var dataprovider = this._getData();\n      var offset = 0;\n      if (this._isPagingModelDataProvider()) {\n        offset = dataprovider.getStartItemIndex();\n      }\n      var tableBodyRowsCount = tableBodyRows.length;\n      for (var i = 0; i < tableBodyRowsCount; i++) {\n        if (offset + i === rowIndex) {\n          return tableBodyRows[i][Table._ROW_ITEM_EXPANDO].key;\n        }\n      }\n    }\n    return null;\n  };\n\n  /**\n   * Return the row key for row index.\n   * @param {number} rowIdx row index\n   * @return {any|null} row key\n   * @private\n   */\n  Table.prototype._getRowKeyForRowIdx = function (rowIdx) {\n    var tableBodyRow = this._getTableBodyRow(rowIdx);\n    if (tableBodyRow != null) {\n      return tableBodyRow[Table._ROW_ITEM_EXPANDO].key;\n    }\n    return null;\n  };\n\n  /**\n   * Returns the row key for the specified row or index.\n   * @param {Element=} tableBodyRow The tr element of the row.\n   * @param {number=} index The index of the row.\n   * @private\n   */\n  Table.prototype._getRowKey = function (tableBodyRow, index) {\n    if (tableBodyRow == null) {\n      // eslint-disable-next-line no-param-reassign\n      tableBodyRow = this._getTableBodyRow(index);\n    }\n    if (tableBodyRow != null) {\n      return tableBodyRow[Table._ROW_ITEM_EXPANDO].key;\n    }\n    return null;\n  };\n\n  /**\n   * Return whether this is a PagingModel dataprovider\n   * @returns {boolean}\n   * @private\n   */\n  Table.prototype._isPagingModelDataProvider = function () {\n    var dataprovider = this._getData();\n    return (\n      dataprovider.getStartItemIndex != null &&\n      dataprovider.getStartItemIndex() !== null &&\n      dataprovider.getStartItemIndex() >= 0\n    );\n  };\n\n  /**\n   * Animate a tableBodyRow\n   * @param {Element} tableBodyRow  DOM element\n   * @param {string} action the animation action\n   * @return {Promise} Returns a Promise which resolves to true when animation is complete. Will\n   * resolve to false if no animations were run.\n   * @private\n   */\n  Table.prototype._animateTableBodyRow = function (tableBodyRow, action) {\n    if (this._isAnimationDisabled(action)) {\n      return Promise.resolve(false);\n    }\n    return new Promise(\n      function (resolve) {\n        this._startAnimation(tableBodyRow, action).then(function () {\n          resolve(true);\n        });\n      }.bind(this)\n    );\n  };\n\n  /**\n   * Animate an array of tableBodyRows\n   * @param {Array} tableBodyRowArray Array of tr DOM elements\n   * @param {string} action the animation action\n   * @return {Promise} Returns a Promise which resolves when animation is complete.\n   * @private\n   */\n  Table.prototype._animateTableBodyRows = function (tableBodyRowArray, action) {\n    if (this._isAnimationDisabled(action)) {\n      return Promise.resolve(false);\n    }\n    var animationPromiseArray = [];\n    for (var i = 0; i < tableBodyRowArray.length; i++) {\n      var tableBodyRow = tableBodyRowArray[i];\n      animationPromiseArray.push(\n        function (_tableBodyRow) {\n          return this._animateTableBodyRow(_tableBodyRow, action);\n        }.bind(this)(tableBodyRow)\n      );\n    }\n    if (animationPromiseArray.length > 0) {\n      return Promise.all(animationPromiseArray);\n    }\n    return Promise.resolve(false);\n  };\n\n  /**\n   * Gets the animation effect for the specific action\n   * @param {string} action the action to retrieve the effect\n   * @return {Object} the animation effect for the action\n   * @private\n   */\n  Table.prototype._getAnimationEffect = function (action) {\n    if (this.defaultAnimations == null) {\n      this.defaultAnimations = {};\n    }\n    if (this.defaultAnimations[action] == null) {\n      this.defaultAnimations[action] = JSON.parse(this._getDefaultOptions()[`${action}Animation`]);\n    }\n    return this.defaultAnimations[action];\n  };\n\n  /**\n   * Returns whether animation is disabled\n   * @param {string} action the animation action\n   * @return {boolean} Returns true or false\n   * @private\n   */\n  Table.prototype._isAnimationDisabled = function (action) {\n    // check if animation effect is null\n    var effect = this._getAnimationEffect(action);\n    return effect == null || effect.length === 0;\n  };\n\n  /**\n   * Utility method to start animation\n   * @param {Element} elem element to animate\n   * @param {string} action the animation action\n   * @param {Object=} effect optional animation effect, if not specified then it will be derived based on action\n   * @return {Promise} the promise which will be resolve when animation ends\n   * @private\n   */\n  Table.prototype._startAnimation = function (elem, action, effect) {\n    if (effect == null) {\n      // eslint-disable-next-line no-param-reassign\n      effect = this._getAnimationEffect(action);\n    }\n    return ojanimation.startAnimation(elem, action, effect, this);\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._isAddNewRowEnabled = function () {\n    return (\n      this._isStickyLayoutEnabled() &&\n      this.options.addRowDisplay === 'top' &&\n      ((this._getSlotTemplate('addRowTemplate') != null &&\n        this._isDefaultAddRowTemplateSlotValid()) ||\n        (this._getSlotTemplate('addRowCellTemplate') != null &&\n          this._isDefaultAddRowCellTemplateSlotValid()))\n    );\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._refreshAddRowDisplay = function () {\n    this._isAddRowRendered = false;\n    return this._refreshAddNewRowPlaceholder().then(\n      function (value) {\n        this._getLayoutManager().notifyTableUpdate(Table._UPDATE._ADD_ROW_DISPLAY);\n        if (value) {\n          this._setActiveAddRow();\n          this._setTableActionableMode(true);\n        }\n      }.bind(this)\n    );\n  };\n\n  /**\n   * @ignore\n   * @export\n   * @class oj.TableDndContext\n   * @classdesc Drag and Drop Utils for ojTable\n   * @param {Object} component ojTable instance\n   * @constructor\n   */\n  const TableDndContext = function (component) {\n    this.component = component;\n    this.Init();\n  };\n  oj._registerLegacyNamespaceProp('TableDndContext', TableDndContext);\n\n  // Subclass from oj.Object\n  oj.Object.createSubclass(TableDndContext, oj.Object, 'oj.TableDndContext');\n\n  /**\n   * @private\n   */\n  TableDndContext._CSS_CLASSES = {\n    _DRAG_SOURCE: 'oj-table-drag-source',\n    _DRAG_SOURCE_OPAQUE: 'oj-table-drag-source-opaque',\n    _DROP_TARGET_EMPTY: 'oj-table-drop-target-empty'\n  };\n\n  /**\n   * Initializes the instance.\n   * @memberof oj.TableDndContext\n   * @export\n   */\n  TableDndContext.prototype.Init = function () {\n    TableDndContext.superclass.Init.call(this);\n  };\n\n  /**\n   * Add oj-drag marker class to cells in a column\n   * @param {number} columnIdx  the index of the column to mark\n   * @private\n   * @memberof oj.TableDndContext\n   */\n  TableDndContext.prototype._addDragMarkerClass = function (columnIdx) {\n    var column = this.component._getTableHeaderColumn(columnIdx);\n    column.classList.add(TableDndContext._CSS_CLASSES._DRAG_SOURCE_OPAQUE);\n    this.component._setTableColumnCellsClass(\n      columnIdx,\n      true,\n      TableDndContext._CSS_CLASSES._DRAG_SOURCE_OPAQUE\n    );\n  };\n\n  /**\n   * Remove oj-drag marker class from cells in dragged columns\n   * @private\n   * @memberof oj.TableDndContext\n   */\n  TableDndContext.prototype._removeDragMarkerClass = function () {\n    var dragColumns = this.component._getTableElementsByClassName(\n      this.component._getTableHeader(),\n      TableDndContext._CSS_CLASSES._DRAG_SOURCE_OPAQUE\n    );\n    if (dragColumns != null && dragColumns.length > 0) {\n      var dragColumnsCount = dragColumns.length;\n      for (var i = 0; i < dragColumnsCount; i++) {\n        dragColumns[i].classList.remove(TableDndContext._CSS_CLASSES._DRAG_SOURCE_OPAQUE);\n      }\n    }\n    this.component._setTableColumnCellsClass(\n      null,\n      false,\n      TableDndContext._CSS_CLASSES._DRAG_SOURCE_OPAQUE\n    );\n  };\n\n  /**\n   * Clone the table container\n   * @param {Element} tableContainer  the div DOM object\n   * @return {Element} DOM object for the cloned table container\n   * @private\n   * @memberof oj.TableDndContext\n   */\n  TableDndContext.prototype._cloneTableContainer = function (tableContainer) {\n    var tableBody = this.component._getTableElementsByTagName(\n      tableContainer,\n      Table.DOM_ELEMENT._TBODY\n    )[0];\n\n    var scrollLeft = $(tableBody).scrollLeft();\n\n    var tableContainerClone = tableContainer.cloneNode();\n    var tableElementClone = this.component\n      ._getTableElementsByTagName(tableContainer, Table.DOM_ELEMENT._TABLE)[0]\n      .cloneNode();\n    var tableBodyClone = tableBody.cloneNode();\n\n    var minTop = this.component._rowsDragged[0].offsetTop;\n    this.component._rowsDragged.forEach(\n      function (row) {\n        var cells = row.querySelectorAll('td');\n        var rowClone = row.cloneNode(true);\n\n        if (this.component._isDefaultSelectorEnabled()) {\n          var selector = this.component._getTableElementsByClassName(\n            rowClone,\n            Table.CSS_CLASSES._TABLE_DATA_ROW_SELECTOR_CLASS\n          )[0];\n          selector.selectedKeys = this.component.options.selected.row;\n          selector.rowKey = this.component._getRowKey(row);\n        }\n\n        var clonedCells = rowClone.querySelectorAll('td');\n\n        rowClone.style.position = Table.CSS_VAL._ABSOLUTE;\n        rowClone.style.top = row.offsetTop - minTop + Table.CSS_VAL._PX;\n        rowClone.style.width = row.offsetWidth + Table.CSS_VAL._PX;\n        rowClone.classList.add('oj-table-body-row-drag-image');\n        rowClone.classList.remove(Table.MARKER_STYLE_CLASSES._SELECTED);\n        rowClone.classList.remove(Table.MARKER_STYLE_CLASSES._FOCUS);\n        rowClone.classList.remove(Table.MARKER_STYLE_CLASSES._FOCUS_HIGHLIGHT);\n\n        clonedCells.forEach(function (cell, index) {\n          // eslint-disable-next-line no-param-reassign\n          cell.style.width = cells[index].offsetWidth + Table.CSS_VAL._PX;\n          cell.classList.remove(Table.MARKER_STYLE_CLASSES._SELECTED);\n          cell.classList.remove(Table.MARKER_STYLE_CLASSES._HOVER);\n        });\n        tableBodyClone.appendChild(rowClone);\n      }.bind(this)\n    );\n    tableElementClone.appendChild(tableBodyClone);\n    tableContainerClone.appendChild(tableElementClone);\n\n    // Use absolute positioning with a large negative top to put it off the screen without\n    // affecting the scrollbar.  Fixed positioning does not work on Safari.\n    tableContainerClone.classList.add('oj-table-container-drag-image');\n\n    // make sure overall drag image height is not larger than the window height\n    tableContainerClone.style[Table.CSS_PROP._HEIGHT] = window.innerHeight + Table.CSS_VAL._PX;\n\n    // Set both overflow and overflow-x/y because on IE, setting overflow does not\n    // affect overflow-x/y that have been explicitly set.\n    tableContainerClone.style[Table.CSS_PROP._OVERFLOW] = Table.CSS_VAL._HIDDEN;\n    tableContainerClone.style[Table.CSS_PROP._OVERFLOW_X] = Table.CSS_VAL._HIDDEN;\n    tableContainerClone.style[Table.CSS_PROP._OVERFLOW_Y] = Table.CSS_VAL._HIDDEN;\n    tableBodyClone.style[Table.CSS_PROP._OVERFLOW] = Table.CSS_VAL._HIDDEN;\n    tableBodyClone.style[Table.CSS_PROP._OVERFLOW_X] = Table.CSS_VAL._HIDDEN;\n    tableBodyClone.style[Table.CSS_PROP._OVERFLOW_Y] = Table.CSS_VAL._HIDDEN;\n    tableBodyClone.style[Table.CSS_PROP._BACKGROUND_COLOR] = Table.CSS_VAL._TRANSPARENT;\n    tableBodyClone.style[Table.CSS_PROP._BORDER_COLOR] = Table.CSS_VAL._TRANSPARENT;\n    tableBodyClone.style[Table.CSS_PROP._WIDTH] = $(tableBody).width() + Table.CSS_VAL._PX;\n    tableBodyClone.style[Table.CSS_PROP._HEIGHT] = tableBody.scrollHeight + Table.CSS_VAL._PX;\n\n    tableElementClone.style[Table.CSS_PROP._WIDTH] = $(tableBody).width() + Table.CSS_VAL._PX;\n\n    document.body.appendChild(tableContainerClone); // @HTMLUpdateOK\n\n    // scrollLeft must be set after element is appended, or it does not take effect\n    $(tableBodyClone).scrollLeft(scrollLeft * 1.0);\n\n    return tableContainerClone;\n  };\n\n  /**\n   * Destroy the drag image\n   * @private\n   * @memberof oj.TableDndContext\n   */\n  TableDndContext.prototype._destroyDragImage = function () {\n    if (this._dragImage) {\n      $(this._dragImage).remove();\n      this._dragImage = null;\n    }\n  };\n\n  /**\n   * Get the column index of the header target of an event\n   * @param {Event} event  jQuery event object\n   * @return {number} the column index of the header target\n   * @memberof oj.TableDndContext\n   * @private\n   */\n  TableDndContext.prototype._getEventColumnIndex = function (event) {\n    return this.component._getElementColumnIdx(event.currentTarget);\n  };\n\n  /**\n   * Get the index of the row under the pointer\n   * @param {Event} event  jQuery event object\n   * @return {number} index of the row under the pointer\n   * @memberof oj.TableDndContext\n   * @private\n   */\n  TableDndContext.prototype._getOverRowIndex = function (event) {\n    var newRowIndex;\n    var overRow = this.component._getFirstAncestor(event.target, Table.DOM_ELEMENT._TR, true);\n\n    // Find the index from the DOM directly instead of calling this.component._getElementRowIdx.  There was a change in\n    // this.component._getElementRowIdx to use cached elements so it's not accurate for dnd purpose.\n    var cell = this.component._getFirstAncestor(\n      event.target,\n      '.' +\n        Table.CSS_CLASSES._TABLE_DATA_CELL_CLASS +\n        ', .' +\n        Table.CSS_CLASSES._TABLE_SELECTOR_CELL_CLASS,\n      true\n    );\n    if (cell != null) {\n      var tableBodyRow = this.component._getFirstAncestor(\n        cell,\n        '.' + Table.CSS_CLASSES._TABLE_DATA_ROW_CLASS,\n        true\n      );\n      if (tableBodyRow != null) {\n        newRowIndex = this.component._getTableBodyRows().indexOf(tableBodyRow);\n        var targetElementRect = event.target.getBoundingClientRect();\n        if (event.offsetY > targetElementRect.height / 2) {\n          newRowIndex += 1;\n        }\n      }\n    } else if ($(overRow).hasClass(Table.CSS_CLASSES._TABLE_DATA_ROW_DRAG_INDICATOR_CLASS)) {\n      newRowIndex = this._dropRowIndex;\n    } else {\n      // If we are not in a cell and not in the indicator row, we are in an empty part\n      // of the table body, so add any new row to the end.\n      var tableBodyRows = this.component._getTableBodyRows();\n      newRowIndex = tableBodyRows.length;\n      // When drop target is empty table\n      if (newRowIndex === 0) {\n        let tableBody = this.component._getTableBody();\n        tableBody.classList.add(TableDndContext._CSS_CLASSES._DROP_TARGET_EMPTY);\n      }\n    }\n\n    return newRowIndex;\n  };\n\n  /**\n   * Handle dragstart on column\n   * @param {Event} event  jQuery event object\n   * @return {boolean|undefined} a value passed back to jQuery.  Returning false will\n   *         cause jQuery to call event.preventDefault and event.stopPropagation.\n   *         Returning true or other values has no side effect.\n   *         In the case of dragstart, returning false cancel the drag operation.\n   * @memberof oj.TableDndContext\n   */\n  TableDndContext.prototype.handleColumnDragStart = function (event) {\n    if (this._isColumnReorderEnabled()) {\n      this._dragStartColumnIdxs = this.component._getSelectedHeaderColumnIdxs();\n\n      this._setReorderColumnsDataTransfer(event, this._dragStartColumnIdxs);\n\n      // Remove text selection\n      // Text selection doesn't get cleared unless we put it in a setTimeout\n      setTimeout(function () {\n        window.getSelection().removeAllRanges();\n      }, 0);\n\n      this._dragStartColumnIdxs.forEach(\n        function (columnIdx) {\n          this._addDragMarkerClass(columnIdx);\n        }.bind(this)\n      );\n\n      return true;\n    }\n    return undefined;\n  };\n\n  /**\n   * Handle dragend on column\n   * @param {Event} event  jQuery event object\n   * @return {boolean|undefined} a value passed back to jQuery.  Returning false will\n   *         cause jQuery to call event.preventDefault and event.stopPropagation.\n   *         Returning true or other values has no side effect.\n   *         In the case of dragend, returning false has no special implication.\n   * @memberof oj.TableDndContext\n   */\n  // eslint-disable-next-line no-unused-vars\n  TableDndContext.prototype.handleColumnDragEnd = function (event) {\n    if (this._isColumnReorderEnabled()) {\n      this._dragStartColumnIdxs = null;\n      this.component._removeDragOverIndicatorColumn();\n      this._destroyDragImage();\n\n      this._removeDragMarkerClass();\n    }\n  };\n\n  /**\n   * Handle dragenter on column\n   * @param {Event} event  jQuery event object\n   * @return {boolean|undefined} a value passed back to jQuery.  Returning false will\n   *         cause jQuery to call event.preventDefault and event.stopPropagation.\n   *         Returning true or other values has no side effect.\n   *         In the case of dragenter, returning false indicates target can accept the data.\n   * @memberof oj.TableDndContext\n   */\n  TableDndContext.prototype.handleColumnDragEnter = function (event) {\n    if (this._isColumnReordering()) {\n      return undefined;\n    }\n\n    var columnIdx = this._getEventColumnIndex(event);\n\n    return this._invokeDropCallback('columns', 'dragEnter', event, { columnIndex: columnIdx });\n  };\n\n  /**\n   * Handle dragover on column reordering\n   * @param {Event} event  jQuery event object\n   * @memberof oj.TableDndContext\n   */\n  TableDndContext.prototype.handleColumnReorderDragOver = function (event) {\n    var columnIdx = this._getDragOverColumnIndex(event);\n    if (\n      columnIdx != null &&\n      this._dragStartColumnIdxs != null &&\n      this._dragStartColumnIdxs.length > 0 &&\n      this._dragStartColumnIdxs.indexOf(columnIdx) === -1\n    ) {\n      this._currentDropColumnBefore = this._isDragOverBeforeColumn(event, columnIdx);\n      // Check the current before/after column position against indicator position\n      // to see if we need to move the indicator\n      if (\n        !(this._currentDropColumnBefore && this._dragStartColumnIdxs.indexOf(columnIdx - 1) > -1) &&\n        !(!this._currentDropColumnBefore && this._dragStartColumnIdxs.indexOf(columnIdx + 1) > -1)\n      ) {\n        this.component._displayDragOverIndicatorColumn(columnIdx, this._currentDropColumnBefore);\n      }\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * Get the column index from cursor position\n   * @param {Event} event  jQuery event object\n   * @return {number} the column index\n   * @memberof oj.TableDndContext\n   * @private\n   */\n  TableDndContext.prototype._getDragOverColumnIndex = function (event) {\n    let headerCells = this.component._getTableHeaderColumns();\n    if (event.originalEvent.clientX < headerCells[0].getBoundingClientRect().left) {\n      return 0;\n    }\n    for (let i = 0; i < headerCells.length; i++) {\n      let position = headerCells[i].getBoundingClientRect();\n      if (\n        event.originalEvent.clientX > position.left &&\n        event.originalEvent.clientX <= position.right\n      ) {\n        return i;\n      }\n    }\n    return null;\n  };\n\n  /**\n   * Handle dragover on column\n   * @param {Event} event  jQuery event object\n   * @return {boolean|undefined} a value passed back to jQuery.  Returning false will\n   *         cause jQuery to call event.preventDefault and event.stopPropagation.\n   *         Returning true or other values has no side effect.\n   *         In the case of dragover, returning false indicates target can accept the data.\n   * @memberof oj.TableDndContext\n   */\n  TableDndContext.prototype.handleColumnDragOver = function (event) {\n    if (this._isColumnReordering()) {\n      return undefined;\n    }\n\n    var columnIdx = this._getEventColumnIndex(event);\n    this._currentDropColumnBefore = this._isDragOverBeforeColumn(event, columnIdx);\n\n    var returnValue = this._invokeDropCallback('columns', 'dragOver', event, {\n      columnIndex: columnIdx\n    });\n\n    if (returnValue === false || event.isDefaultPrevented()) {\n      this.component._displayDragOverIndicatorColumn(\n        columnIdx,\n        this._isDragOverBeforeColumn(event, columnIdx)\n      );\n    }\n\n    return returnValue;\n  };\n\n  /**\n   * Handle dragleave on column\n   * @param {Event} event  jQuery event object\n   * @return {boolean|undefined} a value passed back to jQuery.  Returning false will\n   *         cause jQuery to call event.preventDefault and event.stopPropagation.\n   *         Returning true or other values has no side effect.\n   *         In the case of dragleave, returning false has no special implication.\n   * @memberof oj.TableDndContext\n   */\n  TableDndContext.prototype.handleColumnDragLeave = function (event) {\n    if (this._isColumnReordering()) {\n      return undefined;\n    }\n\n    this.component._removeDragOverIndicatorColumn();\n\n    var columnIdx = this._getEventColumnIndex(event);\n\n    return this._invokeDndCallback('drop', 'columns', 'dragLeave', event, { columnIndex: columnIdx });\n  };\n\n  /**\n   * Handle drop on column reordering\n   * @param {Event} event  jQuery event object\n   * @memberof oj.TableDndContext\n   */\n  TableDndContext.prototype.handleColumnReorderDrop = function (event) {\n    this.component._removeDragOverIndicatorColumn();\n    var columnIdx = this._getDragOverColumnIndex(event);\n    if (columnIdx != null) {\n      if (!this._currentDropColumnBefore) {\n        columnIdx += 1;\n      }\n      if (this._dragStartColumnIdxs.indexOf(columnIdx) === -1) {\n        this.component._moveTableHeaderColumn(this._dragStartColumnIdxs, columnIdx, event);\n      }\n    }\n    event.preventDefault();\n  };\n\n  /**\n   * Handle drop on column\n   * @param {Event} event  jQuery event object\n   * @return {boolean|undefined} a value passed back to jQuery.  Returning false will\n   *         cause jQuery to call event.preventDefault and event.stopPropagation.\n   *         Returning true or other values has no side effect.\n   *         In the case of drop, returning false indicates target can accept the data.\n   * @memberof oj.TableDndContext\n   */\n  TableDndContext.prototype.handleColumnDrop = function (event) {\n    if (this._isColumnReordering()) {\n      return undefined;\n    }\n\n    this.component._removeDragOverIndicatorColumn();\n    var columnIdx = this._getEventColumnIndex(event);\n    if (!this._currentDropColumnBefore) {\n      columnIdx += 1;\n    }\n\n    return this._invokeDropCallback('columns', 'drop', event, { columnIndex: columnIdx });\n  };\n\n  /**\n   * Handle dragstart on row\n   * @param {Event} event  jQuery event object\n   * @return {boolean|undefined} a value passed back to jQuery.  Returning false will\n   *         cause jQuery to call event.preventDefault and event.stopPropagation.\n   *         Returning true or other values has no side effect.\n   *         In the case of dragstart, returning false cancel the drag operation.\n   * @memberof oj.TableDndContext\n   */\n  TableDndContext.prototype.handleRowDragStart = function (event) {\n    var dragOption = this.component.options.dnd.drag;\n    if (dragOption && dragOption.rows) {\n      var ui = this._setDragRowsDataTransfer(\n        event,\n        dragOption.rows.dataTypes,\n        this.component._getSelectedRowIdxs()\n      );\n      if (ui) {\n        return this._invokeDndCallback('drag', 'rows', 'dragStart', event, ui);\n      }\n\n      // Return false to cancel the dragstart event if no data\n      return false;\n    }\n    return undefined;\n  };\n\n  /**\n   * Handle drag on row\n   * @param {Event} event  jQuery event object\n   * @return {boolean|undefined} a value passed back to jQuery.  Returning false will\n   *         cause jQuery to call event.preventDefault and event.stopPropagation.\n   *         Returning true or other values has no side effect.\n   *         In the case of drag, returning false has no special implication.\n   * @memberof oj.TableDndContext\n   */\n  TableDndContext.prototype.handleRowDrag = function (event) {\n    return this._invokeDndCallback('drag', 'rows', 'drag', event);\n  };\n\n  /**\n   * Handle dragend on row\n   * @param {Event} event  jQuery event object\n   * @return {boolean|undefined} a value passed back to jQuery.  Returning false will\n   *         cause jQuery to call event.preventDefault and event.stopPropagation.\n   *         Returning true or other values has no side effect.\n   *         In the case of dragend, returning false has no special implication.\n   * @memberof oj.TableDndContext\n   */\n  TableDndContext.prototype.handleRowDragEnd = function (event) {\n    // Perform any cleanup\n    this._destroyDragImage();\n    if (this.component._rowsDragged && this.component._rowsDragged.length > 0) {\n      this.component._rowsDragged.forEach(\n        function (row) {\n          row.classList.remove(TableDndContext._CSS_CLASSES._DRAG_SOURCE_OPAQUE);\n          row.classList.remove('oj-table-row-drag-source-hide');\n          row.classList.add(Table.MARKER_STYLE_CLASSES._SELECTED);\n          this.component._updateRowStateCellsClass(null, row, { selected: true });\n        }.bind(this)\n      );\n    }\n    this.component._removeDragOverIndicatorRow();\n\n    return this._invokeDndCallback('drag', 'rows', 'dragEnd', event);\n  };\n\n  /**\n   * Handle dragenter on row\n   * @param {Event} event  jQuery event object\n   * @return {boolean|undefined} a value passed back to jQuery.  Returning false will\n   *         cause jQuery to call event.preventDefault and event.stopPropagation.\n   *         Returning true or other values has no side effect.\n   *         In the case of dragenter, returning false indicates target can accept the data.\n   * @memberof oj.TableDndContext\n   */\n  TableDndContext.prototype.handleRowDragEnter = function (event) {\n    var newRowIndex = this._getOverRowIndex(event);\n    return this._invokeDropCallback('rows', 'dragEnter', event, { rowIndex: newRowIndex });\n  };\n\n  /**\n   * Handle dragover on row\n   * @param {Event} event  jQuery event object\n   * @return {boolean|undefined} a value passed back to jQuery.  Returning false will\n   *         cause jQuery to call event.preventDefault and event.stopPropagation.\n   *         Returning true or other values has no side effect.\n   *         In the case of dragover, returning false indicates target can accept the data.\n   * @memberof oj.TableDndContext\n   */\n  TableDndContext.prototype.handleRowDragOver = function (event) {\n    var newRowIndex = this._getOverRowIndex(event);\n\n    var returnValue = this._invokeDropCallback('rows', 'dragOver', event, { rowIndex: newRowIndex });\n    if (returnValue === false || event.isDefaultPrevented()) {\n      this._updateDragRowsState(event, newRowIndex);\n    } else if (event.currentTarget.classList.contains(TableDndContext._CSS_CLASSES._DRAG_SOURCE)) {\n      this.component._rowsDragged.forEach(function (row) {\n        row.classList.add(TableDndContext._CSS_CLASSES._DRAG_SOURCE_OPAQUE);\n      });\n    }\n    return returnValue;\n  };\n\n  /**\n   * Handle dragleave on row\n   * @param {Event} event  jQuery event object\n   * @return {boolean|undefined} a value passed back to jQuery.  Returning false will\n   *         cause jQuery to call event.preventDefault and event.stopPropagation.\n   *         Returning true or other values has no side effect.\n   *         In the case of dragleave, returning false has no special implication.\n   * @memberof oj.TableDndContext\n   */\n  TableDndContext.prototype.handleRowDragLeave = function (event) {\n    var returnValue = this._invokeDndCallback('drop', 'rows', 'dragLeave', event, {\n      rowIndex: this._dropRowIndex\n    });\n\n    // Remove the indicator row if we are no longer in table body since\n    // this may be the last dnd event we get.\n    if (!this._isDndEventInElement(event, event.currentTarget)) {\n      var tableBody = this.component._getTableBody();\n      tableBody.classList.remove(TableDndContext._CSS_CLASSES._DROP_TARGET_EMPTY);\n      this.component._removeDragOverIndicatorRow();\n      this._dropRowIndex = null;\n    }\n\n    return returnValue;\n  };\n\n  /**\n   * Handle drop on row\n   * @param {Event} event  jQuery event object\n   * @return {boolean|undefined} a value passed back to jQuery.  Returning false will\n   *         cause jQuery to call event.preventDefault and event.stopPropagation.\n   *         Returning true or other values has no side effect.\n   *         In the case of drop, returning false indicates target can accept the data.\n   * @memberof oj.TableDndContext\n   */\n  TableDndContext.prototype.handleRowDrop = function (event) {\n    var dropRowIndex = this._dropRowIndex;\n\n    // Perform any cleanup\n    this._destroyDragImage();\n    var tableBody = this.component._getTableBody();\n    tableBody.classList.remove(TableDndContext._CSS_CLASSES._DROP_TARGET_EMPTY);\n    this.component._removeDragOverIndicatorRow();\n    this._dropRowIndex = null;\n\n    return this._invokeDropCallback('rows', 'drop', event, { rowIndex: dropRowIndex });\n  };\n\n  /**\n   * Invoke user callback function specified in a drag or drop option\n   * @param {string} dndType  the dnd option type ('drag' or 'drop')\n   * @param {string} itemType  the drag or drop item type such as 'rows'\n   * @param {string} callbackType  the callback type such as 'dragStart'\n   * @param {Event} event  the jQuery Event object from drag and drop event\n   * @param {Object} [ui]  additional properties to pass to callback function\n   * @return {boolean} the return value from the callback function\n   * @private\n   * @memberof oj.TableDndContext\n   */\n  TableDndContext.prototype._invokeDndCallback = function (\n    dndType,\n    itemType,\n    callbackType,\n    event,\n    ui\n  ) {\n    var dndOption = this.component.options.dnd[dndType];\n    var returnValue;\n\n    if (dndOption && dndOption[itemType]) {\n      // First let the callback decide if data can be accepted\n      var callback = dndOption[itemType][callbackType];\n      if (callback && typeof callback === 'function') {\n        try {\n          if (this.component._IsCustomElement()) {\n            // For custom element, pass original DOM event and ignore return value.\n            callback(event.originalEvent, ui);\n            if (event.originalEvent.defaultPrevented) {\n              event.preventDefault();\n            }\n          } else {\n            // Hoist dataTransfer object from DOM event to jQuery event\n            // eslint-disable-next-line no-param-reassign\n            event.dataTransfer = event.originalEvent.dataTransfer;\n\n            // Invoke callback function\n            returnValue = callback(event, ui);\n          }\n        } catch (e) {\n          Logger.error('Error: ' + e);\n        }\n      }\n    }\n\n    return returnValue;\n  };\n\n  /**\n   * Invoke user callback function specified in a drop option\n   * @param {string} itemType  the drag or drop item type such as 'rows'\n   * @param {string} callbackType  the callback type such as 'dragStart'\n   * @param {Event} event  the jQuery Event object from drag and drop event\n   * @param {Object} [ui]  additional properties to pass to callback function\n   * @return {boolean} the return value from the callback function\n   * @private\n   * @memberof oj.TableDndContext\n   */\n  TableDndContext.prototype._invokeDropCallback = function (itemType, callbackType, event, ui) {\n    var returnValue = this._invokeDndCallback('drop', itemType, callbackType, event, ui);\n\n    if (returnValue === undefined) {\n      if (this._matchDragDataType(event, itemType)) {\n        event.preventDefault();\n      }\n    }\n\n    return returnValue;\n  };\n\n  /**\n   * Whether the column reorder is enabled\n   * @return {boolean} true or false\n   * @private\n   * @memberof oj.TableDndContext\n   */\n  TableDndContext.prototype._isColumnReorderEnabled = function () {\n    var dndOption = this.component.options.dnd;\n    return dndOption && dndOption.reorder && dndOption.reorder.columns === Table._OPTION_ENABLED;\n  };\n\n  /**\n   * Return true if column reorder is in progress\n   * @private\n   * @memberof oj.TableDndContext\n   */\n  TableDndContext.prototype._isColumnReordering = function () {\n    return this._dragStartColumnIdxs != null;\n  };\n\n  /**\n   * Return true if the mouse/touch point of a dnd event is in an element\n   * @param {Event} event  jQuery event object\n   * @param {EventTarget} element  DOM element\n   * @private\n   * @memberof oj.TableDndContext\n   */\n  TableDndContext.prototype._isDndEventInElement = function (event, element) {\n    var rect = element.getBoundingClientRect();\n    var domEvent = event.originalEvent;\n\n    // clientX and clientY are only available on the original DOM event.\n    // IE returns client rect in non-integer values.  Trim it down to make sure\n    // the pointer is really still in the element.\n    return (\n      domEvent.clientX >= Math.ceil(rect.left) &&\n      domEvent.clientX < Math.floor(rect.right) &&\n      domEvent.clientY >= Math.ceil(rect.top) &&\n      domEvent.clientY < Math.floor(rect.bottom)\n    );\n  };\n\n  /**\n   * @param {Object} event event\n   * @return {boolean} <code>true</code> if the event is considered before the\n   *                   column, <code>false</code> otherwise.\n   * @private\n   * @memberof oj.TableDndContext\n   */\n  TableDndContext.prototype._isDragOverBeforeColumn = function (event, columnIdx) {\n    var columnRect = this.component._getTableHeaderColumn(columnIdx).getBoundingClientRect();\n\n    if (event.originalEvent.clientX != null) {\n      var cursorPosX = columnRect.right - event.originalEvent.clientX;\n\n      // First figure out whether the pointer is on the left half or right half\n      var onRightHalf = cursorPosX < (columnRect.right - columnRect.left) / 2;\n\n      // Whether we are before/after the column depends on the reading direction\n      return DomUtils.getReadingDirection() === 'rtl' ? onRightHalf : !onRightHalf;\n    }\n    return false;\n  };\n\n  /**\n   * Return true if the data types from dnd event match one of the values in an array\n   * @param {Event} event  jQuery event object for a drag and drop event\n   * @param {string} itemType  The drop item type such as \"rows\" or \"columns\".\n   * @return {boolean} true if one of the types in dragDataTypes and allowedTypes matches\n   * @memberof oj.TableDndContext\n   * @private\n   */\n  TableDndContext.prototype._matchDragDataType = function (event, itemType) {\n    var dragDataTypes = event.originalEvent.dataTransfer.types;\n    var dndOption = this.component.options.dnd.drop;\n\n    if (dndOption && dndOption[itemType] && dndOption[itemType].dataTypes) {\n      var allowedTypes = dndOption[itemType].dataTypes;\n      var allowedTypeArray = typeof allowedTypes === 'string' ? [allowedTypes] : allowedTypes;\n\n      // dragDataTypes can be either an array of strings (Chrome) or a\n      // DOMStringList (Firefox and IE).  For cross-browser compatibility, use its\n      // length and index to traverse it.\n      for (var i = 0; i < dragDataTypes.length; i++) {\n        if (allowedTypeArray.indexOf(dragDataTypes[i]) >= 0) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  /**\n   * Set the draggable attribute of a DOM element\n   * @param {Element} element  the DOM element\n   * @param {boolean} draggable  true if the DOM element is draggable; false otherwise.\n   * @memberof oj.TableDndContext\n   * @private\n   */\n  TableDndContext.prototype.setElementDraggable = function (element, draggable) {\n    if (draggable) {\n      element.setAttribute(Table.DOM_ATTR._DRAGGABLE, true); // @HTMLUpdateOK\n      element.classList.add(Table.MARKER_STYLE_CLASSES._DRAGGABLE);\n    } else {\n      element.removeAttribute(Table.DOM_ATTR._DRAGGABLE);\n      element.classList.remove(Table.MARKER_STYLE_CLASSES._DRAGGABLE);\n    }\n  };\n\n  /**\n   * Set the data of the selected rows into the dataTransfer object\n   * @param {Event} nativeEvent  DOM event object\n   * @param {string | Array.<string>} dataTypes  a data type or array of data types\n   * @param {Array.<Object>} rowDataArray  array of row data\n   * @memberof oj.TableDndContext\n   * @private\n   */\n  TableDndContext.prototype._setDragRowsData = function (nativeEvent, dataTypes, rowDataArray) {\n    if (dataTypes) {\n      var dataTransfer = nativeEvent.dataTransfer;\n      var jsonStr = JSON.stringify(rowDataArray);\n\n      if (typeof dataTypes === 'string') {\n        dataTransfer.setData(dataTypes, jsonStr);\n      } else {\n        for (var i = 0; i < dataTypes.length; i++) {\n          dataTransfer.setData(dataTypes[i], jsonStr);\n        }\n      }\n    }\n  };\n\n  /**\n   * Set the data and drag image of the selected row into the dataTransfer object\n   * @param {Event} event  jQuery event object\n   * @param {string | Array.<string>} dataTypes  a data type or array of data types\n   * @param {Array.<number>} selArray  array of selected row index\n   * @memberof oj.TableDndContext\n   * @private\n   */\n  TableDndContext.prototype._setDragRowsDataTransfer = function (event, dataTypes, selArray) {\n    var rowDataArray = [];\n    this.component._rowsDragged = [];\n\n    // Add data for selected rows to an array\n    for (var i = 0; i < selArray.length; i++) {\n      var rowData = this.component.getDataForVisibleRow(selArray[i]);\n      let row = this.component._getTableBodyRow(selArray[i]);\n      if (rowData && row) {\n        rowDataArray.push(rowData);\n        this.component._rowsDragged.push(row);\n      }\n    }\n\n    // Use the row data array as drag data and create drag image\n    if (rowDataArray.length) {\n      this._setDragRowsData(event.originalEvent, dataTypes, rowDataArray);\n\n      // Call _destroyDragImage before creating a new one in case the last drag image was not removed.\n      // This could happen sometimes in some versions of Chrome.\n      this._destroyDragImage();\n      this._dragImage = this._setDragRowsImage(\n        event.originalEvent,\n        this.component._getTableContainer()\n      );\n\n      return { rows: rowDataArray };\n    }\n\n    return null;\n  };\n\n  /**\n   * Set a drag image of the selected rows into the dataTransfer object\n   * @param {Event} nativeEvent  DOM event object\n   * @param {Element} tableContainer  the div DOM object\n   * @param {Array.<number>} selArray  array of selected row index\n   * @param {Array.<Object>} rowDataArray  array of row data\n   * @return {Element} DOM object for the cloned table container\n   * @memberof oj.TableDndContext\n   * @private\n   */\n  TableDndContext.prototype._setDragRowsImage = function (nativeEvent, tableContainer) {\n    var tableContainerClone = this._cloneTableContainer(tableContainer);\n    var tableBody = this.component._getTableElementsByTagName(\n      tableContainer,\n      Table.DOM_ELEMENT._TBODY\n    )[0];\n    var offsetX = Math.max(0, nativeEvent.offsetX);\n    var offsetY = Math.max(0, nativeEvent.offsetY);\n    // Drag source styles\n    tableBody.classList.add(TableDndContext._CSS_CLASSES._DRAG_SOURCE);\n    nativeEvent.dataTransfer.setDragImage(tableContainerClone, offsetX, offsetY);\n\n    return tableContainerClone;\n  };\n\n  /**\n   * Set the data and drag image for column reorder into the dataTransfer object\n   * @param {Event} event  jQuery event object\n   * @param {number} columnIdx  the index of the column being dragged\n   * @memberof oj.TableDndContext\n   * @private\n   */\n  TableDndContext.prototype._setReorderColumnsDataTransfer = function (event, columnIdxs) {\n    var dataTransfer = event.originalEvent.dataTransfer;\n    var tableIdHashCode = this.component._hashCode(this.component._getTableUID());\n    dataTransfer.setData(\n      'Text',\n      Table._DND_REORDER_TABLE_ID_DATA_KEY + ':' + tableIdHashCode + ':' + columnIdxs.join('-')\n    );\n    this._dragImage = this.component._createTableHeaderColumnDragImage(columnIdxs);\n    try {\n      dataTransfer.setDragImage(this._dragImage, 0, 0);\n    } catch (e) {\n      // MS Edge doesn't allow calling setDragImage()\n    }\n  };\n\n  /**\n   * Update the state of dragging rows\n   * @param {Event} event  jQuery event object\n   * @param {number} newRowIndex  index of the row that can receive the drop\n   * @memberof oj.TableDndContext\n   * @private\n   */\n  TableDndContext.prototype._updateDragRowsState = function (event, newRowIndex) {\n    if (this._dropRowIndex !== newRowIndex) {\n      var overRow = this.component._getFirstAncestor(event.target, Table.DOM_ELEMENT._TR, true);\n      this._dropRowIndex = newRowIndex;\n\n      // indicator style based on whether dnd within component or across component\n      let indicatorStyle =\n        event.currentTarget.classList.contains(TableDndContext._CSS_CLASSES._DRAG_SOURCE) ||\n        event.currentTarget.classList.contains(TableDndContext._CSS_CLASSES._DROP_TARGET_EMPTY)\n          ? 'space'\n          : 'line';\n      this.component._displayDragOverIndicatorRow(\n        this._dropRowIndex,\n        overRow,\n        indicatorStyle,\n        event.currentTarget.classList.contains(TableDndContext._CSS_CLASSES._DRAG_SOURCE)\n      );\n    }\n  };\n\n  /**\n   * @private\n   */\n  const TableLayoutManager = function (table) {\n    this._table = table;\n    this._tableUpdates = new Set();\n  };\n\n  // Subclass from oj.Object\n  oj.Object.createSubclass(TableLayoutManager, oj.Object, 'TableLayoutManager');\n\n  /**\n   * Return the table scroller\n   * @return {Element} scroller\n   * @private\n   */\n  TableLayoutManager.prototype.getScroller = function () {};\n\n  /**\n   * Returns the table scrollable content element\n   * @return {Element} the table scrollable content element\n   * @private\n   */\n  TableLayoutManager.prototype.getContentElement = function () {};\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype.unregisterListeners = function () {\n    this.unregisterScrollListeners();\n  };\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype._getSizingState = function () {\n    if (this._sizingState == null) {\n      this._sizingState = {\n        outerWidth: null,\n        outerHeight: null,\n        hasHorizontalOverflow: false,\n        hasVerticalOverflow: false\n      };\n    }\n    return this._sizingState;\n  };\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype.notifyTableUpdate = function (tableUpdate) {\n    this._tableUpdates.add(tableUpdate);\n  };\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype._getTableUpdates = function () {\n    return this._tableUpdates;\n  };\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype._clearTableUpdates = function () {\n    this._tableUpdates.clear();\n  };\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype.isTableLayoutRefreshRequired = function () {\n    return this._tableUpdates.size > 0;\n  };\n\n  /**\n   * Determines if the Table's sizing requires a refresh.\n   * @param {number=} width table container width\n   * @param {number=} height table container height\n   * @private\n   */\n  TableLayoutManager.prototype.isSizingRefreshRequired = function (width, height) {\n    if (width != null && height != null) {\n      // When a width and height are supplied, we need to ensure they are both non-zero,\n      // and also that they are not the same as our cached values (if available).\n      var sizingState = this._getSizingState();\n      return (\n        width > 0 &&\n        height > 0 &&\n        (width !== sizingState.outerWidth || height !== sizingState.outerHeight)\n      );\n    }\n    //  Otherwise, we only need to ensure the tableContainer's size is non-zero.\n    return this.hasRenderedSize();\n  };\n\n  /**\n   * Determines if the Table has a 'real' size (and can be scrolled, frozen, etc...)\n   * @private\n   */\n  TableLayoutManager.prototype.hasRenderedSize = function () {\n    var tableContainer = this._table._getTableContainer();\n    return tableContainer.offsetWidth > 0 && tableContainer.offsetHeight > 0;\n  };\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype._enableTableVisibility = function () {\n    this._table._clearTableBodyHideTimeout();\n    this._table._clearTableFooterHideTimeout();\n    var tableBody = this._table._getTableBody();\n    if (tableBody) {\n      tableBody.style[Table.CSS_PROP._VISIBILITY] = '';\n    }\n    var tableFooter = this._table._getTableFooter();\n    if (tableFooter) {\n      tableFooter.style[Table.CSS_PROP._VISIBILITY] = '';\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype.refreshTableDimensions = function () {};\n\n  /**\n   * Refresh the table dimensions\n   * @private\n   */\n  TableLayoutManager.prototype.optimizeInitialColumnWidths = function () {};\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype._restoreCachedScrollPos = function () {\n    var scrollTop =\n      this._table._scrollTop != null && this._table._scrollTop > 0 ? this._table._scrollTop : null;\n    var scrollLeft =\n      this._table._scrollLeft != null && this._table._scrollLeft > 0 ? this._table._scrollLeft : null;\n\n    if (scrollTop != null) {\n      var maxScrollTop = this.getScroller().scrollHeight - this.getScroller().clientHeight;\n      var newScrollTop = scrollTop > maxScrollTop ? maxScrollTop : scrollTop;\n      if (this._table._isLoadMoreOnScroll() && maxScrollTop === newScrollTop) {\n        // Do not set to maxScrollTop or we will cause another fetch\n        newScrollTop -= 1;\n      }\n      this.getScroller().scrollTop = newScrollTop;\n    }\n\n    if (scrollLeft != null) {\n      this._restoreScrollLeft(scrollLeft);\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype._finalizeTableDimensions = function () {\n    this._restoreCachedScrollPos();\n\n    // cache the final dimensions\n    var sizingState = this._getSizingState();\n    var containerStyle = window.getComputedStyle(this._table._getTableContainer());\n    sizingState.outerWidth = this.getExactOffsetWidth(containerStyle);\n    sizingState.outerHeight = this.getExactOffsetHeight(containerStyle);\n\n    this._clearTableUpdates();\n    this._enableTableVisibility();\n    this.registerScrollListeners();\n  };\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype.handleAfterRowsProcessed = function () {};\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype._handleScrollerScrollLeft = function (scrollLeft) {\n    this._table._scrollLeft = scrollLeft;\n  };\n\n  /**\n   * Handle scrollTop on scroller\n   * @private\n   */\n  TableLayoutManager.prototype._handleScrollerScrollTop = function (scrollTop) {\n    // if no domScroller is set, make sure scroll pos busy state is cleared here\n    if (!this._table._domScroller) {\n      this._table._clearScrollPosBusyState();\n    }\n    // handle case where browser has likely auto-scrolled the Table into view incorrectly on\n    // focus due to combination of 'sticky' header region and external scroller specified\n    if (\n      this._table._isExternalScrollEnabled() &&\n      !this._table._hasActiveRow() &&\n      this._table._browserAutoScrollInitPos != null\n    ) {\n      var browserAutoScrollInitPos = this._table._browserAutoScrollInitPos;\n      this._table._clearBrowserAutoScrollTimeout();\n      var vertScrollPos = this._table._getCurrentVerticalScrollPosition(scrollTop);\n      if (vertScrollPos.rowIndex > 0 && scrollTop > browserAutoScrollInitPos) {\n        this._table._scrollRowIntoViewport(0, true);\n        return;\n      }\n    }\n    if (scrollTop < 0) {\n      // eslint-disable-next-line no-param-reassign\n      scrollTop = 0;\n    }\n    this._table._scrollTop = scrollTop;\n    // keep track when scrollTop is triggered internally (syncScrollPosition)\n    this._table._scrollY = this._table._skipScrollUpdate ? scrollTop : null;\n\n    // update mobile touch selection affordance if present\n    this._table._moveTableBodyRowTouchSelectionAffordanceTop();\n    this._table._moveTableBodyRowTouchSelectionAffordanceBottom();\n\n    // ensure scroll buffer height is updated as vertical scrolling occurs\n    this._table._updateScrollBufferHeight();\n  };\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype.registerScrollListeners = function () {\n    var scroller = this.getScroller();\n    if (scroller != null) {\n      // if width or height is defined then we can have scrollbars so register scroll event listeners\n      if (this._scrollEventListener == null) {\n        this._scrollEventListener = function (event) {\n          var newScrollLeft = this._table._getElementScrollLeft(event.target);\n          var newScrollTop = event.target.scrollTop;\n          if (newScrollLeft === this._table._scrollLeft && newScrollTop === this._table._scrollTop) {\n            // discard bogus scroll event\n            return;\n          }\n\n          this._handleScrollerScrollLeft(newScrollLeft);\n          this._handleScrollerScrollTop(newScrollTop);\n\n          // do not update scrollPosition if we are already adjusting\n          if (this._table._isScrollPositionAdjusted()) {\n            return;\n          }\n\n          if (!this._table._skipScrollUpdate && !this._ticking) {\n            window.requestAnimationFrame(\n              function () {\n                // scrollPosition could have been adjusted or a new value is set while waiting for animation frame\n                if (!this._table._isScrollPositionAdjusted() && !this._table._skipScrollUpdate) {\n                  this._table.option('scrollPosition', this._table._getCurrentScrollPosition(), {\n                    _context: {\n                      originalEvent: event,\n                      internalSet: true\n                    }\n                  });\n                }\n                this._ticking = false;\n              }.bind(this)\n            );\n            this._ticking = true;\n          }\n          this._table._skipScrollUpdate = false;\n        }.bind(this);\n      }\n      // remove the event listener before adding to make sure only one is active at a time\n      scroller.removeEventListener('scroll', this._scrollEventListener);\n      scroller.addEventListener('scroll', this._scrollEventListener, false);\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype.updateCurrentScrollState = function () {\n    var scroller = this.getScroller();\n    var newScrollLeft = this._table._getElementScrollLeft(scroller);\n    var newScrollTop = scroller.scrollTop;\n\n    if (newScrollLeft !== this._table._scrollLeft || newScrollTop !== this._table._scrollTop) {\n      this._handleScrollerScrollLeft(newScrollLeft);\n      this._handleScrollerScrollTop(newScrollTop);\n\n      this._table.option('scrollPosition', this._table._getCurrentScrollPosition(), {\n        _context: {\n          internalSet: true\n        }\n      });\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype.unregisterScrollListeners = function () {\n    var scroller = this.getScroller();\n    if (scroller != null && this._scrollEventListener != null) {\n      scroller.removeEventListener('scroll', this._scrollEventListener);\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype._restoreScrollLeft = function (scrollLeft) {\n    DomUtils.setScrollLeft(this.getScroller(), scrollLeft);\n  };\n\n  /**\n   * @param {Element} cell\n   * @private\n   */\n  TableLayoutManager.prototype.getColumnWidthProperty = function (cell) {\n    var computedStyle = window.getComputedStyle(cell);\n    var boxStyle = this._getBoxStyle(computedStyle);\n    if (DataCollectionUtils.isIE()) {\n      // IE 11 has an issue where border-box still returns just the inner content-box width\n      return parseFloat(computedStyle.width) + boxStyle.paddingWidth;\n    }\n    return (\n      parseFloat(computedStyle.width) +\n      (boxStyle.boxSizing === Table.CSS_VAL._BORDER_BOX\n        ? -boxStyle.borderWidth\n        : boxStyle.paddingWidth)\n    );\n  };\n\n  /**\n   * Calculates the columns[].width property value that would result in the cell offsetWidth provided.\n   * @private\n   */\n  TableLayoutManager.prototype.getWidthPropertyFromOffsetWidth = function (offsetWidth, cell) {\n    var computedStyle = window.getComputedStyle(cell);\n    var boxStyle = this._getBoxStyle(computedStyle);\n    return offsetWidth - boxStyle.borderWidth;\n  };\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype.isTableWidthConstrained = function () {\n    return this._getSizingState().hasHorizontalOverflow;\n  };\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype.isTableHeightConstrained = function () {\n    return this._getSizingState().hasVerticalOverflow;\n  };\n\n  /**\n   * Return the scrollbar height\n   * @return {number} scrolbar height\n   * @private\n   */\n  TableLayoutManager.prototype.getScrollBarHeight = function () {\n    return this.isTableWidthConstrained() ? this._getDefaultScrollBarSize() : 0;\n  };\n\n  /**\n   * Return the scrollbar width\n   * @return {number} scrolbar width\n   * @private\n   */\n  TableLayoutManager.prototype.getScrollBarWidth = function () {\n    return this.isTableHeightConstrained() && !this._isVerticalScrollBarHidden()\n      ? this._getDefaultScrollBarSize()\n      : 0;\n  };\n\n  /**\n   * Get style related to box width of an element\n   * @param {Object} style - the style of an element\n   * @return {Object} An object with boxSizing, borderWidth, and paddingWidth properties\n   * @private\n   */\n  TableLayoutManager.prototype._getBoxStyle = function (style, isVert) {\n    if (isVert) {\n      return {\n        boxSizing: style[Table.CSS_PROP._BOX_SIZING],\n        borderWidth:\n          (parseFloat(style[Table.CSS_PROP._BORDER_TOP_WIDTH]) || 0) +\n          (parseFloat(style[Table.CSS_PROP._BORDER_BOTTOM_WIDTH]) || 0),\n        paddingWidth:\n          (parseFloat(style[Table.CSS_PROP._PADDING_TOP]) || 0) +\n          (parseFloat(style[Table.CSS_PROP._PADDING_BOTTOM]) || 0)\n      };\n    }\n    return {\n      boxSizing: style[Table.CSS_PROP._BOX_SIZING],\n      borderWidth:\n        (parseFloat(style[Table.CSS_PROP._BORDER_RIGHT_WIDTH]) || 0) +\n        (parseFloat(style[Table.CSS_PROP._BORDER_LEFT_WIDTH]) || 0),\n      paddingWidth:\n        (parseFloat(style[Table.CSS_PROP._PADDING_RIGHT]) || 0) +\n        (parseFloat(style[Table.CSS_PROP._PADDING_LEFT]) || 0)\n    };\n  };\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype._applyColumnHeaderHeight = function (headerColumnCell, height) {\n    var headerColumnDiv = this._table._getTableElementsByClassName(\n      headerColumnCell,\n      Table.CSS_CLASSES._COLUMN_HEADER_CLASS\n    );\n    if (headerColumnDiv.length > 0) {\n      headerColumnDiv[0].style[Table.CSS_PROP._MIN_HEIGHT] = height + Table.CSS_VAL._PX;\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype._applyForcedColumnWidth = function (cell, forcedWidth) {\n    var columnElement = cell;\n    // add 'px' to the end of the value if width is not being cleared\n    if (forcedWidth !== '') {\n      // eslint-disable-next-line no-param-reassign\n      forcedWidth += Table.CSS_VAL._PX;\n    }\n    columnElement.style[Table.CSS_PROP._MIN_WIDTH] = forcedWidth;\n    columnElement.style[Table.CSS_PROP._WIDTH] = forcedWidth;\n    columnElement.style[Table.CSS_PROP._MAX_WIDTH] = forcedWidth;\n  };\n\n  /**\n   * @param {Element} cell\n   * @param {Object} cellCompStyle\n   * @param {number=} columnWidth\n   * @private\n   */\n  TableLayoutManager.prototype._getForcedColumnWidth = function (cell, cellCompStyle, columnWidth) {\n    // ojtable columns width is interpreted as padding + content width, so we either have to\n    // add in the border width or substract the padding width based on the box-sizing style.\n    var cellBoxStyle = this._getBoxStyle(cellCompStyle);\n    if (columnWidth != null) {\n      return (\n        columnWidth +\n        (cellBoxStyle.boxSizing === Table.CSS_VAL._BORDER_BOX\n          ? cellBoxStyle.borderWidth\n          : -cellBoxStyle.paddingWidth)\n      );\n    } else if (DataCollectionUtils.isIE() && cellBoxStyle.boxSizing === Table.CSS_VAL._BORDER_BOX) {\n      // IE 11 has an issue where border-box still returns just the inner content-box width\n      return parseFloat(cellCompStyle.width) + cellBoxStyle.paddingWidth + cellBoxStyle.borderWidth;\n    }\n    // else, this is the actual width of the column, and we need a width value that will match\n    return parseFloat(cellCompStyle.width);\n  };\n\n  /**\n   * Returns the minimum offsetWidth that will be honored by the given column.\n   * @private\n   */\n  TableLayoutManager.prototype.getMinimumForcedOffsetWidth = function (columnIndex) {\n    var minWidth = 0;\n    // find minimum header width\n    var headerCell = this._table._getTableHeaderColumn(columnIndex);\n    if (headerCell != null) {\n      var headerBoxStyle = this._getBoxStyle(window.getComputedStyle(headerCell));\n      var headerMinWidth = headerBoxStyle.paddingWidth + headerBoxStyle.borderWidth;\n      if (minWidth < headerMinWidth) {\n        minWidth = headerMinWidth;\n      }\n    }\n    // find minimum body cell width\n    var tableBodyCell = this._table._getTableBodyCell(0, columnIndex, null);\n    if (tableBodyCell != null) {\n      var bodyCellBoxStyle;\n      var bodyCellMinWidth = 0;\n      if (!this._table._hasRowOrCellRendererOrTemplate(columnIndex)) {\n        bodyCellBoxStyle = this._getBoxStyle(window.getComputedStyle(tableBodyCell));\n        bodyCellMinWidth = bodyCellBoxStyle.paddingWidth + bodyCellBoxStyle.borderWidth;\n      } else {\n        var tableBodyRows = this._table._getTableBodyRows();\n        for (var i = 0; i < tableBodyRows.length; i++) {\n          tableBodyCell = this._table._getTableBodyCell(i, columnIndex, null);\n          if (tableBodyCell != null) {\n            bodyCellBoxStyle = this._getBoxStyle(window.getComputedStyle(tableBodyCell));\n            var cellMinWidth = bodyCellBoxStyle.paddingWidth + bodyCellBoxStyle.borderWidth;\n            if (bodyCellMinWidth < cellMinWidth) {\n              bodyCellMinWidth = cellMinWidth;\n            }\n          }\n        }\n      }\n      if (minWidth < bodyCellMinWidth) {\n        minWidth = bodyCellMinWidth;\n      }\n    }\n    // find minimum footer width\n    var footerCell = this._table._getTableFooterCell(columnIndex);\n    if (footerCell != null) {\n      var footerBoxStyle = this._getBoxStyle(window.getComputedStyle(footerCell));\n      var footerMinWidth = footerBoxStyle.paddingWidth + footerBoxStyle.borderWidth;\n      if (minWidth < footerMinWidth) {\n        minWidth = footerMinWidth;\n      }\n    }\n    return minWidth;\n  };\n\n  /**\n   * Returns whether or not the vertical scrollbar should be hidden\n   * @private\n   */\n  TableLayoutManager.prototype._isVerticalScrollBarHidden = function () {\n    return (\n      !this._table._isTouchDevice() &&\n      this._table\n        ._getTableContainer()\n        .classList.contains(Table.MARKER_STYLE_CLASSES._HIDE_VERTICAL_SCROLLBAR)\n    );\n  };\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype.initializeDefaultScrollBarSize = function (element) {\n    // cache browser scroll bar width for future sizing of table scrolling element\n    this._table._defaultScrollBarSize = DataCollectionUtils.getDefaultScrollBarWidth(element);\n  };\n\n  /**\n   * Returns the default scrollbar size for the table when visible\n   * @private\n   */\n  TableLayoutManager.prototype._getDefaultScrollBarSize = function () {\n    if (this._table._defaultScrollBarSize == null) {\n      this.initializeDefaultScrollBarSize(this.getScroller());\n    }\n    return this._table._defaultScrollBarSize;\n  };\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype.clearCachedDimensions = function () {\n    this._clientWidth = null;\n    this._clientHeight = null;\n    this._scrollWidth = null;\n    this._scrollHeight = null;\n  };\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype._clearColumnSizingCache = function () {\n    this._table._columnOffsets = null;\n  };\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype.getColumnScrollLeft = function () {};\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype.getRowScrollTop = function () {};\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype.getScrollWidth = function () {\n    if (this._scrollWidth == null) {\n      this._scrollWidth = this.getScroller().scrollWidth;\n    }\n    return this._scrollWidth;\n  };\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype.getScrollHeight = function () {\n    if (this._scrollHeight == null) {\n      this._scrollHeight = this.getScroller().scrollHeight;\n    }\n    return this._scrollHeight;\n  };\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype.getClientWidth = function () {\n    if (this._clientWidth == null) {\n      this._clientWidth = this.getScroller().clientWidth;\n    }\n    return this._clientWidth;\n  };\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype.getClientHeight = function () {\n    if (this._clientHeight == null) {\n      this._clientHeight = this.getScroller().clientHeight;\n    }\n    return this._clientHeight;\n  };\n\n  /**\n   * Remove table dimensions styling\n   * @private\n   */\n  TableLayoutManager.prototype._removeTableDimensionsStyling = function () {\n    this.unregisterScrollListeners();\n\n    var tableElem = this._table._getTable();\n    var tableHeader = this._table._getTableHeader();\n    var tableHeaderRow = this._table._getTableHeaderRow();\n    var tableHeaderColumns = this._table._getTableHeaderColumns();\n    var tableFooter = this._table._getTableFooter();\n    var tableFooterRow = this._table._getTableFooterRow();\n    var tableBody = this._table._getTableBody();\n    var tableBottomSlot = this._table._getTableBottomSlot();\n\n    var tableContainer = this._table._getTableContainer();\n    tableContainer.classList.remove(Table.CSS_CLASSES._TABLE_SCROLL_VERTICAL_CLASS);\n    tableContainer.classList.remove(Table.CSS_CLASSES._TABLE_SCROLL_HORIZONTAL_CLASS);\n\n    // first remove any styling so that the browser sizes the table\n    tableElem.removeAttribute(Table.DOM_ATTR._STYLE);\n    if (tableBody != null) {\n      tableBody.removeAttribute(Table.DOM_ATTR._STYLE);\n    }\n    if (tableHeader != null) {\n      tableHeader.removeAttribute(Table.DOM_ATTR._STYLE);\n      tableHeaderRow.removeAttribute(Table.DOM_ATTR._STYLE);\n\n      var headerColumnTextDivs = this._table._getTableElementsByClassName(\n        tableHeaderRow,\n        Table.CSS_CLASSES._COLUMN_HEADER_TEXT_CLASS\n      );\n      var headerColumnTextDivsCount = headerColumnTextDivs.length;\n      for (var i = 0; i < headerColumnTextDivsCount; i++) {\n        headerColumnTextDivs[i].style[Table.CSS_PROP._WIDTH] = '';\n      }\n      for (let k = 0; k < tableHeaderColumns.length; k++) {\n        tableHeaderColumns[k].classList.remove(Table.CSS_CLASSES._TABLE_HEADER_WRAP_TEXT_CLASS);\n      }\n    }\n    if (tableFooter != null) {\n      tableFooter.removeAttribute(Table.DOM_ATTR._STYLE);\n      tableFooterRow.removeAttribute(Table.DOM_ATTR._STYLE);\n    }\n    if (tableBottomSlot != null) {\n      tableBottomSlot.removeAttribute(Table.DOM_ATTR._STYLE);\n    }\n\n    this._removeHeaderColumnAndCellColumnWidths();\n  };\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype._getBottomSlotHeight = function () {\n    var tableBottomSlot = this._table._getTableBottomSlot();\n\n    // find Table's bottom slot height to use when determining if overflow if present\n    if (\n      tableBottomSlot != null &&\n      tableBottomSlot.clientHeight > 0 &&\n      tableBottomSlot.style[Table.CSS_PROP._DISPLAY] !== Table.CSS_VAL._NONE\n    ) {\n      // offsetHeight does not include partial px values, so computed style should be used\n      var bottomSlotStyle = window.getComputedStyle(tableBottomSlot);\n      return this.getExactOffsetHeight(bottomSlotStyle);\n    }\n    return 0;\n  };\n\n  /**\n   * Returns an array describing the table container's scrollable state.\n   * Index 0 describes the vertical state, while index 1 describeds the horizontal state.\n   * Overflow is a 1, underflow is a -1, and properly filled is a 0.\n   * @param {number} bottomSlotHeight the height of the Table's bottom slot\n   * @return {Array} First element is height boolean, followed by width boolean.\n   * @private\n   */\n  TableLayoutManager.prototype._getTableContainerScrollableState = function (bottomSlotHeight) {\n    // clientHeight and clientWidth do not include partial px values, so computed style should be used\n    var containerStyle = window.getComputedStyle(this._table._getTableContainer());\n    var containerClientHeight = this.getExactClientHeight(containerStyle);\n    var containerClientWidth = this.getExactClientWidth(containerStyle);\n\n    // offsetHeight and offsetWidth do not include partial px values, so computed style should be used\n    var tableElemStyle = window.getComputedStyle(this._table._getTable());\n    var tableElemHeight = this.getExactOffsetHeight(tableElemStyle);\n    var tableElemWidth = this.getExactOffsetWidth(tableElemStyle);\n\n    var result = [];\n    if (containerClientHeight > 0) {\n      var innerHeight = tableElemHeight + bottomSlotHeight;\n      if (innerHeight - containerClientHeight > Table.SIZING_ERROR_MARGIN) {\n        // overflow\n        result[0] = 1;\n      } else if (containerClientHeight - innerHeight > Table.SIZING_ERROR_MARGIN) {\n        // underflow\n        result[0] = -1;\n      } else {\n        result[0] = 0;\n      }\n    } else {\n      result[0] = 0;\n    }\n\n    if (containerClientWidth > 0) {\n      if (tableElemWidth - containerClientWidth > Table.SIZING_ERROR_MARGIN) {\n        // overflow\n        result[1] = 1;\n      } else if (containerClientWidth - tableElemWidth > Table.SIZING_ERROR_MARGIN) {\n        // underflow\n        result[1] = -1;\n      } else {\n        result[1] = 0;\n      }\n    } else {\n      result[1] = 0;\n    }\n    return result;\n  };\n\n  /**\n   * Iterate through the columns and set any column widths that are defined by the columns[].width attribute\n   * @private\n   */\n  TableLayoutManager.prototype._setForcedColumnWidths = function () {\n    var headerCell;\n    var tableBodyCell;\n    var footerCell;\n\n    var columns = this._table._getColumnDefs();\n    var columnsCount = columns.length;\n    var tableBodyRows = this._table._getTableBodyRows();\n\n    // find and set the widths of the forced width columns, cells, and footers first\n    // this allows the browser to adjust the remaining column widths automatically\n    this._forcedWidthColumns = [];\n    for (var i = 0; i < columnsCount; i++) {\n      var columnWidth = this._getPixelStyleEquivalent(columns[i].width);\n      if (columnWidth != null) {\n        // reset the default styling and width at the start of each column loop\n        var columnCellCompStyle = null;\n        var forcedColumnCellWidth = null;\n        // update column header cell width\n        headerCell = this._table._getTableHeaderColumn(i);\n        if (headerCell != null) {\n          var forcedColumnWidth = this._getForcedColumnWidth(\n            headerCell,\n            window.getComputedStyle(headerCell),\n            columnWidth\n          );\n          this._applyForcedColumnWidth(headerCell, forcedColumnWidth);\n          // store forced column width in case it is needed for scrollbar adjustments later\n          this._forcedWidthColumns[i] = forcedColumnWidth;\n        } else {\n          this._forcedWidthColumns[i] = true;\n        }\n\n        // update column table body cell widths\n        var legacyWidthBuffer = this._table._getTableBodyLegacyWidthBuffer();\n        // check for width buffer row for legacy rendering\n        if (legacyWidthBuffer != null) {\n          var bufferCell = legacyWidthBuffer.childNodes[i];\n          var bufferCellWidth = this._getForcedColumnWidth(\n            bufferCell,\n            window.getComputedStyle(bufferCell),\n            columnWidth\n          );\n          this._applyForcedColumnWidth(bufferCell, bufferCellWidth);\n        }\n\n        // update 'add row' cell widths\n        var addRowRow = this._table._getPlaceHolderRow();\n        if (addRowRow != null) {\n          var addRowCell = this._table._getColspanLogicalElements(\n            this._table._getPlaceHolderRowCells(addRowRow)\n          )[i];\n          if (addRowCell != null) {\n            var addRowCellWidth = this._getForcedColumnWidth(\n              addRowCell,\n              window.getComputedStyle(addRowCell),\n              columnWidth\n            );\n            this._applyForcedColumnWidth(addRowCell, addRowCellWidth);\n          }\n        }\n\n        if (!this._table._hasRowOrCellRendererOrTemplate(i)) {\n          tableBodyCell = this._table._getTableBodyCell(0, i);\n          if (tableBodyCell != null) {\n            columnCellCompStyle = window.getComputedStyle(tableBodyCell);\n            forcedColumnCellWidth = this._getForcedColumnWidth(\n              tableBodyCell,\n              columnCellCompStyle,\n              columnWidth\n            );\n          }\n        }\n        for (var j = 0; j < tableBodyRows.length; j++) {\n          tableBodyCell = this._table._getTableBodyLogicalCells(j)[i];\n          if (tableBodyCell != null) {\n            if (columnCellCompStyle == null) {\n              var cellCompStyle = window.getComputedStyle(tableBodyCell);\n              var forcedCellWidth = this._getForcedColumnWidth(\n                tableBodyCell,\n                cellCompStyle,\n                columnWidth\n              );\n              this._applyForcedColumnWidth(tableBodyCell, forcedCellWidth);\n            } else {\n              this._applyForcedColumnWidth(tableBodyCell, forcedColumnCellWidth);\n            }\n          }\n        }\n\n        // update column footer cell width\n        footerCell = this._table._getTableFooterCell(i);\n        if (footerCell != null) {\n          this._applyForcedColumnWidth(\n            footerCell,\n            this._getForcedColumnWidth(footerCell, window.getComputedStyle(footerCell), columnWidth)\n          );\n        }\n      } else {\n        this._forcedWidthColumns[i] = false;\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype._verifyMinAndMaxWidths = function () {\n    var columns = this._table._getColumnDefs();\n    var columnsCount = columns.length;\n    var rowsCount = this._table._getTableBodyRows().length;\n\n    var continueSizing = true;\n    // flag to check track whether full sizing run was successfull\n    while (continueSizing) {\n      continueSizing = false;\n      for (var i = 0; i < columnsCount; i++) {\n        // only verify min and max widths for non-forced column widths\n        if (this._forcedWidthColumns[i] === false) {\n          var minApplied = this._applyColMinMax(columns, i, rowsCount, true);\n          if (minApplied) {\n            continueSizing = true;\n            break;\n          }\n          var maxApplied = this._applyColMinMax(columns, i, rowsCount, false);\n          if (maxApplied) {\n            continueSizing = true;\n            break;\n          }\n        }\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype._applyColMinMax = function (columns, columnIndex, rowsCount, isMin) {\n    var headerCell;\n    var tableBodyCell;\n    var footerCell;\n    var colWidth = 0;\n\n    var valueApplied = false;\n    var columnCellCompStyle = null;\n    var forcedColumnCellWidth = null;\n\n    var colTestWidth = isMin\n      ? this._getPixelStyleEquivalent(columns[columnIndex].minWidth)\n      : this._getPixelStyleEquivalent(columns[columnIndex].maxWidth);\n    if (colTestWidth != null) {\n      headerCell = this._table._getTableHeaderColumn(columnIndex);\n      tableBodyCell = this._table._getTableBodyLogicalCells(0)[columnIndex];\n      footerCell = this._table._getTableFooterCell(columnIndex);\n\n      if (headerCell != null) {\n        colWidth = headerCell.offsetWidth;\n      } else if (tableBodyCell != null) {\n        colWidth = tableBodyCell.offsetWidth;\n      } else if (footerCell != null) {\n        colWidth = footerCell.offsetWidth;\n      }\n\n      if (colWidth > 0 && (isMin ? colWidth < colTestWidth : colWidth > colTestWidth)) {\n        valueApplied = true;\n        this._forcedWidthColumns[columnIndex] = colTestWidth;\n        // update column header cell width\n        if (headerCell != null) {\n          var forcedColumnWidth = this._getForcedColumnWidth(\n            headerCell,\n            window.getComputedStyle(headerCell),\n            colTestWidth\n          );\n          this._applyForcedColumnWidth(headerCell, forcedColumnWidth);\n        }\n\n        // update width buffer row for legacy rendering\n        var legacyWidthBuffer = this._table._getTableBodyLegacyWidthBuffer();\n        if (legacyWidthBuffer != null) {\n          var bufferCell = legacyWidthBuffer.childNodes[columnIndex];\n          var bufferCellWidth = this._getForcedColumnWidth(\n            bufferCell,\n            window.getComputedStyle(bufferCell),\n            colTestWidth\n          );\n          this._applyForcedColumnWidth(bufferCell, bufferCellWidth);\n        }\n\n        // update 'add row' cell widths\n        var addRowRow = this._table._getPlaceHolderRow();\n        if (addRowRow != null) {\n          var addRowCell = this._table._getColspanLogicalElements(\n            this._table._getPlaceHolderRowCells(addRowRow)\n          )[columnIndex];\n          if (addRowCell != null) {\n            var addRowCellWidth = this._getForcedColumnWidth(\n              addRowCell,\n              window.getComputedStyle(addRowCell),\n              colTestWidth\n            );\n            this._applyForcedColumnWidth(addRowCell, addRowCellWidth);\n          }\n        }\n\n        if (!this._table._hasRowOrCellRendererOrTemplate(columnIndex) && tableBodyCell != null) {\n          columnCellCompStyle = window.getComputedStyle(tableBodyCell);\n          forcedColumnCellWidth = this._getForcedColumnWidth(\n            tableBodyCell,\n            columnCellCompStyle,\n            colTestWidth\n          );\n        }\n        for (var i = 0; i < rowsCount; i++) {\n          tableBodyCell = this._table._getTableBodyLogicalCells(i)[columnIndex];\n          if (tableBodyCell != null) {\n            if (columnCellCompStyle == null) {\n              var cellCompStyle = window.getComputedStyle(tableBodyCell);\n              var forcedCellWidth = this._getForcedColumnWidth(\n                tableBodyCell,\n                cellCompStyle,\n                colTestWidth\n              );\n              this._applyForcedColumnWidth(tableBodyCell, forcedCellWidth);\n            } else {\n              this._applyForcedColumnWidth(tableBodyCell, forcedColumnCellWidth);\n            }\n          }\n        }\n\n        // update column footer cell width\n        if (footerCell != null) {\n          this._applyForcedColumnWidth(\n            footerCell,\n            this._getForcedColumnWidth(footerCell, window.getComputedStyle(footerCell), colTestWidth)\n          );\n        }\n      }\n    }\n    return valueApplied;\n  };\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype._getPixelStyleEquivalent = function (styleVal) {\n    if (typeof styleVal === 'string') {\n      // empty string is equivalent to the style not being set\n      if (styleVal === '') {\n        return null;\n      }\n      if (styleVal === 'auto') {\n        return this._getMinWidthAutoEquivalent();\n      }\n      // must calculate equivalent size if non-digits are present, and px are not specified\n      var units = styleVal.match(/\\D/g);\n      if (units != null && styleVal.indexOf('px') === -1) {\n        this._table._tableWidthContainer.style.width = styleVal;\n        return this._table._tableWidthContainer.offsetWidth;\n      }\n      // otherwise continue to parse the numeric value from the string provided\n      return parseFloat(styleVal);\n    }\n    return styleVal;\n  };\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype._getMinWidthAutoEquivalent = function () {\n    return null;\n  };\n\n  /**\n   * @private\n   */\n  // eslint-disable-next-line no-unused-vars\n  TableLayoutManager.prototype.handleMouseEnterHeaderCell = function (event) {};\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype.handleMouseDownHeaderCell = function (event) {\n    // get the column index\n    var columnIdx = this._table._getElementColumnIdx(this._table._getEventTargetElement(event));\n    var setActiveHeader = false;\n\n    if (event.which === 1) {\n      if (!this._handleHeaderColumnResizeStart(event, true)) {\n        // set the column focus if shift key is not pressed\n        if (!event[Table._KEYBOARD_CODES._MODIFIER_SHIFT]) {\n          setActiveHeader = true;\n        }\n      }\n      if (DataCollectionUtils.isFirefox() && DomUtils.isMetaKeyPressed(event)) {\n        event.preventDefault();\n      }\n    } else {\n      // other button clicks on header should ensure target header cell is active\n      setActiveHeader = true;\n    }\n\n    if (setActiveHeader) {\n      // skip scrolling column into viewport\n      this._table._setActiveHeader(columnIdx, event, true);\n      $(event.target).data(Table._FOCUS_CALLED, true);\n    }\n  };\n\n  /**\n   * @private\n   */\n  // eslint-disable-next-line no-unused-vars\n  TableLayoutManager.prototype.handleMouseMoveHeader = function (event) {};\n\n  /**\n   * @private\n   */\n  // eslint-disable-next-line no-unused-vars\n  TableLayoutManager.prototype.handleMouseMoveHeaderCell = function (event) {};\n\n  /**\n   * @private\n   */\n  // eslint-disable-next-line no-unused-vars\n  TableLayoutManager.prototype.handleMouseUp = function (event) {};\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype.handleMouseLeaveTable = function () {};\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype.handleTouchStartHeaderCell = function (event) {\n    var fingerCount = event.originalEvent.touches.length;\n    if (fingerCount === 1) {\n      if (this._table._isTableColumnsResizable() && this._handleHeaderColumnResizeStart(event)) {\n        event.preventDefault();\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  // eslint-disable-next-line no-unused-vars\n  TableLayoutManager.prototype.handleTouchMoveHeader = function (event) {};\n\n  /**\n   * @private\n   */\n  // eslint-disable-next-line no-unused-vars\n  TableLayoutManager.prototype.handleTouchEnd = function (event) {};\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype.handleTouchCancel = function () {};\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype.handleKeyDownEsc = function () {};\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype.handleFocusout = function () {};\n\n  /**\n   * @private\n   */\n  // eslint-disable-next-line no-unused-vars\n  TableLayoutManager.prototype.handleRowRefresh = function (rowIdx, tableBodyRow, isRefresh) {\n    if (this._table._hasEditableRow() && this._table._getEditableRowIdx() === rowIdx) {\n      tableBodyRow.classList.add(Table.CSS_CLASSES._TABLE_DATA_ROW_EDIT_CLASS);\n    } else {\n      tableBodyRow.classList.remove(Table.CSS_CLASSES._TABLE_DATA_ROW_EDIT_CLASS);\n    }\n  };\n\n  /**\n   * @private\n   */\n  // eslint-disable-next-line no-unused-vars\n  TableLayoutManager.prototype._handleHeaderColumnResizeStart = function (event, isMouse) {};\n\n  // eslint-disable-next-line no-unused-vars\n  TableLayoutManager.prototype.displayDragOverIndicatorColumn = function (columnIdx, isStart) {};\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype.removeDragOverIndicatorColumn = function () {};\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype._getPageX = function (event) {\n    if (event.pageX !== undefined) {\n      // MouseEvent has pageX on event itself\n      return event.pageX;\n    } else if (event.changedTouches !== undefined) {\n      // TouchEvent has pageX on changedTouches, targetTouches, and touches.\n      // For one-finger drag, they contain the same value on all touch events\n      // except for touchend, in which only changedTouches has the point at\n      // which the finger leaves the touch surface.\n      return event.changedTouches[0].pageX;\n    }\n\n    // We shouldn't get here unless event is neither MouseEvent nor TouchEvent\n    return 0;\n  };\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype.getExactClientHeight = function (computedStyle) {\n    var boxStyle = this._getBoxStyle(computedStyle, true);\n    var height =\n      parseFloat(computedStyle[Table.CSS_PROP._HEIGHT]) -\n      boxStyle.borderWidth -\n      boxStyle.paddingWidth;\n    return Math.round((height + Number.EPSILON) * 1000) / 1000;\n  };\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype.getExactClientWidth = function (computedStyle) {\n    var boxStyle = this._getBoxStyle(computedStyle);\n    var width =\n      parseFloat(computedStyle[Table.CSS_PROP._WIDTH]) - boxStyle.borderWidth - boxStyle.paddingWidth;\n    return Math.round((width + Number.EPSILON) * 1000) / 1000;\n  };\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype.getExactOffsetHeight = function (computedStyle) {\n    var height = parseFloat(computedStyle[Table.CSS_PROP._HEIGHT]);\n    return Math.round((height + Number.EPSILON) * 1000) / 1000;\n  };\n\n  /**\n   * @private\n   */\n  TableLayoutManager.prototype.getExactOffsetWidth = function (computedStyle) {\n    var width = parseFloat(computedStyle[Table.CSS_PROP._WIDTH]);\n    return Math.round((width + Number.EPSILON) * 1000) / 1000;\n  };\n\n  /**\n   * @private\n   */\n  const TableLegacyLayoutManager = function (table) {\n    TableLegacyLayoutManager.superclass.constructor.call(this, table);\n  };\n\n  // Subclass from oj.Object\n  oj.Object.createSubclass(TableLegacyLayoutManager, TableLayoutManager, 'TableLegacyLayoutManager');\n\n  /**\n   * @private\n   */\n  TableLegacyLayoutManager.prototype.handleAfterRowsProcessed = function (tableBodyDocFrag) {\n    // force the column width to remain the same\n    this._freezeColumnWidths(tableBodyDocFrag);\n  };\n\n  /**\n   * @private\n   */\n  TableLegacyLayoutManager.prototype._handleScrollerScrollLeft = function (scrollLeft) {\n    TableLegacyLayoutManager.superclass._handleScrollerScrollLeft.call(this, scrollLeft);\n\n    var tableHeaderRow = this._table._getTableHeaderRow();\n    if (tableHeaderRow) {\n      DomUtils.setScrollLeft(tableHeaderRow.parentNode, scrollLeft);\n    }\n    var tableFooterRow = this._table._getTableFooterRow();\n    if (tableFooterRow) {\n      DomUtils.setScrollLeft(tableFooterRow.parentNode, scrollLeft);\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableLegacyLayoutManager.prototype.registerScrollListeners = function () {\n    TableLegacyLayoutManager.superclass.registerScrollListeners.call(this);\n\n    var headerFooterScrollListener = function (event) {\n      var scrollLeft = this._table._getElementScrollLeft(event.target);\n      if (this._table._scrollLeft !== scrollLeft) {\n        this._table._setScrollX(scrollLeft);\n      }\n    }.bind(this);\n\n    // although header region does not contain scrollbars, browser may auto-scroll when contents gain focus\n    var tableHeaderRow = this._table._getTableHeaderRow();\n    if (tableHeaderRow != null) {\n      var tableHeader = tableHeaderRow.parentNode;\n      if (this._headerScrollEventListener == null) {\n        this._headerScrollEventListener = headerFooterScrollListener;\n      }\n      // remove the event listener before adding to make sure only one is active at a time\n      tableHeader.removeEventListener('scroll', this._headerScrollEventListener);\n      tableHeader.addEventListener('scroll', this._headerScrollEventListener, false);\n    }\n    // although footer region does not contain scrollbars, browser may auto-scroll when contents gain focus\n    var tableFooterRow = this._table._getTableFooterRow();\n    if (tableFooterRow != null) {\n      var tableFooter = tableFooterRow.parentNode;\n      if (this._footerScrollEventListener == null) {\n        this._footerScrollEventListener = headerFooterScrollListener;\n      }\n      // remove the event listener before adding to make sure only one is active at a time\n      tableFooter.removeEventListener('scroll', this._footerScrollEventListener);\n      tableFooter.addEventListener('scroll', this._footerScrollEventListener, false);\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableLegacyLayoutManager.prototype.unregisterScrollListeners = function () {\n    TableLegacyLayoutManager.superclass.unregisterScrollListeners.call(this);\n\n    var tableHeaderRow = this._table._getTableHeaderRow();\n    if (tableHeaderRow != null && this._headerScrollEventListener != null) {\n      var tableHeader = tableHeaderRow.parentNode;\n      tableHeader.removeEventListener('scroll', this._headerScrollEventListener);\n    }\n\n    var tableFooterRow = this._table._getTableFooterRow();\n    if (tableFooterRow != null && this._footerScrollEventListener != null) {\n      var tableFooter = tableFooterRow.parentNode;\n      tableFooter.removeEventListener('scroll', this._footerScrollEventListener);\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableLegacyLayoutManager.prototype._restoreScrollLeft = function (scrollLeft) {\n    DomUtils.setScrollLeft(this.getScroller(), scrollLeft);\n    var tableHeaderRow = this._table._getTableHeaderRow();\n    if (tableHeaderRow) {\n      DomUtils.setScrollLeft(tableHeaderRow.parentNode, scrollLeft);\n    }\n    var tableFooterRow = this._table._getTableFooterRow();\n    if (tableFooterRow) {\n      DomUtils.setScrollLeft(tableFooterRow.parentNode, scrollLeft);\n    }\n  };\n\n  /**\n   * Return the table scroller\n   * @return {Element} scroller\n   * @private\n   */\n  TableLegacyLayoutManager.prototype.getScroller = function () {\n    return this._table._getTableBody();\n  };\n\n  /**\n   * Returns the table scrollable content element\n   * @return {Element} the table scrollable content element\n   * @private\n   */\n  TableLegacyLayoutManager.prototype.getContentElement = function () {\n    // external scroller is not supported for legacy renderer\n    return null;\n  };\n\n  /**\n   * @private\n   */\n  TableLegacyLayoutManager.prototype.getColumnScrollLeft = function (columnIndex) {\n    if (columnIndex === 0) {\n      return 0;\n    }\n    var scroller = this.getScroller();\n    var isRTL = this._table._GetReadingDirection() === 'rtl';\n    var tableHeaderColumn = this._table._getTableHeaderColumn(columnIndex);\n    if (tableHeaderColumn != null) {\n      if (!isRTL) {\n        return tableHeaderColumn.offsetLeft;\n      }\n      return scroller.clientWidth - tableHeaderColumn.offsetLeft - tableHeaderColumn.offsetWidth;\n    }\n    // invalid column index\n    return undefined;\n  };\n\n  /**\n   * @private\n   */\n  TableLegacyLayoutManager.prototype.getRowScrollTop = function (row) {\n    return row.offsetTop;\n  };\n\n  /**\n   * Determines the number of pixels the Table would need to scroll to align each\n   * vertical edge of the given row with the corresponding edge of the scrollable viewport.\n   * @param {Element} tableBodyRow The row to be scrolled.\n   * @private\n   */\n  TableLegacyLayoutManager.prototype.getVerticalOverflowDiff = function (tableBodyRow) {\n    var scroller = this.getScroller();\n    var rowRect = tableBodyRow.getBoundingClientRect();\n    var scrollingElementRect = scroller.getBoundingClientRect();\n\n    var vertDiff = {\n      top: scrollingElementRect.top - rowRect.top + scroller.clientTop,\n      bottom:\n        rowRect.bottom -\n        scrollingElementRect.bottom +\n        (scroller.offsetHeight - scroller.clientHeight - scroller.clientTop)\n    };\n    return vertDiff;\n  };\n\n  /**\n   * Determines the number of pixels the Table would need to scroll to align each\n   * horizontal edge of the given column with the corresponding edge of the scrollable viewport.\n   * @param {Element} columnCell A cell in the column to be scrolled.\n   * @param {number} columnIndex The index of the column to be scrolled.\n   * @private\n   */\n  TableLegacyLayoutManager.prototype.getHorizontalOverflowDiff = function (columnCell) {\n    var isRTL = this._table._GetReadingDirection() === 'rtl';\n    var scrollingElement = this.getScroller();\n    var scrollbarWidth = this.getScrollBarWidth();\n    var columnRect = columnCell.getBoundingClientRect();\n    var scrollingElementRect = scrollingElement.getBoundingClientRect();\n\n    var horDiff = {};\n    if (isRTL) {\n      horDiff.left = scrollingElementRect.left - columnRect.left + scrollbarWidth;\n      horDiff.right = columnRect.right - scrollingElementRect.right;\n    } else {\n      horDiff.left = scrollingElementRect.left - columnRect.left;\n      horDiff.right = columnRect.right - scrollingElementRect.right + scrollbarWidth;\n    }\n    return horDiff;\n  };\n\n  /**\n   * Fixed the width of the columns inside a fragment\n   * @private\n   */\n  TableLegacyLayoutManager.prototype._freezeColumnWidths = function (fragment) {\n    var columns = this._table._getColumnDefs();\n    var columnsCount = columns.length;\n\n    if (!this._frozenWidthRows) {\n      this._frozenWidthRows = [];\n    }\n\n    var minWidths = [];\n    var legacyWidthBuffer = this._table._getTableBodyLegacyWidthBuffer();\n    for (var i = 0; i < columnsCount; i++) {\n      var tableBodyCell = legacyWidthBuffer.childNodes[i];\n      if (tableBodyCell != null) {\n        var minWidth = parseFloat(tableBodyCell.style[Table.CSS_PROP._MIN_WIDTH]);\n        if (!isNaN(minWidth)) {\n          minWidths.push(minWidth);\n        } else {\n          minWidths.push(null);\n        }\n      } else {\n        minWidths.push(null);\n      }\n    }\n\n    // IE does not support children properties in DocumentFragment\n    var rows = fragment.childNodes;\n    for (var j = 0; j < rows.length; j++) {\n      if (rows[j].nodeName === 'TR') {\n        var row = rows[j];\n        var cells = this._table._getTableBodyCells(null, row);\n        for (var k = 0; k < cells.length; k++) {\n          var forcedWidth = minWidths[k];\n          if (!isNaN(forcedWidth)) {\n            this._applyForcedColumnWidth(cells[k], forcedWidth);\n          }\n        }\n        this._frozenWidthRows.push(row);\n      }\n    }\n  };\n\n  /**\n   * Undo _freezeColumnWidths operation\n   * @private\n   */\n  TableLegacyLayoutManager.prototype._unfreezeColumnWidths = function () {\n    if (this._frozenWidthRows) {\n      for (var i = 0; i < this._frozenWidthRows.length; i++) {\n        var cells = this._table._getTableBodyCells(null, this._frozenWidthRows[i]);\n        for (var j = 0; j < cells.length; j++) {\n          var cell = cells[j];\n          this._applyForcedColumnWidth(cell, '');\n          this._table._styleTableBodyCell(j, cell);\n        }\n      }\n    }\n    this._frozenWidthRows = [];\n  };\n\n  /**\n   * Iterate through the columns and get and then set the widths\n   * for the columns and first row this is so that when we re-apply the styling\n   * the headers and footers will align with the cells\n   * @param {number} scrollBarWidth the width of the current vertical scrollbar\n   * @private\n   */\n  TableLegacyLayoutManager.prototype._setColumnWidths = function (scrollBarWidth) {\n    var i;\n    var headerCell;\n    var tableBodyCell;\n    var footerCell;\n\n    var headerWidths = [];\n    var headerHeights = [];\n    var cellWidths = [];\n    var footerWidths = [];\n    var columnsCount = this._table._getColumnDefs().length;\n    var legacyWidthBuffer = this._table._getTableBodyLegacyWidthBuffer();\n\n    // loop through remaining columns to get the remaining column widths\n    for (i = 0; i < columnsCount; i++) {\n      if (this._forcedWidthColumns[i] !== false) {\n        // add placeholders until the next loop is run\n        headerWidths[i] = null;\n        cellWidths[i] = null;\n        footerWidths[i] = null;\n      } else {\n        // find column header cell width\n        headerCell = this._table._getTableHeaderColumn(i);\n        if (headerCell != null) {\n          headerWidths[i] = this._getForcedColumnWidth(\n            headerCell,\n            window.getComputedStyle(headerCell)\n          );\n\n          // also find the column header cell height\n          var headerTextDiv = this._table._getTableElementsByClassName(\n            headerCell,\n            Table.CSS_CLASSES._COLUMN_HEADER_TEXT_CLASS\n          );\n          if (headerTextDiv.length > 0) {\n            headerHeights[i] = headerTextDiv[0].clientHeight;\n          }\n        }\n\n        // find column table body cell widths\n        tableBodyCell = legacyWidthBuffer.childNodes[i];\n        if (tableBodyCell != null) {\n          cellWidths[i] = this._getForcedColumnWidth(\n            tableBodyCell,\n            window.getComputedStyle(tableBodyCell)\n          );\n        }\n\n        // find column footer cell width\n        footerCell = this._table._getTableFooterCell(i);\n        if (footerCell != null) {\n          footerWidths[i] = this._getForcedColumnWidth(\n            footerCell,\n            window.getComputedStyle(footerCell)\n          );\n        }\n      }\n    }\n\n    // finally loop through to set the remaining column widths\n    for (i = 0; i < columnsCount; i++) {\n      headerCell = this._table._getTableHeaderColumn(i);\n      footerCell = this._table._getTableFooterCell(i);\n      if (this._forcedWidthColumns[i] !== false) {\n        // extend width of last header and footer cell by scrollbar width only when verical scrollbar is present\n        if (i === columnsCount - 1 && !this.isTableWidthConstrained() && scrollBarWidth > 0) {\n          if (headerCell != null) {\n            this._applyForcedColumnWidth(headerCell, this._forcedWidthColumns[i] + scrollBarWidth);\n            // update column header cell height\n            this._applyColumnHeaderHeight(headerCell, headerHeights[i]);\n          }\n          if (footerCell != null) {\n            this._applyForcedColumnWidth(footerCell, this._forcedWidthColumns[i] + scrollBarWidth);\n          }\n        } else {\n          // update column header cell height\n          this._applyColumnHeaderHeight(headerCell, headerHeights[i]);\n        }\n      } else {\n        // update column header and footer cell widths\n        if (i === columnsCount - 1 && !this.isTableWidthConstrained() && scrollBarWidth > 0) {\n          // extend width of last header and footer cell by scrollbar width only when verical scrollbar is present\n          if (headerCell != null) {\n            this._applyForcedColumnWidth(headerCell, headerWidths[i] + scrollBarWidth);\n            // also update column header cell height\n            this._applyColumnHeaderHeight(headerCell, headerHeights[i]);\n          }\n          if (footerCell != null) {\n            this._applyForcedColumnWidth(footerCell, footerWidths[i] + scrollBarWidth);\n          }\n        } else {\n          if (headerCell != null) {\n            this._applyForcedColumnWidth(headerCell, headerWidths[i]);\n            // also update column header cell height\n            this._applyColumnHeaderHeight(headerCell, headerHeights[i]);\n          }\n          if (footerCell != null) {\n            this._applyForcedColumnWidth(footerCell, footerWidths[i]);\n          }\n        }\n\n        // update column table body cell widths\n        tableBodyCell = legacyWidthBuffer.childNodes[i];\n        if (tableBodyCell != null) {\n          this._applyForcedColumnWidth(tableBodyCell, cellWidths[i]);\n        }\n      }\n    }\n  };\n\n  /**\n   * Returns whether any of the table columns have width specified\n   * @return {boolean} true if any column widths are set, false otherwise\n   * @private\n   */\n  TableLegacyLayoutManager.prototype._isTableColumnsWidthSet = function () {\n    var columnsCount = this._table._getColumnDefs().length;\n    for (var i = 0; i < columnsCount; i++) {\n      if (this._forcedWidthColumns[i] !== false) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Returns whether all of the table columns have width specified\n   * @return {boolean} true if all column widths are set, false otherwise\n   * @private\n   */\n  TableLegacyLayoutManager.prototype._isAllTableColumnsWidthSet = function () {\n    var columnsCount = this._table._getColumnDefs().length;\n    for (var i = 0; i < columnsCount; i++) {\n      if (this._forcedWidthColumns[i] === false) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  /**\n   * Refresh the table dimensions\n   * @private\n   */\n  TableLegacyLayoutManager.prototype.refreshTableDimensions = function () {\n    var sizingState = this._getSizingState();\n    var tableUpdates = this._getTableUpdates();\n    if (\n      !tableUpdates.has(Table._UPDATE._DATA_REFRESH) &&\n      !tableUpdates.has(Table._UPDATE._DATA_SORT) &&\n      !tableUpdates.has(Table._UPDATE._ATTACHED) &&\n      !tableUpdates.has(Table._UPDATE._SHOWN) &&\n      !tableUpdates.has(Table._UPDATE._RESIZE) &&\n      !tableUpdates.has(Table._UPDATE._REFRESH) &&\n      !tableUpdates.has(Table._UPDATE._COL_RESIZE) &&\n      !tableUpdates.has(Table._UPDATE._COL_REORDER) &&\n      !tableUpdates.has(Table._UPDATE._ROW_REFRESH) &&\n      (!tableUpdates.has(Table._UPDATE._ROWS_ADDED) || sizingState.hasVerticalOverflow) &&\n      (!tableUpdates.has(Table._UPDATE._ROWS_REMOVED) || !sizingState.hasVerticalOverflow)\n    ) {\n      // updates do not require a sizing refresh - clear updates and return\n      this._clearTableUpdates();\n      this._enableTableVisibility();\n      return;\n    }\n    // clear cached column values if outer size updates or column information changes\n    this._clearColumnSizingCache();\n\n    var tableElem = this._table._getTable();\n    var tableContainer = this._table._getTableContainer();\n    var tableHeader = this._table._getTableHeader();\n    var tableBody = this._table._getTableBody();\n    var tableFooter = this._table._getTableFooter();\n    var tableBottomSlot = this._table._getTableBottomSlot();\n\n    // first remove any styling so that the browser sizes the table\n    this.clearCachedDimensions();\n    this._removeTableDimensionsStyling();\n    this._table._styleTableContainer(tableContainer);\n\n    // set forced widths before checking scroll state to ensure overflow state is accurate\n    this._setForcedColumnWidths();\n    this._verifyMinAndMaxWidths();\n\n    // find Table's bottom slot height to use when determining if overflow if present\n    var bottomSlotHeight = this._getBottomSlotHeight();\n\n    var tableContainerScrollableState = this._getTableContainerScrollableState(bottomSlotHeight);\n    sizingState.hasVerticalOverflow = tableContainerScrollableState[0] === 1;\n    sizingState.hasHorizontalOverflow = tableContainerScrollableState[1] === 1;\n\n    if (tableBody == null) {\n      return;\n    }\n    // calculate table body border height before scrollbars may be present\n    var tableBodyBorderHeight = tableBody.offsetHeight - tableBody.clientHeight;\n\n    if (sizingState.hasVerticalOverflow || sizingState.hasHorizontalOverflow) {\n      var containerClientWidth = tableContainer.clientWidth;\n      var containerClientHeight = tableContainer.clientHeight;\n\n      // if there is overflow in only one direction, check if added scrollbar triggers overflow in the other direction\n      var browserScrollBarSize = this._getDefaultScrollBarSize();\n      if (browserScrollBarSize > 0) {\n        if (!sizingState.hasHorizontalOverflow && !this._isVerticalScrollBarHidden()) {\n          // determine if width is set on the container by seeing if it adjusts when inner table width increases\n          tableElem.style[Table.CSS_PROP._WIDTH] =\n            containerClientWidth + browserScrollBarSize + Table.CSS_VAL._PX;\n          if (tableContainer.clientWidth < containerClientWidth + browserScrollBarSize) {\n            containerClientWidth = tableContainer.clientWidth;\n            tableElem.style[Table.CSS_PROP._WIDTH] =\n              containerClientWidth - browserScrollBarSize + Table.CSS_VAL._PX;\n            if (containerClientWidth - browserScrollBarSize < tableElem.clientWidth) {\n              sizingState.hasHorizontalOverflow = true;\n            }\n          } else {\n            containerClientWidth = tableContainer.clientWidth;\n            tableElem.style[Table.CSS_PROP._WIDTH] = '';\n          }\n        } else if (!sizingState.hasVerticalOverflow) {\n          // determine if height is set on the container by seeing if it adjusts when inner table height increases\n          var legacySizer = this._table._getTableLegacySizer();\n          legacySizer.style[Table.CSS_PROP._HEIGHT] = browserScrollBarSize + Table.CSS_VAL._PX;\n          if (tableContainer.clientHeight < containerClientHeight + browserScrollBarSize) {\n            containerClientHeight = tableContainer.clientHeight;\n            tableElem.style[Table.CSS_PROP._HEIGHT] =\n              containerClientHeight - browserScrollBarSize - bottomSlotHeight + Table.CSS_VAL._PX;\n            if (\n              containerClientHeight - browserScrollBarSize <\n              tableElem.clientHeight + bottomSlotHeight\n            ) {\n              sizingState.hasVerticalOverflow = true;\n            }\n          } else {\n            containerClientHeight = tableContainer.clientHeight;\n          }\n          legacySizer.style[Table.CSS_PROP._HEIGHT] = '';\n        }\n      }\n      // hide the vertical scrollbar\n      if (sizingState.hasVerticalOverflow && this._isVerticalScrollBarHidden()) {\n        tableBody.style[Table.CSS_PROP._OVERFLOW_Y] = 'hidden';\n      }\n      // now that overflow is determined, set the column widths\n      var actualScrollBarWidth = this.getScrollBarWidth();\n      this._setColumnWidths(actualScrollBarWidth);\n\n      // add in scrolling class for specific vertical or horizontal scrolling\n      if (sizingState.hasVerticalOverflow) {\n        tableContainer.classList.add(Table.CSS_CLASSES._TABLE_SCROLL_VERTICAL_CLASS);\n      }\n      if (sizingState.hasHorizontalOverflow) {\n        tableContainer.classList.add(Table.CSS_CLASSES._TABLE_SCROLL_HORIZONTAL_CLASS);\n      }\n      // Add the oj-table-scroll class because some styling only applies to scrollable table.\n      tableContainer.classList.add(Table.CSS_CLASSES._TABLE_LEGACY_SCROLL_CLASS);\n\n      var captionHeight = 0;\n      var caption = this._table._getTableElementsByTagName(tableElem, 'caption');\n      if (caption.length > 0) {\n        caption = caption[0];\n        captionHeight = caption.offsetHeight;\n        caption.style[Table.CSS_PROP._DISPLAY] = Table.CSS_VAL._INLINE;\n        if (tableHeader != null) {\n          var tableContainerStyle = window.getComputedStyle(tableContainer);\n          tableHeader.style[Table.CSS_PROP._BORDER_TOP] =\n            tableContainerStyle[Table.CSS_PROP._BORDER_TOP];\n        }\n      }\n      // apply the styling which sets the fixed column headers, etc\n      tableBody.style[Table.CSS_PROP._WIDTH] = containerClientWidth + Table.CSS_VAL._PX;\n\n      var tableFooterHeight = 0;\n      if (tableFooter != null) {\n        tableFooterHeight = tableFooter.offsetHeight;\n      }\n\n      // Size the table body to fit in the height\n      var tableHeaderHeight = tableHeader != null ? tableHeader.offsetHeight : 0;\n      var tableBodyHeight =\n        containerClientHeight -\n        tableHeaderHeight -\n        tableFooterHeight -\n        captionHeight -\n        bottomSlotHeight -\n        tableBodyBorderHeight;\n      if (tableBodyHeight > 0) {\n        tableBody.style[Table.CSS_PROP._HEIGHT] = tableBodyHeight + Table.CSS_VAL._PX;\n        tableBody.style[Table.CSS_PROP._MIN_HEIGHT] = tableBodyHeight + Table.CSS_VAL._PX;\n      }\n\n      var headerFooterWidth;\n      if (sizingState.hasHorizontalOverflow) {\n        var tableBodyRows = this._table._getTableBodyRows();\n        if (tableBodyRows.length === 0) {\n          // if we have no data then update width of no data message to enable horizontal scrolling\n          var messageCell = this._table._getTableBodyMessageCell();\n          if (messageCell) {\n            var bodyWidth = messageCell.offsetWidth;\n            if (tableHeader != null) {\n              bodyWidth = Math.max(bodyWidth, tableHeader.offsetWidth);\n            }\n            if (tableFooter != null) {\n              bodyWidth = Math.max(bodyWidth, tableFooter.offsetWidth);\n            }\n            this._applyForcedColumnWidth(messageCell, bodyWidth);\n          }\n        }\n        headerFooterWidth = containerClientWidth - actualScrollBarWidth + Table.CSS_VAL._PX;\n      } else {\n        headerFooterWidth = containerClientWidth + Table.CSS_VAL._PX;\n      }\n      if (tableHeader != null) {\n        tableHeader.style[Table.CSS_PROP._WIDTH] = headerFooterWidth;\n      }\n      if (tableFooter != null) {\n        tableFooter.style[Table.CSS_PROP._WIDTH] = headerFooterWidth;\n      }\n    } else {\n      // no overflow is present, but column widths still need to be set\n      if (this._isTableColumnsWidthSet()) {\n        this._setColumnWidths(0);\n      }\n      // if bottom slot present, ensure bottom slot is pinned to bottom when underflow is present\n      if (bottomSlotHeight > 0 && tableContainerScrollableState[0] === -1) {\n        tableBottomSlot.style[Table.CSS_PROP._BOTTOM] = 0;\n        tableBottomSlot.style[Table.CSS_PROP._POSITION] = Table.CSS_VAL._ABSOLUTE;\n      }\n    }\n    if (this._table._isStatusMessageShown()) {\n      this._table._refreshTableStatusPosition();\n    }\n    this._table._refreshTouchAffordanceGlassPanePosition();\n    this._finalizeTableDimensions();\n  };\n\n  /**\n   * Remove table dimensions styling\n   * @private\n   */\n  TableLegacyLayoutManager.prototype._removeTableDimensionsStyling = function () {\n    TableLegacyLayoutManager.superclass._removeTableDimensionsStyling.call(this);\n\n    var tableContainer = this._table._getTableContainer();\n    tableContainer.classList.remove(Table.CSS_CLASSES._TABLE_LEGACY_SCROLL_CLASS);\n  };\n\n  /**\n   * Iterate through the columns and remove the widths\n   * @private\n   */\n  TableLegacyLayoutManager.prototype._removeHeaderColumnAndCellColumnWidths = function () {\n    var columns = this._table._getColumnDefs();\n    var columnCount = columns.length;\n\n    var i;\n    for (i = 0; i < columnCount; i++) {\n      var headerColumn = this._table._getTableHeaderColumn(i);\n      if (headerColumn != null) {\n        this._applyForcedColumnWidth(headerColumn, '');\n        this._table._styleTableHeaderColumn(i, headerColumn);\n      }\n    }\n\n    // unfreeze any columns that were frozen due to scrolling\n    this._unfreezeColumnWidths();\n\n    var tableBodyRows = this._table._getTableBodyRows();\n    if (tableBodyRows.length > 0) {\n      for (i = 0; i < columnCount; i++) {\n        var tableBodyCell;\n        if (this._forcedWidthColumns != null && this._forcedWidthColumns[i] !== false) {\n          for (var j = 0; j < tableBodyRows.length; j++) {\n            tableBodyCell = this._table._getTableBodyCell(j, i, null);\n            if (tableBodyCell !== null) {\n              this._applyForcedColumnWidth(tableBodyCell, '');\n              this._table._styleTableBodyCell(i, tableBodyCell);\n            }\n          }\n        } else {\n          var legacyWidthBuffer = this._table._getTableBodyLegacyWidthBuffer();\n          tableBodyCell = legacyWidthBuffer.childNodes[i];\n          if (tableBodyCell != null) {\n            this._applyForcedColumnWidth(tableBodyCell, '');\n          }\n        }\n      }\n    }\n\n    for (i = 0; i < columnCount; i++) {\n      var footerCell = this._table._getTableFooterCell(i);\n      if (footerCell != null) {\n        this._applyForcedColumnWidth(footerCell, '');\n        this._table._styleTableFooterCell(i, footerCell);\n      }\n    }\n\n    // remove styling applied to no data message if present\n    var messageCell = this._table._getTableBodyMessageCell();\n    if (messageCell) {\n      this._applyForcedColumnWidth(messageCell, '');\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableLegacyLayoutManager.prototype.handleMouseEnterHeaderCell = function (event) {\n    this._setResizeCursor(event);\n  };\n\n  /**\n   * @private\n   */\n  TableLegacyLayoutManager.prototype.handleMouseMoveHeader = function (event) {\n    this._setResizeCursor(event);\n  };\n\n  /**\n   * @private\n   */\n  TableLegacyLayoutManager.prototype.handleMouseMoveHeaderCell = function (event) {\n    if (this._setResizeCursor(event)) {\n      this._table._handleMouseLeaveColumnHeader(this._table._getEventTargetElement(event));\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableLegacyLayoutManager.prototype.handleMouseUp = function (event) {\n    this._handleHeaderColumnResizeEnd(event);\n  };\n\n  /**\n   * @private\n   */\n  TableLegacyLayoutManager.prototype.handleMouseLeaveTable = function () {\n    this._clearTableHeaderColumnsResize();\n  };\n\n  /**\n   * @private\n   */\n  TableLegacyLayoutManager.prototype.handleTouchMoveHeader = function (event) {\n    if (this._table._isTableColumnsResizable()) {\n      this._setResizeCursor(event);\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableLegacyLayoutManager.prototype.handleTouchEnd = function (event) {\n    if (this._handleHeaderColumnResizeEnd(event)) {\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableLegacyLayoutManager.prototype.handleTouchCancel = function () {\n    this._clearTableHeaderColumnsResize();\n  };\n\n  /**\n   * @private\n   */\n  TableLegacyLayoutManager.prototype.handleKeyDownEsc = function () {\n    this._clearTableHeaderColumnsResize();\n  };\n\n  /**\n   * @private\n   */\n  TableLegacyLayoutManager.prototype.handleFocusout = function () {\n    this._clearTableHeaderColumnsResize();\n  };\n\n  /**\n   * Set resize cursor\n   * @param {Event} event Event\n   * @private\n   */\n  TableLegacyLayoutManager.prototype._setResizeCursor = function (event) {\n    var eventTarget = this._table._getEventTargetElement(event);\n    var columnIdx = this._table._getElementColumnIdx(eventTarget);\n\n    if (columnIdx == null) {\n      return false;\n    }\n\n    var column = this._table._getColumnDefs()[columnIdx];\n\n    if (\n      column.resizable === Table._OPTION_DISABLED &&\n      this._resizeStartColumnIdx !== columnIdx - 1 &&\n      this._resizeStartColumnIdx !== columnIdx + 1\n    ) {\n      return false;\n    }\n\n    if (this._resizeStartColumnIdx == null) {\n      if (this._isHeaderColumnResizeStart(event) !== null) {\n        eventTarget.style.cursor = Table.CSS_VAL._COL_RESIZE;\n        return true;\n      }\n      eventTarget.style.cursor = '';\n      return false;\n    }\n\n    if (this._table._getTableHeaderColumns().length === 0) {\n      return false;\n    }\n\n    // move the indicator\n    if (\n      columnIdx === this._resizeStartColumnIdx ||\n      (this._resizeColumnStart && columnIdx === this._resizeStartColumnIdx - 1) ||\n      (!this._resizeColumnStart && columnIdx === this._resizeStartColumnIdx + 1)\n    ) {\n      var tableHeaderColumnResizeIndicator = this._getTableHeaderColumnResizeIndicator();\n      if (tableHeaderColumnResizeIndicator != null) {\n        var tableScroller = this.getScroller();\n        var scrollerRect = tableScroller.getBoundingClientRect();\n        tableHeaderColumnResizeIndicator.style.left =\n          event.originalEvent.clientX - scrollerRect.left + 'px';\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Handle header column resize start\n   * @param {Event} event Event\n   * @return {boolean} Return whether column resize started\n   * @private\n   */\n  // eslint-disable-next-line no-unused-vars\n  TableLegacyLayoutManager.prototype._handleHeaderColumnResizeStart = function (event, isMouse) {\n    var eventTarget = this._table._getEventTargetElement(event);\n    var columnIdx = this._table._getElementColumnIdx(eventTarget);\n\n    if (columnIdx != null) {\n      var column = this._table._getColumnDefs()[columnIdx];\n      this._resizeColumnStart = this._isHeaderColumnResizeStart(event);\n\n      if (column.resizable === Table._OPTION_ENABLED && this._resizeColumnStart !== null) {\n        this._resizeStartColumnIdx = columnIdx;\n        this._resizeStartPageX = this._getPageX(event);\n        this._setTableHeaderColumnsResizeStyling();\n        this._setTableHeaderColumnResizeIndicator(columnIdx);\n        event.preventDefault();\n        return true;\n      }\n    }\n    this._resizeStartColumnIdx = null;\n    this._resizeStartPageX = null;\n    return false;\n  };\n\n  /**\n   * Handle header column resize end\n   * @param {Event} event Event\n   * @return {boolean} Return whether column resize ended\n   * @private\n   */\n  TableLegacyLayoutManager.prototype._handleHeaderColumnResizeEnd = function (event) {\n    var columnsCount = this._table.options.columns.length;\n    var eventTarget = this._table._getEventTargetElement(event);\n    var columnIdx = this._table._getElementColumnIdx(eventTarget);\n\n    // only resize if we end the resize on the same column or adjacent columns\n    if (\n      (columnIdx !== null && columnIdx === this._resizeStartColumnIdx) ||\n      (this._resizeColumnStart && columnIdx === this._resizeStartColumnIdx - 1) ||\n      (!this._resizeColumnStart && columnIdx === this._resizeStartColumnIdx + 1)\n    ) {\n      var headerColumn = this._table._getTableHeaderColumn(this._resizeStartColumnIdx);\n      if (headerColumn != null) {\n        var headerColumnRect = headerColumn.getBoundingClientRect();\n        var headerColumnWidth = headerColumnRect.width;\n        // when scrollbar is present, reduce last column width by scrollbar width\n        if (this._resizeStartColumnIdx === columnsCount - 1 && this.isTableHeightConstrained()) {\n          headerColumnWidth -= this.getScrollBarWidth();\n        }\n        var widthChange;\n        if (\n          (this._table._GetReadingDirection() === 'rtl' && this._resizeColumnStart) ||\n          (this._table._GetReadingDirection() === 'ltr' && !this._resizeColumnStart)\n        ) {\n          widthChange = this._getPageX(event) - this._resizeStartPageX;\n        } else {\n          widthChange = this._resizeStartPageX - this._getPageX(event);\n        }\n        if (Math.abs(widthChange) > 2) {\n          var startColWidth = headerColumnWidth + widthChange;\n          // ensure new column width is not less than the minimum required width\n          var minWidth = this.getMinimumForcedOffsetWidth(this._resizeStartColumnIdx);\n          if (minWidth > startColWidth) {\n            widthChange += minWidth - startColWidth;\n            startColWidth = minWidth;\n          }\n          var clonedColumnsOption = [];\n          for (var i = 0; i < columnsCount; i++) {\n            clonedColumnsOption[i] = $.extend({}, {}, this._table.options.columns[i]);\n          }\n\n          // a resize operation should increase one column and decrease the other\n          var headerColumnAdjacentIdx = this._resizeColumnStart\n            ? this._resizeStartColumnIdx - 1\n            : this._resizeStartColumnIdx + 1;\n          // when scrollbar is present, reduce last column width by scrollbar width\n          if (headerColumnAdjacentIdx === columnsCount - 1 && this.isTableHeightConstrained()) {\n            widthChange += this.getScrollBarWidth();\n          }\n          var headerColumnAdjacent = this._table._getTableHeaderColumn(headerColumnAdjacentIdx);\n          if (headerColumnAdjacent) {\n            var headerColumnAdjacentRect = headerColumnAdjacent.getBoundingClientRect();\n            var adjacentColWidth = headerColumnAdjacentRect.width - widthChange;\n\n            minWidth = this.getMinimumForcedOffsetWidth(headerColumnAdjacentIdx);\n            if (minWidth > adjacentColWidth) {\n              startColWidth += adjacentColWidth - minWidth;\n              adjacentColWidth = minWidth;\n            }\n            clonedColumnsOption[headerColumnAdjacentIdx].width = this.getWidthPropertyFromOffsetWidth(\n              adjacentColWidth,\n              headerColumnAdjacent\n            );\n          }\n          clonedColumnsOption[this._resizeStartColumnIdx].width =\n            this.getWidthPropertyFromOffsetWidth(startColWidth, headerColumn);\n\n          this._table.option('columns', clonedColumnsOption, {\n            _context: {\n              writeback: true,\n              internalSet: true\n            }\n          });\n          this._table._clearCachedMetadata();\n          this._table._queueTask(\n            function () {\n              this.notifyTableUpdate(Table._UPDATE._COL_RESIZE);\n              // delay the focus to ensure table resize information is not cleared before 'click' handling occurs\n              // otherwise, column resizing will lead to selection handling as well\n              // prettier-ignore\n              setTimeout( // @HTMLUpdateOK\n                function () {\n                  this._clearTableHeaderColumnsResize();\n                }.bind(this),\n                0\n              );\n            }.bind(this)\n          );\n          return true;\n        }\n      }\n    }\n    this._clearTableHeaderColumnsResize();\n    return false;\n  };\n\n  /**\n   * Clear any column resize\n   * @private\n   */\n  TableLegacyLayoutManager.prototype._clearTableHeaderColumnsResize = function () {\n    this._resizeStartColumnIdx = null;\n    this._resizeColumnStart = null;\n    this._resizeStartPageX = null;\n    this._clearTableHeaderColumnsResizeStyling();\n    this._removeTableHeaderColumnResizeIndicator();\n  };\n\n  /**\n   * @private\n   */\n  TableLegacyLayoutManager.prototype._isHeaderColumnResizeStart = function (event) {\n    var resizeColumnStart = null;\n    var columnsCount = this._table.options.columns.length;\n    var columnIdx = this._table._getElementColumnIdx(event.target);\n    var headerColumn = this._table._getTableHeaderColumn(columnIdx);\n    if (headerColumn !== null) {\n      var readingDir = this._table._GetReadingDirection();\n      var columnRect = headerColumn.getBoundingClientRect();\n      var distFromLeft = Math.abs(event.originalEvent.clientX - columnRect.left);\n      var distFromRight = Math.abs(event.originalEvent.clientX - columnRect.right);\n\n      // don't show resize cursor for column dividers at the start and end of the table\n      if (distFromLeft <= Table.RESIZE_OFFSET) {\n        if (readingDir === 'rtl' && columnIdx !== columnsCount - 1) {\n          resizeColumnStart = false;\n        } else if (readingDir === 'ltr' && columnIdx !== 0) {\n          resizeColumnStart = true;\n        }\n      } else if (distFromRight <= Table.RESIZE_OFFSET) {\n        if (readingDir === 'ltr' && columnIdx !== columnsCount - 1) {\n          resizeColumnStart = false;\n        } else if (readingDir === 'rtl' && columnIdx !== 0) {\n          resizeColumnStart = true;\n        }\n      }\n    }\n    return resizeColumnStart;\n  };\n\n  /**\n   * @private\n   */\n  TableLegacyLayoutManager.prototype._setTableHeaderColumnResizeIndicator = function (columnIdx) {\n    var tableHeaderColumnResizeIndicator = this._getTableHeaderColumnResizeIndicator();\n    if (tableHeaderColumnResizeIndicator == null) {\n      tableHeaderColumnResizeIndicator = this._createTableHeaderColumnResizeIndicator();\n    }\n    var table = this._table._getTable();\n    var tableRect = table.getBoundingClientRect();\n    var tableScroller = this.getScroller();\n    var scrollerRect = tableScroller.getBoundingClientRect();\n    var headerColumn = this._table._getTableHeaderColumn(columnIdx);\n    var headerColumnRect = headerColumn.getBoundingClientRect();\n    tableHeaderColumnResizeIndicator.style.height = tableRect.height + 'px';\n\n    if (this._resizeColumnStart) {\n      if (this._table._GetReadingDirection() === 'rtl') {\n        tableHeaderColumnResizeIndicator.style.left =\n          headerColumnRect.left + headerColumnRect.width - scrollerRect.left + 'px';\n      } else {\n        tableHeaderColumnResizeIndicator.style.left =\n          headerColumnRect.left - scrollerRect.left + 'px';\n      }\n      tableHeaderColumnResizeIndicator.style.borderLeftWidth = '2px';\n      tableHeaderColumnResizeIndicator.style.borderRightWidth = '0';\n    } else {\n      if (this._table._GetReadingDirection() === 'rtl') {\n        tableHeaderColumnResizeIndicator.style.left =\n          headerColumnRect.left - scrollerRect.left + 'px';\n      } else {\n        tableHeaderColumnResizeIndicator.style.left =\n          headerColumnRect.left + headerColumnRect.width - scrollerRect.left + 'px';\n      }\n      tableHeaderColumnResizeIndicator.style.borderRightWidth = '2px';\n      tableHeaderColumnResizeIndicator.style.borderLeftWidth = '0';\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableLegacyLayoutManager.prototype._setTableHeaderColumnsResizeStyling = function () {\n    var table = this._table._getTable();\n    table.classList.add(Table.CSS_CLASSES._COLUMN_HEADER_RESIZING_CLASS);\n  };\n\n  /**\n   * @private\n   */\n  TableLegacyLayoutManager.prototype._clearTableHeaderColumnsResizeStyling = function () {\n    var headerColumns = this._table._getTableHeaderColumns();\n    for (var i = 0; i < headerColumns.length; i++) {\n      headerColumns[i].style.cursor = '';\n    }\n    var table = this._table._getTable();\n    table.classList.remove(Table.CSS_CLASSES._COLUMN_HEADER_RESIZING_CLASS);\n  };\n\n  /**\n   * Create a div element for resize indicator\n   * @return {Element} div DOM element\n   * @private\n   */\n  TableLegacyLayoutManager.prototype._createTableHeaderColumnResizeIndicator = function () {\n    var tableHeaderColumnResizeIndicator = this._getTableHeaderColumnResizeIndicator();\n\n    if (!tableHeaderColumnResizeIndicator) {\n      var tableContainer = this._table._getTableContainer();\n      tableHeaderColumnResizeIndicator = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n      tableContainer.appendChild(tableHeaderColumnResizeIndicator);\n      tableHeaderColumnResizeIndicator.classList.add(\n        Table.CSS_CLASSES._COLUMN_HEADER_RESIZE_INDICATOR_CLASS\n      );\n      this._table._cacheDomElement(\n        Table.CSS_CLASSES._COLUMN_HEADER_RESIZE_INDICATOR_CLASS,\n        tableHeaderColumnResizeIndicator\n      );\n    }\n\n    return tableHeaderColumnResizeIndicator;\n  };\n\n  /**\n   * Return resize indicator\n   * @return {Element} div DOM element\n   * @private\n   */\n  TableLegacyLayoutManager.prototype._getTableHeaderColumnResizeIndicator = function () {\n    return this._table._getTableElementByClassName(\n      Table.CSS_CLASSES._COLUMN_HEADER_RESIZE_INDICATOR_CLASS,\n      true\n    );\n  };\n\n  /**\n   * Remove resize indicator\n   * @private\n   */\n  TableLegacyLayoutManager.prototype._removeTableHeaderColumnResizeIndicator = function () {\n    var tableHeaderColumnResizeIndicator = this._getTableHeaderColumnResizeIndicator();\n    if (tableHeaderColumnResizeIndicator) {\n      $(tableHeaderColumnResizeIndicator).remove();\n      this._table._clearDomCache(Table.CSS_CLASSES._COLUMN_HEADER_RESIZE_INDICATOR_CLASS);\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableLegacyLayoutManager.prototype.displayDragOverIndicatorColumn = function (columnIdx, isStart) {\n    this._table._removeDragOverIndicatorColumn();\n    var tableHeaderRow = this._table._getTableHeaderRow();\n    var tableHeaderColumn = this._table._getTableHeaderColumn(columnIdx);\n    var indicatorClass = isStart\n      ? Table.CSS_CLASSES._COLUMN_HEADER_DRAG_INDICATOR_BEFORE_CLASS\n      : Table.CSS_CLASSES._COLUMN_HEADER_DRAG_INDICATOR_AFTER_CLASS;\n\n    if (tableHeaderColumn != null) {\n      tableHeaderColumn.classList.add(indicatorClass);\n    } else {\n      var columns = this._table._getColumnDefs();\n      if (columns.length === 0) {\n        tableHeaderRow.classList.add(indicatorClass);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableLegacyLayoutManager.prototype.removeDragOverIndicatorColumn = function () {\n    var indicatorElements = this._table._tableQuerySelectorAll(\n      this._table._getTable(),\n      '.' +\n        Table.CSS_CLASSES._COLUMN_HEADER_DRAG_INDICATOR_BEFORE_CLASS +\n        ',' +\n        '.' +\n        Table.CSS_CLASSES._COLUMN_HEADER_DRAG_INDICATOR_AFTER_CLASS\n    );\n\n    var indicatorElementsCount = indicatorElements.length;\n\n    for (var i = 0; i < indicatorElementsCount; i++) {\n      indicatorElements[i].classList.remove(\n        Table.CSS_CLASSES._COLUMN_HEADER_DRAG_INDICATOR_BEFORE_CLASS\n      );\n      indicatorElements[i].classList.remove(\n        Table.CSS_CLASSES._COLUMN_HEADER_DRAG_INDICATOR_AFTER_CLASS\n      );\n    }\n  };\n\n  /**\n   * @private\n   */\n  const TableStickyLayoutManager = function (table) {\n    TableStickyLayoutManager.superclass.constructor.call(this, table);\n  };\n\n  // Subclass from oj.Object\n  oj.Object.createSubclass(TableStickyLayoutManager, TableLayoutManager, 'TableStickyLayoutManager');\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype.unregisterListeners = function () {\n    TableStickyLayoutManager.superclass.unregisterListeners.call(this);\n    this._clearMouseResizeListeners();\n  };\n\n  /**\n   * Return the table scroller\n   * @return {Element} scroller\n   * @private\n   */\n  TableStickyLayoutManager.prototype.getScroller = function () {\n    if (this._scroller == null) {\n      var scroller;\n      var scrollPolicyOptions = this._table.options.scrollPolicyOptions;\n      if (scrollPolicyOptions != null) {\n        scroller = scrollPolicyOptions.scroller;\n        if (scroller != null) {\n          if (typeof scroller === 'string') {\n            scroller = document.querySelector(scroller);\n            if (scroller == null) {\n              Logger.error(\n                'the css selector string specified in scroller attribute does not resolve to any element'\n              );\n            }\n          }\n\n          // make sure the scroller is an ancestor\n          if (scroller != null && !scroller.contains(this._table._getRootElement())) {\n            Logger.error('the specified scroller must be an ancestor of the component');\n            scroller = null;\n          }\n        }\n      }\n      this._scroller = scroller != null ? scroller : this._table._getTableScroller();\n    }\n    return this._scroller;\n  };\n\n  /**\n   * Returns true iff the table scroller is set to 'html' (special case for scroll offset logic)\n   * @private\n   */\n  TableStickyLayoutManager.prototype._isHTMLScroller = function () {\n    return (\n      this._table.options.scrollPolicyOptions != null &&\n      this._table.options.scrollPolicyOptions.scroller === 'html'\n    );\n  };\n\n  /**\n   * Returns the table scrollable content element\n   * @return {Element} the table scrollable content element\n   * @private\n   */\n  TableStickyLayoutManager.prototype.getContentElement = function () {\n    return this.getScroller() !== this._table._getTableScroller() ? this._table._getTable() : null;\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype.getColumnScrollLeft = function (columnIndex) {\n    if (columnIndex === 0) {\n      return 0;\n    }\n    var i;\n    var frozenIndex;\n    var frozenOffset = 0;\n    if (this._table._isDefaultSelectorEnabled()) {\n      frozenOffset += this._selectorColWidth;\n    }\n    if (this._table._isGutterStartColumnEnabled()) {\n      let gutterWidth = this._table._getTableGutterWidth('start');\n      frozenOffset += gutterWidth;\n    }\n    var frozenStartColumns = this._getFrozenStartColumnIndexes();\n    for (i = 0; i < frozenStartColumns.length; i++) {\n      frozenIndex = frozenStartColumns[i];\n      if (frozenIndex < columnIndex) {\n        frozenOffset += this._getAppliedColumnWidth(frozenIndex);\n      } else {\n        break;\n      }\n    }\n\n    var scroller = this.getScroller();\n    var isRTL = this._table._GetReadingDirection() === 'rtl';\n    var tableHeaderColumn = this._table._getTableHeaderColumn(columnIndex);\n    if (tableHeaderColumn != null) {\n      if (!isRTL) {\n        return tableHeaderColumn.offsetLeft - frozenOffset;\n      }\n      return (\n        scroller.clientWidth -\n        frozenOffset -\n        tableHeaderColumn.offsetLeft -\n        tableHeaderColumn.offsetWidth\n      );\n    }\n    // invalid column index\n    return undefined;\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype.getRowScrollTop = function (row) {\n    var rowScrollTop = row.offsetTop;\n    if (!this._table._isTableHeaderless()) {\n      var tableHeader = this._table._getTableHeader();\n      if (tableHeader != null) {\n        rowScrollTop -= tableHeader.offsetHeight;\n      }\n    }\n    if (this._table._isAddNewRowEnabled()) {\n      var addRow = this._table._getPlaceHolderRow();\n      if (addRow != null) {\n        rowScrollTop -= addRow.offsetHeight;\n      }\n    }\n    return rowScrollTop;\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype._handleScrollerScrollLeft = function (scrollLeft) {\n    TableStickyLayoutManager.superclass._handleScrollerScrollLeft.call(this, scrollLeft);\n\n    this._updateFrozenEdges(scrollLeft, false);\n    if (this._dragIndicatorColumnIndex != null) {\n      this.displayDragOverIndicatorColumn();\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype._handleScrollerScrollTop = function (scrollTop) {\n    TableStickyLayoutManager.superclass._handleScrollerScrollTop.call(this, scrollTop);\n\n    if (this._table._isStickyRowsEnabled()) {\n      var stickyRows = this._table._getTableBodyStickyRows();\n      for (var i = 0; i < stickyRows.length; i++) {\n        var stickyRow = stickyRows[i];\n        if (this.getVerticalOverflowDiff(stickyRow).top > 0) {\n          stickyRow.classList.add(Table.CSS_CLASSES._TABLE_STUCK_ROW_CLASS);\n        } else {\n          stickyRow.classList.remove(Table.CSS_CLASSES._TABLE_STUCK_ROW_CLASS);\n        }\n      }\n    }\n  };\n\n  /**\n   * Determines the number of pixels the Table would need to scroll to align each\n   * vertical edge of the given row with the corresponding edge of the scrollable viewport.\n   * @param {Element} tableBodyRow The row to be scrolled.\n   * @private\n   */\n  TableStickyLayoutManager.prototype.getVerticalOverflowDiff = function (tableBodyRow) {\n    var scrollerTop;\n    var scrollerBottom;\n    var scrollerTopOffset;\n    var scrollerBottomOffset;\n\n    var rowRect = tableBodyRow.getBoundingClientRect();\n    if (this._table._isExternalScrollEnabled()) {\n      scrollerTopOffset =\n        this._table.options.scrollPolicyOptions.scrollerOffsetTop == null\n          ? 0\n          : this._table.options.scrollPolicyOptions.scrollerOffsetTop;\n      scrollerBottomOffset =\n        this._table.options.scrollPolicyOptions.scrollerOffsetBottom == null\n          ? 0\n          : this._table.options.scrollPolicyOptions.scrollerOffsetBottom;\n    } else {\n      scrollerTopOffset = 0;\n      scrollerBottomOffset = 0;\n    }\n    var header = this._table._getTableHeader();\n    if (header != null) {\n      scrollerTopOffset += header.offsetHeight;\n    }\n    var placeHolderRow = this._table._getPlaceHolderRow();\n    if (placeHolderRow != null) {\n      scrollerTopOffset += placeHolderRow.offsetHeight;\n    }\n    var footer = this._table._getTableFooter();\n    if (footer != null) {\n      scrollerBottomOffset += footer.offsetHeight;\n    }\n\n    if (this._table._isStickyRowsEnabled()) {\n      var stickyRows = this._table._getTableBodyStickyRows();\n      for (var i = stickyRows.length - 1; i >= 0; i--) {\n        var stickyRow = stickyRows[i];\n        if (stickyRow === tableBodyRow) {\n          break;\n        }\n        if (stickyRow.classList.contains(Table.CSS_CLASSES._TABLE_STUCK_ROW_CLASS)) {\n          scrollerTopOffset += stickyRow.offsetHeight;\n          break;\n        }\n      }\n    }\n\n    // special case for using overall page scroller with boundingClientRect values\n    if (this._isHTMLScroller()) {\n      scrollerTop = 0;\n      scrollerBottom = this.getScroller().clientHeight;\n    } else {\n      var scrollBarHeight = this.getScrollBarHeight();\n      var scrollingElementRect = this.getScroller().getBoundingClientRect();\n      scrollerTop = scrollingElementRect.top;\n      scrollerBottom = scrollingElementRect.bottom - scrollBarHeight;\n    }\n    var vertDiff = {\n      top: scrollerTop + scrollerTopOffset - rowRect.top,\n      bottom: rowRect.bottom - scrollerBottom + scrollerBottomOffset\n    };\n    return vertDiff;\n  };\n\n  /**\n   * Determines the number of pixels the Table would need to scroll to align each\n   * horizontal edge of the given column with the corresponding edge of the scrollable viewport.\n   * @param {Element} columnCell A cell in the column to be scrolled.\n   * @param {number} columnIndex The index of the column to be scrolled.\n   * @private\n   */\n  TableStickyLayoutManager.prototype.getHorizontalOverflowDiff = function (columnCell, columnIndex) {\n    var i;\n    var frozenIndex;\n    var isRTL = this._table._GetReadingDirection() === 'rtl';\n    var scrollingElement = this.getScroller();\n    var scrollbarWidth = this.getScrollBarWidth();\n    var columnRect = columnCell.getBoundingClientRect();\n    var scrollingElementRect = scrollingElement.getBoundingClientRect();\n\n    var frozenStartOffset;\n    var frozenEndOffset;\n    if (this._table._isExternalScrollEnabled()) {\n      frozenStartOffset =\n        this._table.options.scrollPolicyOptions.scrollerOffsetStart == null\n          ? 0\n          : this._table.options.scrollPolicyOptions.scrollerOffsetStart;\n      frozenEndOffset =\n        this._table.options.scrollPolicyOptions.scrollerOffsetEnd == null\n          ? 0\n          : this._table.options.scrollPolicyOptions.scrollerOffsetEnd;\n    } else {\n      frozenStartOffset = 0;\n      frozenEndOffset = 0;\n    }\n    if (this._table._isDefaultSelectorEnabled()) {\n      frozenStartOffset += this._selectorColWidth;\n    }\n    if (this._table._isGutterStartColumnEnabled()) {\n      let gutterWidth = this._table._getTableGutterWidth('start');\n      frozenStartOffset += gutterWidth;\n    }\n    if (this._table._isGutterEndColumnEnabled()) {\n      let gutterWidth = this._table._getTableGutterWidth('end');\n      frozenEndOffset += gutterWidth;\n    }\n    var frozenStartColumns = this._getFrozenStartColumnIndexes();\n    for (i = 0; i < frozenStartColumns.length; i++) {\n      frozenIndex = frozenStartColumns[i];\n      if (frozenIndex < columnIndex) {\n        frozenStartOffset += this._getAppliedColumnWidth(frozenIndex);\n      } else {\n        break;\n      }\n    }\n    var frozenEndColumns = this._getFrozenEndColumnIndexes();\n    for (i = frozenEndColumns.length - 1; i > -1; i--) {\n      frozenIndex = frozenEndColumns[i];\n      if (frozenIndex > columnIndex) {\n        frozenEndOffset += this._getAppliedColumnWidth(frozenIndex);\n      } else {\n        break;\n      }\n    }\n\n    var horDiff = {};\n    if (isRTL) {\n      horDiff.left = scrollingElementRect.left + frozenEndOffset - columnRect.left + scrollbarWidth;\n      horDiff.right = columnRect.right - scrollingElementRect.right + frozenStartOffset;\n    } else {\n      horDiff.left = scrollingElementRect.left + frozenStartOffset - columnRect.left;\n      horDiff.right =\n        columnRect.right - scrollingElementRect.right + frozenEndOffset + scrollbarWidth;\n    }\n    return horDiff;\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype._clearAllCache = function () {\n    this._clearColumnSizingCache();\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype._clearColumnSizingCache = function () {\n    TableStickyLayoutManager.superclass._clearColumnSizingCache.call(this);\n    this._appliedColumnWidths = null;\n    this._columnInitWidths = null;\n    this._selectorColWidth = null;\n    this._table._gutterStartWidth = null;\n    this._table._gutterEndWidth = null;\n  };\n\n  /**\n   * Refresh the table dimensions\n   * @private\n   */\n  TableStickyLayoutManager.prototype.refreshTableDimensions = function () {\n    var tableContainer = this._table._getTableContainer();\n    var sizingState = this._getSizingState();\n    var tableUpdates = this._getTableUpdates();\n    if (tableUpdates.has(Table._UPDATE._REFRESH)) {\n      this._clearAllCache();\n    } else if (\n      tableUpdates.has(Table._UPDATE._DATA_REFRESH) ||\n      tableUpdates.has(Table._UPDATE._ATTACHED) ||\n      tableUpdates.has(Table._UPDATE._SHOWN) ||\n      tableUpdates.has(Table._UPDATE._RESIZE) ||\n      tableUpdates.has(Table._UPDATE._COL_RESIZE) ||\n      tableUpdates.has(Table._UPDATE._COL_REORDER) ||\n      (tableUpdates.has(Table._UPDATE._ROWS_ADDED) && !sizingState.hasVerticalOverflow) ||\n      (tableUpdates.has(Table._UPDATE._ROWS_REMOVED) && sizingState.hasVerticalOverflow)\n    ) {\n      // clear cached column values if outer size updates or column information changes\n      this._clearColumnSizingCache();\n    } else {\n      // removing a row or refreshing a row can lead to an overall table height change\n      if (\n        tableUpdates.has(Table._UPDATE._ROW_REFRESH) ||\n        tableUpdates.has(Table._UPDATE._ROWS_REMOVED) ||\n        tableUpdates.has(Table._UPDATE._ADD_ROW_DISPLAY)\n      ) {\n        this.unregisterScrollListeners();\n        this.clearCachedDimensions();\n        this._setupTableHeight(this._getBottomSlotHeight());\n        this._table._styleTableContainer(tableContainer);\n        this._restoreCachedScrollPos();\n        this.registerScrollListeners();\n      }\n      // rendering any additional row dom requires re-initialization of frozen columns\n      if (\n        tableUpdates.has(Table._UPDATE._ROWS_ADDED) ||\n        tableUpdates.has(Table._UPDATE._DATA_SORT) ||\n        tableUpdates.has(Table._UPDATE._ADD_ROW_DISPLAY)\n      ) {\n        this._initializeFrozenColumns(true);\n        this._table._styleTableContainer(tableContainer);\n        this._updateStickyRowTops();\n      } else if (tableUpdates.has(Table._UPDATE._ROW_REFRESH)) {\n        // when a row refresh occurs, sticky rows need to be re-initialized as well\n        this._updateStickyRowTops();\n      }\n      // updates do not require a sizing refresh - clear updates and return\n      this._clearTableUpdates();\n      this._enableTableVisibility();\n      return;\n    }\n\n    var bottomSlotHeight = this._getBottomSlotHeight();\n    var tableElem = this._table._getTable();\n\n    this.clearCachedDimensions();\n    this._removeTableDimensionsStyling();\n\n    var overallWidth;\n    // this shouldn't be necessary, but safari has a bug where it does not recalculate the table column widths\n    // correctly when the DOM surrounding it is cleaned up without doing something to force a reflow on the table\n    if (DataCollectionUtils.isSafari()) {\n      tableElem.classList.remove(Table.CSS_CLASSES._TABLE_ELEMENT_CLASS);\n      overallWidth = tableElem.offsetWidth;\n      tableElem.classList.add(Table.CSS_CLASSES._TABLE_ELEMENT_CLASS);\n    }\n\n    this._table._styleTableContainer(tableContainer);\n\n    this._initializeColumnLayouts();\n    this._setupTableHeight(bottomSlotHeight);\n\n    overallWidth = this._determineColumnWidths();\n    if (overallWidth > 0) {\n      tableElem.style[Table.CSS_PROP._WIDTH] = overallWidth + Table.CSS_VAL._PX;\n      tableElem.style['table-layout'] = 'fixed';\n    }\n\n    this._applyHeaderWrapperClass();\n    this._initializeFrozenColumns(true);\n    this._updateStickyRowTops();\n\n    var tableContainerScrollableState = this._getTableContainerScrollableState(bottomSlotHeight);\n    if (tableContainerScrollableState[0] === 1) {\n      sizingState.hasVerticalOverflow = true;\n      tableContainer.classList.add(Table.CSS_CLASSES._TABLE_SCROLL_VERTICAL_CLASS);\n    } else {\n      sizingState.hasVerticalOverflow = false;\n    }\n    if (tableContainerScrollableState[1] === 1) {\n      sizingState.hasHorizontalOverflow = true;\n      tableContainer.classList.add(Table.CSS_CLASSES._TABLE_SCROLL_HORIZONTAL_CLASS);\n    } else {\n      sizingState.hasHorizontalOverflow = false;\n    }\n\n    if (this._table._isStatusMessageShown()) {\n      this._table._refreshTableStatusPosition();\n    }\n\n    this._finalizeTableDimensions();\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype._updateStickyRowTops = function () {\n    var i;\n    var tableHeaderRow = this._table._getTableHeaderRow();\n    var scrollerTopOffset =\n      this._table.options.scrollPolicyOptions.scrollerOffsetTop == null\n        ? 0\n        : this._table.options.scrollPolicyOptions.scrollerOffsetTop;\n    var top =\n      tableHeaderRow != null ? tableHeaderRow.offsetHeight + scrollerTopOffset : scrollerTopOffset;\n\n    // add row\n    var addRowCells = this._table._getPlaceHolderRowCells();\n    var addRowCellsCount = addRowCells.length;\n    if (addRowCellsCount > 0) {\n      for (i = 0; i < addRowCellsCount; i++) {\n        addRowCells[i].style[Table.CSS_PROP._TOP] = top + 'px';\n      }\n    }\n\n    // sticky rows\n    if (this._table._isStickyRowsEnabled()) {\n      var cell;\n      var frozenEdgeOffset;\n      var stickyLevel = 2;\n      var addRow = this._table._getPlaceHolderRow();\n      if (addRow != null) {\n        top += addRow.offsetHeight;\n      }\n      var tableBodyRows = this._table._getTableBodyRows();\n      for (i = 0; i < tableBodyRows.length; i++) {\n        var isSticky = false;\n        var tableBodyRow = tableBodyRows[i];\n        var rowCells = this._table._getTableElementsByTagName(tableBodyRow, Table.DOM_ELEMENT._TD);\n        if (tableBodyRow.classList.contains(Table.CSS_CLASSES._TABLE_STICKY_ROW_CLASS)) {\n          isSticky = true;\n        }\n        for (var j = 0; j < rowCells.length; j++) {\n          cell = rowCells[j];\n          if (isSticky) {\n            cell.style[Table.CSS_PROP._TOP] = top + 'px';\n          }\n          if (cell.classList.contains(Table.CSS_CLASSES._TABLE_FROZEN_START)) {\n            frozenEdgeOffset = 1;\n          } else if (cell.classList.contains(Table.CSS_CLASSES._TABLE_FROZEN_END)) {\n            frozenEdgeOffset = 2;\n          } else {\n            frozenEdgeOffset = 0;\n          }\n          cell.style[Table.CSS_PROP._ZINDEX] = isSticky\n            ? (stickyLevel + 1) * 3 + frozenEdgeOffset\n            : (stickyLevel - 2) * 3 + frozenEdgeOffset;\n        }\n        if (isSticky) {\n          stickyLevel += 2;\n        }\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype._initializeColumnLayouts = function () {\n    // set the forced column widths before checking for scroll state, otherwise we\n    // may miss cases where the columns[].width attribute values cause overflow\n    this._setForcedColumnWidths();\n    this._verifyMinAndMaxWidths();\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype._setupTableHeight = function (bottomSlotHeight) {\n    var tableScroller = this._table._getTableScroller();\n\n    // clear any previous table scroller styling\n    tableScroller.removeAttribute(Table.DOM_ATTR._STYLE);\n\n    // Size the table scroller to fit in the container height\n    var containerStyle = window.getComputedStyle(this._table._getTableContainer());\n    var containerClientHeight = this.getExactClientHeight(containerStyle);\n    var tableScrollerHeight = containerClientHeight - bottomSlotHeight;\n\n    var scrollerStyle = window.getComputedStyle(tableScroller);\n    var scrollerOffsetHeight = this.getExactOffsetHeight(scrollerStyle);\n    if (Math.abs(scrollerOffsetHeight - tableScrollerHeight) > Table.SIZING_ERROR_MARGIN) {\n      tableScroller.style[Table.CSS_PROP._HEIGHT] = tableScrollerHeight + Table.CSS_VAL._PX;\n    }\n\n    var tableBottomSlot = this._table._getTableBottomSlot();\n    if (tableBottomSlot != null) {\n      // if bottom slot present, ensure bottom slot is pinned to bottom when oj-table-stretch is applied\n      if (this._table._isTableStretchEnabled()) {\n        tableBottomSlot.style[Table.CSS_PROP._BOTTOM] = 0;\n        tableBottomSlot.style[Table.CSS_PROP._POSITION] = Table.CSS_VAL._ABSOLUTE;\n      } else {\n        tableBottomSlot.style[Table.CSS_PROP._BOTTOM] = '';\n        tableBottomSlot.style[Table.CSS_PROP._POSITION] = '';\n      }\n    }\n  };\n\n  /**\n   * Iterate through the columns and remove the widths\n   * @private\n   */\n  TableStickyLayoutManager.prototype._removeHeaderColumnAndCellColumnWidths = function () {\n    var colElements = this._table._getTableCols();\n    for (var i = 0; i < colElements.length; i++) {\n      var tableCol = colElements[i];\n      tableCol.style[Table.CSS_PROP._WIDTH] = '';\n      tableCol.style[Table.CSS_PROP._DISPLAY] = '';\n    }\n    this._appliedColumnWidths = null;\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype._determineColumnWidths = function () {\n    // save the column widths at this stage as the preferred content sizes\n    this._savePreferredColWidths();\n\n    // set column widths on the actual column elements, and save the final inner table elem width\n    var overallWidth = this._setAllColumnWidths();\n\n    // remove any forced column width values from the initial fetch as they are no longer needed\n    this._clearForcedColumnWidths();\n\n    return overallWidth;\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype._setAllColumnWidths = function () {\n    var columns = this._table._getColumnDefs();\n    var columnsCount = columns.length;\n\n    var totalWidth = this._selectorColWidth != null ? this._selectorColWidth : 0;\n    if (this._table._isGutterStartColumnEnabled()) {\n      const gutterStartWidth = this._table._getTableGutterWidth('start');\n      totalWidth += gutterStartWidth;\n    }\n    if (this._table._isGutterEndColumnEnabled()) {\n      const gutterEndWidth = this._table._getTableGutterWidth('end');\n      totalWidth += gutterEndWidth;\n    }\n    this._appliedColumnWidths = [];\n\n    for (var i = 0; i < columnsCount; i++) {\n      var colWidth = this._columnInitWidths[i];\n      var tableCol = this._table._getTableCol(i);\n      if (tableCol != null) {\n        tableCol.style[Table.CSS_PROP._WIDTH] = colWidth + Table.CSS_VAL._PX;\n        if (colWidth === 0) {\n          // set the display value to none or else the following column will not be shown\n          tableCol.style[Table.CSS_PROP._DISPLAY] = Table.CSS_VAL._NONE;\n        }\n      }\n      this._appliedColumnWidths[i] = colWidth;\n      totalWidth += colWidth;\n    }\n    return totalWidth;\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype._getAppliedColumnWidth = function (colIndex) {\n    if (this._appliedColumnWidths != null && this._appliedColumnWidths.length > colIndex) {\n      return this._appliedColumnWidths[colIndex];\n    }\n    return 0;\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype._clearForcedColumnWidths = function () {\n    var tableBodyRows = this._table._getTableBodyRows();\n\n    for (var i = 0; i < this._forcedWidthColumns.length; i++) {\n      if (this._forcedWidthColumns[i] !== false) {\n        // update column header cell width\n        var headerCell = this._table._getTableHeaderColumn(i);\n        if (headerCell != null) {\n          this._applyForcedColumnWidth(headerCell, '');\n        }\n\n        // update table body cell widths\n        for (var j = 0; j < tableBodyRows.length; j++) {\n          var tableBodyCell = this._table._getTableBodyCell(j, i, null);\n          if (tableBodyCell != null) {\n            this._applyForcedColumnWidth(tableBodyCell, '');\n          }\n        }\n\n        // update column footer cell width\n        var footerCell = this._table._getTableFooterCell(i);\n        if (footerCell != null) {\n          this._applyForcedColumnWidth(footerCell, '');\n        }\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype._savePreferredColWidths = function () {\n    // determine selector min width if needed\n    if (this._selectorColWidth == null && this._table._isDefaultSelectorEnabled()) {\n      var headerSelector = this._table._getTableSelectorColumn();\n      if (headerSelector != null) {\n        // offsetWidth does not include partial px values, so bounding rect should be used\n        this._selectorColWidth = headerSelector.getBoundingClientRect().width;\n      } else {\n        var tableBodyRow = this._table._getTableBodyRow(0);\n        var selectorCell = this._table._getTableBodySelectorCell(tableBodyRow);\n        if (selectorCell != null) {\n          // offsetWidth does not include partial px values, so bounding rect should be used\n          this._selectorColWidth = selectorCell.getBoundingClientRect().width;\n        }\n      }\n    }\n\n    // determine column init widths if needed\n    if (this._columnInitWidths == null) {\n      this._columnInitWidths = [];\n      var columnsCount = this._table._getColumnDefs().length;\n\n      // loop through columns to get the remaining column widths\n      for (var i = 0; i < columnsCount; i++) {\n        // find column header cell width\n        var headerCell = this._table._getTableHeaderColumn(i);\n        if (headerCell != null) {\n          // offsetWidth does not include partial px values, so bounding rect should be used\n          this._columnInitWidths[i] = headerCell.getBoundingClientRect().width;\n        } else {\n          // find column table body cell widths\n          var tableBodyCell = this._table._getTableBodyCell(0, i, null);\n          if (tableBodyCell != null) {\n            // offsetWidth does not include partial px values, so bounding rect should be used\n            this._columnInitWidths[i] = tableBodyCell.getBoundingClientRect().width;\n          }\n        }\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype._initializeFrozenColumns = function (\n    skipSizeCheck,\n    tableBodyRow\n  ) {\n    if (!skipSizeCheck && !this.hasRenderedSize()) {\n      return;\n    }\n\n    var i;\n    var frozenIndex;\n    var frozenStartOffset;\n    var frozenEndOffset;\n\n    if (this._table._isExternalScrollEnabled()) {\n      frozenStartOffset =\n        this._table.options.scrollPolicyOptions.scrollerOffsetStart == null\n          ? 0\n          : this._table.options.scrollPolicyOptions.scrollerOffsetStart;\n      frozenEndOffset =\n        this._table.options.scrollPolicyOptions.scrollerOffsetEnd == null\n          ? 0\n          : this._table.options.scrollPolicyOptions.scrollerOffsetEnd;\n    } else {\n      frozenStartOffset = 0;\n      frozenEndOffset = 0;\n    }\n\n    var updateFrozenEdges = false;\n    if (this._table._isGutterStartColumnEnabled()) {\n      this._applyFrozenOffset(-1, frozenStartOffset, true, tableBodyRow);\n      let gutterWidth = this._table._getTableGutterWidth('start');\n      frozenStartOffset += gutterWidth;\n      updateFrozenEdges = true;\n    }\n\n    if (this._table._isGutterEndColumnEnabled() && this._appliedColumnWidths != null) {\n      this._applyFrozenOffset(this._appliedColumnWidths.length, frozenEndOffset, false, tableBodyRow);\n      let gutterWidth = this._table._getTableGutterWidth('end');\n      frozenEndOffset += gutterWidth;\n    }\n\n    if (this._table._isDefaultSelectorEnabled()) {\n      this._applyFrozenOffset(-1, frozenStartOffset, true, tableBodyRow);\n      frozenStartOffset += this._selectorColWidth;\n      updateFrozenEdges = true;\n    }\n    var frozenStartColumns = this._getFrozenStartColumnIndexes();\n    if (frozenStartColumns.length > 0) {\n      updateFrozenEdges = true;\n      for (i = 0; i < frozenStartColumns.length; i++) {\n        frozenIndex = frozenStartColumns[i];\n        this._applyFrozenOffset(frozenIndex, frozenStartOffset, true, tableBodyRow);\n        frozenStartOffset += this._getAppliedColumnWidth(frozenIndex);\n      }\n    }\n\n    var frozenEndColumns = this._getFrozenEndColumnIndexes();\n    if (frozenEndColumns.length > 0) {\n      updateFrozenEdges = true;\n      for (i = frozenEndColumns.length - 1; i > -1; i--) {\n        frozenIndex = frozenEndColumns[i];\n        this._applyFrozenOffset(frozenIndex, frozenEndOffset, false, tableBodyRow);\n        frozenEndOffset += this._getAppliedColumnWidth(frozenIndex);\n      }\n    }\n\n    if (updateFrozenEdges) {\n      this._updateFrozenEdges(this._scrollLeft, true, tableBodyRow);\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype._getFrozenStartColumnIndexes = function () {\n    var frozenStartColumns = [];\n    var columns = this._table._getColumnDefs();\n    for (var i = 0; i < columns.length; i++) {\n      if (columns[i].frozenEdge === Table._OPTION_FROZEN_EDGE._START) {\n        frozenStartColumns.push(i);\n      }\n    }\n    return frozenStartColumns;\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype._getFrozenEndColumnIndexes = function () {\n    var frozenEndColumns = [];\n    var columns = this._table._getColumnDefs();\n    for (var i = 0; i < columns.length; i++) {\n      if (columns[i].frozenEdge === Table._OPTION_FROZEN_EDGE._END) {\n        frozenEndColumns.push(i);\n      }\n    }\n    return frozenEndColumns;\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype._applyFrozenOffset = function (\n    columnIndex,\n    offset,\n    isStart,\n    targetRow\n  ) {\n    var i;\n    var styleProperty;\n    var isRTL = this._table._GetReadingDirection() === 'rtl';\n    if ((isStart && !isRTL) || (!isStart && isRTL)) {\n      styleProperty = Table.CSS_PROP._LEFT;\n    } else {\n      styleProperty = Table.CSS_PROP._RIGHT;\n    }\n    var styleValue = offset + Table.CSS_VAL._PX;\n\n    // check if only a single row is being refreshed\n    if (targetRow != null) {\n      let targetCell;\n      if (columnIndex === -1) {\n        if (this._table._isGutterStartColumnEnabled()) {\n          targetCell = this._table._getTableGutterCell('body', 'start', targetRow);\n        }\n        if (this._table._isDefaultSelectorEnabled()) {\n          if (targetRow.classList.contains(Table.CSS_CLASSES._TABLE_ADD_ROW_PLACEHOLDER_CLASS)) {\n            let index = this._table._isGutterStartColumnEnabled() ? 1 : 0;\n            targetCell = this._table._getPlaceHolderRowCells(targetRow)[index];\n          } else {\n            targetCell = this._table._getTableBodySelectorCell(targetRow);\n          }\n        }\n      } else if (targetRow.classList.contains(Table.CSS_CLASSES._TABLE_ADD_ROW_PLACEHOLDER_CLASS)) {\n        targetCell = this._table._getPlaceHolderRowCell(columnIndex);\n      } else {\n        targetCell = this._table._getTableBodyCell(null, columnIndex, targetRow);\n      }\n      if (targetCell != null) {\n        targetCell.style[styleProperty] = styleValue;\n      }\n      return;\n    }\n    const tableBodyRows = this._table._getTableBodyRows();\n    const addRow = this._table._getPlaceHolderRow();\n    const columnsCount = this._table.options.columns.length;\n    if (\n      (columnIndex === -1 && !this._table._isDefaultSelectorEnabled()) ||\n      columnIndex === columnsCount\n    ) {\n      const gutterEdge = columnIndex === -1 ? 'start' : 'end';\n      // update header cell\n      const headerGutter = this._table._getTableGutterCell('header', gutterEdge);\n      if (headerGutter != null) {\n        headerGutter.style[styleProperty] = styleValue;\n      }\n      // update add row cell\n      if (addRow != null) {\n        const addRowGutter = this._table._getTableGutterCell('body', gutterEdge, addRow);\n        if (addRowGutter != null) {\n          addRowGutter.style[styleProperty] = styleValue;\n        }\n      }\n      // update table body cells\n      for (i = 0; i < tableBodyRows.length; i++) {\n        const gutterCell = this._table._getTableGutterCell('body', gutterEdge, tableBodyRows[i]);\n        if (gutterCell != null) {\n          gutterCell.style[styleProperty] = styleValue;\n        }\n      }\n      // update footer cell\n      const footerGutter = this._table._getTableGutterCell('footer', gutterEdge);\n      if (footerGutter != null) {\n        footerGutter.style[styleProperty] = styleValue;\n      }\n    } else if (columnIndex === -1) {\n      // update header cell\n      var headerSelector = this._table._getTableSelectorColumn();\n      if (headerSelector != null) {\n        headerSelector.style[styleProperty] = styleValue;\n      }\n      // update add row cell\n      if (addRow != null) {\n        const index = this._table._isGutterStartColumnEnabled() ? 1 : 0;\n        const addRowSelectorCell = this._table._getPlaceHolderRowCells(addRow)[index];\n        if (addRowSelectorCell != null) {\n          addRowSelectorCell.style[styleProperty] = styleValue;\n        }\n      }\n      // update table body cells\n      for (i = 0; i < tableBodyRows.length; i++) {\n        var tableBodyRow = this._table._getTableBodyRow(i);\n        var tableBodySelectorCell = this._table._getTableBodySelectorCell(tableBodyRow);\n        if (tableBodySelectorCell != null) {\n          tableBodySelectorCell.style[styleProperty] = styleValue;\n        }\n      }\n      // update footer cell\n      var footerSelector = this._table._getTableFooterSelectorCell();\n      if (footerSelector != null) {\n        footerSelector.style[styleProperty] = styleValue;\n      }\n    } else {\n      // update header cell\n      var headerCell = this._table._getTableHeaderColumn(columnIndex);\n      if (headerCell != null) {\n        headerCell.style[styleProperty] = styleValue;\n      }\n      // update add row cell\n      if (addRow != null) {\n        var addRowCell = this._table._getPlaceHolderRowCell(columnIndex);\n        if (addRowCell != null) {\n          addRowCell.style[styleProperty] = styleValue;\n        }\n      }\n      // update table body cells\n      for (i = 0; i < tableBodyRows.length; i++) {\n        var tableBodyCell = this._table._getTableBodyCell(i, columnIndex);\n        if (tableBodyCell != null) {\n          tableBodyCell.style[styleProperty] = styleValue;\n        }\n      }\n      // update footer cell\n      var footerCell = this._table._getTableFooterCell(columnIndex);\n      if (footerCell != null) {\n        footerCell.style[styleProperty] = styleValue;\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype._updateFrozenEdges = function (scrollLeft, isForce, targetRow) {\n    var i;\n    var currIndex;\n    var startIndex;\n    var endIndex;\n    var newScrollPosition = this._table._getCurrentHorizontalScrollPosition(scrollLeft);\n\n    // update frozen start edge if present\n    if (newScrollPosition.x === 0) {\n      startIndex = null;\n    } else {\n      var currentColumnIndex = newScrollPosition.columnIndex;\n      startIndex =\n        this._table._isDefaultSelectorEnabled() || this._table._isGutterStartColumnEnabled()\n          ? -1\n          : null;\n      var frozenStartColumns = this._getFrozenStartColumnIndexes();\n      for (i = 0; i < frozenStartColumns.length; i++) {\n        currIndex = frozenStartColumns[i];\n        if (currIndex < currentColumnIndex && this._getAppliedColumnWidth(currIndex) > 0) {\n          startIndex = currIndex;\n        } else {\n          break;\n        }\n      }\n    }\n    this._updateFrozenEdge(startIndex, true, isForce, targetRow);\n\n    // update frozen end edge if present\n    var scroller = this.getScroller();\n    var maxScrollPos = scroller.scrollWidth - scroller.clientWidth;\n    var endOverflow = maxScrollPos - newScrollPosition.x;\n    // browser zoom levels cause rounding where the max scroll position may never be reached, but it should always be within 1\n    if (endOverflow < 1) {\n      endIndex = null;\n    } else if (this._appliedColumnWidths != null) {\n      if (this._table._isGutterEndColumnEnabled()) {\n        endIndex = this._appliedColumnWidths.length;\n      }\n      var colWidths = 0;\n      var frozenEndColumns = this._getFrozenEndColumnIndexes();\n      for (i = this._appliedColumnWidths.length - 1; i > -1; i--) {\n        if (frozenEndColumns.indexOf(i) !== -1 && this._getAppliedColumnWidth(i) > 0) {\n          endIndex = i;\n        } else {\n          colWidths += this._getAppliedColumnWidth(i);\n          if (colWidths > endOverflow) {\n            break;\n          }\n        }\n      }\n    }\n    this._updateFrozenEdge(endIndex, false, isForce, targetRow);\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype._updateFrozenEdge = function (\n    columnIndex,\n    isStart,\n    isForce,\n    targetRow\n  ) {\n    var appliedEdge = false;\n    if (isStart) {\n      if (this._frozenStartIndex !== columnIndex) {\n        if (this._frozenStartIndex != null) {\n          this._applyFrozenEdge(this._frozenStartIndex, false, targetRow);\n        }\n        if (columnIndex != null) {\n          this._applyFrozenEdge(columnIndex, true, targetRow);\n          appliedEdge = true;\n        }\n        this._frozenStartIndex = columnIndex;\n      }\n    } else if (this._frozenEndIndex !== columnIndex) {\n      if (this._frozenEndIndex != null) {\n        this._applyFrozenEdge(this._frozenEndIndex, false, targetRow);\n      }\n      if (columnIndex != null) {\n        this._applyFrozenEdge(columnIndex, true, targetRow);\n        appliedEdge = true;\n      }\n      this._frozenEndIndex = columnIndex;\n    }\n    if (isForce && !appliedEdge) {\n      this._applyFrozenEdge(columnIndex, true, targetRow);\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype._applyFrozenEdge = function (columnIndex, isAdd, targetRow) {\n    let i;\n    const modifierFunc = isAdd ? 'add' : 'remove';\n    const columnsCount = this._table.options.columns.length;\n\n    // check if only a single row is being refreshed\n    if (targetRow != null) {\n      let targetCell;\n      if (columnIndex === -1) {\n        if (this._table._isGutterStartColumnEnabled()) {\n          targetCell = this._table._getTableGutterCell('body', 'start', targetRow);\n        }\n        if (this._table._isDefaultSelectorEnabled()) {\n          if (targetRow.classList.contains(Table.CSS_CLASSES._TABLE_ADD_ROW_PLACEHOLDER_CLASS)) {\n            let index = this._table._isGutterStartColumnEnabled() ? 1 : 0;\n            targetCell = this._table._getPlaceHolderRowCells(targetRow)[index];\n          } else {\n            targetCell = this._table._getTableBodySelectorCell(targetRow);\n          }\n        }\n      } else if (columnIndex === columnsCount) {\n        targetCell = this._table._getTableGutterCell('body', 'end', targetRow);\n      } else if (targetRow.classList.contains(Table.CSS_CLASSES._TABLE_ADD_ROW_PLACEHOLDER_CLASS)) {\n        targetCell = this._table._getPlaceHolderRowCell(columnIndex);\n      } else {\n        targetCell = this._table._getTableBodyCell(null, columnIndex, targetRow);\n      }\n      if (targetCell != null) {\n        targetCell.classList[modifierFunc](Table.CSS_CLASSES._TABLE_FROZEN_EDGE);\n      }\n      return;\n    }\n\n    const tableBodyRows = this._table._getTableBodyRows();\n    const addRow = this._table._getPlaceHolderRow();\n\n    if (\n      (columnIndex === -1 && !this._table._isDefaultSelectorEnabled()) ||\n      columnIndex === columnsCount\n    ) {\n      const gutterEdge = columnIndex === -1 ? 'start' : 'end';\n      // update header cell\n      const headerGutter = this._table._getTableGutterCell('header', gutterEdge);\n      if (headerGutter != null) {\n        headerGutter.classList[modifierFunc](Table.CSS_CLASSES._TABLE_FROZEN_EDGE);\n      }\n      // update add row cell\n      if (addRow != null) {\n        const addRowGutter = this._table._getTableGutterCell('body', gutterEdge, addRow);\n        if (addRowGutter != null) {\n          addRowGutter.classList[modifierFunc](Table.CSS_CLASSES._TABLE_FROZEN_EDGE);\n        }\n      }\n      // update table body cells\n      for (i = 0; i < tableBodyRows.length; i++) {\n        const gutterCell = this._table._getTableGutterCell('body', gutterEdge, tableBodyRows[i]);\n        if (gutterCell != null) {\n          gutterCell.classList[modifierFunc](Table.CSS_CLASSES._TABLE_FROZEN_EDGE);\n        }\n      }\n      // update footer cell\n      const footerGutter = this._table._getTableGutterCell('footer', gutterEdge);\n      if (footerGutter != null) {\n        footerGutter.classList[modifierFunc](Table.CSS_CLASSES._TABLE_FROZEN_EDGE);\n      }\n    } else if (columnIndex === -1) {\n      // update header cell\n      var headerSelector = this._table._getTableSelectorColumn();\n      if (headerSelector != null) {\n        headerSelector.classList[modifierFunc](Table.CSS_CLASSES._TABLE_FROZEN_EDGE);\n      }\n      // update add row cell\n      if (addRow != null) {\n        let index = this._table._isGutterStartColumnEnabled() ? 1 : 0;\n        var addRowSelectorCell = this._table._getPlaceHolderRowCells(addRow)[index];\n        if (addRowSelectorCell != null) {\n          addRowSelectorCell.classList[modifierFunc](Table.CSS_CLASSES._TABLE_FROZEN_EDGE);\n        }\n      }\n      // update table body cells\n      for (i = 0; i < tableBodyRows.length; i++) {\n        var tableBodyRow = this._table._getTableBodyRow(i);\n        var tableBodySelectorCell = this._table._getTableBodySelectorCell(tableBodyRow);\n        if (tableBodySelectorCell != null) {\n          tableBodySelectorCell.classList[modifierFunc](Table.CSS_CLASSES._TABLE_FROZEN_EDGE);\n        }\n      }\n      // update footer cell\n      var footerSelector = this._table._getTableFooterSelectorCell();\n      if (footerSelector != null) {\n        footerSelector.classList[modifierFunc](Table.CSS_CLASSES._TABLE_FROZEN_EDGE);\n      }\n    } else {\n      // update header cell\n      var headerCell = this._table._getTableHeaderColumn(columnIndex);\n      if (headerCell != null) {\n        headerCell.classList[modifierFunc](Table.CSS_CLASSES._TABLE_FROZEN_EDGE);\n      }\n      // update add row cell\n      if (addRow != null) {\n        var addRowCell = this._table._getPlaceHolderRowCell(columnIndex);\n        if (addRowCell != null) {\n          addRowCell.classList[modifierFunc](Table.CSS_CLASSES._TABLE_FROZEN_EDGE);\n        }\n      }\n      // update table body cells\n      for (i = 0; i < tableBodyRows.length; i++) {\n        var tableBodyCell = this._table._getTableBodyCell(i, columnIndex);\n        if (tableBodyCell != null) {\n          tableBodyCell.classList[modifierFunc](Table.CSS_CLASSES._TABLE_FROZEN_EDGE);\n        }\n      }\n      // update footer cell\n      var footerCell = this._table._getTableFooterCell(columnIndex);\n      if (footerCell != null) {\n        footerCell.classList[modifierFunc](Table.CSS_CLASSES._TABLE_FROZEN_EDGE);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype.handleMouseMoveHeaderCell = function (event) {\n    if (!this._isColumnResizing) {\n      this._setResizeCursor(event);\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype._setResizeCursor = function (event) {\n    var eventTarget = this._table._getEventTargetElement(event);\n    var columnIdx = this._table._getElementColumnIdx(eventTarget);\n\n    if (columnIdx == null) {\n      return;\n    }\n\n    var column = this._table._getColumnDefs()[columnIdx];\n    if (column.resizable === Table._OPTION_DISABLED || this._appliedColumnWidths == null) {\n      this._cursor = null;\n      eventTarget.style.cursor = '';\n      return;\n    }\n\n    var isResize = false;\n    var headerColumn = this._table._getTableHeaderColumn(columnIdx);\n    if (headerColumn !== null) {\n      var readingDir = this._table._GetReadingDirection();\n      var columnsCount = this._table.options.columns.length;\n      var columnRect = headerColumn.getBoundingClientRect();\n      var distFromLeft = Math.abs(event.originalEvent.clientX - columnRect.left);\n      var distFromRight = Math.abs(event.originalEvent.clientX - columnRect.right);\n\n      // don't show resize cursor for column dividers at the start and end of the table\n      if (distFromLeft <= Table.RESIZE_OFFSET) {\n        if (readingDir === 'rtl' && columnIdx !== columnsCount - 1) {\n          isResize = true;\n          this._resizeStartIndex = columnIdx;\n          this._resizeEndIndex = columnIdx + 1;\n        } else if (readingDir === 'ltr' && columnIdx !== 0) {\n          isResize = true;\n          this._resizeStartIndex = columnIdx - 1;\n          this._resizeEndIndex = columnIdx;\n        }\n      } else if (distFromRight <= Table.RESIZE_OFFSET) {\n        if (readingDir === 'ltr' && columnIdx !== columnsCount - 1) {\n          isResize = true;\n          this._resizeStartIndex = columnIdx;\n          this._resizeEndIndex = columnIdx + 1;\n        } else if (readingDir === 'rtl' && columnIdx !== 0) {\n          isResize = true;\n          this._resizeStartIndex = columnIdx - 1;\n          this._resizeEndIndex = columnIdx;\n        }\n      }\n    }\n    if (isResize) {\n      this._cursor = 'col-resize';\n      eventTarget.style.cursor = Table.CSS_VAL._COL_RESIZE;\n    } else {\n      this._cursor = null;\n      eventTarget.style.cursor = '';\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype._handleHeaderColumnResizeStart = function (event, isMouse) {\n    if (!isMouse || (this._resizeStartIndex == null && this._resizeEndIndex == null)) {\n      this._setResizeCursor(event);\n    }\n    if (this._cursor === 'col-resize') {\n      this._isColumnResizing = true;\n      this._resizeStartPageX = this._getPageX(event);\n      this._minimumStartColWidth = this.getMinimumForcedOffsetWidth(this._resizeStartIndex);\n      this._minimumEndColWidth = this.getMinimumForcedOffsetWidth(this._resizeEndIndex);\n      this._setResizeIndicator();\n      event.preventDefault();\n      if (isMouse) {\n        this._setupMouseResizeListeners();\n      }\n      this._table._queueTask(\n        function () {\n          // if column resizing is still happening, wait for it to end\n          if (this._isColumnResizing) {\n            return new Promise(\n              function (resolve) {\n                this._finishResize = resolve;\n              }.bind(this)\n            );\n          }\n          // else just resolve\n          return Promise.resolve();\n        }.bind(this)\n      );\n      return true;\n    }\n    this._resizeStartPageX = null;\n    return false;\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype._setupMouseResizeListeners = function () {\n    this._clearMouseResizeListeners();\n\n    this._docMouseMoveListener = this._handleResizeMouseMove.bind(this);\n    this._docMouseUpListener = this._handleResizeMouseUp.bind(this);\n\n    document.addEventListener('mousemove', this._docMouseMoveListener, false);\n    document.addEventListener('mouseup', this._docMouseUpListener, false);\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype._clearMouseResizeListeners = function () {\n    if (this._docMouseMoveListener != null) {\n      document.removeEventListener('mousemove', this._docMouseMoveListener, false);\n      this._docMouseMoveListener = null;\n    }\n    if (this._docMouseUpListener != null) {\n      document.removeEventListener('mouseup', this._docMouseUpListener, false);\n      this._docMouseUpListener = null;\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype._handleResizeMouseMove = function (event) {\n    if (event && event.buttons === 0) {\n      // mouseup must have occurred outside of the document - treat as a mouse up\n      this._handleResizeMouseUp(event);\n    } else {\n      this._updateResizeColumnWidths(event);\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype._handleResizeMouseUp = function (event) {\n    this._removeResizeIndicator();\n    this._updateResizeColumnWidths(event, true);\n    this._cleanupColumnResizing();\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype._cleanupColumnResizing = function () {\n    this._clearMouseResizeListeners();\n\n    this._resizeStartIndex = null;\n    this._resizeEndIndex = null;\n    this._isColumnResizing = null;\n    this._resizeStartPageX = null;\n    this._minimumStartColWidth = null;\n    this._minimumEndColWidth = null;\n\n    if (this._finishResize != null) {\n      this._finishResize();\n      this._finishResize = null;\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype.handleTouchMoveHeader = function (event) {\n    if (this._isColumnResizing) {\n      this._updateResizeColumnWidths(event);\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype.handleTouchEnd = function (event) {\n    if (this._isColumnResizing) {\n      event.preventDefault();\n      this._removeResizeIndicator();\n      this._updateResizeColumnWidths(event, true);\n      this._cleanupColumnResizing();\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype._updateResizeColumnWidths = function (event, updateOptions) {\n    var readingDir = this._table._GetReadingDirection();\n    var startColInitWidth = this._getAppliedColumnWidth(this._resizeStartIndex);\n    var endColInitWidth = this._getAppliedColumnWidth(this._resizeEndIndex);\n    var xDiff = this._getPageX(event) - this._resizeStartPageX;\n    var newStartColWidth;\n    var newEndColWidth;\n    if (readingDir === 'ltr') {\n      newStartColWidth = startColInitWidth + xDiff;\n      newEndColWidth = endColInitWidth - xDiff;\n    } else {\n      newStartColWidth = startColInitWidth - xDiff;\n      newEndColWidth = endColInitWidth + xDiff;\n    }\n    // ensure columns do not become smaller than allowable minimum\n    var minimumDiff;\n    if (this._minimumStartColWidth > newStartColWidth) {\n      minimumDiff = this._minimumStartColWidth - newStartColWidth;\n      newStartColWidth = this._minimumStartColWidth;\n      newEndColWidth -= minimumDiff;\n    } else if (this._minimumEndColWidth > newEndColWidth) {\n      minimumDiff = this._minimumEndColWidth - newEndColWidth;\n      newEndColWidth = this._minimumEndColWidth;\n      newStartColWidth -= minimumDiff;\n    }\n    var tableStartCol = this._table._getTableCol(this._resizeStartIndex);\n    var tableEndCol = this._table._getTableCol(this._resizeEndIndex);\n    tableStartCol.style[Table.CSS_PROP._WIDTH] = newStartColWidth + Table.CSS_VAL._PX;\n    tableEndCol.style[Table.CSS_PROP._WIDTH] = newEndColWidth + Table.CSS_VAL._PX;\n    this._updateStickyRowTops();\n\n    if (updateOptions) {\n      var columnsCount = this._table.options.columns.length;\n      var clonedColumnsOption = [];\n      for (var i = 0; i < columnsCount; i++) {\n        clonedColumnsOption[i] = Object.assign({}, {}, this._table.options.columns[i]);\n      }\n      var startHeaderColumn = this._table._getTableHeaderColumn(this._resizeStartIndex);\n      clonedColumnsOption[this._resizeStartIndex].width = this.getWidthPropertyFromOffsetWidth(\n        newStartColWidth,\n        startHeaderColumn\n      );\n      var endHeaderColumn = this._table._getTableHeaderColumn(this._resizeEndIndex);\n      clonedColumnsOption[this._resizeEndIndex].width = this.getWidthPropertyFromOffsetWidth(\n        newEndColWidth,\n        endHeaderColumn\n      );\n\n      this._table.option('columns', clonedColumnsOption, {\n        _context: {\n          writeback: true,\n          internalSet: true\n        }\n      });\n      this._table._clearCachedMetadata();\n      this.notifyTableUpdate(Table._UPDATE._COL_RESIZE);\n      if (this._finishResize != null) {\n        this._finishResize();\n        this._finishResize = null;\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype._setResizeIndicator = function () {\n    var addRowCell = this._table._getPlaceHolderRowCell(this._resizeEndIndex);\n    if (addRowCell != null) {\n      addRowCell.classList.add(Table.CSS_CLASSES._COLUMN_RESIZE_INDICATOR_CLASS);\n    }\n    var tableHeaderColumn = this._table._getTableHeaderColumn(this._resizeEndIndex);\n    if (tableHeaderColumn != null) {\n      tableHeaderColumn.classList.add(Table.CSS_CLASSES._COLUMN_RESIZE_INDICATOR_CLASS);\n    }\n    var visibleRowIdxArray = this._table._getVisibleRowIdxs();\n    visibleRowIdxArray.forEach(\n      function (rowIdx) {\n        var dataCell = this._table._getTableBodyCell(rowIdx, this._resizeEndIndex);\n        if (dataCell != null) {\n          dataCell.classList.add(Table.CSS_CLASSES._COLUMN_RESIZE_INDICATOR_CLASS);\n        }\n      }.bind(this)\n    );\n    var footerCell = this._table._getTableFooterCell(this._resizeEndIndex);\n    if (footerCell != null) {\n      footerCell.classList.add(Table.CSS_CLASSES._COLUMN_RESIZE_INDICATOR_CLASS);\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype._removeResizeIndicator = function () {\n    var tableContainer = this._table._getTableContainer();\n    var columnCells = this._table._getTableElementsByClassName(\n      tableContainer,\n      Table.CSS_CLASSES._COLUMN_RESIZE_INDICATOR_CLASS\n    );\n\n    columnCells.forEach(function (columnCell) {\n      columnCell.classList.remove(Table.CSS_CLASSES._COLUMN_RESIZE_INDICATOR_CLASS);\n    });\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype.handleRowRefresh = function (rowIdx, tableBodyRow, isRefresh) {\n    TableStickyLayoutManager.superclass.handleRowRefresh.call(this, rowIdx, tableBodyRow);\n    // apply frozen column states if refreshing a row that was already rendered\n    if (isRefresh) {\n      this._initializeFrozenColumns(false, tableBodyRow);\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype.displayDragOverIndicatorColumn = function (columnIdx, isStart) {\n    // only update if things have changed, or no columnIdx is provided (the case for scrolling)\n    if (\n      columnIdx == null ||\n      this._dragIndicatorColumnIndex !== columnIdx ||\n      this._dragIndicatorIsStart !== isStart\n    ) {\n      this._dragIndicatorColumnIndex = columnIdx != null ? columnIdx : this._dragIndicatorColumnIndex;\n      this._dragIndicatorIsStart = isStart != null ? isStart : this._dragIndicatorIsStart;\n\n      var tableColumnDropIndicator = this._getTableColumnDropIndicator();\n      if (tableColumnDropIndicator == null) {\n        tableColumnDropIndicator = this._createTableColumnDropIndicator();\n      }\n\n      var tableScroller = this.getScroller();\n      var scrollerRect = tableScroller.getBoundingClientRect();\n      var headerColumn = this._table._getTableHeaderColumn(this._dragIndicatorColumnIndex);\n      var headerColumnRect = headerColumn.getBoundingClientRect();\n\n      if (this._dragIndicatorIsStart) {\n        if (this._table._GetReadingDirection() === 'rtl') {\n          tableColumnDropIndicator.style.left =\n            headerColumnRect.left + headerColumnRect.width - scrollerRect.left + 'px';\n        } else {\n          tableColumnDropIndicator.style.left = headerColumnRect.left - scrollerRect.left + 'px';\n        }\n      } else if (this._table._GetReadingDirection() === 'rtl') {\n        tableColumnDropIndicator.style.left = headerColumnRect.left - scrollerRect.left + 'px';\n      } else {\n        tableColumnDropIndicator.style.left =\n          headerColumnRect.left + headerColumnRect.width - scrollerRect.left + 'px';\n      }\n      tableColumnDropIndicator.style.height = scrollerRect.height + 'px';\n    }\n  };\n\n  /**\n   * @private\n   */\n  TableStickyLayoutManager.prototype.removeDragOverIndicatorColumn = function () {\n    var tableColumnDropIndicator = this._getTableColumnDropIndicator();\n    if (tableColumnDropIndicator) {\n      $(tableColumnDropIndicator).remove();\n      this._table._clearDomCache(Table.CSS_CLASSES._COLUMN_DROP_INDICATOR_CLASS);\n    }\n    this._dragIndicatorColumnIndex = null;\n    this._dragIndicatorIsStart = null;\n  };\n\n  /**\n   * Create a div element for drop indicator\n   * @return {Element} div DOM element\n   * @private\n   */\n  TableStickyLayoutManager.prototype._createTableColumnDropIndicator = function () {\n    var tableColumnDropIndicator = this._getTableColumnDropIndicator();\n\n    if (!tableColumnDropIndicator) {\n      var tableContainer = this._table._getTableContainer();\n      tableColumnDropIndicator = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n      tableColumnDropIndicator.classList.add(Table.CSS_CLASSES._COLUMN_DROP_INDICATOR_CLASS);\n      tableContainer.appendChild(tableColumnDropIndicator);\n      this._table._cacheDomElement(\n        Table.CSS_CLASSES._COLUMN_DROP_INDICATOR_CLASS,\n        tableColumnDropIndicator\n      );\n    }\n\n    return tableColumnDropIndicator;\n  };\n\n  /**\n   * Return drop indicator\n   * @return {Element} div DOM element\n   * @private\n   */\n  TableStickyLayoutManager.prototype._getTableColumnDropIndicator = function () {\n    return this._table._getTableElementByClassName(\n      Table.CSS_CLASSES._COLUMN_DROP_INDICATOR_CLASS,\n      true\n    );\n  };\n\n  TableStickyLayoutManager.prototype._applyHeaderWrapperClass = function () {\n    const headerColumns = this._table._getTableHeaderColumns();\n    for (let i = 0; i < headerColumns.length; i++) {\n      headerColumns[i].classList.add(Table.CSS_CLASSES._TABLE_HEADER_WRAP_TEXT_CLASS);\n    }\n  };\n\n  /**\n   * @private\n   */\n  const TableFixedLayoutManager = function (table) {\n    TableFixedLayoutManager.superclass.constructor.call(this, table);\n  };\n\n  // Subclass from oj.Object\n  oj.Object.createSubclass(\n    TableFixedLayoutManager,\n    TableStickyLayoutManager,\n    'TableFixedLayoutManager'\n  );\n\n  /**\n   * @private\n   */\n  TableFixedLayoutManager.prototype._clearAllCache = function () {\n    TableFixedLayoutManager.superclass._clearAllCache.call(this);\n    this._columnWeights = null;\n    this._columnMinWidths = null;\n    this._columnMaxWidths = null;\n  };\n\n  /**\n   * Refresh the table dimensions\n   * @private\n   */\n  TableFixedLayoutManager.prototype.optimizeInitialColumnWidths = function () {\n    var tableContainer = this._table._getTableContainer();\n    this._clearAllCache();\n\n    var tableElem = this._table._getTable();\n\n    this.clearCachedDimensions();\n    this._removeTableDimensionsStyling();\n\n    var overallWidth;\n    // this shouldn't be necessary, but safari has a bug where it does not recalculate the table column widths\n    // correctly when the DOM surrounding it is cleaned up without doing something to force a reflow on the table\n    if (DataCollectionUtils.isSafari()) {\n      tableElem.classList.remove(Table.CSS_CLASSES._TABLE_ELEMENT_CLASS);\n      overallWidth = tableElem.offsetWidth;\n      tableElem.classList.add(Table.CSS_CLASSES._TABLE_ELEMENT_CLASS);\n    }\n\n    this._table._styleTableContainer(tableContainer);\n    this._initializeColumnLayouts();\n\n    overallWidth = this._determineColumnWidths();\n    if (overallWidth > 0) {\n      tableElem.style[Table.CSS_PROP._WIDTH] = overallWidth + Table.CSS_VAL._PX;\n      tableElem.style['table-layout'] = 'fixed';\n    }\n  };\n\n  /**\n   * Ensures the preferred column width variables are populated. Also resets the inner Table element's styling\n   * if required. Returns true iff the inner Table element's styling was reset. Returns false otherwise.\n   * @private\n   */\n  TableFixedLayoutManager.prototype._initializeColumnLayouts = function () {\n    var i;\n    var isResetTableElemStyle = false;\n\n    // determine selector min width if needed\n    if (this._table._isDefaultSelectorEnabled()) {\n      if (this._selectorColWidth == null) {\n        isResetTableElemStyle = true;\n        // add 1 to the selector width value due to vertical border presence / spacing\n        this._selectorColWidth = this._getPixelStyleEquivalent('2.75rem') + 1;\n      }\n    } else if (this._selectorColWidth != null) {\n      isResetTableElemStyle = true;\n      this._selectorColWidth = null;\n    }\n\n    var columns = this._table._getColumnDefs();\n    var columnsCount = columns.length;\n\n    // determine column weights if needed\n    if (this._columnWeights == null) {\n      isResetTableElemStyle = true;\n      this._columnWeights = [];\n      // loop through columns to get the remaining column widths\n      for (i = 0; i < columnsCount; i++) {\n        var columnWeight = parseFloat(columns[i].weight);\n        // TODO: throw a warning here when weight is less than 1\n        if (columnWeight <= 1) {\n          columnWeight = 1;\n        }\n        this._columnWeights[i] = columnWeight;\n      }\n    }\n\n    // determine column min widths if needed\n    if (this._columnMinWidths == null) {\n      isResetTableElemStyle = true;\n      this._columnMinWidths = [];\n      // loop through columns to get the remaining column widths\n      for (i = 0; i < columnsCount; i++) {\n        var minWidth = this._getPixelStyleEquivalent(columns[i].minWidth);\n        // minWidth MUST be set and greater than 0 when fixed layout is specified\n        // TODO: throw a warning when it is not set or invalid\n        if (minWidth == null || minWidth <= 0) {\n          this._columnMinWidths[i] = 1;\n        } else {\n          this._columnMinWidths[i] = minWidth;\n        }\n      }\n    }\n\n    // determine column max widths if needed\n    if (this._columnMaxWidths == null) {\n      isResetTableElemStyle = true;\n      this._columnMaxWidths = [];\n      // loop through columns to get the remaining column widths\n      for (i = 0; i < columnsCount; i++) {\n        var maxWidth = this._getPixelStyleEquivalent(columns[i].maxWidth);\n        // maxWidth MUST be null or greater than 0\n        // TODO: throw a warning when it is nvalid\n        if (maxWidth != null && maxWidth <= 0) {\n          this._columnMaxWidths[i] = null;\n        } else {\n          this._columnMaxWidths[i] = maxWidth;\n        }\n      }\n    }\n\n    // determine column init widths if needed\n    if (this._columnInitWidths == null) {\n      isResetTableElemStyle = true;\n      this._resetTableElementStyling();\n\n      this._columnInitWidths = [];\n\n      // loop through columns to get the remaining column widths\n      for (i = 0; i < columnsCount; i++) {\n        // find column header cell width\n        var headerCell = this._table._getTableHeaderColumn(i);\n        if (headerCell != null) {\n          // offsetWidth does not include partial px values, so bounding rect should be used\n          this._columnInitWidths[i] = headerCell.getBoundingClientRect().width;\n        } else {\n          // find column table body cell widths\n          var tableBodyCell = this._table._getTableBodyCell(0, i, null);\n          if (tableBodyCell != null) {\n            // offsetWidth does not include partial px values, so bounding rect should be used\n            this._columnInitWidths[i] = tableBodyCell.getBoundingClientRect().width;\n          }\n        }\n      }\n    } else if (isResetTableElemStyle) {\n      this._resetTableElementStyling();\n    }\n    return isResetTableElemStyle;\n  };\n\n  /**\n   * @private\n   */\n  TableFixedLayoutManager.prototype._resetTableElementStyling = function () {\n    // reset styling on the table element\n    var tableElem = this._table._getTable();\n    tableElem.style = '';\n\n    // reset styling on each col group\n    this._removeHeaderColumnAndCellColumnWidths();\n  };\n\n  /**\n   * @private\n   */\n  TableFixedLayoutManager.prototype._removeTableDimensionsStyling = function () {\n    this.unregisterScrollListeners();\n  };\n\n  /**\n   * @private\n   */\n  TableFixedLayoutManager.prototype._determineColumnWidths = function () {\n    var tableScroller = this._table._getTableScroller();\n    var initScrollerWidth = tableScroller.clientWidth;\n    return this._setAllColumnWidths(initScrollerWidth);\n  };\n\n  /**\n   * @private\n   */\n  TableFixedLayoutManager.prototype._setAllColumnWidths = function (scrollerWidth) {\n    var columns = this._table._getColumnDefs();\n    var columnsCount = columns.length;\n\n    var totalWidth = this._selectorColWidth != null ? this._selectorColWidth : 0;\n    var forcedTotal = totalWidth;\n    if (this._table._isGutterStartColumnEnabled()) {\n      const gutterStartWidth = this._table._getTableGutterWidth('start');\n      totalWidth += gutterStartWidth;\n      forcedTotal += gutterStartWidth;\n    }\n    if (this._table._isGutterEndColumnEnabled()) {\n      const gutterEndWidth = this._table._getTableGutterWidth('end');\n      totalWidth += gutterEndWidth;\n      forcedTotal += gutterEndWidth;\n    }\n    var freeWeightTotal = 0;\n    var columnWidths = [];\n    this._appliedColumnWidths = [];\n\n    var i;\n    var forcedColumnWidths = [];\n    for (i = 0; i < columnsCount; i++) {\n      var columnWidth = this._getPixelStyleEquivalent(columns[i].width);\n      if (columnWidth != null) {\n        forcedColumnWidths[i] = columnWidth;\n        forcedTotal += columnWidth;\n      } else {\n        if (this._columnInitWidths[i] > 0) {\n          columnWidth = this._columnMinWidths[i];\n          freeWeightTotal += this._columnWeights[i];\n        } else {\n          columnWidth = 0;\n        }\n        forcedColumnWidths[i] = false;\n      }\n      columnWidths[i] = columnWidth;\n      totalWidth += columnWidth;\n    }\n\n    // handle case where forced widths do not fill viewport\n    if (forcedTotal < scrollerWidth) {\n      var continueSizing = true;\n      // flag to check track whether full sizing run was successfull\n      while (continueSizing) {\n        var currentFreeWeightTotal = freeWeightTotal;\n        continueSizing = false;\n        var widthDiff = scrollerWidth - forcedTotal;\n        for (i = 0; i < columnsCount; i++) {\n          if (forcedColumnWidths[i] === false) {\n            var currentWidth = columnWidths[i];\n            // only adjust widths for columns that are visible\n            if (currentWidth > 0) {\n              // round width percentage update to nearest int, and subtract that from adjustable info\n              var currentWeight = this._columnWeights[i];\n              var newWidth = Math.floor((currentWeight / currentFreeWeightTotal) * widthDiff);\n\n              // if calculated width breaks min or max width requirement, force width as needed, and restart weight distribution logic\n              var minWidth = this._columnMinWidths[i];\n              var maxWidth = this._columnMaxWidths[i];\n              if (minWidth != null && newWidth < minWidth) {\n                forcedColumnWidths[i] = minWidth;\n                forcedTotal += minWidth;\n                freeWeightTotal -= currentWeight;\n                columnWidths[i] = minWidth;\n                continueSizing = true;\n                break;\n              } else if (maxWidth != null && newWidth > maxWidth) {\n                forcedColumnWidths[i] = maxWidth;\n                forcedTotal += maxWidth;\n                freeWeightTotal -= currentWeight;\n                columnWidths[i] = maxWidth;\n                continueSizing = true;\n                break;\n              }\n              columnWidths[i] = newWidth;\n              currentFreeWeightTotal -= currentWeight;\n              widthDiff -= newWidth;\n            }\n          }\n        }\n        totalWidth = scrollerWidth;\n      }\n    }\n\n    for (i = 0; i < columnsCount; i++) {\n      var colWidth = columnWidths[i];\n      var tableCol = this._table._getTableCol(i);\n      if (tableCol != null) {\n        tableCol.style[Table.CSS_PROP._WIDTH] = colWidth + Table.CSS_VAL._PX;\n        if (colWidth === 0) {\n          // set the display value to none or else the following column will not be shown\n          tableCol.style[Table.CSS_PROP._DISPLAY] = Table.CSS_VAL._NONE;\n        }\n      }\n      this._appliedColumnWidths[i] = colWidth;\n    }\n    return totalWidth;\n  };\n\n  /**\n   * @private\n   */\n  TableFixedLayoutManager.prototype._getMinWidthAutoEquivalent = function () {\n    return 100;\n  };\n\n  /**\n   * Creates an accessibility-specific child DOM element that contains the\n   * current context information for the Table.\n   * @private\n   */\n  Table.prototype._createContextInfo = function () {\n    var contextInfo = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n    contextInfo.id = this.createSubId('context');\n    contextInfo.classList.add(Table.CSS_CLASSES._TABLE_ACC_CONTEXT_INFO_CLASS);\n    contextInfo.classList.add(Table.CSS_CLASSES._HIDDEN_CONTENT_ACC_CLASS);\n\n    if (!DataCollectionUtils.isIos()) {\n      // table context info\n      var tableContext = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n      tableContext.id = this.createSubId('tableContext');\n      tableContext.classList.add(Table.CSS_CLASSES._HIDDEN_CONTENT_ACC_CLASS);\n      contextInfo.appendChild(tableContext);\n\n      // row context info\n      var rowContext = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n      rowContext.id = this.createSubId('rowContext');\n      rowContext.classList.add(Table.CSS_CLASSES._HIDDEN_CONTENT_ACC_CLASS);\n      contextInfo.appendChild(rowContext);\n\n      // column context info\n      var columnContext = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n      columnContext.id = this.createSubId('columnContext');\n      columnContext.classList.add(Table.CSS_CLASSES._HIDDEN_CONTENT_ACC_CLASS);\n      contextInfo.appendChild(columnContext);\n\n      // selector context info\n      var selectorContext = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n      selectorContext.id = this.createSubId('selectorContext');\n      selectorContext.classList.add(Table.CSS_CLASSES._HIDDEN_CONTENT_ACC_CLASS);\n      selectorContext.textContent = this.getTranslatedString(Table._BUNDLE_KEY._LABEL_SELECT_ROW);\n      contextInfo.appendChild(selectorContext);\n\n      this._tableContextInfo = tableContext;\n      this._rowContextInfo = rowContext;\n      this._columnContextInfo = columnContext;\n      this._selectorContextInfo = selectorContext;\n    }\n    this._getTableContainer().appendChild(contextInfo);\n\n    return contextInfo;\n  };\n\n  /**\n   * Creates an accessibility-specific child DOM element that contains the\n   * current state information for the Table.\n   * @private\n   */\n  Table.prototype._createStateInfo = function () {\n    var stateInfo = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n    stateInfo.id = this.createSubId('state');\n    stateInfo.classList.add(Table.CSS_CLASSES._TABLE_ACC_STATE_INFO_CLASS);\n    stateInfo.classList.add(Table.CSS_CLASSES._HIDDEN_CONTENT_ACC_CLASS);\n    this._getTableContainer().appendChild(stateInfo);\n    this._stateInfo = stateInfo;\n\n    return stateInfo;\n  };\n\n  /**\n   * Creates an accessibility-specific child DOM element that contains the\n   * current state information for the current row.\n   * @private\n   */\n  Table.prototype._createRowStateInfo = function () {\n    var rowStateInfo = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n    rowStateInfo.id = this.createSubId('rowState');\n    rowStateInfo.classList.add(Table.CSS_CLASSES._TABLE_ACC_ROW_STATE_INFO_CLASS);\n    rowStateInfo.classList.add(Table.CSS_CLASSES._HIDDEN_CONTENT_ACC_CLASS);\n    this._getTableContainer().appendChild(rowStateInfo);\n    this._rowStateInfo = rowStateInfo;\n\n    return rowStateInfo;\n  };\n\n  /**\n   * Create a div element for the accessibility notifications\n   * @return {Element} div DOM element\n   * @private\n   */\n  Table.prototype._createTableStatusAccNotification = function () {\n    var tableContainer = this._getTableContainer();\n    var statusNotification = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n    statusNotification.setAttribute(Table.DOM_ATTR._ROLE, 'status'); // @HTMLUpdateOK\n    statusNotification.classList.add(Table.CSS_CLASSES._TABLE_STATUS_ACC_NOTIFICATION_CLASS);\n    statusNotification.classList.add(Table.CSS_CLASSES._HIDDEN_CONTENT_ACC_CLASS);\n    tableContainer.appendChild(statusNotification); // @HTMLUpdateOK\n    this._cacheDomElement(Table.CSS_CLASSES._TABLE_STATUS_ACC_NOTIFICATION_CLASS, statusNotification);\n\n    this._accStatus = statusNotification;\n    return statusNotification;\n  };\n\n  /**\n   * Sets accessible context information about the current active row.\n   * Invoked by row expander to set accessible context info on the table (and\n   * the info is then read by the screen reader)\n   * @param {Object} context\n   * @private\n   */\n  Table.prototype._setAccessibleContext = function (context) {\n    var rowContextString = '';\n    if (context != null) {\n      rowContextString = context.context + ' ' + context.state;\n    }\n    this._accRowContext = rowContextString;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._getAccessibleContext = function () {\n    return this._accRowContext;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._clearAccessibleContext = function () {\n    this._accRowContext = null;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._updateAccStatusInfo = function (columnHint) {\n    var i;\n    var actionableElems;\n    var label = '';\n    var stateInfo = '';\n    var tableHeaderColumn;\n\n    // status info only reflects an active element, only applies if the table is focused, and is not used for iOS voiceover\n    if (this._active == null || !this._hasFocus() || DataCollectionUtils.isIos()) {\n      return;\n    }\n\n    // include overall Table aria-label if needed\n    if (this._accFirstFocus !== false) {\n      var columnCount = this._getColumnDefs().length;\n      if (this._isDefaultSelectorEnabled()) {\n        // eslint-disable-next-line no-param-reassign\n        columnCount += 1;\n      }\n      var rowCount = this._getTableBodyRows().length;\n      var summaryResource;\n      if (rowCount === 0) {\n        summaryResource = 'accessibleSummaryExact';\n      } else {\n        summaryResource = 'accessibleSummaryEstimate';\n      }\n      var textContent = this.getTranslatedString(summaryResource, {\n        colnum: columnCount,\n        rownum: rowCount\n      });\n      if (this._isTableEditMode()) {\n        textContent += ' ' + this.getTranslatedString('accessibleEditableSummary');\n      }\n      this._tableContextInfo.textContent = textContent;\n      label += this._tableContextInfo.id + ' ' + this._getTableContainer().id + ' ';\n    }\n    var activeType = this._getActiveType();\n    var activeIndex = this._active.index;\n    if (activeType === Table.ACTIVE_ELEMENT_TYPES._HEADER) {\n      this._accRowIndex = null;\n      this._accColumnIndex = null;\n      // update column header context information\n      this._columnContextInfo.textContent = this.getTranslatedString(\n        'accessibleColumnHeaderContext',\n        { index: this._isDefaultSelectorEnabled() ? activeIndex + 2 : activeIndex + 1 }\n      );\n      label += this._columnContextInfo.id + ' ';\n\n      if (activeIndex === -1) {\n        // handle select all column header case\n        tableHeaderColumn = this._getTableSelectorColumn();\n      } else {\n        // handle normal column header case\n        var headerSelected = false;\n        tableHeaderColumn = this._getTableHeaderColumn(activeIndex);\n        var selectedHeaderIdxs = this._getSelectedHeaderColumnIdxs();\n        for (i = 0; i < selectedHeaderIdxs.length; i++) {\n          if (selectedHeaderIdxs[i] === activeIndex) {\n            stateInfo += this.getTranslatedString('accessibleStateSelected') + ' ';\n            headerSelected = true;\n            break;\n          }\n        }\n        if (!headerSelected && this._isColumnSelectionEnabled()) {\n          stateInfo += this.getTranslatedString('accessibleStateUnselected') + ' ';\n        }\n        var column = this._getColumnDefs()[activeIndex];\n        var sorted = $(tableHeaderColumn).data('sorted');\n        if (sorted != null) {\n          if (sorted === Table._COLUMN_SORT_ORDER._ASCENDING) {\n            stateInfo += this.getTranslatedString('accessibleSortAscending', { id: '' }) + ' ';\n          } else {\n            stateInfo += this.getTranslatedString('accessibleSortDescending', { id: '' }) + ' ';\n          }\n        } else if (column.sortable === Table._OPTION_ENABLED) {\n          stateInfo += this.getTranslatedString('accessibleSortable', { id: '' }) + ' ';\n        }\n      }\n      actionableElems = DataCollectionUtils.getActionableElementsInNode(tableHeaderColumn);\n      if (actionableElems.length > 0) {\n        stateInfo += this.getTranslatedString('accessibleContainsControls');\n      }\n      label += tableHeaderColumn.id + ' ';\n    } else if (activeType === Table.ACTIVE_ELEMENT_TYPES._FOOTER) {\n      this._accRowIndex = null;\n      this._accColumnIndex = null;\n      // update column footer context information\n      this._columnContextInfo.textContent = this.getTranslatedString(\n        'accessibleColumnFooterContext',\n        { index: this._isDefaultSelectorEnabled() ? activeIndex + 2 : activeIndex + 1 }\n      );\n      label += this._columnContextInfo.id + ' ';\n\n      var tableFooterCell;\n      if (activeIndex === -1) {\n        // handle select all column footer case\n        tableFooterCell = this._getTableFooterSelectorCell();\n      } else {\n        // handle normal column footer case\n        var footerSelected = false;\n        tableFooterCell = this._getTableFooterCell(activeIndex);\n        var selectedFooterIdxs = this._getSelectedFooterColumnIdxs();\n        for (i = 0; i < selectedFooterIdxs.length; i++) {\n          if (selectedFooterIdxs[i] === activeIndex) {\n            stateInfo += this.getTranslatedString('accessibleStateSelected') + ' ';\n            footerSelected = true;\n            break;\n          }\n        }\n        if (!footerSelected && this._isColumnSelectionEnabled()) {\n          stateInfo += this.getTranslatedString('accessibleStateUnselected') + ' ';\n        }\n      }\n      actionableElems = DataCollectionUtils.getActionableElementsInNode(tableFooterCell);\n      if (actionableElems.length > 0) {\n        stateInfo += this.getTranslatedString('accessibleContainsControls');\n      }\n      tableHeaderColumn = this._getTableHeaderColumn(activeIndex);\n      if (tableHeaderColumn != null) {\n        label += tableHeaderColumn.id + ' ';\n      }\n      label += tableFooterCell.id + ' ';\n    } else if (activeType === Table.ACTIVE_ELEMENT_TYPES._DATA_ROW) {\n      var tableCell;\n      var columnIndex = columnHint != null ? columnHint : this._accColumnIndex;\n      if (columnIndex == null) {\n        columnIndex = 0;\n      }\n      var activeRowElem = this._getTableBodyRow(activeIndex);\n      // get 'active' cell in Table\n      if (columnIndex === -1) {\n        tableCell = this._getTableBodySelectorCell(activeRowElem);\n      } else {\n        tableCell = this._getTableBodyLogicalCells(null, activeRowElem)[columnIndex];\n      }\n\n      // update row context information if changed\n      if (activeIndex !== this._accRowIndex || this._accFirstFocus !== false) {\n        var rowIndexOffset = this._isAddNewRowEnabled() ? 2 : 1;\n        this._rowContextInfo.textContent = this.getTranslatedString('accessibleRowContext', {\n          index: activeIndex + rowIndexOffset\n        });\n        var rowStateInfo = '';\n        var rowSelected = false;\n        // find state of the row\n        if (this._accRowContext != null) {\n          rowStateInfo += this._accRowContext + ' ';\n        }\n        var selectedRowIdxs = this._getSelectedRowIdxs();\n        for (i = 0; i < selectedRowIdxs.length; i++) {\n          if (selectedRowIdxs[i] === activeIndex) {\n            rowStateInfo += this.getTranslatedString('accessibleStateSelected') + ' ';\n            rowSelected = true;\n            break;\n          }\n        }\n        if (\n          !rowSelected &&\n          this._isRowSelectionEnabled() &&\n          activeRowElem[Table._DATA_OJ_SELECTABLE] !== Table._CONST_OFF\n        ) {\n          rowStateInfo += this.getTranslatedString('accessibleStateUnselected') + ' ';\n        }\n        actionableElems = DataCollectionUtils.getActionableElementsInNode(activeRowElem);\n        if (actionableElems.length > 0) {\n          rowStateInfo += this.getTranslatedString('accessibleContainsControls') + ' ';\n        }\n        this._rowStateInfo.textContent = rowStateInfo;\n\n        label +=\n          this._rowContextInfo.id +\n          (columnIndex === -1 ? ' ' : ' ' + this._getRowHeaderIds(activeRowElem, tableCell) + ' ') +\n          this._rowStateInfo.id +\n          ' ';\n      }\n      // update column context information if changed\n      if (columnIndex !== this._accColumnIndex || this._accFirstFocus !== false) {\n        this._columnContextInfo.textContent = this.getTranslatedString('accessibleColumnContext', {\n          index: this._isDefaultSelectorEnabled() ? columnIndex + 2 : columnIndex + 1\n        });\n        label += this._columnContextInfo.id + ' ';\n      }\n\n      // populate cell information\n      if (columnIndex === -1) {\n        // handle row selector cell\n        if (tableCell != null) {\n          label += this._getAccSelectorString(activeRowElem) + ' ';\n        }\n      } else {\n        tableHeaderColumn = this._getTableHeaderColumn(columnIndex);\n        if (tableHeaderColumn != null) {\n          label += tableHeaderColumn.id + ' ' + tableCell.id + ' ';\n        }\n\n        var span = tableCell.colSpan;\n        if (span > 1) {\n          stateInfo += this.getTranslatedString('accessibleColumnsSpan', { count: span });\n        }\n      }\n\n      this._accRowIndex = activeIndex;\n      this._accColumnIndex = columnIndex;\n    } else if (activeType === Table.ACTIVE_ELEMENT_TYPES._NO_DATA) {\n      this._accRowIndex = null;\n      this._accColumnIndex = null;\n      label += this._getNoDataId() + ' ';\n      var noDataRow = this._getActiveElement();\n      actionableElems = DataCollectionUtils.getActionableElementsInNode(noDataRow);\n      if (actionableElems.length > 0) {\n        stateInfo += this.getTranslatedString('accessibleContainsControls');\n      }\n    } else if (activeType === Table.ACTIVE_ELEMENT_TYPES._ADD_ROW) {\n      this._accRowIndex = null;\n      this._accColumnIndex = null;\n      this._rowContextInfo.textContent = this.getTranslatedString('accessibleRowContext', {\n        index: 1\n      });\n      this._rowStateInfo.textContent = this.getTranslatedString('accessibleAddRow');\n\n      var placeholderRow = this._getActiveElement();\n      actionableElems = DataCollectionUtils.getActionableElementsInNode(placeholderRow);\n      if (actionableElems.length > 0) {\n        stateInfo += this.getTranslatedString('accessibleContainsControls');\n      }\n\n      label += this._rowContextInfo.id + ' ' + this._rowStateInfo.id + ' ';\n    }\n    this._stateInfo.textContent = stateInfo;\n    label += this._stateInfo.id;\n    // apply new label\n    this._applyAccStatusLabel(label);\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._announceAccSelectionUpdate = function (isSelected) {\n    var stateInfo;\n\n    if (isSelected) {\n      stateInfo = this.getTranslatedString('accessibleStateSelected');\n    } else {\n      stateInfo = this.getTranslatedString('accessibleStateUnselected');\n    }\n    this._stateInfo.textContent = stateInfo;\n\n    // apply new label\n    this._applyAccStatusLabel(this._stateInfo.id);\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._getAccSelectorString = function (tableBodyRow) {\n    return this._selectorContextInfo.id + ' ' + this._getRowHeaderIds(tableBodyRow);\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._clearAccStatusInfo = function () {\n    this._getTable().setAttribute(Table.DOM_ATTR._ARIA_LABELLEDBY, ''); // @HTMLUpdateOK\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._applyAccStatusLabel = function (label) {\n    if (this._accFirstFocus !== false) {\n      this._accFirstFocus = false;\n    } else if (this._accActionFocus) {\n      this._accActionFocus = false;\n    }\n    this._getTable().setAttribute(Table.DOM_ATTR._ARIA_LABELLEDBY, label); // @HTMLUpdateOK\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._getRowHeaderIds = function (tableBodyRow, cell) {\n    var rowHeaderCell;\n    var rowHeaderIds = '';\n    var accessibility = this.options.accessibility;\n    if (accessibility != null && accessibility.rowHeader != null) {\n      var rowHeaders = accessibility.rowHeader;\n      if (!Array.isArray(rowHeaders)) {\n        rowHeaders = [rowHeaders];\n      }\n      var columnDefs = this._getColumnDefs();\n      for (var i = 0; i < rowHeaders.length; i++) {\n        var headerColumnId = rowHeaders[i];\n        for (var j = 0; j < columnDefs.length; j++) {\n          if (headerColumnId === columnDefs[j].id) {\n            rowHeaderCell = this._getTableBodyLogicalCells(null, tableBodyRow)[j];\n            if (rowHeaderCell != null && rowHeaderCell !== cell) {\n              rowHeaderIds += rowHeaderCell.id + ' ';\n            }\n            break;\n          }\n        }\n      }\n    } else {\n      rowHeaderCell = this._getTableBodyCell(null, 0, tableBodyRow);\n      if (rowHeaderCell != null && rowHeaderCell !== cell) {\n        rowHeaderIds += rowHeaderCell.id + ' ';\n      }\n    }\n    return rowHeaderIds;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._getVoiceOverCellLabelledby = function (tableBodyCell, columnIdx) {\n    var labelledbyString = '';\n    var columnHeaderCell = this._getTableHeaderColumn(columnIdx);\n    if (columnHeaderCell != null) {\n      labelledbyString += columnHeaderCell.id + ' ';\n    }\n    labelledbyString += tableBodyCell.id + ' ';\n    return labelledbyString;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._getNoDataId = function () {\n    var messageRow = this._getTableBodyMessageRow();\n    if (messageRow != null) {\n      return messageRow.id;\n    }\n    var noDataRow = this._getTableNoDataRow();\n    if (noDataRow != null) {\n      return noDataRow.id;\n    }\n    return '';\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._cleanAccStatus = function () {\n    this._accFirstFocus = true;\n    this._accActionFocus = false;\n    this._getTable().removeAttribute(Table.DOM_ATTR._ARIA_LABELLEDBY);\n  };\n\n  /**\n   * Return the datasource object defined for this table\n   * @return {Object} Datasource object.\n   * @throws {Error}\n   * @private\n   */\n  Table.prototype._getData = function () {\n    if (!this._data && this.options.data != null) {\n      var dataprovider = this.options.data;\n      if (\n        (oj.TableDataSource && dataprovider instanceof oj.TableDataSource) ||\n        this._isPagingModelTableDataSource()\n      ) {\n        this._data = new oj.TableDataSourceAdapter(dataprovider);\n      } else if (oj.DataProviderFeatureChecker.isDataProvider(dataprovider)) {\n        if (\n          !(dataprovider instanceof ListDataProviderView) &&\n          !oj.DataProviderFeatureChecker.isTreeDataProvider(dataprovider)\n        ) {\n          this._data = new ListDataProviderView(dataprovider);\n        } else {\n          this._data = dataprovider;\n        }\n      } else {\n        // we only support TableDataSource\n        var errSummary = Table._LOGGER_MSG._ERR_DATA_INVALID_TYPE_SUMMARY;\n        var errDetail = Table._LOGGER_MSG._ERR_DATA_INVALID_TYPE_DETAIL;\n        throw new Error(errSummary + '\\n' + errDetail);\n      }\n      this._dataOption = this.options.data;\n      this._registerDataSourceEventListeners();\n    }\n    return this._data;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._isPagingModelTableDataSource = function () {\n    if (oj.PagingTableDataSource && this.options.data instanceof oj.PagingTableDataSource) {\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * Register event listeners which need to be registered datasource.\n   * @private\n   */\n  Table.prototype._registerDataSourceEventListeners = function () {\n    // register the listeners on the datasource\n    var dataprovider = this._getData();\n    if (dataprovider != null) {\n      this._unregisterDataSourceEventListeners();\n\n      this._dataProviderEventHandlers = [];\n      this._dataProviderEventHandlers.push({\n        eventType: 'mutate',\n        eventHandler: this._handleDataRowMutate.bind(this)\n      });\n      this._dataProviderEventHandlers.push({\n        eventType: 'refresh',\n        eventHandler: this._handleDataRefresh.bind(this)\n      });\n\n      var dataProviderEventHandlersCount = this._dataProviderEventHandlers.length;\n      for (var i = 0; i < dataProviderEventHandlersCount; i++) {\n        var ev = dataprovider.addEventListener(\n          this._dataProviderEventHandlers[i].eventType,\n          this._dataProviderEventHandlers[i].eventHandler\n        );\n        if (ev) {\n          this._dataProviderEventHandlers[i].eventHandler = ev;\n        }\n      }\n    }\n  };\n\n  /**\n   * Unregister event listeners which are registered on datasource.\n   * @private\n   */\n  Table.prototype._unregisterDataSourceEventListeners = function () {\n    var dataprovider = this._getData();\n    // unregister the listeners on the datasource\n    if (this._dataProviderEventHandlers != null && dataprovider != null) {\n      var dataProviderEventHandlersCount = this._dataProviderEventHandlers.length;\n      for (var i = 0; i < dataProviderEventHandlersCount; i++) {\n        dataprovider.removeEventListener(\n          this._dataProviderEventHandlers[i].eventType,\n          this._dataProviderEventHandlers[i].eventHandler\n        );\n      }\n    }\n  };\n\n  /**\n   * Callback handler for refresh in the datasource. Refresh entire\n   * table body DOM and refresh the table dimensions.\n   * @param {Object} event\n   * @private\n   */\n  Table.prototype._handleDataRefresh = function (event) {\n    try {\n      // if a refresh is already in the queue, but a fetch hasn't started, just return\n      if (this._hasRefreshInQueue) {\n        return;\n      }\n      // if already handling a fetch, mark pending fetch result as stale (to ensure new fetch is triggered), abort, and return\n      if (this._dataFetching) {\n        if (this._controller) {\n          this._controller.abort();\n        }\n        this._pendingFetchStale = true;\n        this._pendingFetchOptions = null;\n        return;\n      }\n      if (event.detail && event.detail.disregardAfterKey !== undefined) {\n        this._queueTask(\n          function () {\n            this._getLayoutManager().notifyTableUpdate(Table._UPDATE._ROWS_REMOVED);\n            // reset active row to ensure active row index is not stale after refresh\n            this._clearActiveRow(null, true);\n            this._removeRowsAfterLastValidRow(event.detail.disregardAfterKey);\n            if (!this._hasMoreToFetch()) {\n              this._registerDomScroller();\n            }\n            this._animateOnFetch = true;\n          }.bind(this)\n        );\n      } else {\n        this._hasRefreshInQueue = true;\n        this._queueTask(\n          function () {\n            this._getLayoutManager().notifyTableUpdate(Table._UPDATE._DATA_REFRESH);\n            // reset active row to ensure active row index is not stale after refresh\n            this._clearActiveRow(null, true);\n            this._beforeDataRefresh();\n            return this._invokeDataFetchRows();\n          }.bind(this)\n        );\n      }\n    } catch (e) {\n      Logger.error(e);\n    }\n  };\n\n  /**\n   * Things to do before data is refresh, this could be due to sort, model refresh event, or data attribute changed.\n   * @param {boolean} isSort\n   * @private\n   */\n  Table.prototype._beforeDataRefresh = function (isSort) {\n    this._clearIdleCallback();\n    this._adjustScrollPositionOnFetch(isSort);\n    this._invalidateRangeSelection();\n    if (this._lastSelectedRowIdxArray != null) {\n      this._lastSelectedRowIdxArray = [];\n    }\n    // update edit state based on row removals before rows are removed to ensure row context is available\n    if (this._hasEditableRow()) {\n      // exit edit mode if editable row is deleted - treat as cancelling the edit\n      this._setTableEditable(false, true);\n    }\n    // reset selection validation state if data refreshed or changed\n    this._initialSelectionStateValidated = false;\n  };\n\n  /**\n   * Removes all rows after key thats passed in.\n   * @param {Key} lastValidKey\n   * @private\n   */\n  Table.prototype._removeRowsAfterLastValidRow = function (lastValidKey) {\n    if (this._getCurrentScrollPosition().y > 0) {\n      this._bufferScrollerForLastRow(lastValidKey);\n    }\n    var lastValidItemIdx = this._getRowIdxForRowKey(lastValidKey);\n    if (lastValidItemIdx >= 0) {\n      // update edit state based on row removals before rows are removed to ensure row context is available\n      if (this._hasEditableRow()) {\n        if (this._getEditableRowIdx() > lastValidItemIdx) {\n          // exit edit mode if editable row is deleted - treat as cancelling the edit\n          this._setTableEditable(false, true);\n        }\n      }\n      var tableBodyRows = this._getTableBodyRows();\n      var tableBodyRowsCount = tableBodyRows.length;\n      for (var i = tableBodyRowsCount - 1; i > lastValidItemIdx; i--) {\n        this._removeTableBodyRow(i);\n      }\n    }\n  };\n\n  /**\n   * Sets the height of the scroller buffer to ensure browser does not adjust scroll position while waiting for data.\n   * @private\n   */\n  Table.prototype._bufferScrollerForLastRow = function (lastValidKey) {\n    var scrollBuffer;\n    var layoutManager = this._getLayoutManager();\n    if (lastValidKey != null) {\n      var rowIndex = this._getRowIdxForRowKey(lastValidKey);\n      if (rowIndex != null) {\n        var tableBodyRow = this._getTableBodyRow(rowIndex);\n        var bottomOverflowDiff = layoutManager.getVerticalOverflowDiff(tableBodyRow).bottom;\n        // if bottom of the final row is above the bottom of the vieport, increase scroll buffer to account for the difference\n        if (bottomOverflowDiff < 0) {\n          scrollBuffer = this._createTableBodyScrollBuffer();\n          // need to add 1px to the difference to prevent browser underscroll when things align exactly\n          scrollBuffer.style[Table.CSS_PROP._HEIGHT] =\n            Math.abs(bottomOverflowDiff) + 1 + Table.CSS_VAL._PX;\n        }\n      }\n    } else {\n      // buffer entire viewport if no start row\n      scrollBuffer = this._createTableBodyScrollBuffer();\n      scrollBuffer.style[Table.CSS_PROP._HEIGHT] =\n        this._getTableBody().offsetHeight + Table.CSS_VAL._PX;\n    }\n  };\n\n  /**\n   * Callback handler for rows mutations.\n   * @param {Object} event\n   * @private\n   */\n  Table.prototype._handleDataRowMutate = function (event) {\n    if (this._dataFetching) {\n      if (this._controller) {\n        this._controller.abort();\n      }\n      this._pendingFetchStale = true;\n      return;\n    }\n    if (event.detail.remove != null) {\n      this._handleDataRowRemove(event.detail.remove, event.detail.add);\n    }\n    if (event.detail.add != null) {\n      this._handleDataRowAdd(event.detail.add);\n    }\n    if (event.detail.update != null) {\n      this._handleDataRowChange(event.detail.update);\n    }\n  };\n\n  /**\n   * Callback handler for row removed in the datasource. Remove the row DOM from the\n   * table body by searching for the matching rowKey. New rows will have null rowKey.\n   * After removing the row, refresh all the remaining row indexes since\n   * they will have shifted. Lastly, refresh the table dimensions\n   * @param {Object} eventDetail event detail\n   * @param {Object=} addEventDetail optional event detail for subsequent add\n   * @private\n   */\n  Table.prototype._handleDataRowRemove = function (eventDetail, addEventDetail) {\n    try {\n      this._executeTableBodyRowsRemove(eventDetail, addEventDetail);\n    } catch (e) {\n      Logger.error(e);\n    } finally {\n      this._clearDataWaitingState();\n    }\n  };\n\n  /**\n   * Remove all the rows contained in the event detail.\n   * @param {Object} eventDetail event detail\n   * @param {Object=} addEventDetail optional event detail for subsequent add\n   * @private\n   */\n  Table.prototype._executeTableBodyRowsRemove = function (eventDetail, addEventDetail) {\n    var self = this;\n    var eventDetailKeys = eventDetail[Table._CONST_KEYS];\n    if (eventDetailKeys && eventDetailKeys.size > 0) {\n      this._queueTask(function () {\n        // This function will try to find the row index from the DOM, so it must\n        // be called right before we're ready to update the UI.  If we call it\n        // outside of this queued task, the DOM may have changed from other\n        // data operations, and the row index can be wrong.\n        var rows = self._getRowsFromEventDetailRemove(eventDetail);\n        if (rows.length === 0) {\n          // update selection state based on row removals\n          self._updateSelectionStateFromEventDetailRemove(eventDetail, addEventDetail);\n          return undefined;\n        }\n        self._getLayoutManager().notifyTableUpdate(Table._UPDATE._ROWS_REMOVED);\n\n        // sort array\n        rows.sort(function (a, b) {\n          return b.rowIdx - a.rowIdx;\n        });\n\n        // first check if we are removing all rows. If so, we can do a removeAll\n        var remainingRowIdxArray = [];\n        var rowIdxArray = [];\n        var removedTableBodyRows = [];\n        var rowsCount = rows.length;\n        var removeAll = false;\n        var tableBodyRow;\n        var tableBodyRows = self._getTableBodyRows();\n        var rowIdx;\n        var i;\n\n        if (tableBodyRows.length > 0) {\n          for (i = 0; i < tableBodyRows.length; i++) {\n            remainingRowIdxArray.push(i);\n          }\n          for (i = 0; i < rowsCount; i++) {\n            rowIdx = rows[i].rowIdx;\n            rowIdxArray.push(rowIdx);\n            for (var j = 0; j < remainingRowIdxArray.length; j++) {\n              if (remainingRowIdxArray[j] === rowIdx) {\n                tableBodyRow = self._getTableBodyRow(rowIdx);\n                removedTableBodyRows.push(tableBodyRow);\n                remainingRowIdxArray.splice(j, 1);\n                break;\n              }\n            }\n          }\n\n          if (remainingRowIdxArray.length === 0) {\n            removeAll = true;\n          }\n        }\n\n        var tableBody = self._getTableBody();\n        var checkFocus = tableBody.contains(document.activeElement);\n        var resetFocus = false;\n\n        if (removeAll) {\n          if (checkFocus) {\n            resetFocus = true;\n          }\n          // Clear out all the existing selection state\n          self._clearSelectionState();\n        } else {\n          for (i = 0; i < rowsCount; i++) {\n            rowIdx = rows[i].rowIdx;\n            tableBodyRow = self._getTableBodyRow(rowIdx);\n            if (checkFocus) {\n              if (tableBodyRow != null && tableBodyRow.contains(document.activeElement)) {\n                resetFocus = true;\n                break;\n              }\n            }\n          }\n        }\n\n        // update edit state based on row removals before rows are removed to ensure row context is available\n        if (self._hasEditableRow()) {\n          var editRowKey = self._getEditableRowKey();\n          if (DataCollectionUtils.containsKey([...eventDetail[Table._CONST_KEYS]], editRowKey)) {\n            // exit edit mode if editable row is deleted - treat as cancelling the edit\n            self._setTableEditable(false, true);\n          }\n        }\n\n        function _removeRows() {\n          var ii;\n          var _rowIdx;\n          // logic to buffer unwanted scroll position jumps\n          if (self._getCurrentScrollPosition().y > 0) {\n            var rowToRemove;\n            var stuckRow;\n            var stickyRow;\n            var stickyRows;\n            var totalRowHeight = 0;\n            var tableBodyRowsToRemove = [];\n            for (ii = 0; ii < rowsCount; ii++) {\n              _rowIdx = rows[ii].rowIdx;\n              rowToRemove = self._getTableBodyRow(_rowIdx);\n              if (rowToRemove != null) {\n                totalRowHeight += rowToRemove.offsetHeight;\n                tableBodyRowsToRemove.push(rowToRemove);\n              }\n            }\n            if (self._isStickyRowsEnabled()) {\n              stickyRows = self._getTableBodyStickyRows();\n              for (ii = stickyRows.length - 1; ii >= 0; ii--) {\n                stickyRow = stickyRows[ii];\n                if (stickyRow.classList.contains(Table.CSS_CLASSES._TABLE_STUCK_ROW_CLASS)) {\n                  stuckRow = stickyRow;\n                  break;\n                }\n              }\n            }\n            var scrollBuffer = self._createTableBodyScrollBuffer();\n            scrollBuffer.style[Table.CSS_PROP._HEIGHT] = totalRowHeight + Table.CSS_VAL._PX;\n            for (ii = 0; ii < tableBodyRowsToRemove.length; ii++) {\n              rowToRemove = tableBodyRowsToRemove[ii];\n              self._removeTableBodyRow(null, rowToRemove);\n              if (stuckRow != null) {\n                var stickyIndex = stickyRows.indexOf(rowToRemove);\n                if (stickyIndex !== -1) {\n                  stickyRows.splice(stickyIndex, 1);\n                }\n              }\n            }\n            // set scroll position to stuck row if necessary\n            if (stuckRow != null) {\n              for (ii = stickyRows.length - 1; ii >= 0; ii--) {\n                stickyRow = stickyRows[ii];\n                if (self._getLayoutManager().getVerticalOverflowDiff(stickyRow).top > 0) {\n                  if (stuckRow !== stickyRow) {\n                    self._scrollRowIntoViewport(null, true, stuckRow);\n                  }\n                  break;\n                }\n              }\n            }\n          } else {\n            for (ii = 0; ii < rowsCount; ii++) {\n              _rowIdx = rows[ii].rowIdx;\n              self._removeTableBodyRow(_rowIdx);\n            }\n          }\n        }\n\n        function _syncTableFocus() {\n          // update active element if needed\n          self._syncActiveElement();\n          if (resetFocus) {\n            self._getTable().focus();\n          }\n        }\n\n        function _afterRemoveRows() {\n          // update selection state based on row removals\n          if (eventDetail.transient !== true) {\n            self._updateSelectionStateFromEventDetailRemove(eventDetail, addEventDetail);\n          }\n          // row values may have changed so refresh the footer\n          self._refreshTableFooter();\n          tableBodyRows = self._getTableBodyRows();\n          if (tableBodyRows.length === 0) {\n            self._showNoDataMessage();\n            return self._finalizeNonBodyRowRendering([tableBody]).then(function () {\n              _syncTableFocus();\n            });\n          }\n          return Promise.resolve().then(function () {\n            _syncTableFocus();\n          });\n        }\n\n        if (removeAll) {\n          self._removeAllTableBodyRows();\n          return _afterRemoveRows();\n        }\n        return new Promise(function (resolve) {\n          if (self._IsCustomElement()) {\n            return self\n              ._animateVisibleRows(removedTableBodyRows, rowIdxArray, 'remove')\n              .then(function () {\n                _removeRows();\n                return _afterRemoveRows().then(function () {\n                  resolve(true);\n                });\n              });\n          }\n          _removeRows();\n          return _afterRemoveRows().then(function () {\n            resolve(true);\n          });\n        });\n      });\n    }\n  };\n\n  /**\n   * Return row info from remove event detail\n   * @param {Object} eventDetail event detail\n   * @return {Array} Array of row info\n   * @private\n   */\n  Table.prototype._getRowsFromEventDetailRemove = function (eventDetail) {\n    var rowArray = [];\n    eventDetail[Table._CONST_KEYS].forEach(\n      function (key) {\n        var rowIdx = this._getRowIdxForRowKey(key);\n        if (rowIdx !== undefined) {\n          var row = { key: key, index: rowIdx };\n          rowArray.push({ row: row, rowIdx: rowIdx });\n        }\n      }.bind(this)\n    );\n    return rowArray;\n  };\n\n  /**\n   * Callback handler for rows added into the datasource. Add a new tr and refresh the DOM\n   * at the row index and refresh the table dimensions to accommodate the new\n   * row\n   * @param {Object} eventDetail event detail\n   * @private\n   */\n  Table.prototype._handleDataRowAdd = function (eventDetail) {\n    try {\n      this._executeTableBodyRowsAdd(eventDetail);\n    } catch (e) {\n      Logger.error(e);\n    } finally {\n      this._clearDataWaitingState();\n    }\n  };\n\n  /**\n   * Add all the rows contained in the event detail.\n   * @param {Object} eventDetail Event detail\n   * @private\n   */\n  Table.prototype._executeTableBodyRowsAdd = function (eventDetail) {\n    var eventDetailKeys = eventDetail[Table._CONST_KEYS];\n    if (eventDetailKeys && eventDetailKeys.size > 0) {\n      this._queueTask(\n        function () {\n          // This function will try to find the row index from the DOM, so it must\n          // be called right before we're ready to update the UI.  If we call it\n          // outside of this queued task, the DOM may have changed from other\n          // data operations, and the row index can be wrong.\n          var rows = this._getRowsFromEventDetailAdd(eventDetail);\n          if (rows.length === 0) {\n            if (this._requiresDomScrollerRefresh) {\n              this._registerDomScroller();\n            }\n            return undefined;\n          }\n          var layoutManager = this._getLayoutManager();\n          layoutManager.notifyTableUpdate(Table._UPDATE._ROWS_ADDED);\n\n          // see if we should batch add\n          // only batch if we are adding a block of contiguous rows\n          var isContiguous = true;\n          var renderRowPromiseArray = [];\n          var rowIdxArray = [];\n          var i;\n          var docFrag;\n          var docFragArray = [];\n          var docFragIndexArray = [];\n          var tableBody = this._getTableBody();\n\n          var rowsCount = rows.length;\n          for (i = 0; i < rowsCount; i++) {\n            if (i > 0 && rows[i - 1].rowIdx !== rows[i].rowIdx - 1) {\n              isContiguous = false;\n            }\n            rowIdxArray.push(rows[i].rowIdx);\n          }\n\n          if (isContiguous) {\n            docFrag = document.createDocumentFragment();\n            for (i = 0; i < rowsCount; i++) {\n              renderRowPromiseArray.push(this._renderRow(rows[i], docFrag, rows[0].rowIdx));\n            }\n            docFragArray.push(docFrag);\n            docFragIndexArray.push(rows[0].rowIdx);\n          } else {\n            for (i = 0; i < rowsCount; i++) {\n              var rowIndex = rows[i].rowIdx;\n              docFrag = document.createDocumentFragment();\n              renderRowPromiseArray.push(this._renderRow(rows[i], docFrag, rowIndex));\n              docFragArray.push(docFrag);\n              docFragIndexArray.push(rowIndex);\n            }\n          }\n          // row values may have changed so refresh the footer\n          return this._refreshTableFooter().then(\n            function () {\n              return Promise.all(renderRowPromiseArray).then(\n                function (addedTableBodyRows) {\n                  this._hideNoDataMessage();\n                  for (i = 0; i < docFragArray.length; i++) {\n                    this._handleRowAdds(tableBody, docFragArray[i], docFragIndexArray[i]);\n                    // table body row cache needs to be cleared after ever docFrag insertion\n                    this._clearCachedDomRowData();\n                  }\n\n                  // If table scrollTop is 0 and row is inserted to first position then update scrollPosition.rowKey\n                  if (\n                    this._scrollTop === 0 &&\n                    ((rows.length === 1 && rows[0].rowIdx === 0) || rowIdxArray.indexOf(0) !== -1)\n                  ) {\n                    var scrollPosition =\n                      this.options.scrollPosition == null ? {} : this.options.scrollPosition;\n                    // remove invalid scrollPosition.rowKey and it will be updated in syncScrollPosition\n                    delete scrollPosition.rowKey;\n                  }\n\n                  // for high watermark scrolling, we need to reset the domscroller in case there are more rows to fetch\n                  if (this._requiresDomScrollerRefresh) {\n                    this._registerDomScroller();\n                  }\n                  if (this._IsCustomElement()) {\n                    return this._animateVisibleRows(addedTableBodyRows, rowIdxArray, 'add').then(\n                      function () {\n                        // update active element if needed\n                        this._syncActiveElement();\n                        return this._afterRowsRendered(tableBody);\n                      }.bind(this)\n                    );\n                  }\n                  // update active element if needed\n                  this._syncActiveElement();\n                  return this._afterRowsRendered(tableBody);\n                }.bind(this)\n              );\n            }.bind(this),\n            function (reason) {\n              return Promise.reject(reason);\n            }\n          );\n        }.bind(this)\n      );\n    }\n  };\n\n  /**\n   * Return row info from add event detail\n   * @param {Object} eventDetail event detail\n   * @return {Array} Array of row info\n   * @private\n   */\n  Table.prototype._getRowsFromEventDetailAdd = function (eventDetail) {\n    var rowArray = [];\n    var dataprovider = this._getData();\n    var isLoadAll =\n      !this._isLoadMoreOnScroll() || DataCollectionUtils.isIterateAfterDoneNotAllowed(dataprovider);\n    var initialKeys = this._getLocalRowKeys();\n    var initialKeyLength = initialKeys.length;\n    // don't add rows if the component is empty and loadMoreOnScroll is set\n    if (!isLoadAll && initialKeyLength === 0) {\n      this._notifyAddOutOfViewport();\n      return rowArray;\n    }\n    var finalRowKeys = DataCollectionUtils.getAddEventKeysResult(initialKeys, eventDetail, isLoadAll);\n\n    var eventData = eventDetail[Table._CONST_DATA];\n    var eventMetadata = eventDetail[Table._CONST_METADATA];\n\n    var eventKeys = [];\n    eventDetail[Table._CONST_KEYS].forEach(function (key) {\n      eventKeys.push(key);\n    });\n\n    if (!(eventData instanceof Array)) {\n      eventData = [eventData];\n    }\n    var eventDataCount = eventData.length;\n\n    if (!(eventMetadata instanceof Array)) {\n      eventMetadata = [eventMetadata];\n    }\n    var offset = 0;\n    if (this._isPagingModelDataProvider()) {\n      offset = dataprovider.getStartItemIndex();\n    }\n\n    var metadataSource;\n    if (dataprovider instanceof oj.TableDataSourceAdapter) {\n      if (\n        oj.FlattenedTreeTableDataSource &&\n        dataprovider.tableDataSource instanceof oj.FlattenedTreeTableDataSource\n      ) {\n        metadataSource = dataprovider.tableDataSource;\n      } else if (\n        this._isPagingModelTableDataSource() &&\n        oj.FlattenedTreeTableDataSource &&\n        dataprovider.tableDataSource.dataSource instanceof oj.FlattenedTreeTableDataSource\n      ) {\n        metadataSource = dataprovider.tableDataSource.dataSource;\n      }\n    }\n\n    if (!isLoadAll && initialKeyLength + eventDataCount !== finalRowKeys.length) {\n      this._notifyAddOutOfViewport();\n    }\n\n    for (var i = 0; i < eventDataCount; i++) {\n      var eventKey = eventKeys[i];\n      var rowIdx = finalRowKeys.indexOf(eventKey);\n      // only add row if key is present in final set but not in initial set\n      if (rowIdx !== -1 && initialKeys.indexOf(eventKey) === -1) {\n        var metadata;\n        if (metadataSource && metadataSource._getMetadata) {\n          metadata = metadataSource._getMetadata(rowIdx);\n        } else {\n          metadata = eventMetadata[i];\n        }\n\n        var row = {\n          data: eventData[i],\n          metadata: metadata,\n          key: eventKey,\n          index: rowIdx + offset\n        };\n        rowArray.push({ row: row, rowIdx: rowIdx });\n      }\n    }\n    return rowArray;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._handleRowAdds = function (tableBody, docFrag, docFragStartIndex) {\n    var layoutManager = this._getLayoutManager();\n    layoutManager.handleAfterRowsProcessed(docFrag);\n\n    var tableBodyRowBefore = this._getTableBodyRow(docFragStartIndex);\n    if (tableBodyRowBefore != null) {\n      tableBody.insertBefore(docFrag, tableBodyRowBefore); // @HTMLUpdateOK\n    } else {\n      this._appendElementToTableBody(docFrag, tableBody);\n    }\n  };\n\n  /**\n   * Updates to Table's state to reflect that an add event containing rows outside of the current\n   * viewport has occurred.\n   * @private\n   */\n  Table.prototype._notifyAddOutOfViewport = function () {\n    if (this._noMoreData) {\n      this._animateOnFetch = true;\n      this._requiresDomScrollerRefresh = true;\n    }\n    this._noMoreData = false;\n  };\n\n  /**\n   * Callback handler for row change in the datasource. Refresh the changed\n   * row.\n   * @param {Object} eventDetail event detail\n   * @private\n   */\n  Table.prototype._handleDataRowChange = function (eventDetail) {\n    try {\n      this._executeTableBodyRowsChange(eventDetail);\n    } catch (e) {\n      Logger.error(e);\n    } finally {\n      this._clearDataWaitingState();\n    }\n  };\n\n  /**\n   * Change all the rows contained in the event detail.\n   * @param {Object} eventDetail Event detail\n   * @private\n   */\n  Table.prototype._executeTableBodyRowsChange = function (eventDetail) {\n    this._queueTask(\n      function () {\n        var i;\n        // update selection state based on row updates\n        this._updateSelectionStateFromEventDetailChange(eventDetail);\n\n        // This function will try to find the row index from the DOM, so it must\n        // be called right before we're ready to update the UI.  If we call it\n        // outside of this queued task, the DOM may have changed from other\n        // data operations, and the row index can be wrong.\n        var rows = this._getRowsFromEventDetailChange(eventDetail);\n        if (rows.length === 0) {\n          return undefined;\n        }\n        this._getLayoutManager().notifyTableUpdate(Table._UPDATE._ROW_REFRESH);\n\n        var rowsCount = rows.length;\n        var rowIdxArray = [];\n        var resetFocus = false;\n\n        var updatedRowsPromiseArray = [];\n        for (i = 0; i < rowsCount; i++) {\n          var row = rows[i];\n\n          // if existing (stale) row contains focus, reset focus to overall table element\n          var staleRow = this._getTableBodyRow(row.rowIdx);\n          if (\n            staleRow != null &&\n            staleRow !== document.activeElement &&\n            staleRow.contains(document.activeElement)\n          ) {\n            resetFocus = true;\n          }\n          // if existing (stale) row update its hidden item to updated item\n          if (staleRow) {\n            this._setTableBodyRowAttributes(rows[i].row, staleRow);\n          }\n\n          updatedRowsPromiseArray.push(\n            this._refreshTableBodyRow(row.rowIdx, row.row, null, null, null, true)\n          );\n          rowIdxArray.push(row.rowIdx);\n        }\n        // row values may have changed so refresh the footer\n        return this._refreshTableFooter().then(\n          function () {\n            return Promise.all(updatedRowsPromiseArray).then(\n              function (updatedTableBodyRows) {\n                if (resetFocus) {\n                  this._getTable().focus();\n                }\n                if (this._IsCustomElement()) {\n                  return this._animateVisibleRows(updatedTableBodyRows, rowIdxArray, 'update').then(\n                    function () {\n                      return this._finalizeBodyRowRendering(updatedTableBodyRows);\n                    }.bind(this)\n                  );\n                }\n                return this._finalizeBodyRowRendering(updatedTableBodyRows);\n              }.bind(this)\n            );\n          }.bind(this),\n          function (reason) {\n            return Promise.reject(reason);\n          }\n        );\n      }.bind(this)\n    );\n  };\n\n  /**\n   * Return row info from change event detail\n   * @param {Object} eventDetail event detail\n   * @return {Array} Array of row info\n   * @private\n   */\n  Table.prototype._getRowsFromEventDetailChange = function (eventDetail) {\n    var eventData = eventDetail[Table._CONST_DATA];\n    var eventMetadata = eventDetail[Table._CONST_METADATA];\n    var eventKeys = [];\n    eventDetail[Table._CONST_KEYS].forEach(function (key) {\n      eventKeys.push(key);\n    });\n    if (!(eventData instanceof Array)) {\n      eventData = [eventData];\n    }\n    if (!(eventMetadata instanceof Array)) {\n      eventMetadata = [eventMetadata];\n    }\n    var rowArray = [];\n    var eventDataCount = eventData.length;\n    for (var i = 0; i < eventDataCount; i++) {\n      var rowIdx = this._getRowIdxForRowKey(eventKeys[i]);\n      if (rowIdx !== undefined) {\n        var row = {\n          data: eventData[i],\n          key: eventKeys[i],\n          index: rowIdx,\n          metadata: eventMetadata[i]\n        };\n        rowArray.push({ row: row, rowIdx: rowIdx });\n      }\n    }\n    return rowArray;\n  };\n\n  /**\n   * Clear any cached DOM\n   * @private\n   */\n  Table.prototype._clearCachedDom = function () {\n    this._clearCachedDomRowData();\n    this._clearDomCache();\n  };\n\n  /**\n   * Clear any cached DOM rows\n   * @private\n   */\n  Table.prototype._clearCachedDomRowData = function () {\n    this._cachedDomTableBodyRows = null;\n    this._cachedDomTableBodyStickyRows = null;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._clearCachedStyling = function () {\n    this._isGutterStartColumnEnabledCache = null;\n    this._isGutterEndColumnEnabledCache = null;\n  };\n\n  /**\n   * Add a default context menu container to the table container if there is\n   * no custom context menu.\n   * @return {Element} ul DOM element\n   * @private\n   */\n  Table.prototype._createContextMenuContainer = function () {\n    var menuContainer = this._GetContextMenu();\n    var enableNonContiguousSelectionMenu =\n      !this._isStickyLayoutEnabled() && this._isTouchDevice()\n        ? this._getRowSelectionMode() === Table._OPTION_SELECTION_MODES._MULTIPLE\n        : false;\n\n    if (\n      !menuContainer &&\n      (this._isTableSortable() || enableNonContiguousSelectionMenu || this._isTableColumnsResizable())\n    ) {\n      if (this._IsCustomElement()) {\n        menuContainer = document.createElement('oj-menu');\n        menuContainer.setAttribute(Table._DATA_OJ_BINDING_PROVIDER, 'none'); // @HTMLUpdateOK\n      } else {\n        menuContainer = document.createElement(Table.DOM_ELEMENT._UL); // @HTMLUpdateOK\n        $(menuContainer).ojMenu();\n      }\n      menuContainer.style[Table.CSS_PROP._DISPLAY] = Table.CSS_VAL._NONE;\n      menuContainer.setAttribute(Table.DOM_ATTR._ID, this._getTableUID() + '_contextmenu'); // @HTMLUpdateOK\n      this._getTableContainer().appendChild(menuContainer); // @HTMLUpdateOK\n      this.option('contextMenu', '#' + menuContainer.getAttribute(Table.DOM_ATTR._ID), {\n        _context: {\n          internalSet: true\n        }\n      });\n      // fulfill _GetDefaultContextMenu contract\n      this._defaultContextMenu = menuContainer;\n    }\n    return menuContainer;\n  };\n\n  /**\n   * Populate default context menu options and add listeners\n   * for context menu before show and select.\n   * @param {Element} contextMenuNode context menu DOM element\n   * @param {function(Object)} handleContextMenuSelect function called for menu select\n   * @return {Element} ul DOM element\n   * @private\n   */\n  Table.prototype._populateContextMenuItems = function (contextMenuNode, handleContextMenuSelect) {\n    var enableNonContiguousSelectionMenu = this._isTouchDevice()\n      ? this._getRowSelectionMode() === Table._OPTION_SELECTION_MODES._MULTIPLE\n      : false;\n    if (!this._menuContainer) {\n      if (this._GetDefaultContextMenu()) {\n        const isRedwood = ThemeUtils.parseJSONFromFontFamily('oj-theme-json').behavior === 'redwood';\n        if (!isRedwood) {\n          if (this._isTableSortable()) {\n            let sortMenu = this._createContextMenuItem('sort', this._IsCustomElement());\n            contextMenuNode.appendChild(sortMenu); // @HTMLUpdateOK\n          }\n          if (enableNonContiguousSelectionMenu) {\n            let nonContiguousSelectionMenu = this._createContextMenuItem(\n              'enableNonContiguousSelection',\n              this._IsCustomElement()\n            );\n            contextMenuNode.appendChild(nonContiguousSelectionMenu); // @HTMLUpdateOK\n          }\n          if (this._isTableColumnsResizable()) {\n            let resizeMenu = this._createContextMenuItem('resize', this._IsCustomElement());\n            contextMenuNode.appendChild(resizeMenu); // @HTMLUpdateOK\n          }\n        } else {\n          if (this._isTableColumnsResizable()) {\n            let resizeMenu = this._createContextMenuItem('resize', this._IsCustomElement());\n            contextMenuNode.appendChild(resizeMenu); // @HTMLUpdateOK\n            if (this._isTableSortable()) {\n              let divider = document.createElement(this._IsCustomElement() ? 'oj-option' : 'li');\n              contextMenuNode.appendChild(divider); // @HTMLUpdateOK\n            }\n          }\n          if (this._isTableSortable()) {\n            let sortAscMenu = this._createContextMenuItem('sortAsc', this._IsCustomElement());\n            contextMenuNode.appendChild(sortAscMenu); // @HTMLUpdateOK\n            let sortDscMenu = this._createContextMenuItem('sortDsc', this._IsCustomElement());\n            contextMenuNode.appendChild(sortDscMenu); // @HTMLUpdateOK\n          }\n        }\n        this._menuContainer = contextMenuNode;\n        if (this._IsCustomElement()) {\n          contextMenuNode.refresh();\n          contextMenuNode.addEventListener('ojAction', handleContextMenuSelect);\n        } else {\n          $(contextMenuNode).ojMenu('refresh');\n          $(contextMenuNode).on('ojselect', handleContextMenuSelect);\n        }\n      } else {\n        var listItems = contextMenuNode.querySelectorAll('[data-oj-command]');\n        if (listItems.length > 0) {\n          var command;\n          var i;\n          var newItem;\n          for (i = 0; i < listItems.length; i++) {\n            if (\n              listItems[i].tagName === 'OJ-OPTION' ||\n              listItems[i].getElementsByTagName(Table.DOM_ELEMENT._A).length === 0\n            ) {\n              command = listItems[i].getAttribute(Table._DATA_OJ_COMMAND).split('-');\n              newItem = this._createContextMenuItem(\n                command[command.length - 1],\n                this._IsCustomElement()\n              );\n              if (listItems[i].tagName === 'OJ-OPTION') {\n                listItems[i].innerHTML = newItem.innerHTML; // @HTMLUpdateOK\n              } else {\n                $(listItems[i]).replaceWith(newItem); // @HTMLUpdateOK\n              }\n            }\n          }\n          this._menuContainer = contextMenuNode;\n          if ($(contextMenuNode).data('oj-ojMenu')) {\n            if (this._IsCustomElement()) {\n              contextMenuNode.refresh();\n            } else {\n              $(contextMenuNode).ojMenu('refresh');\n            }\n          }\n\n          if (this._IsCustomElement()) {\n            contextMenuNode.addEventListener('ojAction', handleContextMenuSelect);\n          } else {\n            $(contextMenuNode).on('ojselect', handleContextMenuSelect);\n          }\n        }\n      }\n    }\n    return contextMenuNode;\n  };\n\n  /**\n   * Builds a menu for a command, takes care of submenus where appropriate\n   * @param {string} command the string to look up command value for as well as translation\n   * @param {boolean=} useOjOption whether oj-option tag should be used, which is the case for custom element (except for default menu)\n   * @return {Element} li DOM element\n   * @private\n   */\n  Table.prototype._createContextMenuItem = function (command, useOjOption) {\n    if (command === 'sort') {\n      var listElement;\n      var sortMenuListItem = this._createContextMenuListItem(command, useOjOption);\n      if (this._IsCustomElement()) {\n        listElement = document.createElement('oj-menu');\n      } else {\n        listElement = document.createElement(Table.DOM_ELEMENT._UL); // @HTMLUpdateOK\n      }\n      sortMenuListItem.appendChild(listElement); // @HTMLUpdateOK\n      listElement.appendChild(this._createContextMenuListItem('sortAsc', useOjOption)); // @HTMLUpdateOK\n      listElement.appendChild(this._createContextMenuListItem('sortDsc', useOjOption)); // @HTMLUpdateOK\n      return sortMenuListItem;\n    } else if (command === 'sortAsc') {\n      return this._createContextMenuListItem(command, useOjOption);\n    } else if (command === 'sortDsc') {\n      return this._createContextMenuListItem(command, useOjOption);\n    } else if (command === 'enableNonContiguousSelection') {\n      return this._createContextMenuListItem(command, useOjOption);\n    } else if (command === 'disableNonContiguousSelection') {\n      return this._createContextMenuListItem(command, useOjOption);\n    } else if (command === 'resize') {\n      // create the resize popup too\n      const isRedwood = ThemeUtils.parseJSONFromFontFamily('oj-theme-json').behavior === 'redwood';\n      if (!isRedwood) {\n        this._createContextMenuResizePopup(0);\n      } else {\n        this._createContextMenuResizeDialog(0);\n      }\n      return this._createContextMenuListItem(command, useOjOption);\n    }\n    return null;\n  };\n\n  /**\n   * Builds a context menu list item from a command\n   * @param {string} command the string to look up command value for as well as translation\n   * @param {boolean=} useOjOption whether oj-option tag should be used, which is the case for custom element (except for default menu)\n   * @return {Element} DOM element for menu item\n   * @private\n   */\n  Table.prototype._createContextMenuListItem = function (command, useOjOption) {\n    var contextMenuListItem = document.createElement(useOjOption ? 'oj-option' : 'li');\n    contextMenuListItem.setAttribute(Table._DATA_OJ_COMMAND, 'oj-table-' + command); // @HTMLUpdateOK\n    contextMenuListItem.appendChild(this._createContextMenuLabel(command, useOjOption)); // @HTMLUpdateOK\n\n    return contextMenuListItem;\n  };\n\n  /**\n   * Builds a context menu label by looking up command translation\n   * @param {string} command the string to look up translation for\n   * @param {boolean=} useOjOption whether oj-option tag should be used, which is the case for custom element (except for default menu)\n   * @return {Node} a DOM node\n   * @private\n   */\n  Table.prototype._createContextMenuLabel = function (command, useOjOption) {\n    var commandString = null;\n    if (command === 'sort') {\n      commandString = this.getTranslatedString('labelSort');\n    } else if (command === 'sortAsc') {\n      commandString = this.getTranslatedString('labelSortAsc');\n    } else if (command === 'sortDsc') {\n      commandString = this.getTranslatedString('labelSortDsc');\n    } else if (command === 'enableNonContiguousSelection') {\n      commandString = this.getTranslatedString('labelEnableNonContiguousSelection');\n    } else if (command === 'disableNonContiguousSelection') {\n      commandString = this.getTranslatedString('labelDisableNonContiguousSelection');\n    } else if (command === 'resize') {\n      commandString = this.getTranslatedString('labelResizeColumn');\n    }\n\n    var textNode = document.createTextNode(commandString);\n\n    // for custom elements, no <a> tag is required\n    if (useOjOption) {\n      return textNode;\n    }\n\n    var contextMenuLabel = document.createElement(Table.DOM_ELEMENT._A); // @HTMLUpdateOK\n    contextMenuLabel.setAttribute(Table.DOM_ATTR._HREF, '#'); // @HTMLUpdateOK\n    contextMenuLabel.appendChild(textNode); // @HTMLUpdateOK\n\n    return contextMenuLabel;\n  };\n\n  /**\n   * Resize popup for alta theme\n   * Build the html for the resize popup and add it to the root node\n   * @param {number} initialSize the initial size to put in the spinner\n   * @private\n   */\n  Table.prototype._createContextMenuResizePopup = function (initialSize) {\n    // eslint-disable-next-line no-param-reassign\n    initialSize = Math.round(initialSize);\n    var tableContainer = this._getTableContainer();\n    var popup = this._getContextMenuResizePopup();\n    var tableId = this._getTableUID();\n    var popupTextContent = this.getTranslatedString('labelResizePopupSpinner');\n    var spinner;\n    var cancelActionHandler;\n    var popupHeader;\n    var popupBody;\n    var popupFooter;\n    var popupCancelButton;\n    var popupOKButton;\n    var popupTitle;\n    var position;\n\n    function setupPopup() {\n      popup.setAttribute('id', tableId + '_resize_popup');\n      popup.setAttribute(Table._DATA_OJ_BINDING_PROVIDER, 'none'); // @HTMLUpdateOK\n      tableContainer.appendChild(popup); // @HTMLUpdateOK\n      popupHeader = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n      popupBody = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n      popupFooter = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n      popupFooter.classList.add(Table.CSS_CLASSES._TEXT_ALIGN_END);\n      popup.appendChild(popupHeader); // @HTMLUpdateOK\n      popup.appendChild(popupBody); // @HTMLUpdateOK\n      popup.appendChild(popupFooter); // @HTMLUpdateOK\n\n      // create the popup content\n      popupTitle = document.createElement('h6');\n      popupTitle.textContent = popupTextContent;\n      popupHeader.appendChild(popupTitle); // @HTMLUpdateOK\n    }\n\n    if (this._IsCustomElement()) {\n      // create the base popup\n      if (popup == null) {\n        popup = document.createElement('oj-popup');\n        setupPopup();\n\n        spinner = document.createElement('oj-input-number');\n        spinner.setAttribute('id', tableId + '_resize_popup_spinner');\n\n        popupCancelButton = document.createElement('oj-button');\n        popupCancelButton.setAttribute('id', tableId + '_resize_popup_popupcancel');\n        popupCancelButton.style.margin = '5px';\n        popupCancelButton.textContent = this.getTranslatedString('labelResizePopupCancel');\n\n        popupOKButton = document.createElement('oj-button');\n        popupOKButton.setAttribute('id', tableId + '_resize_popup_popupsubmit');\n        popupOKButton.style.margin = '5px';\n        popupOKButton.textContent = this.getTranslatedString('labelResizePopupSubmit');\n\n        popupBody.appendChild(spinner); // @HTMLUpdateOK\n        popupFooter.appendChild(popupOKButton); // @HTMLUpdateOK\n        popupFooter.appendChild(popupCancelButton); // @HTMLUpdateOK\n\n        cancelActionHandler = function () {\n          spinner.value = 0;\n          popup.close();\n        };\n\n        popupCancelButton.addEventListener('click', cancelActionHandler);\n        popupOKButton.addEventListener('click', this._handleContextMenuResizePopup.bind(this));\n\n        spinner.min = 10;\n        spinner.step = 1;\n        spinner.value = initialSize;\n        spinner.displayOptions = {\n          messages: ['notewindow']\n        };\n        spinner.userAssistanceDensity = 'compact';\n        spinner.validators = [\n          new RegExpValidator({\n            pattern: Table._VALIDATOR_PATTERN,\n            messageDetail: this.getTranslatedString('msgColumnResizeWidthValidation')\n          })\n        ];\n\n        position = {\n          my: Table._POSITION._START_TOP,\n          at: Table._POSITION._START_BOTTOM,\n          collision: 'flipfit'\n        };\n\n        popup.setAttribute('position', JSON.stringify(position));\n        popup.setAttribute('modality', 'modal');\n        this._cacheDomElement(tableId + '_resize_popup', popup);\n      } else {\n        spinner = document.getElementById(tableId + '_resize_popup_spinner');\n        spinner.value = initialSize;\n      }\n    } else if (popup == null) {\n      // create the base popup\n      popup = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n      setupPopup();\n\n      spinner = document.createElement(Table.DOM_ELEMENT._INPUT); // @HTMLUpdateOK\n      spinner.setAttribute('id', tableId + '_resize_popup_spinner');\n      popupCancelButton = document.createElement(Table.DOM_ELEMENT._BUTTON); // @HTMLUpdateOK\n      popupCancelButton.setAttribute('id', tableId + '_resize_popup_popupcancel');\n      popupCancelButton.style.margin = '5px';\n      popupOKButton = document.createElement(Table.DOM_ELEMENT._BUTTON); // @HTMLUpdateOK\n      popupOKButton.setAttribute('id', tableId + '_resize_popup_popupsubmit');\n      popupOKButton.style.margin = '5px';\n\n      popupBody.appendChild(spinner); // @HTMLUpdateOK\n      popupFooter.appendChild(popupOKButton); // @HTMLUpdateOK\n      popupFooter.appendChild(popupCancelButton); // @HTMLUpdateOK\n\n      $(popupOKButton).ojButton({\n        component: 'ojButton',\n        label: this.getTranslatedString('labelResizePopupSubmit')\n      });\n      $(popupCancelButton).ojButton({\n        component: 'ojButton',\n        label: this.getTranslatedString('labelResizePopupCancel')\n      });\n      cancelActionHandler = function () {\n        $(spinner).ojInputNumber({ value: 0 });\n        $(popup).ojPopup('close');\n      };\n      $(popupOKButton).on('click', this._handleContextMenuResizePopup.bind(this));\n      $(popupCancelButton).on('click', cancelActionHandler);\n      $(spinner).ojInputNumber({\n        component: 'ojInputNumber',\n        min: 10,\n        step: 1,\n        value: initialSize,\n        displayOptions: {\n          messages: ['notewindow']\n        },\n        userAssistanceDensity: 'compact',\n        validators: [\n          new RegExpValidator({\n            pattern: Table._VALIDATOR_PATTERN,\n            messageDetail: this.getTranslatedString('msgColumnResizeWidthValidation')\n          })\n        ]\n      });\n      $(popup).ojPopup({\n        modality: 'modal',\n        position: {\n          my: Table._POSITION._START_TOP,\n          at: Table._POSITION._START_BOTTOM,\n          collision: 'flipfit'\n        }\n      });\n      this._cacheDomElement(tableId + '_resize_popup', popup);\n    } else {\n      spinner = document.getElementById(tableId + '_resize_popup_spinner');\n      $(spinner).ojInputNumber('option', 'value', initialSize);\n    }\n    return popup;\n  };\n\n  /**\n   * Build the html for the resize dialog and add it to the root node\n   * @param {number} initialSize the initial size to put in the spinner\n   * @private\n   */\n  Table.prototype._createContextMenuResizeDialog = function (initialSize) {\n    // eslint-disable-next-line no-param-reassign\n    initialSize = Math.round(initialSize);\n    let tableContainer = this._getTableContainer();\n    let dialog = this._getContextMenuResizeDialog();\n    let tableId = this._getTableUID();\n\n    if (this._IsCustomElement()) {\n      // create the base dialog\n      if (dialog == null) {\n        dialog = document.createElement('oj-dialog');\n        dialog.setAttribute('id', tableId + '_resize_dialog');\n        dialog.setAttribute(Table._DATA_OJ_BINDING_PROVIDER, 'none'); // @HTMLUpdateOK\n        dialog.setAttribute('dialog-title', this.getTranslatedString('labelResizeColumnDialog'));\n        tableContainer.appendChild(dialog); // @HTMLUpdateOK\n        let dialogBody = document.createElement('div');\n        dialogBody.setAttribute('slot', 'body');\n        let columnWidthInput = document.createElement('oj-input-number');\n        columnWidthInput.setAttribute('id', tableId + '_resize_column_width_input');\n        columnWidthInput.labelHint = this.getTranslatedString('labelColumnWidth');\n        columnWidthInput.min = 10;\n        columnWidthInput.step = 1;\n        columnWidthInput.value = initialSize;\n        columnWidthInput.displayOptions = {\n          messages: ['notewindow']\n        };\n        columnWidthInput.userAssistanceDensity = 'compact';\n        columnWidthInput.validators = [\n          new RegExpValidator({\n            pattern: Table._VALIDATOR_PATTERN,\n            messageDetail: this.getTranslatedString('msgColumnResizeWidthValidation')\n          })\n        ];\n        dialogBody.appendChild(columnWidthInput);\n\n        let dialogFooter = document.createElement('div');\n        dialogFooter.setAttribute('slot', 'footer');\n\n        let dialogCancelButton = document.createElement('oj-button');\n        dialogCancelButton.setAttribute('id', tableId + '_resize_dialog_dialogcancel');\n        dialogCancelButton.textContent = this.getTranslatedString('labelResizePopupCancel');\n\n        let dialogApplyButton = document.createElement('oj-button');\n        dialogApplyButton.setAttribute('id', tableId + '_resize_dialog_dialogapply');\n        dialogApplyButton.chroming = 'callToAction';\n        dialogApplyButton.textContent = this.getTranslatedString('labelResizeDialogApply');\n\n        dialogFooter.appendChild(dialogCancelButton); // @HTMLUpdateOK\n        dialogFooter.appendChild(dialogApplyButton); // @HTMLUpdateOK\n\n        if (Config.getDeviceRenderMode() === 'phone') {\n          dialog.classList.add(Table.CSS_CLASSES._TABLE_RESIZE_DIALOG_MOBILE_CLASS);\n          dialogApplyButton.classList.add(\n            Table.CSS_CLASSES._BUTTON_SMALL_CLASS,\n            Table.CSS_CLASSES._SMALL_6_CLASS,\n            Table.CSS_CLASSES._SMALL_HOR_MARGIN_CLASS\n          );\n          dialogCancelButton.classList.add(\n            Table.CSS_CLASSES._BUTTON_SMALL_CLASS,\n            Table.CSS_CLASSES._SMALL_6_CLASS,\n            Table.CSS_CLASSES._SMALL_HOR_MARGIN_CLASS\n          );\n          dialogFooter.classList.add('oj-sm-justify-content-center');\n        }\n\n        dialog.appendChild(dialogBody); // @HTMLUpdateOK\n        dialog.appendChild(dialogFooter); // @HTMLUpdateOK\n\n        let cancelActionHandler = function () {\n          columnWidthInput.value = 0;\n          dialog.close();\n        };\n\n        dialogCancelButton.addEventListener('click', cancelActionHandler);\n        dialogApplyButton.addEventListener('click', this._handleContextMenuResizePopup.bind(this));\n\n        dialog.setAttribute('modality', 'modal');\n        this._cacheDomElement(tableId + '_resize_dialog', dialog);\n      } else {\n        let columnWidthInput = document.getElementById(tableId + '_resize_column_width_input');\n        columnWidthInput.value = initialSize;\n      }\n    } else if (dialog == null) {\n      // create the base popup\n      dialog = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n      dialog.setAttribute('id', tableId + '_resize_dialog');\n      dialog.setAttribute(Table._DATA_OJ_BINDING_PROVIDER, 'none'); // @HTMLUpdateOK\n      if (Config.getDeviceRenderMode() === 'phone') {\n        dialog.classList.add(Table.CSS_CLASSES._TABLE_RESIZE_DIALOG_MOBILE_CLASS);\n      }\n      tableContainer.appendChild(dialog); // @HTMLUpdateOK\n      let dialogBody = document.createElement('div');\n      dialogBody.setAttribute('slot', 'body');\n      dialog.appendChild(dialogBody); // @HTMLUpdateOK\n\n      let columnWidthInput = document.createElement(Table.DOM_ELEMENT._INPUT); // @HTMLUpdateOK\n      columnWidthInput.setAttribute('id', tableId + '_resize_column_width_input');\n      let dialogCancelButton = document.createElement(Table.DOM_ELEMENT._BUTTON); // @HTMLUpdateOK\n      dialogCancelButton.setAttribute('id', tableId + '_resize_dialog_dialogcancel');\n      let dialogApplyButton = document.createElement(Table.DOM_ELEMENT._BUTTON); // @HTMLUpdateOK\n      dialogApplyButton.setAttribute('id', tableId + '_resize_dialog_dialogapply');\n\n      let dialogFooter = document.createElement('div');\n      dialogFooter.setAttribute('slot', 'footer');\n      dialog.appendChild(dialogFooter); // @HTMLUpdateOK\n\n      dialogBody.appendChild(columnWidthInput); // @HTMLUpdateOK\n      dialogFooter.appendChild(dialogApplyButton); // @HTMLUpdateOK\n      dialogFooter.appendChild(dialogCancelButton); // @HTMLUpdateOK\n\n      $(dialogApplyButton).ojButton({\n        component: 'ojButton',\n        chroming: 'callToAction',\n        label: this.getTranslatedString('labelResizeDialogApply')\n      });\n      $(dialogCancelButton).ojButton({\n        component: 'ojButton',\n        label: this.getTranslatedString('labelResizePopupCancel')\n      });\n      let cancelActionHandler = function () {\n        $(columnWidthInput).ojInputNumber({ value: 0 });\n        $(dialog).ojDialog('close');\n      };\n      $(dialogApplyButton).on('click', this._handleContextMenuResizePopup.bind(this));\n      $(dialogCancelButton).on('click', cancelActionHandler);\n      $(columnWidthInput).ojInputNumber({\n        component: 'ojInputNumber',\n        labelHint: this.getTranslatedString('labelColumnWidth'),\n        min: 10,\n        step: 1,\n        value: initialSize,\n        displayOptions: {\n          messages: ['notewindow']\n        },\n        userAssistanceDensity: 'compact',\n        validators: [\n          new RegExpValidator({\n            pattern: Table._VALIDATOR_PATTERN,\n            messageDetail: this.getTranslatedString('msgColumnResizeWidthValidation')\n          })\n        ]\n      });\n      $(dialog).ojDialog({\n        dialogTitle: this.getTranslatedString('labelResizeColumnDialog'),\n        modality: 'modal'\n      });\n      if (Config.getDeviceRenderMode() === 'phone') {\n        dialog.classList.add(Table.CSS_CLASSES._TABLE_RESIZE_DIALOG_MOBILE_CLASS);\n        dialogApplyButton.classList.add(\n          Table.CSS_CLASSES._BUTTON_SMALL_CLASS,\n          Table.CSS_CLASSES._SMALL_6_CLASS,\n          Table.CSS_CLASSES._SMALL_HOR_MARGIN_CLASS\n        );\n        dialogCancelButton.classList.add(\n          Table.CSS_CLASSES._BUTTON_SMALL_CLASS,\n          Table.CSS_CLASSES._SMALL_6_CLASS,\n          Table.CSS_CLASSES._SMALL_HOR_MARGIN_CLASS\n        );\n        dialogFooter.classList.add('oj-sm-justify-content-center');\n      }\n      this._cacheDomElement(tableId + '_resize_dialog', dialog);\n    } else {\n      let columnWidthInput = document.getElementById(tableId + '_resize_column_width_input');\n      $(columnWidthInput).ojInputNumber('option', 'value', initialSize);\n    }\n    return dialog;\n  };\n\n  /**\n   * Create the initial empty table\n   * @param {boolean} isTableHeaderless is table headerless\n   * @param {boolean} isTableFooterless is table footerless\n   * @return {Element} table DOM element\n   * @private\n   */\n  Table.prototype._createInitialTable = function (isTableHeaderless, isTableFooterless) {\n    var table = this._getTable();\n    this._createTableContainer();\n    if (this._isStickyLayoutEnabled()) {\n      this._createTableScroller();\n      this._createTableColGroup();\n    }\n\n    if (!isTableHeaderless) {\n      this._createTableHeader();\n    }\n    this._createTableBody();\n    if (!isTableFooterless) {\n      this._createTableFooter();\n    }\n    if (!this._isStickyLayoutEnabled()) {\n      this._createTableBodyLegacyWidthBuffer();\n      this._createTableLegacySizer();\n    }\n    this._createTableStatusMessage();\n    this._createTableStatusAccNotification();\n    this._createContextInfo();\n    this._createStateInfo();\n    this._createRowStateInfo();\n    this._createTableWidthContainer();\n\n    return table;\n  };\n\n  /**\n   * Create an empty tbody element with appropriate styling\n   * @return {Element} tbody DOM element\n   * @private\n   */\n  Table.prototype._createTableBody = function () {\n    var table = this._getTable();\n    var tableBody = document.createElement(Table.DOM_ELEMENT._TBODY); // @HTMLUpdateOK\n    tableBody.style[Table.CSS_PROP._VISIBILITY] = Table.CSS_VAL._HIDDEN;\n    table.appendChild(tableBody); // @HTMLUpdateOK\n    this._cacheDomElement(Table.CSS_CLASSES._TABLE_BODY_CLASS, tableBody);\n\n    return tableBody;\n  };\n\n  /**\n   * Create an empty row for scroll buffering in the table body\n   * @private\n   */\n  Table.prototype._createTableBodyScrollBuffer = function () {\n    var bufferRow = this._getTableBodyScrollBuffer();\n    if (bufferRow == null) {\n      bufferRow = this._createTableBodyRow();\n      bufferRow.classList.add(Table.CSS_CLASSES._TABLE_BUFFER_ROW_CLASS);\n      this._getTableBody().appendChild(bufferRow);\n      this._clearDomCache(Table.CSS_CLASSES._TABLE_BUFFER_ROW_CLASS);\n    }\n    return bufferRow;\n  };\n\n  /**\n   * Create an empty row for legacy layout width buffering in the table body\n   * @private\n   */\n  Table.prototype._createTableBodyLegacyWidthBuffer = function () {\n    var bufferRow = this._createTableBodyRow();\n    bufferRow.classList.add(Table.CSS_CLASSES._TABLE_LEGACY_WIDTH_BUFFER_ROW_CLASS);\n    this._getTableBody().appendChild(bufferRow);\n    return bufferRow;\n  };\n\n  /**\n   * Create an empty div for legacy sizing\n   * @private\n   */\n  Table.prototype._createTableLegacySizer = function () {\n    var tableSizer = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n    tableSizer.classList.add(Table.CSS_CLASSES._TABLE_LEGACY_SIZER_CLASS);\n    var tableContainer = this._getTableContainer();\n    tableContainer.appendChild(tableSizer); // @HTMLUpdateOK\n    this._cacheDomElement(Table.CSS_CLASSES._TABLE_LEGACY_SIZER_CLASS, tableSizer);\n\n    return tableSizer;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._appendElementToTableBody = function (element, tableBody) {\n    var scrollBuffer = this._getTableBodyScrollBuffer();\n    if (scrollBuffer != null) {\n      tableBody.insertBefore(element, scrollBuffer); // @HTMLUpdateOK\n    } else {\n      tableBody.appendChild(element); // @HTMLUpdateOK\n    }\n  };\n\n  /**\n   * Create an empty td element with appropriate styling\n   * @param {number} rowIdx  row index\n   * @param {number} columnIdx  column index\n   * @return {Element} td DOM element\n   * @private\n   */\n  Table.prototype._createTableBodyCell = function () {\n    return document.createElement(Table.DOM_ELEMENT._TD); // @HTMLUpdateOK\n  };\n\n  /**\n   * Create a selector for multiple row selection\n   * @param {Object} rowKey  row key\n   * @param {Element} tableBodyRow  tr DOM element\n   * @return {Element} td DOM element\n   * @private\n   */\n  Table.prototype._createTableBodyDefaultSelector = function (rowKey, tableBodyRow) {\n    var selectorCell = null;\n\n    selectorCell = document.createElement(Table.DOM_ELEMENT._TD); // @HTMLUpdateOK\n    selectorCell.classList.add(Table.CSS_CLASSES._TABLE_SELECTOR_CELL_CLASS);\n    if (this._isStickyLayoutEnabled()) {\n      selectorCell.classList.add(Table.CSS_CLASSES._TABLE_FROZEN_START);\n    }\n    if (this._isVerticalGridEnabled()) {\n      selectorCell.classList.add(Table.CSS_CLASSES._TABLE_VGRID_LINES_CLASS);\n    }\n    selectorCell.setAttribute(Table.DOM_ATTR._ID, this._getTableUID() + ':select:' + rowKey); // @HTMLUpdateOK\n\n    var selector = document.createElement('oj-selector');\n    selector.id = this._getTableUID() + '_table_selector_' + rowKey;\n    let rowSelected = this.options.selected.row;\n    if (rowSelected.has(rowKey)) {\n      selector.selectedKeys = new ojkeyset.KeySetImpl([rowKey]);\n    } else {\n      selector.selectedKeys = new ojkeyset.KeySetImpl();\n    }\n\n    selector.setAttribute(Table._DATA_OJ_BINDING_PROVIDER, 'none'); // @HTMLUpdateOK\n    selector.classList.add(Table.CSS_CLASSES._TABLE_DATA_ROW_SELECTOR_CLASS);\n    selector.setAttribute('selection-mode', 'multiple');\n    selector.rowKey = rowKey;\n    var selectorAccString;\n    if (DataCollectionUtils.isIos()) {\n      selectorAccString = this.getTranslatedString(Table._BUNDLE_KEY._LABEL_SELECT_ROW);\n      selector.setAttribute(Table.DOM_ATTR._ARIA_LABEL, selectorAccString); // @HTMLUpdateOK\n    } else {\n      selectorAccString = this._getAccSelectorString(tableBodyRow);\n      selector.setAttribute(Table.DOM_ATTR._ARIA_LABELLEDBY, selectorAccString); // @HTMLUpdateOK\n    }\n    selector.addEventListener('selectedKeysChanged', this._selectedKeysChangedListener.bind(this));\n    selectorCell.appendChild(selector);\n\n    tableBodyRow.insertBefore(selectorCell, tableBodyRow.firstChild); // @HTMLUpdateOK\n\n    return selectorCell;\n  };\n\n  /**\n   * Create a th element for default selector\n   * @return {Element} th DOM element\n   * @private\n   */\n  Table.prototype._createTableHeaderSelectorColumn = function () {\n    var headerColumn = document.createElement(Table.DOM_ELEMENT._TH); // @HTMLUpdateOK\n    headerColumn.classList.add(Table.CSS_CLASSES._COLUMN_HEADER_SELECTOR_CELL_CLASS);\n    if (this._isStickyLayoutEnabled()) {\n      headerColumn.classList.add(Table.CSS_CLASSES._TABLE_FROZEN_START);\n    }\n    if (this._isVerticalGridEnabled()) {\n      headerColumn.classList.add(Table.CSS_CLASSES._TABLE_VGRID_LINES_CLASS);\n    }\n    headerColumn.setAttribute(Table.DOM_ATTR._ID, this._getTableUID() + ':selectAll'); // @HTMLUpdateOK\n\n    if (this._isSelectAllControlVisible()) {\n      var selector = document.createElement('oj-selector');\n      selector.selectedKeys = this.options.selected.row;\n      selector.setAttribute(Table._DATA_OJ_BINDING_PROVIDER, 'none'); // @HTMLUpdateOK\n      selector.classList.add(Table.CSS_CLASSES._TABLE_HEADER_SELECTOR_CLASS);\n      selector.setAttribute('selection-mode', 'all');\n      // prettier-ignore\n      selector.setAttribute( // @HTMLUpdateOK\n        Table.DOM_ATTR._ARIA_LABEL,\n        this.getTranslatedString(Table._BUNDLE_KEY._LABEL_SELECT_ALL_ROWS)\n      );\n      selector.addEventListener('selectedKeysChanged', this._selectedKeysChangedListener.bind(this));\n      headerColumn.appendChild(selector);\n    }\n\n    return headerColumn;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._createTableFooterSelectorCell = function () {\n    var footerCell = this._createTableFooterCell();\n    footerCell.classList.add(Table.CSS_CLASSES._TABLE_FOOTER_SELECTOR_CELL_CLASS);\n    if (this._isStickyLayoutEnabled()) {\n      footerCell.classList.add(Table.CSS_CLASSES._TABLE_FROZEN_START);\n    }\n    if (this._isVerticalGridEnabled()) {\n      footerCell.classList.add(Table.CSS_CLASSES._TABLE_VGRID_LINES_CLASS);\n    }\n    footerCell.setAttribute(Table.DOM_ATTR._ID, this._getTableUID() + ':footerSelector'); // @HTMLUpdateOK\n    return footerCell;\n  };\n\n  /**\n   * Create the message td element with appropriate styling and message\n   * @param {Element} tableBodyMessageRow tr DOM element\n   * @param {number} columnCount  number of visible columns\n   * @param {string} message message\n   * @return {Element} td DOM element\n   * @private\n   */\n  Table.prototype._createTableBodyMessageCell = function (tableBodyMessageRow, columnCount, message) {\n    var messageCell = document.createElement(Table.DOM_ELEMENT._TD); // @HTMLUpdateOK\n    if (this._isGutterStartColumnEnabled()) {\n      // eslint-disable-next-line no-param-reassign\n      columnCount += 1;\n    }\n    if (this._isGutterEndColumnEnabled()) {\n      // eslint-disable-next-line no-param-reassign\n      columnCount += 1;\n    }\n    if (this._isDefaultSelectorEnabled()) {\n      // eslint-disable-next-line no-param-reassign\n      columnCount += 1;\n    }\n    messageCell.setAttribute(Table.DOM_ATTR._COLSPAN, columnCount); // @HTMLUpdateOK\n    messageCell.classList.add(Table.CSS_CLASSES._TABLE_BODY_MESSAGE_CLASS);\n    messageCell.appendChild(document.createTextNode(message)); // @HTMLUpdateOK\n    tableBodyMessageRow.appendChild(messageCell); // @HTMLUpdateOK\n    return messageCell;\n  };\n\n  /**\n   * Create the message row with appropriate styling\n   * @param {number} columnCount  number of visible columns\n   * @param {string} message message\n   * @return {Element} row DOM element\n   * @private\n   */\n  Table.prototype._createTableBodyMessageRow = function (columnCount, message) {\n    var tableBody = this._getTableBody();\n    var tableBodyMessageRow = document.createElement(Table.DOM_ELEMENT._TR); // @HTMLUpdateOK\n    tableBodyMessageRow.id = this.createSubId('messageRow');\n    tableBodyMessageRow.classList.add(Table.CSS_CLASSES._TABLE_BODY_MESSAGE_ROW_CLASS);\n    if (this._isGutterStartColumnEnabled()) {\n      let gutterCell = this._createTableGutterCell('body', 'start');\n      tableBodyMessageRow.appendChild(gutterCell); // @HTMLUpdateOK\n    }\n    this._createTableBodyMessageCell(tableBodyMessageRow, columnCount, message);\n    if (this._isGutterEndColumnEnabled()) {\n      let gutterCell = this._createTableGutterCell('body', 'end');\n      tableBodyMessageRow.appendChild(gutterCell); // @HTMLUpdateOK\n    }\n    this._appendElementToTableBody(tableBodyMessageRow, tableBody);\n    return tableBodyMessageRow;\n  };\n\n  /**\n   * Create an empty tr element with appropriate styling\n   * @return {Element} tr DOM element\n   * @private\n   */\n  Table.prototype._createTableBodyRow = function () {\n    var row = document.createElement(Table.DOM_ELEMENT._TR); // @HTMLUpdateOK\n    // need to ensure we wait for child busy states of deferred contents to clear properly\n    row._ojReportBusy = this._getTableBody();\n    return row;\n  };\n\n  /**\n   * Get the touch affordance glass pane.\n   * @private\n   */\n  Table.prototype._getTouchAffordanceGlassPane = function () {\n    var tableContainer = this._getTableContainer();\n    var touchAffordanceGlassPane = this._getTableElementsByClassName(\n      tableContainer,\n      Table.CSS_CLASSES._TABLE_TOUCH_AFFORDANCE_GLASS_PANE_CLASS\n    );\n\n    if (touchAffordanceGlassPane.length > 0) {\n      return touchAffordanceGlassPane[0];\n    }\n    return null;\n  };\n\n  /**\n   * Create the touch affordance glass pane.\n   * @private\n   */\n  Table.prototype._createTouchAffordanceGlassPane = function () {\n    var touchAffordanceGlassPane = this._getTouchAffordanceGlassPane();\n    if (!touchAffordanceGlassPane) {\n      var tableContainer = this._getTableContainer();\n      touchAffordanceGlassPane = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n      touchAffordanceGlassPane.classList.add(\n        Table.CSS_CLASSES._TABLE_TOUCH_AFFORDANCE_GLASS_PANE_CLASS\n      );\n      tableContainer.appendChild(touchAffordanceGlassPane); // @HTMLUpdateOK\n      this._refreshTouchAffordanceGlassPanePosition();\n    }\n    return touchAffordanceGlassPane;\n  };\n\n  /**\n   * Add the touch affordance to the table row.\n   * @param {number} rowIdx  row index\n   * @private\n   */\n  Table.prototype._createTableBodyRowTouchSelectionAffordance = function (rowIdx) {\n    var touchAffordanceGlassPane = this._createTouchAffordanceGlassPane();\n\n    var topAffordance = this._getTableBodyRowTouchSelectionAffordanceTop();\n    if (!topAffordance) {\n      topAffordance = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n      topAffordance.classList.add(\n        Table.CSS_CLASSES._TABLE_DATA_ROW_TOUCH_SELECTION_AFFORDANCE_TOP_CLASS\n      );\n      topAffordance.classList.add(\n        Table.CSS_CLASSES._TABLE_DATA_ROW_TOUCH_SELECTION_AFFORDANCE_TOUCH_AREA_CLASS\n      );\n      var topIcon = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n      topIcon.classList.add(\n        Table.CSS_CLASSES._TABLE_DATA_ROW_TOUCH_SELECTION_AFFORDANCE_TOP_ICON_CLASS\n      );\n      topIcon.setAttribute(Table.DOM_ATTR._ROLE, 'button'); // @HTMLUpdateOK\n      // prettier-ignore\n      topIcon.setAttribute( // @HTMLUpdateOK\n        Table.DOM_ATTR._ARIA_LABEL,\n        this.getTranslatedString('labelAccSelectionAffordanceTop')\n      );\n      topAffordance.appendChild(topIcon); // @HTMLUpdateOK\n      touchAffordanceGlassPane.appendChild(topAffordance); // @HTMLUpdateOK\n    }\n\n    var bottomAffordance = this._getTableBodyRowTouchSelectionAffordanceBottom();\n    if (!bottomAffordance) {\n      bottomAffordance = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n      bottomAffordance.classList.add(\n        Table.CSS_CLASSES._TABLE_DATA_ROW_TOUCH_SELECTION_AFFORDANCE_BOTTOM_CLASS\n      );\n      bottomAffordance.classList.add(\n        Table.CSS_CLASSES._TABLE_DATA_ROW_TOUCH_SELECTION_AFFORDANCE_TOUCH_AREA_CLASS\n      );\n      var bottomIcon = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n      bottomIcon.classList.add(\n        Table.CSS_CLASSES._TABLE_DATA_ROW_TOUCH_SELECTION_AFFORDANCE_BOTTOM_ICON_CLASS\n      );\n      bottomIcon.setAttribute(Table.DOM_ATTR._ROLE, 'button'); // @HTMLUpdateOK\n      // prettier-ignore\n      bottomIcon.setAttribute( // @HTMLUpdateOK\n        Table.DOM_ATTR._ARIA_LABEL,\n        this.getTranslatedString('labelAccSelectionAffordanceBottom')\n      );\n      bottomAffordance.appendChild(bottomIcon); // @HTMLUpdateOK\n      touchAffordanceGlassPane.appendChild(bottomAffordance); // @HTMLUpdateOK\n    }\n\n    // these two methods ensure the rowIdx value is set on the affordances\n    this._moveTableBodyRowTouchSelectionAffordanceTop(rowIdx);\n    this._moveTableBodyRowTouchSelectionAffordanceBottom(rowIdx);\n  };\n\n  /**\n   * Create the bottom slot element with appropriate styling\n   * @private\n   */\n  Table.prototype._createTableBottomSlot = function () {\n    var tableContainer = this._getTableContainer();\n    var tableBottomSlot = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n    tableBottomSlot.classList.add(Table.CSS_CLASSES._TABLE_BOTTOM_SLOT_CLASS);\n    tableContainer.appendChild(tableBottomSlot); // @HTMLUpdateOK\n    this._cacheDomElement(Table.CSS_CLASSES._TABLE_BOTTOM_SLOT_CLASS, tableBottomSlot);\n\n    return tableBottomSlot;\n  };\n\n  /**\n   * Create an empty div element with appropriate styling\n   * @return {Element} div DOM element\n   * @private\n   */\n  Table.prototype._createTableContainer = function () {\n    // need to enclose the table in a div to provide horizontal scrolling\n    var tableContainer = this.OuterWrapper;\n    if (!tableContainer) {\n      tableContainer = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n      this.element[0].parentNode.replaceChild(tableContainer, this.element[0]);\n      tableContainer.insertBefore(this.element[0], tableContainer.firstChild); // @HTMLUpdateOK\n    }\n    this._cacheDomElement(Table.CSS_CLASSES._TABLE_CONTAINER_CLASS, tableContainer);\n\n    // add main css class to container\n    tableContainer.classList.add(Table.CSS_CLASSES._TABLE_CLASS);\n    tableContainer.classList.add(Table.CSS_CLASSES._TABLE_CONTAINER_CLASS);\n    tableContainer.classList.add(Table.MARKER_STYLE_CLASSES._WIDGET);\n\n    return tableContainer;\n  };\n\n  /**\n   * Creates a div to act as a scroller for the Table when using a sticky layout.\n   * @private\n   */\n  Table.prototype._createTableScroller = function () {\n    var tableScroller = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n    tableScroller.classList.add(Table.CSS_CLASSES._TABLE_SCROLLER_CLASS);\n    // browsers like FF make elements with a scrollbar a tab stop, which we do not want\n    tableScroller.setAttribute(Table.DOM_ATTR._TABINDEX, '-1'); // @HTMLUpdateOK\n    this.element[0].parentNode.replaceChild(tableScroller, this.element[0]);\n    tableScroller.insertBefore(this.element[0], tableScroller.firstChild); // @HTMLUpdateOK\n\n    // determine default scrollbar size at initial creation time to avoid layout changes later on\n    this._getLayoutManager().initializeDefaultScrollBarSize(tableScroller);\n\n    return tableScroller;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._createTableColGroup = function () {\n    var tableColGroup = document.createElement(Table.DOM_ELEMENT._COLGROUP); // @HTMLUpdateOK\n    tableColGroup.classList.add(Table.CSS_CLASSES._TABLE_COLGROUP_CLASS);\n    this._cacheDomElement(Table.CSS_CLASSES._TABLE_COLGROUP_CLASS, tableColGroup);\n\n    // check if tfoot is already there. If so add relative to tfoot.\n    var tableHeader = this._getTableHeader();\n    if (tableHeader != null) {\n      tableHeader.parentNode.insertBefore(tableColGroup, tableHeader); // @HTMLUpdateOK\n      return tableColGroup;\n    }\n    // check if tbody is already there. If so add relative to tbody.\n    var tableBody = this._getTableBody();\n    if (tableBody != null) {\n      tableBody.parentNode.insertBefore(tableColGroup, tableBody); // @HTMLUpdateOK\n      return tableColGroup;\n    }\n    // check if tfoot is already there. If so add relative to tfoot.\n    var tableFooter = this._getTableFooter();\n    if (tableFooter != null) {\n      tableFooter.parentNode.insertBefore(tableColGroup, tableFooter); // @HTMLUpdateOK\n      return tableColGroup;\n    }\n    var table = this._getTable();\n    table.appendChild(tableColGroup); // @HTMLUpdateOK\n    return tableColGroup;\n  };\n\n  /**\n   * Create an empty tfoot with appropriate styling\n   * @return {Element} tfoot DOM element\n   * @private\n   */\n  Table.prototype._createTableFooter = function () {\n    var table = this._getTable();\n    var tableFooter = document.createElement(Table.DOM_ELEMENT._TFOOT); // @HTMLUpdateOK\n    tableFooter.style[Table.CSS_PROP._VISIBILITY] = Table.CSS_VAL._HIDDEN;\n    var tableFooterRow = document.createElement(Table.DOM_ELEMENT._TR); // @HTMLUpdateOK\n\n    tableFooter.appendChild(tableFooterRow); // @HTMLUpdateOK\n\n    // check if tbody is already there. If so add relative to tbody.\n    var tableBody = this._getTableBody();\n    if (tableBody != null) {\n      tableBody.parentNode.insertBefore(tableFooter, tableBody.nextSibling); // @HTMLUpdateOK\n    } else {\n      // check if thead is already there. If so add relative to thead.\n      var tableHeader = this._getTableHeader();\n      if (tableHeader != null) {\n        tableHeader.parentNode.insertBefore(tableFooter, tableHeader.nextSibling); // @HTMLUpdateOK\n      } else {\n        table.appendChild(tableFooter); // @HTMLUpdateOK\n      }\n    }\n    this._cacheDomElement(Table.CSS_CLASSES._TABLE_FOOTER_CLASS, tableFooter);\n\n    return tableFooter;\n  };\n\n  /**\n   * Create an empty td element with appropriate styling\n   * @param {number} columnIdx  column index\n   * @return {Element} td DOM element\n   * @private\n   */\n  Table.prototype._createTableFooterCell = function () {\n    return document.createElement(Table.DOM_ELEMENT._TD); // @HTMLUpdateOK\n  };\n\n  /**\n   * Create an empty thead & tr element with appropriate styling\n   * @return {Element} thead DOM element\n   * @private\n   */\n  Table.prototype._createTableHeader = function () {\n    var table = this._getTable();\n    var tableHeader = document.createElement(Table.DOM_ELEMENT._THEAD); // @HTMLUpdateOK\n    var tableHeaderRow = document.createElement(Table.DOM_ELEMENT._TR); // @HTMLUpdateOK\n    tableHeader.appendChild(tableHeaderRow); // @HTMLUpdateOK\n\n    // check if tbody is already there. If so add relative to tbody.\n    var tableBody = this._getTableBody();\n    if (tableBody != null) {\n      tableBody.parentNode.insertBefore(tableHeader, tableBody); // @HTMLUpdateOK\n    } else {\n      // check if tfoot is already there. If so add relative to tfoot.\n      var tableFooter = this._getTableFooter();\n      if (tableFooter != null) {\n        tableFooter.parentNode.insertBefore(tableHeader, tableFooter); // @HTMLUpdateOK\n      } else {\n        table.appendChild(tableHeader); // @HTMLUpdateOK\n      }\n    }\n    this._cacheDomElement(Table.CSS_CLASSES._TABLE_HEADER_ROW_CLASS, tableHeaderRow);\n    this._cacheDomElement(Table.CSS_CLASSES._TABLE_HEADER_CLASS, tableHeader);\n\n    return tableHeader;\n  };\n\n  /**\n   * Create a th element with appropriate styling and column content\n   * @param {number} columnIdx  column index\n   * @param {boolean=} hasCustomContent true iff a renderer or template is specified\n   * @return {Element} th DOM element\n   * @private\n   */\n  Table.prototype._createTableHeaderColumn = function (columnIdx, hasCustomContent) {\n    var column = this._getColumnDefs()[columnIdx];\n    var headerColumnCell = document.createElement(Table.DOM_ELEMENT._TH); // @HTMLUpdateOK\n    this._styleTableHeaderColumn(columnIdx, headerColumnCell, true);\n    // add abbr for acc\n    headerColumnCell.setAttribute('abbr', column.headerText);\n    // add title for tooltip\n    headerColumnCell.setAttribute(Table.DOM_ATTR._TITLE, column.headerText); // @HTMLUpdateOK\n    this._insertTableHeaderColumn(columnIdx, headerColumnCell);\n    var headerContext = {\n      columnIndex: columnIdx,\n      headerContext: {\n        component: this,\n        parentElement: headerColumnCell\n      }\n    };\n    if (column.resizable === Table._OPTION_ENABLED) {\n      headerColumnCell.setAttribute('data-oj-resizable', Table._OPTION_ENABLED);\n    }\n    if (!hasCustomContent) {\n      if (column.sortable === Table._OPTION_ENABLED) {\n        headerColumnCell.setAttribute('data-oj-sortable', Table._OPTION_ENABLED);\n        this._columnHeaderSortableIconRenderer(headerContext);\n      } else {\n        this._columnHeaderDefaultRenderer(headerContext);\n      }\n    } else if (column.sortable === Table._OPTION_ENABLED) {\n      headerColumnCell.setAttribute('data-oj-sortable', Table._OPTION_ENABLED);\n    }\n\n    return headerColumnCell;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._createTableSelectorCol = function () {\n    var tableCol = document.createElement(Table.DOM_ELEMENT._COL); // @HTMLUpdateOK\n    tableCol.classList.add(Table.CSS_CLASSES._TABLE_COL_SELECTOR_CLASS);\n    return tableCol;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._createTableCol = function () {\n    var tableCol = document.createElement(Table.DOM_ELEMENT._COL); // @HTMLUpdateOK\n    tableCol.classList.add(Table.CSS_CLASSES._TABLE_COL_CLASS);\n    return tableCol;\n  };\n\n  /**\n   * Create the drag image for the column\n   * @param {number} columnIdxs  array of column indexes\n   * @return {Element} DOM element\n   * @private\n   */\n  Table.prototype._createTableHeaderColumnDragImage = function (columnIdxs) {\n    var headerColumnDragImage;\n    if (columnIdxs.length === 1) {\n      var headerColumn = this._getTableHeaderColumn(columnIdxs[0]);\n      headerColumnDragImage = headerColumn.cloneNode(true);\n      headerColumnDragImage.classList.remove(Table.MARKER_STYLE_CLASSES._FOCUS);\n      headerColumnDragImage.classList.remove(Table.MARKER_STYLE_CLASSES._FOCUS_HIGHLIGHT);\n      headerColumnDragImage.classList.remove(Table.MARKER_STYLE_CLASSES._HOVER);\n    } else {\n      headerColumnDragImage = document.createElement('th');\n      headerColumnDragImage.classList.add('oj-table-column-header-cell');\n      var headerColumnDiv = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n      headerColumnDiv.classList.add(Table.CSS_CLASSES._COLUMN_HEADER_CLASS);\n      headerColumnDragImage.appendChild(headerColumnDiv); // @HTMLUpdateOK\n      var headerContentDiv = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n      headerContentDiv.classList.add(Table.CSS_CLASSES._COLUMN_HEADER_TEXT_CLASS);\n      headerContentDiv.textContent = columnIdxs.length + ' Items';\n      headerColumnDiv.appendChild(headerContentDiv); // @HTMLUpdateOK\n    }\n    headerColumnDragImage.classList.add(Table.CSS_CLASSES._COLUMN_HEADER_DRAG_IMAGE);\n    headerColumnDragImage.style[Table.CSS_PROP._POSITION] = Table.CSS_VAL._ABSOLUTE;\n    headerColumnDragImage.style[Table.CSS_PROP._TOP] = '0';\n    headerColumnDragImage.style[Table.CSS_PROP._LEFT] = '-999em';\n    headerColumnDragImage.style[Table.CSS_PROP._ZINDEX] = '-999';\n\n    // The drag image element must be either visible or a child of document.body\n    // in order to show on Safari.\n    document.body.appendChild(headerColumnDragImage); // @HTMLUpdateOK\n\n    return headerColumnDragImage;\n  };\n\n  /**\n   * Helper method to create subid based on the root element's id\n   * @param {string} subId - the id to append to the root element id\n   * @return {string} the subId to append to the root element id\n   */\n  Table.prototype.createSubId = function (subId) {\n    // id empty string if not set, enver null\n    var id = this._getRootElement().id;\n    return [id, subId].join(':');\n  };\n\n  /**\n   * Create a div element for the Fetching Data... status message\n   * @return {Element} div DOM element\n   * @private\n   */\n  Table.prototype._createTableStatusMessage = function () {\n    var tableContainer = this._getTableContainer();\n    var statusMessage = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n    statusMessage.classList.add(Table.CSS_CLASSES._TABLE_STATUS_MESSAGE_CLASS);\n    statusMessage.style[Table.CSS_PROP._DISPLAY] = Table.CSS_VAL._NONE;\n\n    if (!this._isSkeletonSupport()) {\n      var statusMessageLoadingIndicator = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n      statusMessageLoadingIndicator.classList.add(Table.CSS_CLASSES._ICON_CLASS);\n      statusMessageLoadingIndicator.classList.add(Table.CSS_CLASSES._TABLE_LOADING_ICON_CLASS);\n      // prettier-ignore\n      statusMessageLoadingIndicator.setAttribute( // @HTMLUpdateOK\n        Table.DOM_ATTR._ARIA_LABEL,\n        this.getTranslatedString(Table._BUNDLE_KEY._MSG_FETCHING_DATA)\n      );\n      statusMessage.appendChild(statusMessageLoadingIndicator); // @HTMLUpdateOK\n    }\n\n    tableContainer.appendChild(statusMessage); // @HTMLUpdateOK\n    this._cacheDomElement(Table.CSS_CLASSES._TABLE_STATUS_MESSAGE_CLASS, statusMessage);\n\n    return statusMessage;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._createTableWidthContainer = function () {\n    var tableContainer = this._getTableContainer();\n    var tableWidthContainer = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n    tableWidthContainer.classList.add(Table.CSS_CLASSES._TABLE_WIDTH_CONTAINER_CLASS);\n    tableContainer.appendChild(tableWidthContainer); // @HTMLUpdateOK\n\n    this._tableWidthContainer = tableWidthContainer;\n    return tableWidthContainer;\n  };\n\n  /**\n   * Display the visual indicator for column drag over\n   * @param {number} columnIdx  column index\n   * @param {boolean} before before the column\n   * @private\n   */\n  Table.prototype._displayDragOverIndicatorColumn = function (columnIdx, before) {\n    this._getLayoutManager().displayDragOverIndicatorColumn(columnIdx, before);\n  };\n\n  /**\n   * Display the visual indicator for row drag over\n   * @param {number} rowIdx  row index\n   * @param {Element} modelRow tr DOM element\n   * @param {string} indicatorStyle indicator style - space or line\n   * @param {boolean} isReorder true if it is row reorder\n   * @private\n   */\n  Table.prototype._displayDragOverIndicatorRow = function (\n    rowIdx,\n    modelRow,\n    indicatorStyle,\n    isReorder\n  ) {\n    this._removeDragOverIndicatorRow();\n    var tableBodyRowDragIndicator = document.createElement(Table.DOM_ELEMENT._TR); // @HTMLUpdateOK\n\n    tableBodyRowDragIndicator.classList.add(Table.CSS_CLASSES._TABLE_DATA_ROW_DRAG_INDICATOR_CLASS);\n\n    if (indicatorStyle === 'line') {\n      tableBodyRowDragIndicator.classList.add('oj-table-body-row-drop-target');\n    } else if (modelRow != null) {\n      $(tableBodyRowDragIndicator).height(parseInt($(modelRow).height(), 10));\n      if (isReorder) {\n        this._rowsDragged.forEach(\n          function (row) {\n            row.classList.add('oj-table-row-drag-source-hide');\n            row.classList.remove(Table.MARKER_STYLE_CLASSES._SELECTED);\n            this._updateRowStateCellsClass(null, row, { selected: false });\n          }.bind(this)\n        );\n      }\n    }\n\n    var tableBodyDragIndicatorCell = document.createElement(Table.DOM_ELEMENT._TD); // @HTMLUpdateOK\n    var columnCount = this._getColumnDefs().length;\n    if (this._isDefaultSelectorEnabled()) {\n      columnCount += 1;\n    }\n    if (this._isGutterStartColumnEnabled()) {\n      columnCount += 1;\n    }\n    if (this._isGutterEndColumnEnabled()) {\n      columnCount += 1;\n    }\n    tableBodyDragIndicatorCell.setAttribute(Table.DOM_ATTR._COLSPAN, columnCount); // @HTMLUpdateOK\n    tableBodyRowDragIndicator.appendChild(tableBodyDragIndicatorCell); // @HTMLUpdateOK\n    var tableBodyRow = this._getTableBodyRow(rowIdx);\n\n    if (tableBodyRow != null) {\n      tableBodyRow.parentNode.insertBefore(tableBodyRowDragIndicator, tableBodyRow); // @HTMLUpdateOK\n    } else {\n      var tableBodyRows = this._getTableBodyRows();\n      if (tableBodyRows.length === 0) {\n        this._hideNoDataMessage();\n      }\n      this._getTableBody().appendChild(tableBodyRowDragIndicator); // @HTMLUpdateOK\n    }\n  };\n\n  /**\n   * Get the context menu\n   * @return  {Element} menu DOM element\n   * @private\n   */\n  Table.prototype._getContextMenuElement = function () {\n    return this._menuContainer;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._getContextMenuResizePopup = function () {\n    var popupId = this._getTableUID() + '_resize_popup';\n    if (!this._isCachedDomElement(popupId)) {\n      var popup = document.getElementById(popupId);\n      this._cacheDomElement(popupId, popup);\n    }\n\n    return this._getCachedDomElement(popupId);\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._getContextMenuResizeDialog = function () {\n    let dialogId = this._getTableUID() + '_resize_dialog';\n    if (!this._isCachedDomElement(dialogId)) {\n      let dialog = document.getElementById(dialogId);\n      this._cacheDomElement(dialogId, dialog);\n    }\n\n    return this._getCachedDomElement(dialogId);\n  };\n\n  /**\n   * Get the column index of the DOM element. e.g. pass in the table cell to\n   * see which column it's in.\n   * @param {Element} element  DOM element\n   * @return {number|null} the column index\n   * @private\n   */\n  Table.prototype._getElementColumnIdx = function (element) {\n    var tableBodyCell = this._getFirstAncestor(\n      element,\n      '.' + Table.CSS_CLASSES._TABLE_DATA_CELL_CLASS,\n      true\n    );\n    if (tableBodyCell != null) {\n      return $(tableBodyCell.parentNode)\n        .children('.' + Table.CSS_CLASSES._TABLE_DATA_CELL_CLASS)\n        .index(tableBodyCell);\n    }\n\n    var tableHeaderColumn = this._getFirstAncestor(\n      element,\n      '.' + Table.CSS_CLASSES._COLUMN_HEADER_CELL_CLASS,\n      true\n    );\n    if (tableHeaderColumn != null) {\n      return $(tableHeaderColumn.parentNode)\n        .children('.' + Table.CSS_CLASSES._COLUMN_HEADER_CELL_CLASS)\n        .index(tableHeaderColumn);\n    }\n\n    var tableFooterCell = this._getFirstAncestor(\n      element,\n      '.' + Table.CSS_CLASSES._TABLE_FOOTER_CELL_CLASS,\n      true\n    );\n    if (tableFooterCell != null) {\n      return $(tableFooterCell.parentNode)\n        .children('.' + Table.CSS_CLASSES._TABLE_FOOTER_CELL_CLASS)\n        .index(tableFooterCell);\n    }\n    return null;\n  };\n\n  /**\n   * Get the row index of the DOM element. e.g. pass in the table cell to\n   * see which row it's in.\n   * @param {Element} element  DOM element\n   * @return {number|null} the row index\n   * @private\n   */\n  Table.prototype._getElementRowIdx = function (element) {\n    var tableBodyRow = this._getFirstAncestor(\n      element,\n      '.' + Table.CSS_CLASSES._TABLE_DATA_ROW_CLASS,\n      true\n    );\n\n    if (tableBodyRow != null) {\n      var tableBodyRows = this._getTableBodyRows();\n      var idx = $(tableBodyRows).index(tableBodyRow);\n      return idx > -1 ? idx : null;\n    }\n    return null;\n  };\n\n  /**\n   * Find the first ancestor of an element given a selector\n   * @param {Element} element the element to find the nearest class name to\n   * @param {string} selector the selector\n   * @param {boolean=} tableOwnedOnly whether return element has to be owned by this table. default false\n   * @return {Element|null} the element that matches selector, if there is none returns null\n   * @private\n   */\n  Table.prototype._getFirstAncestor = function (element, selector, tableOwnedOnly) {\n    var parents;\n\n    if (element == null) {\n      return null;\n    }\n\n    var elementMatches =\n      DataCollectionUtils.isIE() && !Element.prototype.matches\n        ? element.msMatchesSelector(selector)\n        : element.matches(selector);\n\n    if (elementMatches) {\n      if (tableOwnedOnly) {\n        if (!this._isTableOwned(element)) {\n          return this._getFirstAncestor(element.parentNode, selector, tableOwnedOnly);\n        }\n      }\n      return element;\n    }\n\n    parents = $(element).parents(selector);\n    if (tableOwnedOnly) {\n      for (var i = 0; i < parents.length; i++) {\n        if (this._isTableOwned(parents[i])) {\n          return parents[i];\n        }\n      }\n      return null;\n    }\n    return parents.length > 0 ? parents[0] : null;\n  };\n\n  /**\n   * Get the element scrollLeft\n   * @param {Element} element DOM element\n   * @private\n   */\n  Table.prototype._getElementScrollLeft = function (element) {\n    return Math.abs(element.scrollLeft);\n  };\n\n  /**\n   * Return the table element\n   * @return {Element} table DOM element\n   * @private\n   */\n  Table.prototype._getTable = function () {\n    return this.element[0];\n  };\n\n  /**\n   * Return the table body element\n   * @return {Element|null} tbody DOM element\n   * @private\n   */\n  Table.prototype._getTableBody = function () {\n    return this._getTableElementByClassName(Table.CSS_CLASSES._TABLE_BODY_CLASS, true);\n  };\n\n  /**\n   * Return the table body scroll buffer element\n   * @private\n   */\n  Table.prototype._getTableBodyScrollBuffer = function () {\n    return this._getTableElementByClassName(Table.CSS_CLASSES._TABLE_BUFFER_ROW_CLASS);\n  };\n\n  /**\n   * Return the table body legacy width buffer element\n   * @private\n   */\n  Table.prototype._getTableBodyLegacyWidthBuffer = function () {\n    return this._getTableElementByClassName(Table.CSS_CLASSES._TABLE_LEGACY_WIDTH_BUFFER_ROW_CLASS);\n  };\n\n  /**\n   * Return the table legacy sizer element\n   * @private\n   */\n  Table.prototype._getTableLegacySizer = function () {\n    return this._getTableElementByClassName(Table.CSS_CLASSES._TABLE_LEGACY_SIZER_CLASS, true);\n  };\n\n  /**\n   * Return the cell element\n   * @param {number} rowIdx  row index\n   * @param {number} columnIdx  column index\n   * @param {Element|null} tableBodyRow  tr DOM element\n   * @return {Element|null} td DOM element\n   * @private\n   */\n  Table.prototype._getTableBodyCell = function (rowIdx, columnIdx, tableBodyRow) {\n    var tableBodyCells = this._getTableBodyCells(rowIdx, tableBodyRow);\n\n    if (tableBodyCells.length > columnIdx) {\n      return tableBodyCells[columnIdx];\n    }\n\n    return null;\n  };\n\n  /**\n   * Return all the logical cell elements in a row\n   * @param {number} rowIdx  row index\n   * @param {Element|null} tableBodyRow  tr DOM element\n   * @return {Array|null} array of td DOM elements\n   * @private\n   */\n  Table.prototype._getTableBodyLogicalCells = function (rowIdx, tableBodyRow) {\n    var tableBodyCells = this._getTableBodyCells(rowIdx, tableBodyRow);\n\n    return this._getColspanLogicalElements(tableBodyCells);\n  };\n\n  /**\n   * Return all the cell elements in a row\n   * @param {number|null} rowIdx  row index\n   * @param {Element|null} tableBodyRow  tr DOM element\n   * @return {Array|null} array of td DOM elements\n   * @private\n   */\n  Table.prototype._getTableBodyCells = function (rowIdx, tableBodyRow) {\n    var cells = [];\n    if (!tableBodyRow) {\n      // eslint-disable-next-line no-param-reassign\n      tableBodyRow = this._getTableBodyRow(rowIdx);\n    }\n    if (tableBodyRow != null) {\n      var children = tableBodyRow.children;\n      for (var i = 0; i < children.length; i++) {\n        if (children[i].classList.contains(Table.CSS_CLASSES._TABLE_DATA_CELL_CLASS)) {\n          cells.push(children[i]);\n        }\n      }\n    }\n    return cells;\n  };\n\n  /**\n   * Return the table body message cell element\n   * @return {Element|null} tr DOM element\n   * @private\n   */\n  Table.prototype._getTableBodyMessageCell = function () {\n    var tableBody = this._getTableBody();\n    if (tableBody) {\n      var messageCell = this._getTableElementsByClassName(\n        tableBody,\n        Table.CSS_CLASSES._TABLE_BODY_MESSAGE_CLASS\n      );\n      if (messageCell.length > 0) {\n        return messageCell[0];\n      }\n    }\n    return null;\n  };\n\n  /**\n   * Return the table body message row element\n   * @return {Element|null} tr DOM element\n   * @private\n   */\n  Table.prototype._getTableBodyMessageRow = function () {\n    var tableBody = this._getTableBody();\n    if (tableBody) {\n      var messageRow = this._getTableElementsByClassName(\n        tableBody,\n        Table.CSS_CLASSES._TABLE_BODY_MESSAGE_ROW_CLASS\n      );\n      if (messageRow.length > 0) {\n        return messageRow[0];\n      }\n    }\n    return null;\n  };\n\n  /**\n   * Return the table body message row element\n   * @return {Element|null} tr DOM element\n   * @private\n   */\n  Table.prototype._getTableNoDataRow = function () {\n    var tableBody = this._getTableBody();\n    if (tableBody) {\n      var noDataRow = this._getTableElementsByClassName(\n        tableBody,\n        Table.CSS_CLASSES._TABLE_NO_DATA_ROW_CLASS\n      );\n      if (noDataRow.length > 0) {\n        return noDataRow[0];\n      }\n    }\n    return null;\n  };\n\n  /**\n   * Return table row. Used for calls prior to row styling.\n   * @private\n   */\n  Table.prototype._getRawTableBodyRow = function (rowIdx) {\n    var tableBody = this._getTableBody();\n    let rowIndex = this._isAddNewRowEnabled() ? rowIdx + 1 : rowIdx;\n    if (!this._isStickyLayoutEnabled()) {\n      rowIndex += 1;\n    }\n    return tableBody.children[rowIndex];\n  };\n\n  /**\n   * Return table row\n   * @param {number|null} rowIdx  row index\n   * @return {Element|null} tr DOM element\n   * @private\n   */\n  Table.prototype._getTableBodyRow = function (rowIdx) {\n    var tableBodyRows = this._getTableBodyRows();\n    if (rowIdx != null && tableBodyRows.length > rowIdx) {\n      return tableBodyRows[rowIdx];\n    }\n    return null;\n  };\n\n  /**\n   * Return all the table rows\n   * @return {Array|null} array of tr DOM elements\n   * @private\n   */\n  Table.prototype._getTableBodyRows = function () {\n    if (!this._cachedDomTableBodyRows) {\n      var tableBody = this._getTableBody();\n      if (tableBody != null) {\n        this._cachedDomTableBodyRows = this._getTableElementsByClassName(\n          tableBody,\n          Table.CSS_CLASSES._TABLE_DATA_ROW_CLASS\n        );\n      } else {\n        this._cachedDomTableBodyRows = [];\n      }\n    }\n    return this._cachedDomTableBodyRows;\n  };\n\n  /**\n   * Return all the sticky table rows\n   * @return {Array|null} array of tr DOM elements\n   * @private\n   */\n  Table.prototype._getTableBodyStickyRows = function () {\n    if (!this._cachedDomTableBodyStickyRows) {\n      var tableBody = this._getTableBody();\n      if (tableBody != null) {\n        this._cachedDomTableBodyStickyRows = this._getTableElementsByClassName(\n          tableBody,\n          Table.CSS_CLASSES._TABLE_STICKY_ROW_CLASS\n        );\n      } else {\n        this._cachedDomTableBodyStickyRows = [];\n      }\n    }\n    return this._cachedDomTableBodyStickyRows;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._getTableTempSkeletonRow = function () {\n    var tableBody = this._getTableBody();\n    if (tableBody != null) {\n      return this._getChildElementByClassName(\n        tableBody,\n        Table.CSS_CLASSES._TABLE_FETCH_SKELETON_ROW_CLASS\n      );\n    }\n    return null;\n  };\n\n  /**\n   * Get top touch affordance to the table row.\n   * @return {Element|null} div DOM element\n   * @private\n   */\n  Table.prototype._getTableBodyRowTouchSelectionAffordanceTop = function () {\n    var tableContainer = this._getTableContainer();\n    var topAffordance = this._getTableElementsByClassName(\n      tableContainer,\n      Table.CSS_CLASSES._TABLE_DATA_ROW_TOUCH_SELECTION_AFFORDANCE_TOP_CLASS\n    );\n    if (topAffordance.length > 0) {\n      return topAffordance[0];\n    }\n    return null;\n  };\n\n  /**\n   * Get bottom touch affordance to the table row.\n   * @return {Element|null} div DOM element\n   * @private\n   */\n  Table.prototype._getTableBodyRowTouchSelectionAffordanceBottom = function () {\n    var tableContainer = this._getTableContainer();\n    var bottomAffordance = this._getTableElementsByClassName(\n      tableContainer,\n      Table.CSS_CLASSES._TABLE_DATA_ROW_TOUCH_SELECTION_AFFORDANCE_BOTTOM_CLASS\n    );\n    if (bottomAffordance.length > 0) {\n      return bottomAffordance[0];\n    }\n    return null;\n  };\n\n  /**\n   * Return the bottom slot element\n   * @return {Element|null} div DOM element\n   * @private\n   */\n  Table.prototype._getTableBottomSlot = function () {\n    return this._getTableElementByClassName(Table.CSS_CLASSES._TABLE_BOTTOM_SLOT_CLASS, true);\n  };\n\n  /**\n   * Return the table container\n   * @return {Element|null} div DOM element\n   * @private\n   */\n  Table.prototype._getTableContainer = function () {\n    if (!this._isCachedDomElement(Table.CSS_CLASSES._TABLE_CONTAINER_CLASS)) {\n      var parent = this.element[0].parentNode;\n      if (parent.classList.contains(Table.CSS_CLASSES._TABLE_SCROLLER_CLASS)) {\n        // if scroller has already been created, go up one additional level for the table container\n        this._cacheDomElement(Table.CSS_CLASSES._TABLE_CONTAINER_CLASS, parent.parentNode);\n      } else {\n        // otherwise this is the container element\n        this._cacheDomElement(Table.CSS_CLASSES._TABLE_CONTAINER_CLASS, parent);\n      }\n    }\n    return this._getCachedDomElement(Table.CSS_CLASSES._TABLE_CONTAINER_CLASS);\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._getTableScroller = function () {\n    return this._getTableElementByClassName(Table.CSS_CLASSES._TABLE_SCROLLER_CLASS, true);\n  };\n\n  /**\n   * Return the table footer\n   * @return {Element|null} tfoot DOM element\n   * @private\n   */\n  Table.prototype._getTableFooter = function () {\n    return this._getTableElementByClassName(Table.CSS_CLASSES._TABLE_FOOTER_CLASS, true);\n  };\n\n  /**\n   * Return the footer cell element\n   * @param {number} columnIdx  column index\n   * @return {Element|null} td DOM element\n   * @private\n   */\n  Table.prototype._getTableFooterCell = function (columnIdx) {\n    var tableFooterCells = this._getTableFooterCells();\n    if (tableFooterCells.length > columnIdx) {\n      return tableFooterCells[columnIdx];\n    }\n    return null;\n  };\n\n  /**\n   * Return all footer cells\n   * @return {Array|null} array of td DOM elements\n   * @private\n   */\n  Table.prototype._getTableFooterCells = function () {\n    var columns = [];\n    var tableFooterRow = this._getTableFooterRow();\n    if (tableFooterRow != null) {\n      var children = tableFooterRow.children;\n      for (var i = 0; i < children.length; i++) {\n        if (children[i].classList.contains(Table.CSS_CLASSES._TABLE_FOOTER_CELL_CLASS)) {\n          columns.push(children[i]);\n        }\n      }\n    }\n    return columns;\n  };\n\n  /**\n   * Return all logical footer cells\n   * @return {Array|null} array of td DOM elements\n   * @private\n   */\n  Table.prototype._getTableFooterLogicalCells = function () {\n    return this._getColspanLogicalElements(this._getTableFooterCells());\n  };\n\n  /**\n   * Return table footer row\n   * @return {Element|null} tr DOM element\n   * @private\n   */\n  Table.prototype._getTableFooterRow = function () {\n    return this._getTableElementByClassName(Table.CSS_CLASSES._TABLE_FOOTER_ROW_CLASS);\n  };\n\n  /**\n   * Return the table header\n   * @return {Element|null} thead DOM element\n   * @private\n   */\n  Table.prototype._getTableHeader = function () {\n    return this._getTableElementByClassName(Table.CSS_CLASSES._TABLE_HEADER_CLASS, true);\n  };\n\n  /**\n   * Return table column header\n   * @param {number} columnIdx  column index\n   * @return {Element|null} th DOM element\n   * @private\n   */\n  Table.prototype._getTableHeaderColumn = function (columnIdx) {\n    var headerColumns = this._getTableHeaderColumns();\n    if (headerColumns.length > columnIdx && columnIdx >= 0) {\n      return headerColumns[columnIdx];\n    }\n    return null;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._getTableCols = function () {\n    var cols = [];\n    var tableColGroup = this._getTableColGroup();\n    if (tableColGroup != null) {\n      var children = tableColGroup.children;\n      for (var i = 0; i < children.length; i++) {\n        if (children[i].classList.contains(Table.CSS_CLASSES._TABLE_COL_CLASS)) {\n          cols.push(children[i]);\n        }\n      }\n    }\n    return cols;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._getTableCol = function (columnIdx) {\n    var tableColElements = this._getTableCols();\n    if (tableColElements.length > 0) {\n      return tableColElements[columnIdx];\n    }\n    return null;\n  };\n\n  /**\n   * Return all table column headers\n   * @return {Array|null} array of th DOM elements\n   * @private\n   */\n  Table.prototype._getTableHeaderColumns = function () {\n    var columns = [];\n    var tableHeaderRow = this._getTableHeaderRow();\n    if (tableHeaderRow != null) {\n      var children = tableHeaderRow.children;\n      for (var i = 0; i < children.length; i++) {\n        if (children[i].classList.contains(Table.CSS_CLASSES._COLUMN_HEADER_CELL_CLASS)) {\n          columns.push(children[i]);\n        }\n      }\n    }\n    return columns;\n  };\n\n  /**\n   * Return all logical table column headers\n   * @return {Array|null} array of th DOM elements\n   * @private\n   */\n  Table.prototype._getTableHeaderLogicalColumns = function () {\n    return this._getColspanLogicalElements(this._getTableHeaderColumns());\n  };\n\n  /**\n   * Return table header row\n   * @return {Element|null} th DOM element\n   * @private\n   */\n  Table.prototype._getTableHeaderRow = function () {\n    return this._getTableElementByClassName(Table.CSS_CLASSES._TABLE_HEADER_ROW_CLASS);\n  };\n\n  /**\n   * Return table add row\n   */\n  Table.prototype._getPlaceHolderRow = function () {\n    var table = this._getTable();\n    return table.getElementsByClassName(Table.CSS_CLASSES._TABLE_ADD_ROW_PLACEHOLDER_CLASS)[0];\n  };\n\n  /**\n   * Return table add row cells\n   */\n  Table.prototype._getPlaceHolderRowCells = function (placeHolderRow) {\n    var cells = [];\n    var addRow = placeHolderRow != null ? placeHolderRow : this._getPlaceHolderRow();\n    if (addRow != null) {\n      var children = addRow.children;\n      for (var i = 0; i < children.length; i++) {\n        cells.push(children[i]);\n      }\n    }\n    return cells;\n  };\n\n  /**\n   * Return table add row cell\n   */\n  Table.prototype._getPlaceHolderRowCell = function (columnIdx) {\n    var addRowIndex = this._isDefaultSelectorEnabled() ? columnIdx + 1 : columnIdx;\n    if (this._isGutterStartColumnEnabled()) {\n      addRowIndex += 1;\n    }\n    var addRowCells = this._getPlaceHolderRowCells();\n    if (addRowCells.length > addRowIndex && addRowIndex >= 0) {\n      return addRowCells[addRowIndex];\n    }\n    return null;\n  };\n\n  /**\n   * @return {Element|null} th DOM element\n   * @private\n   */\n  Table.prototype._getTableColGroup = function () {\n    return this._getTableElementByClassName(Table.CSS_CLASSES._TABLE_COLGROUP_CLASS, true);\n  };\n\n  /**\n   * Return the table DOM element id.\n   * @return {string} Id for table\n   * @private\n   */\n  Table.prototype._getTableId = function () {\n    if (!this._tableId) {\n      // Id for custom element is on the container\n      var idElem = this._IsCustomElement() ? this._getTableContainer() : this._getTable();\n      this._tableId = idElem.getAttribute(Table.DOM_ATTR._ID);\n    }\n    return this._tableId;\n  };\n\n  /**\n   * Return the table status message element\n   * @return {Element|null} div DOM element\n   * @private\n   */\n  Table.prototype._getTableStatusMessage = function () {\n    return this._getTableElementByClassName(Table.CSS_CLASSES._TABLE_STATUS_MESSAGE_CLASS, true);\n  };\n\n  /**\n   * Return the unique identifier for the table. If the DOM element has an id then\n   * return that. If not, generate a random UID.\n   * @return {string} UID for table\n   * @private\n   */\n  Table.prototype._getTableUID = function () {\n    if (!this._tableUID) {\n      if (this._getTableId() != null) {\n        this._tableUID = this._getTableId();\n      } else {\n        this._tableUID = ojcustomelementUtils.ElementUtils.getUniqueId() + '_table';\n      }\n    }\n    return this._tableUID;\n  };\n\n  /**\n   * Get a hash code for a string\n   * @param {string} str String\n   * @return {number} hashCode\n   * @private\n   */\n  Table.prototype._hashCode = function (str) {\n    // null should never be passed in, but adding this check for a fallback\n    if (str == null) {\n      return 0;\n    } else if ($.type(str) !== 'string') {\n      // eslint-disable-next-line no-param-reassign\n      str = str.toString();\n    }\n    // Same hash algorithm as Java's String.hashCode\n    var hash = 0;\n    if (str.length === 0) {\n      return hash;\n    }\n\n    var strCount = str.length;\n    for (var i = 0; i < strCount; i++) {\n      var charVal = str.charCodeAt(i);\n      // eslint-disable-next-line no-bitwise\n      hash = (hash << 5) - hash + charVal;\n      // eslint-disable-next-line no-bitwise\n      hash &= hash;\n    }\n    return hash;\n  };\n\n  /**\n   * Insert a td element in the appropriate place in the DOM\n   * @param {number} rowIdx  row index\n   * @param {Object} rowKey  row key\n   * @param {number} columnIdx  column index\n   * @param {Element} tableBodyCell  DOM element\n   * @param {Element} tableBodyRow  tr DOM element\n   * @param {boolean} isNew is new row\n   * @return {Element|null} td DOM element\n   * @private\n   */\n  Table.prototype._insertTableBodyCell = function (\n    rowIdx,\n    rowKey,\n    columnIdx,\n    tableBodyCell,\n    tableBodyRow,\n    isNew\n  ) {\n    this._setTableBodyCellAttributes(rowIdx, rowKey, columnIdx, tableBodyCell);\n\n    if (isNew) {\n      // if it's a new row then the cells are appended in order\n      // so don't bother trying to find the position to insert to\n      tableBodyRow.appendChild(tableBodyCell); // @HTMLUpdateOK\n      return tableBodyCell;\n    }\n\n    if (columnIdx === 0) {\n      // just prepend it\n      tableBodyRow.insertBefore(tableBodyCell, tableBodyRow.firstChild); // @HTMLUpdateOK\n    } else {\n      var tableBodyCells = this._getTableElementsByClassName(\n        tableBodyRow,\n        Table.CSS_CLASSES._TABLE_DATA_CELL_CLASS\n      );\n\n      if (tableBodyCells.length >= columnIdx) {\n        var previousCell = tableBodyCells[columnIdx - 1];\n        previousCell.parentNode.insertBefore(tableBodyCell, previousCell.nextSibling); // @HTMLUpdateOK\n      } else {\n        tableBodyRow.appendChild(tableBodyCell); // @HTMLUpdateOK\n      }\n    }\n    return tableBodyCell;\n  };\n\n  /**\n   * Insert a tr element in the appropriate place in the DOM\n   * @param {number} rowIdx  row index\n   * @param {Element} tableBodyRow  DOM element\n   * @param {Element} docFrag  document fragment\n   * @private\n   */\n  Table.prototype._insertTableBodyRow = function (rowIdx, tableBodyRow, docFrag) {\n    if (docFrag == null) {\n      var tableBody = this._getTableBody();\n\n      var tableBodyRowBefore = this._getTableBodyRow(rowIdx);\n      if (tableBodyRowBefore != null) {\n        tableBody.insertBefore(tableBodyRow, tableBodyRowBefore); // @HTMLUpdateOK\n      } else {\n        this._appendElementToTableBody(tableBodyRow, tableBody);\n      }\n    } else {\n      docFrag.appendChild(tableBodyRow); // @HTMLUpdateOK\n    }\n    this._clearCachedDomRowData();\n  };\n\n  /**\n   * Insert a td element in the appropriate place in the DOM\n   * @param {number} columnIdx  column index\n   * @param {Element} tableFooterCell  DOM element\n   * @private\n   */\n  Table.prototype._insertTableFooterCell = function (columnIdx, tableFooterCell) {\n    var tableFooterRow = this._getTableFooterRow();\n    var tableFooterCells = this._getTableElementsByClassName(\n      tableFooterRow,\n      Table.CSS_CLASSES._TABLE_FOOTER_CELL_CLASS\n    );\n    // save the column index on the element\n    this._setTableFooterColumnAttributes(columnIdx, tableFooterCell);\n\n    if (columnIdx === 0) {\n      // just prepend it\n      tableFooterRow.insertBefore(tableFooterCell, tableFooterRow.firstChild); // @HTMLUpdateOK\n    } else if (tableFooterRow.length >= columnIdx) {\n      var previousCell = tableFooterCells[columnIdx - 1];\n      previousCell.parentNode.insertBefore(tableFooterCell, previousCell.nextSibling); // @HTMLUpdateOK\n    } else {\n      tableFooterRow.appendChild(tableFooterCell); // @HTMLUpdateOK\n    }\n    return tableFooterCell;\n  };\n\n  /**\n   * Insert a th element in the appropriate place in the DOM\n   * @param {number} columnIdx  column index\n   * @param {Element} tableHeaderColumn  DOM element\n   * @private\n   */\n  Table.prototype._insertTableHeaderColumn = function (columnIdx, tableHeaderColumn) {\n    var tableHeaderRow = this._getTableHeaderRow();\n    var tableHeaderColumns = this._getTableHeaderColumns();\n    // save the column index on the element\n    this._setTableHeaderColumnAttributes(columnIdx, tableHeaderColumn);\n\n    // if there is an existing th at the index then replace it\n    var oldTableHeaderColumn = this._getTableHeaderColumn(columnIdx);\n    if (oldTableHeaderColumn) {\n      $(oldTableHeaderColumn).replaceWith($(tableHeaderColumn)); // @HTMLUpdateOK\n    } else if (columnIdx !== 0 && tableHeaderColumns.length >= columnIdx) {\n      var previousColumn = tableHeaderColumns[columnIdx - 1];\n      previousColumn.parentNode.insertBefore(tableHeaderColumn, previousColumn.nextSibling); // @HTMLUpdateOK\n    } else {\n      tableHeaderRow.appendChild(tableHeaderColumn); // @HTMLUpdateOK\n    }\n  };\n\n  /**\n   * Move the top touch affordance to the table row.\n   * @param {number=} rowIdx  row index\n   * @private\n   */\n  Table.prototype._moveTableBodyRowTouchSelectionAffordanceTop = function (rowIdx) {\n    var topAffordance = this._getTableBodyRowTouchSelectionAffordanceTop();\n    if (topAffordance != null) {\n      if (rowIdx != null) {\n        $(topAffordance).data('rowIdx', rowIdx);\n        $(topAffordance.children[0]).data('rowIdx', rowIdx);\n      } else {\n        // eslint-disable-next-line no-param-reassign\n        rowIdx = $(topAffordance).data('rowIdx');\n      }\n      var scroller = this._getLayoutManager().getScroller();\n      var tableBodyRow = this._getTableBodyRow(rowIdx);\n      var tableBodyRowRect = tableBodyRow.getBoundingClientRect();\n      var touchAffordanceGlassPane = this._getTouchAffordanceGlassPane();\n      var touchAffordanceGlassPaneRect = touchAffordanceGlassPane.getBoundingClientRect();\n      topAffordance.style[Table.CSS_PROP._TOP] =\n        tableBodyRowRect.top -\n        touchAffordanceGlassPaneRect.top -\n        topAffordance.clientHeight / 2 +\n        Table.CSS_VAL._PX;\n      topAffordance.style[Table.CSS_PROP._LEFT] = scroller.clientWidth / 2 + Table.CSS_VAL._PX;\n    }\n  };\n\n  /**\n   * Move the bottom touch affordance to the table row.\n   * @param {number=} rowIdx  row index\n   * @private\n   */\n  Table.prototype._moveTableBodyRowTouchSelectionAffordanceBottom = function (rowIdx) {\n    var bottomAffordance = this._getTableBodyRowTouchSelectionAffordanceBottom();\n    if (bottomAffordance != null) {\n      if (rowIdx != null) {\n        $(bottomAffordance).data('rowIdx', rowIdx);\n        $(bottomAffordance.children[0]).data('rowIdx', rowIdx);\n      } else {\n        // eslint-disable-next-line no-param-reassign\n        rowIdx = $(bottomAffordance).data('rowIdx');\n      }\n      var scroller = this._getLayoutManager().getScroller();\n      var tableBodyRow = this._getTableBodyRow(rowIdx);\n      var tableBodyRowRect = tableBodyRow.getBoundingClientRect();\n      var touchAffordanceGlassPane = this._getTouchAffordanceGlassPane();\n      var touchAffordanceGlassPaneRect = touchAffordanceGlassPane.getBoundingClientRect();\n      bottomAffordance.style[Table.CSS_PROP._TOP] =\n        tableBodyRowRect.top -\n        touchAffordanceGlassPaneRect.top +\n        tableBodyRowRect.height -\n        bottomAffordance.clientHeight / 2 +\n        Table.CSS_VAL._PX;\n      bottomAffordance.style[Table.CSS_PROP._LEFT] = scroller.clientWidth / 2 + Table.CSS_VAL._PX;\n    }\n  };\n\n  /**\n   * Move the column to the destination index. If there is already a column at destIdx,\n   * then insert before it.\n   * @param {number} columnIdx  column index\n   * @param {number} destIdx column index\n   * @param {Object} event\n   * @return {Array} Array of moved columns map\n   * @private\n   */\n  Table.prototype._moveTableHeaderColumn = function (columnIdxs, destIdx, event) {\n    var columns = this._getColumnDefs();\n\n    var tableHeaderColumns = [];\n    var tableFooterCells = [];\n    var tableBodyCells = [];\n    var tableAddRowBodyCells = [];\n    var destTableBodyCell = null;\n    var colSpan = null;\n    var afterColumn = false;\n\n    if (destIdx === columns.length) {\n      // eslint-disable-next-line no-param-reassign\n      destIdx -= 1;\n      afterColumn = true;\n    }\n\n    var destTableHeaderColumn = this._getTableHeaderColumn(destIdx);\n    var destTableFooterCell = this._getTableFooterCell(destIdx);\n    var destTableAddRowCell = this._getPlaceHolderRowCell(destIdx);\n\n    for (let i = 0; i < columnIdxs.length; i++) {\n      let columnIdx = columnIdxs[i];\n      tableHeaderColumns[i] = this._getTableHeaderColumn(columnIdx);\n      tableFooterCells[i] = this._getTableFooterCell(columnIdx);\n      if (this._isAddNewRowEnabled()) {\n        tableAddRowBodyCells[i] = this._getPlaceHolderRowCell(columnIdx);\n      }\n    }\n\n    for (let i = 0; i < columnIdxs.length; i++) {\n      if (tableHeaderColumns[i] != null) {\n        colSpan = tableHeaderColumns[i].getAttribute(Table.DOM_ATTR._COLSPAN);\n        if (destTableHeaderColumn != null && (colSpan == null || colSpan === 1)) {\n          if (afterColumn) {\n            // prettier-ignore\n            destTableHeaderColumn.parentNode.insertBefore( // @HTMLUpdateOK\n              tableHeaderColumns[i],\n              destTableHeaderColumn.nextSibling\n            );\n            destTableHeaderColumn = tableHeaderColumns[i];\n          } else {\n            // prettier-ignore\n            destTableHeaderColumn.parentNode.insertBefore( // @HTMLUpdateOK\n              tableHeaderColumns[i],\n              destTableHeaderColumn\n            );\n          }\n        }\n      }\n      if (tableFooterCells[i] != null) {\n        colSpan = tableFooterCells[i].getAttribute(Table.DOM_ATTR._COLSPAN);\n        if (destTableFooterCell != null && (colSpan == null || colSpan === 1)) {\n          if (afterColumn) {\n            // prettier-ignore\n            destTableFooterCell.parentNode.insertBefore( // @HTMLUpdateOK\n              tableFooterCells[i],\n              destTableFooterCell.nextSibling\n            );\n            destTableFooterCell = tableFooterCells[i];\n          } else {\n            destTableFooterCell.parentNode.insertBefore(tableFooterCells[i], destTableFooterCell); // @HTMLUpdateOK\n          }\n        }\n      }\n      if (tableAddRowBodyCells[i] != null) {\n        colSpan = tableAddRowBodyCells[i].getAttribute(Table.DOM_ATTR._COLSPAN);\n        if (destTableAddRowCell != null && (colSpan == null || colSpan === 1)) {\n          if (afterColumn) {\n            // prettier-ignore\n            destTableAddRowCell.parentNode.insertBefore( // @HTMLUpdateOK\n              tableAddRowBodyCells[i],\n              destTableAddRowCell.nextSibling\n            );\n            destTableAddRowCell = tableAddRowBodyCells[i];\n          } else {\n            destTableAddRowCell.parentNode.insertBefore(tableAddRowBodyCells[i], destTableAddRowCell); // @HTMLUpdateOK\n          }\n        }\n      }\n    }\n\n    var tableBodyRows = this._getTableBodyRows();\n    for (let i = 0; i < tableBodyRows.length; i++) {\n      for (let j = 0; j < columnIdxs.length; j++) {\n        tableBodyCells[j] = this._getTableBodyCell(i, columnIdxs[j], null);\n      }\n      destTableBodyCell = this._getTableBodyCell(i, destIdx, null);\n      for (let j = 0; j < columnIdxs.length; j++) {\n        if (tableBodyCells[j] != null) {\n          colSpan = tableBodyCells[j].getAttribute(Table.DOM_ATTR._COLSPAN);\n\n          if (destTableBodyCell != null && (colSpan == null || colSpan === 1)) {\n            if (afterColumn) {\n              // prettier-ignore\n              destTableBodyCell.parentNode.insertBefore( // @HTMLUpdateOK\n                tableBodyCells[j],\n                destTableBodyCell.nextSibling\n              );\n              destTableBodyCell = tableBodyCells[j];\n            } else {\n              destTableBodyCell.parentNode.insertBefore(tableBodyCells[j], destTableBodyCell); // @HTMLUpdateOK\n            }\n          }\n        }\n      }\n    }\n\n    // update options\n    var clonedColumnsOption = [];\n    var columnsCount = this.options.columns.length;\n    for (let i = 0; i < columnsCount; i++) {\n      clonedColumnsOption[i] = $.extend({}, {}, this.options.columns[i]);\n    }\n    var destColIdx = !afterColumn ? destIdx - 1 : destIdx;\n    var columnOptions = [];\n    var columnDefs = [];\n    var columnsDestMapItems = [];\n    var reversedColumnIdxs = columnIdxs.reverse();\n    if (!this._columnsDestMap) {\n      this._columnsDestMap = [];\n      for (let i = 0; i < clonedColumnsOption.length; i++) {\n        this._columnsDestMap[i] = i;\n      }\n    }\n    reversedColumnIdxs.forEach(\n      function (columnIdx) {\n        if (columnIdx <= destColIdx) {\n          destColIdx -= 1;\n        }\n        columnOptions.unshift(clonedColumnsOption.splice(columnIdx, 1)[0]);\n        columnDefs.unshift(this._columnDefArray.splice(columnIdx, 1)[0]);\n        columnsDestMapItems.unshift(this._columnsDestMap.splice(columnIdx, 1)[0]);\n      }.bind(this)\n    );\n    clonedColumnsOption.splice(destColIdx + 1, 0, ...columnOptions);\n    // re-order the column definition metadata\n    this._columnDefArray.splice(destColIdx + 1, 0, ...columnDefs);\n    this._columnsDestMap.splice(destColIdx + 1, 0, ...columnsDestMapItems);\n\n    // clone the array so we can trigger that it's changed\n    this.option('columns', clonedColumnsOption, {\n      _context: {\n        writeback: true,\n        originalEvent: event,\n        internalSet: true\n      }\n    });\n    this._queueTask(\n      function () {\n        this._getLayoutManager().notifyTableUpdate(Table._UPDATE._COL_REORDER);\n      }.bind(this)\n    );\n\n    return this._columnsDestMap;\n  };\n\n  /**\n   * Refresh any translated strings in the context menu.\n   * @private\n   */\n  Table.prototype._refreshContextMenu = function () {\n    var menuContainer = this._menuContainer;\n    if (menuContainer) {\n      var listItems = menuContainer.querySelectorAll('[data-oj-command]');\n      for (var i = 0; i < listItems.length; i++) {\n        var contextMenuLabel = $(listItems[i]).children(Table.DOM_ELEMENT._A);\n        if (contextMenuLabel.length === 0 && listItems[i].tagName === 'OJ-OPTION') {\n          contextMenuLabel = $(listItems[i]);\n        }\n        if (contextMenuLabel.length > 0) {\n          var command = listItems[i].getAttribute(Table._DATA_OJ_COMMAND).split('-');\n          command = command[command.length - 1];\n\n          var commandString;\n          if (command === 'sort') {\n            commandString = this.getTranslatedString('labelSort');\n          } else if (command === 'sortAsc') {\n            commandString = this.getTranslatedString('labelSortAsc');\n          } else if (command === 'sortDsc') {\n            commandString = this.getTranslatedString('labelSortDsc');\n          } else if (command === 'resize') {\n            commandString = this.getTranslatedString('labelResizeColumn');\n          }\n          contextMenuLabel.contents().filter(function () {\n            return this.nodeType === 3;\n          })[0].nodeValue = commandString;\n        }\n      }\n    }\n  };\n\n  /**\n   * Remove the visual indicator for column drag over\n   * @private\n   */\n  Table.prototype._removeDragOverIndicatorColumn = function () {\n    this._getLayoutManager().removeDragOverIndicatorColumn();\n  };\n\n  /**\n   * Remove the visual indicator for row drag over\n   * @private\n   */\n  Table.prototype._removeDragOverIndicatorRow = function () {\n    var tableBody = this._getTableBody();\n    var indicatorRowBeforeElements = this._getTableElementsByClassName(\n      tableBody,\n      Table.CSS_CLASSES._TABLE_DATA_ROW_DRAG_INDICATOR_CLASS\n    );\n\n    var i;\n    var indicatorRowBeforeElementsCount = indicatorRowBeforeElements.length;\n    for (i = 0; i < indicatorRowBeforeElementsCount; i++) {\n      $(indicatorRowBeforeElements[i]).remove();\n    }\n\n    var tableBodyRows = this._getTableBodyRows();\n    if (tableBodyRows.length === 0) {\n      this._showNoDataMessage();\n    }\n  };\n\n  /**\n   * Remove a tr element from the tbody DOM\n   * @param {number} rowIdx  row index\n   * @param {Element=} rowElement the row element to remove\n   * @private\n   */\n  Table.prototype._removeTableBodyRow = function (rowIdx, rowElement) {\n    var tableBodyRow;\n    if (rowElement != null) {\n      tableBodyRow = rowElement;\n    } else {\n      tableBodyRow = this._getTableBodyRow(rowIdx);\n    }\n    if (tableBodyRow != null) {\n      ojcomponentcore.subtreeDetached(tableBodyRow);\n\n      if (this._hasCellTemplate || this._hasRowTemplate) {\n        this._cleanTemplateNodes(tableBodyRow);\n        // No need to set this._hasCellTemplate to false here since only one row is removed\n      }\n      $(tableBodyRow).remove();\n      this._clearCachedDomRowData();\n    }\n  };\n\n  /**\n   * Remove all tr elements from the tbody DOM\n   * @private\n   */\n  Table.prototype._removeAllTableBodyRows = function () {\n    var tableBodyRows = this._getTableBodyRows();\n    if (tableBodyRows.length > 0) {\n      var tableBody = this._getTableBody();\n      if (tableBody != null) {\n        ojcomponentcore.subtreeDetached(tableBody);\n        for (var i = 0; i < tableBodyRows.length; i++) {\n          if (this._hasCellTemplate || this._hasRowTemplate) {\n            this._cleanTemplateNodes(tableBodyRows[i]);\n          }\n          $(tableBodyRows[i]).remove();\n        }\n        if (this._hasCellTemplate || this._hasRowTemplate) {\n          this._hasCellTemplate = false;\n          this._hasRowTemplate = false;\n\n          // need to re-register DOM event listeners after cleaning the node\n          this._registerDomEventListeners();\n        }\n      }\n      this._clearCachedDomRowData();\n    }\n  };\n\n  /**\n   * Finds and removes the touch selection icons from the DOM\n   * @private\n   */\n  Table.prototype._removeTableBodyRowTouchSelectionAffordance = function () {\n    var tableContainer = this._getTableContainer();\n    var touchAffordance = this._getTableElementsByClassName(\n      tableContainer,\n      Table.CSS_CLASSES._TABLE_DATA_ROW_TOUCH_SELECTION_AFFORDANCE_TOUCH_AREA_CLASS\n    );\n\n    for (var i = 0; i < touchAffordance.length; i++) {\n      $(touchAffordance[i]).remove();\n    }\n  };\n\n  /**\n   * Set the attributes on the cell\n   * @param {number} rowIdx  row index\n   * @param {Object} rowKey  row key\n   * @param {number} columnIdx  column index\n   * @param {Element} tableBodyCell  td DOM element\n   * @private\n   */\n  Table.prototype._setTableBodyCellAttributes = function (rowIdx, rowKey, columnIdx, tableBodyCell) {\n    // if cell already has an id then bail\n    var cellId = tableBodyCell.getAttribute(Table.DOM_ATTR._ID);\n    if (cellId != null && cellId.length > 0) {\n      return;\n    }\n    var column = this._getColumnDefs()[columnIdx];\n    if (column == null) {\n      return;\n    }\n    var rowKeyStrHashCode = this._hashCode(rowKey);\n    if (rowKeyStrHashCode == null) {\n      rowKeyStrHashCode = this._hashCode(rowKey != null ? rowKey.toString() : rowIdx.toString());\n    }\n    cellId = this._getTableUID() + ':' + rowKeyStrHashCode + '_' + columnIdx;\n    tableBodyCell.setAttribute(Table.DOM_ATTR._ID, cellId); // @HTMLUpdateOK\n  };\n\n  /**\n   * Set the attributes on the row like rowIdx, etc\n   * @param {Object} row row\n   * @param {Element} tableBodyRow  tr DOM element\n   * @private\n   */\n  Table.prototype._setTableBodyRowAttributes = function (row, tableBodyRow) {\n    // eslint-disable-next-line no-param-reassign\n    tableBodyRow[Table._ROW_ITEM_EXPANDO] = row;\n  };\n\n  /**\n   * Set the attributes on the header like columndx, etc\n   * @param {number} columnIdx  column index\n   * @param {Element} tableHeaderColumn  th DOM element\n   * @private\n   */\n  Table.prototype._setTableHeaderColumnAttributes = function (columnIdx, tableHeaderColumn) {\n    var column = this._getColumnDefs()[columnIdx];\n\n    if (!tableHeaderColumn.getAttribute(Table.DOM_ATTR._ID)) {\n      tableHeaderColumn.setAttribute(Table.DOM_ATTR._ID, this._getTableUID() + ':' + column.id); // @HTMLUpdateOK\n    }\n  };\n\n  /**\n   * Set the attributes on the footer like columndx, etc\n   * @param {number} columnIdx  column index\n   * @param {Element} tableFooterCell  th DOM element\n   * @private\n   */\n  Table.prototype._setTableFooterColumnAttributes = function (columnIdx, tableFooterCell) {\n    var column = this._getColumnDefs()[columnIdx];\n\n    if (!tableFooterCell.getAttribute(Table.DOM_ATTR._ID)) {\n      // prettier-ignore\n      tableFooterCell.setAttribute( // @HTMLUpdateOK\n        Table.DOM_ATTR._ID,\n        this._getTableUID() + ':' + column.id + ':ftr'\n      );\n    }\n  };\n\n  /**\n   * Set the css class from all the cells in a column with the styleClass\n   * @param {number|null} columnIdx  column index\n   * @param {boolean} add add or remove the class\n   * @param {string} styleClass style class\n   * @private\n   */\n  Table.prototype._setTableColumnCellsClass = function (columnIdx, add, styleClass) {\n    var i;\n    var tableBodyRows = this._getTableBodyRows();\n    if (tableBodyRows.length > 0) {\n      if (columnIdx === null) {\n        var tableBodyCells = null;\n        var tableBody = this._getTableBody();\n        if (!add) {\n          tableBodyCells = this._getTableElementsByClassName(tableBody, styleClass);\n        } else {\n          tableBodyCells = this._getTableElementsByTagName(tableBody, Table.DOM_ELEMENT._TD);\n        }\n\n        if (tableBodyCells != null && tableBodyCells.length > 0) {\n          var tableBodyCellsCount = tableBodyCells.length;\n          for (i = 0; i < tableBodyCellsCount; i++) {\n            if (!add) {\n              tableBodyCells[i].classList.remove(styleClass);\n            } else {\n              tableBodyCells[i].classList.add(styleClass);\n            }\n          }\n        }\n      } else {\n        var tableBodyRowsCount = tableBodyRows.length;\n        for (i = 0; i < tableBodyRowsCount; i++) {\n          var tableBodyCell = this._getTableBodyCell(i, columnIdx, null);\n          if (!add) {\n            tableBodyCell.classList.remove(styleClass);\n          } else {\n            tableBodyCell.classList.add(styleClass);\n          }\n        }\n      }\n    }\n  };\n\n  /**\n   * Set the table body message.\n   * @param {string} message\n   * @private\n   */\n  Table.prototype._setTableBodyMessage = function (message) {\n    var tableBodyMessageCell = this._getTableBodyMessageCell();\n    $(tableBodyMessageCell).empty();\n    tableBodyMessageCell.appendChild(document.createTextNode(message)); // @HTMLUpdateOK\n  };\n\n  /**\n   * Style the initial table\n   * @private\n   */\n  Table.prototype._styleInitialTable = function () {\n    var table = this._getTable();\n    var tableHeader = this._getTableElementsByTagName(table, Table.DOM_ELEMENT._THEAD);\n    tableHeader = tableHeader.length > 0 ? tableHeader[0] : null;\n    var tableFooter = this._getTableElementsByTagName(table, Table.DOM_ELEMENT._TFOOT);\n    tableFooter = tableFooter.length > 0 ? tableFooter[0] : null;\n    var tableBody = this._getTableElementsByTagName(table, Table.DOM_ELEMENT._TBODY);\n    tableBody = tableBody.length > 0 ? tableBody[0] : null;\n\n    // set the tabindex\n    var tabIndex = parseInt(this._getRootElement().getAttribute(Table.DOM_ATTR._TABINDEX), 10);\n    if (tabIndex !== -1) {\n      table.setAttribute(Table.DOM_ATTR._TABINDEX, '0'); // @HTMLUpdateOK\n      // set focusable\n      this._focusable({\n        element: table,\n        applyHighlight: true,\n        setupHandlers: this._focusSetupHandlers.bind(this)\n      });\n    } else {\n      table.setAttribute(Table.DOM_ATTR._TABINDEX, '-1'); // @HTMLUpdateOK\n      var noop = function () {};\n      this._focusSetupHandlers(noop, noop);\n    }\n    table.setAttribute(Table.DOM_ATTR._ARIA_LABELLEDBY, this._getTableContainer().id); // @HTMLUpdateOK\n    this._styleTableHeader(tableHeader);\n    this._styleTableFooter(tableFooter);\n    this._styleTableBody(tableBody);\n    this._styleTableContainer(this._getTableContainer());\n  };\n\n  /**\n   * Style the tbody element\n   * @param {Element} tableBody tbody DOM element\n   * @private\n   */\n  Table.prototype._styleTableBody = function (tableBody) {\n    tableBody.classList.add(Table.CSS_CLASSES._TABLE_BODY_CLASS);\n    // Add a special marker attribute to tell child components that they are container within table\n    tableBody.setAttribute(ojcomponentcore._OJ_CONTAINER_ATTR, this.widgetName); // @HTMLUpdateOK\n    tableBody.setAttribute(Context._OJ_CONTEXT_ATTRIBUTE, ''); // @HTMLUpdateOK\n  };\n\n  /**\n   * Style the td element\n   * @param {number} columnIdx  column index\n   * @param {Element} tableBodyCell  td DOM element\n   * @param {boolean} isNew is new cell\n   * @private\n   */\n  Table.prototype._styleTableBodyCell = function (columnIdx, tableBodyCell, isNew) {\n    var column = this._getColumnDefs()[columnIdx];\n\n    if (isNew || !tableBodyCell.classList.contains(Table.CSS_CLASSES._TABLE_DATA_CELL_CLASS)) {\n      tableBodyCell.classList.add(Table.CSS_CLASSES._TABLE_DATA_CELL_CLASS);\n      tableBodyCell.classList.add(Table.CSS_CLASSES._TABLE_DATE_CELL_FORM_CONTROL_CLASS);\n    }\n\n    // merge styling with existing styling in case it was specified in a custom renderer\n    var tableBodyCellStyle = tableBodyCell.getAttribute(Table.DOM_ATTR._STYLE) || {};\n    if (column != null && column.style != null && (isNew || tableBodyCellStyle !== column.style)) {\n      DataCollectionUtils.applyMergedInlineStyles(tableBodyCell, tableBodyCellStyle, column.style);\n    }\n    // Use jquery hasClass and addClass because column.className can contain multiple classes\n    if (\n      column != null &&\n      column.className != null &&\n      (isNew || !$(tableBodyCell).hasClass(column.className))\n    ) {\n      $(tableBodyCell).addClass(column.className);\n    }\n\n    if (\n      this._isVerticalGridEnabled() &&\n      (isNew || !tableBodyCell.classList.contains(Table.CSS_CLASSES._TABLE_VGRID_LINES_CLASS))\n    ) {\n      tableBodyCell.classList.add(Table.CSS_CLASSES._TABLE_VGRID_LINES_CLASS);\n    }\n\n    // apply frozen edge classes if specified\n    if (this._isStickyLayoutEnabled()) {\n      var frozenEdge = column != null ? column.frozenEdge : null;\n      if (frozenEdge === Table._OPTION_FROZEN_EDGE._START) {\n        tableBodyCell.classList.add(Table.CSS_CLASSES._TABLE_FROZEN_START);\n        tableBodyCell.classList.remove(Table.CSS_CLASSES._TABLE_FROZEN_END);\n      } else if (frozenEdge === Table._OPTION_FROZEN_EDGE._END) {\n        tableBodyCell.classList.add(Table.CSS_CLASSES._TABLE_FROZEN_END);\n        tableBodyCell.classList.remove(Table.CSS_CLASSES._TABLE_FROZEN_START);\n      } else {\n        tableBodyCell.classList.remove(Table.CSS_CLASSES._TABLE_FROZEN_END);\n        tableBodyCell.classList.remove(Table.CSS_CLASSES._TABLE_FROZEN_START);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._styleTableAddRowCell = function (columnIndex, addRowCell) {\n    var column = this._getColumnDefs()[columnIndex];\n\n    // apply frozen edge classes if specified\n    var frozenEdge = column != null ? column.frozenEdge : null;\n    if (frozenEdge === Table._OPTION_FROZEN_EDGE._START) {\n      addRowCell.classList.add(Table.CSS_CLASSES._TABLE_FROZEN_START);\n      addRowCell.classList.remove(Table.CSS_CLASSES._TABLE_FROZEN_END);\n    } else if (frozenEdge === Table._OPTION_FROZEN_EDGE._END) {\n      addRowCell.classList.add(Table.CSS_CLASSES._TABLE_FROZEN_END);\n      addRowCell.classList.remove(Table.CSS_CLASSES._TABLE_FROZEN_START);\n    } else {\n      addRowCell.classList.remove(Table.CSS_CLASSES._TABLE_FROZEN_END);\n      addRowCell.classList.remove(Table.CSS_CLASSES._TABLE_FROZEN_START);\n    }\n\n    if (this._isVerticalGridEnabled()) {\n      addRowCell.classList.add(Table.CSS_CLASSES._TABLE_VGRID_LINES_CLASS);\n    }\n  };\n\n  /**\n   * Style the tr element\n   * @param {Element} tableBodyRow  tr DOM element\n   * @param {boolean} isNew is new row\n   * @private\n   */\n  Table.prototype._styleTableBodyRow = function (tableBodyRow, isNew) {\n    if (isNew || !tableBodyRow.classList.contains(Table.CSS_CLASSES._TABLE_DATA_ROW_CLASS)) {\n      tableBodyRow.classList.add(Table.CSS_CLASSES._TABLE_DATA_ROW_CLASS);\n    }\n\n    if (this._invokeRowStickyCallback(tableBodyRow[Table._ROW_ITEM_EXPANDO]) === Table._CONST_ON) {\n      tableBodyRow.classList.add(Table.CSS_CLASSES._TABLE_STICKY_ROW_CLASS);\n    }\n  };\n\n  /**\n   * Style the table container\n   * @param {Element} tableContainer  div DOM element\n   * @private\n   */\n  Table.prototype._styleTableContainer = function (tableContainer) {\n    if (this.options.display === Table._OPTION_DISPLAY._GRID) {\n      tableContainer.classList.add(Table.CSS_CLASSES._TABLE_COMPACT_CLASS);\n    } else {\n      tableContainer.classList.remove(Table.CSS_CLASSES._TABLE_COMPACT_CLASS);\n    }\n    var editMode = this.options.editMode;\n    if (editMode != null && editMode !== Table._OPTION_EDIT_MODE._NONE) {\n      tableContainer.classList.add(Table.CSS_CLASSES._TABLE_EDIT_CLASS);\n    } else {\n      tableContainer.classList.remove(Table.CSS_CLASSES._TABLE_EDIT_CLASS);\n    }\n    if (this._isHorizontalGridEnabled()) {\n      tableContainer.classList.add(Table.CSS_CLASSES._TABLE_HGRID_CLASS);\n    } else {\n      tableContainer.classList.remove(Table.CSS_CLASSES._TABLE_HGRID_CLASS);\n    }\n    if (this._isStickyLayoutEnabled()) {\n      tableContainer.classList.add(Table.CSS_CLASSES._TABLE_STICKY_CLASS);\n    } else {\n      tableContainer.classList.remove(Table.CSS_CLASSES._TABLE_STICKY_CLASS);\n    }\n    if (this._isAddNewRowEnabled()) {\n      tableContainer.classList.add(Table.CSS_CLASSES._TABLE_ADD_ROW_CLASS);\n    } else {\n      tableContainer.classList.remove(Table.CSS_CLASSES._TABLE_ADD_ROW_CLASS);\n    }\n    if (this._isExternalScrollEnabled()) {\n      tableContainer.classList.add(Table.CSS_CLASSES._TABLE_EXTERNAL_SCROLL_CLASS);\n      if (!this._isTableHeaderless()) {\n        var top = '0';\n        if (this.options.scrollPolicyOptions.scrollerOffsetTop != null) {\n          top = this.options.scrollPolicyOptions.scrollerOffsetTop;\n        }\n        this._updateHeaderTop(top);\n      }\n      if (!this._isTableFooterless()) {\n        var bottom = '0';\n        if (this.options.scrollPolicyOptions.scrollerOffsetBottom != null) {\n          bottom = this.options.scrollPolicyOptions.scrollerOffsetBottom;\n        }\n        this._updateFooterBottom(bottom);\n      }\n    } else if (this._isStickyLayoutEnabled()) {\n      tableContainer.classList.remove(Table.CSS_CLASSES._TABLE_EXTERNAL_SCROLL_CLASS);\n      if (!this._isTableHeaderless()) {\n        this._updateHeaderTop('');\n      }\n      if (!this._isTableFooterless()) {\n        this._updateFooterBottom('');\n      }\n    }\n    if (this._getRowSelectionMode() === Table._OPTION_SELECTION_MODES._MULTIPLE) {\n      tableContainer.classList.add(Table.CSS_CLASSES._TABLE_MULTI_ROW_SELECT_CLASS);\n    } else {\n      tableContainer.classList.remove(Table.CSS_CLASSES._TABLE_MULTI_ROW_SELECT_CLASS);\n    }\n  };\n\n  /**\n   * Style the tfoot element\n   * @param {Element} tableFooter tfoot DOM element\n   * @private\n   */\n  Table.prototype._styleTableFooter = function (tableFooter) {\n    if (!tableFooter) {\n      return;\n    }\n    tableFooter.classList.add(Table.CSS_CLASSES._TABLE_FOOTER_CLASS);\n    var tableFooterRow = this._getTableElementsByTagName(tableFooter, Table.DOM_ELEMENT._TR)[0];\n    tableFooterRow.classList.add(Table.CSS_CLASSES._TABLE_FOOTER_ROW_CLASS);\n    tableFooterRow.setAttribute(Context._OJ_CONTEXT_ATTRIBUTE, ''); // @HTMLUpdateOK\n  };\n\n  /**\n   * Style the td element\n   * @param {number} columnIdx  column index\n   * @param {Element} tableFooterCell  td DOM element\n   * @private\n   */\n  Table.prototype._styleTableFooterCell = function (columnIdx, tableFooterCell) {\n    var column = this._getColumnDefs()[columnIdx];\n\n    // merge styling with existing styling in case it was specified in a custom renderer\n    var tableFooterCellStyle = tableFooterCell.getAttribute(Table.DOM_ATTR._STYLE) || {};\n    if (column.footerStyle != null && tableFooterCellStyle !== column.footerStyle) {\n      DataCollectionUtils.applyMergedInlineStyles(\n        tableFooterCell,\n        tableFooterCellStyle,\n        column.footerStyle\n      );\n    }\n    if (!tableFooterCell.classList.contains(Table.CSS_CLASSES._TABLE_FOOTER_CELL_CLASS)) {\n      tableFooterCell.classList.add(Table.CSS_CLASSES._TABLE_FOOTER_CELL_CLASS);\n    }\n    if (\n      this._isVerticalGridEnabled() &&\n      !tableFooterCell.classList.contains(Table.CSS_CLASSES._TABLE_VGRID_LINES_CLASS)\n    ) {\n      tableFooterCell.classList.add(Table.CSS_CLASSES._TABLE_VGRID_LINES_CLASS);\n    }\n    if (column.footerClassName) {\n      // Use jquery addClass because column.footerClassName can contain multiple classes\n      $(tableFooterCell).addClass(column.footerClassName);\n    }\n\n    // apply frozen edge classes if specified\n    if (this._isStickyLayoutEnabled()) {\n      if (column.frozenEdge === Table._OPTION_FROZEN_EDGE._START) {\n        tableFooterCell.classList.add(Table.CSS_CLASSES._TABLE_FROZEN_START);\n        tableFooterCell.classList.remove(Table.CSS_CLASSES._TABLE_FROZEN_END);\n      } else if (column.frozenEdge === Table._OPTION_FROZEN_EDGE._END) {\n        tableFooterCell.classList.add(Table.CSS_CLASSES._TABLE_FROZEN_END);\n        tableFooterCell.classList.remove(Table.CSS_CLASSES._TABLE_FROZEN_START);\n      } else {\n        tableFooterCell.classList.remove(Table.CSS_CLASSES._TABLE_FROZEN_END);\n        tableFooterCell.classList.remove(Table.CSS_CLASSES._TABLE_FROZEN_START);\n      }\n    }\n  };\n\n  /**\n   * Style the thead element\n   * @param {Element} tableHeader thead DOM element\n   * @private\n   */\n  Table.prototype._styleTableHeader = function (tableHeader) {\n    if (!tableHeader) {\n      return;\n    }\n    tableHeader.classList.add(Table.CSS_CLASSES._TABLE_HEADER_CLASS);\n    // eslint-disable-next-line no-param-reassign\n    tableHeader.style[Table.CSS_PROP._DISPLAY] = 'table-header-group';\n    var tableHeaderRow = this._getTableElementsByTagName(tableHeader, Table.DOM_ELEMENT._TR)[0];\n    tableHeaderRow.classList.add(Table.CSS_CLASSES._TABLE_HEADER_ROW_CLASS);\n    tableHeaderRow.style[Table.CSS_PROP._POSITION] = Table.CSS_VAL._RELATIVE;\n    tableHeaderRow.setAttribute(Context._OJ_CONTEXT_ATTRIBUTE, ''); // @HTMLUpdateOK\n  };\n\n  /**\n   * Style the th element\n   * @param {number} columnIdx  column index\n   * @param {Element} tableHeaderColumn  th DOM element\n   * @param {boolean} isNew is new column\n   * @private\n   */\n  Table.prototype._styleTableHeaderColumn = function (columnIdx, tableHeaderColumn, isNew) {\n    var column = this._getColumnDefs()[columnIdx];\n\n    if (isNew || !tableHeaderColumn.classList.contains(Table.CSS_CLASSES._COLUMN_HEADER_CELL_CLASS)) {\n      tableHeaderColumn.classList.add(Table.CSS_CLASSES._COLUMN_HEADER_CELL_CLASS);\n    }\n    if (column.sortable === Table._OPTION_ENABLED) {\n      tableHeaderColumn.classList.add(Table.CSS_CLASSES._TABLE_SORT_CLASS);\n    }\n    if (column.showRequired === true && this._isStickyLayoutEnabled()) {\n      tableHeaderColumn.classList.add(Table.CSS_CLASSES._TABLE_SHOW_REQUIRED_CLASS);\n    }\n    if (this._isVerticalGridEnabled()) {\n      if (\n        isNew ||\n        !tableHeaderColumn.classList.contains(Table.CSS_CLASSES._TABLE_VGRID_LINES_CLASS)\n      ) {\n        tableHeaderColumn.classList.add(Table.CSS_CLASSES._TABLE_VGRID_LINES_CLASS);\n      }\n    }\n    // merge styling with existing styling in case it was specified in a custom renderer\n    var tableHeaderColumnStyle = tableHeaderColumn.getAttribute(Table.DOM_ATTR._STYLE) || {};\n    if (column.headerStyle != null && (isNew || tableHeaderColumnStyle !== column.headerStyle)) {\n      DataCollectionUtils.applyMergedInlineStyles(\n        tableHeaderColumn,\n        tableHeaderColumnStyle,\n        column.headerStyle\n      );\n    }\n    // Use jquery hasClass and addClass because column.headerClassName can contain multiple classes\n    if (\n      column.headerClassName != null &&\n      (isNew || !$(tableHeaderColumn).hasClass(column.headerClassName))\n    ) {\n      $(tableHeaderColumn).addClass(column.headerClassName);\n    }\n\n    // apply frozen edge classes if specified\n    if (this._isStickyLayoutEnabled()) {\n      if (column.frozenEdge === Table._OPTION_FROZEN_EDGE._START) {\n        tableHeaderColumn.classList.add(Table.CSS_CLASSES._TABLE_FROZEN_START);\n        tableHeaderColumn.classList.remove(Table.CSS_CLASSES._TABLE_FROZEN_END);\n      } else if (column.frozenEdge === Table._OPTION_FROZEN_EDGE._END) {\n        tableHeaderColumn.classList.add(Table.CSS_CLASSES._TABLE_FROZEN_END);\n        tableHeaderColumn.classList.remove(Table.CSS_CLASSES._TABLE_FROZEN_START);\n      } else {\n        tableHeaderColumn.classList.remove(Table.CSS_CLASSES._TABLE_FROZEN_END);\n        tableHeaderColumn.classList.remove(Table.CSS_CLASSES._TABLE_FROZEN_START);\n      }\n    }\n  };\n\n  /**\n   * Return all the colspanned logical elements\n   * @param {Array} elementArray array of DOM elements\n   * @return {Array|null} array of DOM elements\n   * @private\n   */\n  Table.prototype._getColspanLogicalElements = function (elementArray) {\n    var indexedElementArrayNum = 0;\n    var indexedElementArray = [];\n    var elementArrayCount = elementArray.length;\n    for (var i = 0; i < elementArrayCount; i++) {\n      var colSpan = elementArray[i].getAttribute(Table.DOM_ATTR._COLSPAN);\n      if (colSpan != null) {\n        colSpan = parseInt(colSpan, 10);\n        for (var j = 0; j < colSpan; j++) {\n          indexedElementArray[indexedElementArrayNum + j] = elementArray[i];\n        }\n        indexedElementArrayNum += colSpan;\n      } else {\n        indexedElementArray[indexedElementArrayNum] = elementArray[i];\n        indexedElementArrayNum += 1;\n      }\n    }\n    return indexedElementArray;\n  };\n\n  /**\n   * Helper function which returns if the horizontal grid lines are enabled.\n   * @return {boolean} enabled\n   * @private\n   */\n  Table.prototype._isHorizontalGridEnabled = function () {\n    if (this.options.horizontalGridVisible === Table._OPTION_ENABLED) {\n      return true;\n    }\n    if (this.options.horizontalGridVisible === Table._OPTION_AUTO) {\n      if (this.options.display === Table._OPTION_DISPLAY._GRID) {\n        return true;\n      }\n      if (this._getDefaultOptions().horizontalGridVisible === 'enabled') {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Helper function which returns if the select all control should be rendered.\n   * @return {boolean} enabled\n   * @private\n   */\n  Table.prototype._isSelectAllControlVisible = function () {\n    if (this._isDefaultSelectorEnabled() && this.options.selectAllControl !== 'hidden') {\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * Helper function which returns if the vertical grid lines are enabled.\n   * @return {boolean} enabled\n   * @private\n   */\n  Table.prototype._isVerticalGridEnabled = function () {\n    return (\n      this.options.verticalGridVisible === Table._OPTION_ENABLED ||\n      (this.options.verticalGridVisible === Table._OPTION_AUTO &&\n        this.options.display === Table._OPTION_DISPLAY._GRID)\n    );\n  };\n\n  /**\n   * Refresh the table touch affordance glass pane position.\n   * @private\n   */\n  Table.prototype._refreshTouchAffordanceGlassPanePosition = function () {\n    var touchAffordanceGlassPane = this._getTouchAffordanceGlassPane();\n    if (touchAffordanceGlassPane) {\n      var scroller = this._getLayoutManager().getScroller();\n      var scrollerRect = scroller.getBoundingClientRect();\n      var tableContainer = this._getTableContainer();\n      var tableContainerRect = tableContainer.getBoundingClientRect();\n\n      touchAffordanceGlassPane.style[Table.CSS_PROP._TOP] =\n        scrollerRect.top - tableContainerRect.top + Table.CSS_VAL._PX;\n      touchAffordanceGlassPane.style[Table.CSS_PROP._BOTTOM] =\n        scrollerRect.bottom - tableContainerRect.bottom + Table.CSS_VAL._PX;\n\n      this._moveTableBodyRowTouchSelectionAffordanceTop();\n      this._moveTableBodyRowTouchSelectionAffordanceBottom();\n    }\n  };\n\n  /**\n   * Refresh the table status position\n   * @param {boolean=} showStatus whether to show the status message\n   * @private\n   */\n  Table.prototype._refreshTableStatusPosition = function (showStatus) {\n    // if status message is hidden then return\n\n    var tableContainer = this._getTableContainer();\n    var tableContainerHeight = tableContainer.clientHeight;\n    var tableStatusMessage = this._getTableStatusMessage();\n\n    var statusMessageTop = 0;\n    var statusMessageHeight = tableContainerHeight;\n    var tableHeader = this._getTableHeader();\n    if (tableHeader != null) {\n      var headerHeight = tableHeader.offsetHeight;\n      statusMessageTop = headerHeight;\n      statusMessageHeight -= headerHeight;\n    }\n    var tableFooter = this._getTableFooter();\n    if (tableFooter != null) {\n      statusMessageHeight -= tableFooter.offsetHeight;\n    }\n    var tableBottomSlot = this._getTableBottomSlot();\n    if (tableBottomSlot != null) {\n      statusMessageHeight -= tableBottomSlot.offsetHeight;\n    }\n\n    if (this._isSkeletonSupport()) {\n      // render enough skeleton rows to fill viewport\n      var count = 0;\n      var skeletonDimension = this._getDefaultSkeletonDimension();\n      if (skeletonDimension.width > 0 && skeletonDimension.height > 0) {\n        count = Math.max(1, Math.ceil(statusMessageHeight / skeletonDimension.height));\n      }\n      for (var i = 0; i < count; i++) {\n        tableStatusMessage.appendChild(this._createSkeletonRow()); // @HTMLUpdateOK\n      }\n      this._skeletonFadeInEndListener = function () {\n        tableStatusMessage.classList.remove(Table.CSS_CLASSES._ANIMATION_SKELETON_FADE_IN_CLASS);\n        var skeletons = tableStatusMessage.querySelectorAll('.oj-table-skeleton');\n        skeletons.forEach(function (row) {\n          row.classList.add('oj-animation-skeleton');\n        });\n        tableStatusMessage.removeEventListener('animationend', this._skeletonFadeInEndListener);\n      }.bind(this);\n      tableStatusMessage.addEventListener('animationend', this._skeletonFadeInEndListener);\n      tableStatusMessage.classList.add(Table.CSS_CLASSES._ANIMATION_SKELETON_FADE_IN_CLASS);\n    } else if (statusMessageHeight <= 40) {\n      // use overall container height if space reserved for table body is too small\n      statusMessageTop = 0;\n      statusMessageHeight = tableContainerHeight;\n    }\n\n    // size the messaging background\n    tableStatusMessage.style[Table.CSS_PROP._TOP] = statusMessageTop + Table.CSS_VAL._PX;\n    tableStatusMessage.style[Table.CSS_PROP._HEIGHT] = statusMessageHeight + Table.CSS_VAL._PX;\n    tableStatusMessage.style[Table.CSS_PROP._WIDTH] = tableContainer.clientWidth + Table.CSS_VAL._PX;\n\n    if (showStatus) {\n      tableStatusMessage.style[Table.CSS_PROP._DISPLAY] = Table.CSS_VAL._INLINE;\n      this._statusMessageShown = true;\n    }\n\n    if (!this._isSkeletonSupport()) {\n      // refresh the status message position\n      var tableStatusMessageText = tableStatusMessage.children[0];\n      tableStatusMessageText.style[Table.CSS_PROP._TOP] =\n        (statusMessageHeight - tableStatusMessageText.offsetHeight) / 2 + Table.CSS_VAL._PX;\n    }\n  };\n\n  /**\n   * Creates a skeleton representing a single item.\n   * @private\n   */\n  Table.prototype._createSkeletonRow = function () {\n    var content = document.createElement('div');\n    content.className = Table.CSS_CLASSES._TABLE_SKELETON_CONTAINER_CLASS;\n    var innerContent = document.createElement('div');\n    innerContent.className = Table.CSS_CLASSES._TABLE_SKELETON_CLASS;\n    content.appendChild(innerContent); // @HTMLUpdateOK\n    return content;\n  };\n\n  /**\n   * Get the dimension of the default skeleton row\n   * @private\n   */\n  Table.prototype._getDefaultSkeletonDimension = function () {\n    if (this._defaultSkeletonDim == null) {\n      var tableContainer = this._getTableContainer();\n      var skeleton = this._createSkeletonRow();\n      skeleton.style.visibility = 'hidden';\n      skeleton.style.display = 'block';\n      tableContainer.appendChild(skeleton); // @HTMLUpdateOK\n      var dim = { width: skeleton.offsetWidth, height: skeleton.offsetHeight };\n      tableContainer.removeChild(skeleton);\n      if (dim.height > 0 && dim.width > 0) {\n        // cache the value only if it's valid\n        this._defaultSkeletonDim = dim;\n      }\n      return dim;\n    }\n    return this._defaultSkeletonDim;\n  };\n\n  /**\n   * Cache DOM Element\n   * @param {string} key key for identifying the element\n   * @param {Element} element  DOM element\n   * @private\n   */\n  Table.prototype._cacheDomElement = function (key, element) {\n    if (!this._domCache) {\n      this._domCache = {};\n    }\n    this._domCache[key] = element;\n  };\n\n  /**\n   * Clear the DOM cache\n   * @param {string|null} key key for identifying the element\n   * @private\n   */\n  Table.prototype._clearDomCache = function (key) {\n    if (key && this._domCache) {\n      delete this._domCache[key];\n    } else {\n      this._domCache = {};\n    }\n  };\n\n  /**\n   * Get cached DOM Element\n   * @param {string} key key for identifying the element\n   * @return {Element|null} returns the cached DOM element\n   * @private\n   */\n  Table.prototype._getCachedDomElement = function (key) {\n    if (this._domCache) {\n      return this._domCache[key];\n    }\n    return null;\n  };\n\n  /**\n   * Check cached DOM Element\n   * @param {string} key key for identifying the element\n   * @return {boolean} returns whether the key is cached\n   * @private\n   */\n  Table.prototype._isCachedDomElement = function (key) {\n    if (!this._domCache) {\n      this._domCache = {};\n    }\n    return Object.keys(this._domCache).indexOf(key) !== -1;\n  };\n\n  /**\n   * Get the DOM element contained in table\n   * @param {string} className css class name for the table element\n   * @param {boolean=} onlyChildren check only the direct children if true\n   * @return {Element|null} returns the DOM element\n   * @private\n   */\n  Table.prototype._getTableElementByClassName = function (className, onlyChildren) {\n    if (!this._isCachedDomElement(className)) {\n      var tableContainer = this._getTableContainer();\n      if (tableContainer) {\n        this._cacheDomElement(className, null);\n\n        if (!onlyChildren) {\n          var domElement = this._getTableElementsByClassName(tableContainer, className);\n          if (domElement.length > 0) {\n            this._cacheDomElement(className, domElement[0]);\n          }\n        } else {\n          this._cacheDomElement(\n            className,\n            this._getChildElementByClassName(tableContainer, className)\n          );\n\n          if (this._getCachedDomElement(className) == null) {\n            var table = this._getTable();\n            this._cacheDomElement(className, this._getChildElementByClassName(table, className));\n          }\n        }\n      }\n    }\n    return this._getCachedDomElement(className);\n  };\n\n  /**\n   * Get the child DOM element by class name\n   * @param {Element} parentElement parent element\n   * @param {string} className css class name for the table element\n   * @return {Element|null} returns the DOM element\n   * @private\n   */\n  Table.prototype._getChildElementByClassName = function (parentElement, className) {\n    if (parentElement.childNodes != null && parentElement.childNodes.length > 0) {\n      for (var i = 0; i < parentElement.childNodes.length; i++) {\n        if (\n          parentElement.childNodes[i].classList != null &&\n          parentElement.childNodes[i].classList.contains(className)\n        ) {\n          return parentElement.childNodes[i];\n        }\n      }\n    }\n    return null;\n  };\n\n  /**\n   * Get descendant elements by class name. Only those directly owned by this table (or clone of) is included.\n   * @param {Element} parentElement parent element\n   * @param {string} name css class name to match on\n   * @param {boolean=} isClone Whether parentElement is a container clone\n   * @return {Array} The matched elements\n   * @private\n   */\n  Table.prototype._getTableElementsByClassName = function (parentElement, name, isClone) {\n    var elements = parentElement.getElementsByClassName(name);\n    return this._filterTableOwnedElements(elements, isClone ? parentElement : null);\n  };\n\n  /**\n   * Get descendant elements by tag name. Only those directly owned by this table (or clone of) is included.\n   * @param {Element} parentElement parent element\n   * @param {string} name tag name to match on\n   * @param {boolean=} isClone Whether parentElement is a container clone\n   * @return {Array} The matched elements\n   * @private\n   */\n  Table.prototype._getTableElementsByTagName = function (parentElement, name, isClone) {\n    var elements = parentElement.getElementsByTagName(name);\n    return this._filterTableOwnedElements(elements, isClone ? parentElement : null);\n  };\n\n  /**\n   * Get descendant elements by selector. Only those directly owned by this table (or clone of) is included.\n   * @param {Element} parentElement parent element\n   * @param {string} selector selector\n   * @param {boolean=} isClone Whether parentElement is a container clone\n   * @return {Array} The matched elements\n   * @private\n   */\n  Table.prototype._tableQuerySelectorAll = function (parentElement, selector, isClone) {\n    var elements = parentElement.querySelectorAll(selector);\n    return this._filterTableOwnedElements(elements, isClone ? parentElement : null);\n  };\n\n  /**\n   * Return subset of elements directly owned by this table (or clone of) given an array of elements.\n   * @param {Element} parentElement The parentElement that initiated this call\n   * @param {Array} elements The array of elements\n   * @param {Element=} containerClone The cloned container if querying against a table clone.\n   * @return {Array} Subset of the given array directly owned by this table (or clone of)\n   * @private\n   */\n  Table.prototype._filterTableOwnedElements = function (elements, containerClone) {\n    var tableContainer;\n    var table;\n    if (!containerClone) {\n      tableContainer = this._getTableContainer();\n      table = this._getTable();\n    } else {\n      tableContainer = containerClone;\n      var tables = containerClone.getElementsByTagName(Table.DOM_ELEMENT._TABLE);\n      for (var i = 0; i < tables.length; i++) {\n        if (\n          tables[i].parentNode === containerClone ||\n          tables[i].parentNode.parentNode === containerClone\n        ) {\n          table = tables[i];\n          break;\n        }\n      }\n    }\n    return Array.prototype.filter.call(\n      elements,\n      function (element) {\n        return this._isTableOwned(element, tableContainer, table);\n      }.bind(this)\n    );\n  };\n\n  /**\n   * Checks whether given element is directly owned by this table, or a clone of this table.\n   * @param {Element} element The query element\n   * @param {Element=} containerClone The cloned container if querying against a table clone.\n   * @param {Element=} tableClone The table child of the cloned container.\n   * @return {boolean} Whether the element is directly owned by this table (or clone of).\n   * @private\n   */\n  Table.prototype._isTableOwned = function (element, containerClone, tableClone) {\n    // An element inside this table's container is not directly owned by this table if\n    // the element is part of a child oj-table, or part of a child html table\n    var tableContainer = containerClone || this._getTableContainer();\n    var table = containerClone ? tableClone : this._getTable();\n    if (tableContainer) {\n      if (table) {\n        var elemParentTable = this._getFirstAncestor(element, table.tagName);\n        if (elemParentTable === table) {\n          return true;\n        }\n        if (elemParentTable) {\n          return false;\n        }\n      }\n      var elemContainer = this._getFirstAncestor(\n        element,\n        '.' + Table.CSS_CLASSES._TABLE_CONTAINER_CLASS\n      );\n      if (elemContainer === tableContainer) {\n        return true;\n      }\n      if (elemContainer) {\n        return false;\n      }\n      if (!tableContainer.contains(element)) {\n        // element not added to container yet but will be, and if reached here, element has no other table ancestor\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Focus setup handlers\n   * @private\n   */\n  Table.prototype._focusSetupHandlers = function (focusInHandler, focusOutHandler) {\n    this._setFocusInHandler(focusInHandler);\n    this._setFocusOutHandler(focusOutHandler);\n  };\n\n  /**\n   * Gets sort icon container from header\n   * @param {Element} header the header to get sort icon container for\n   * @return {Element} sort icon container\n   * @private\n   */\n  Table.prototype._getSortIconContainer = function (header) {\n    return this._getTableElementsByClassName(\n      header,\n      Table.CSS_CLASSES._TABLE_SORT_ICON_CONTAINER_CLASS\n    )[0];\n  };\n\n  /**\n   * Gets sort icon from header\n   * @param {Element} header the header to get sort icon for\n   * @return {Element} sort icon\n   * @private\n   */\n  Table.prototype._getSortIcon = function (header) {\n    var sortContainer = this._getSortIconContainer(header);\n    return sortContainer != null ? sortContainer.firstChild : null;\n  };\n\n  /**\n   * Get selector cell of particular row\n   * @param {Element} tableBodyRow  tr DOM element\n   * @return {Element|null} td DOM element\n   * @private\n   */\n  Table.prototype._getTableBodySelectorCell = function (tableBodyRow) {\n    if (tableBodyRow != null) {\n      var children = tableBodyRow.children;\n      for (var i = 0; i < children.length; i++) {\n        if (children[i].classList.contains(Table.CSS_CLASSES._TABLE_SELECTOR_CELL_CLASS)) {\n          return children[i];\n        }\n      }\n    }\n    return null;\n  };\n\n  /**\n   * Get selector column\n   * @return {Element|null} th DOM element\n   * @private\n   */\n  Table.prototype._getTableSelectorColumn = function () {\n    var tableHeaderRow = this._getTableHeaderRow();\n    if (tableHeaderRow != null) {\n      var children = tableHeaderRow.children;\n      for (var i = 0; i < children.length; i++) {\n        if (children[i].classList.contains(Table.CSS_CLASSES._COLUMN_HEADER_SELECTOR_CELL_CLASS)) {\n          return children[i];\n        }\n      }\n    }\n    return null;\n  };\n\n  /**\n   * Get selector footer cell\n   * @return {Element|null} th DOM element\n   * @private\n   */\n  Table.prototype._getTableFooterSelectorCell = function () {\n    var tableFooterRow = this._getTableFooterRow();\n    if (tableFooterRow != null) {\n      var children = tableFooterRow.children;\n      for (var i = 0; i < children.length; i++) {\n        if (children[i].classList.contains(Table.CSS_CLASSES._TABLE_FOOTER_SELECTOR_CELL_CLASS)) {\n          return children[i];\n        }\n      }\n    }\n    return null;\n  };\n\n  /**\n   * Returns whether the gutter start column is enabled\n   * @return {boolean} true or false\n   * @private\n   */\n  Table.prototype._isGutterStartColumnEnabled = function () {\n    if (this._isGutterStartColumnEnabledCache == null) {\n      if (this.options.display === Table._OPTION_DISPLAY._GRID || !this._isStickyLayoutEnabled()) {\n        this._isGutterStartColumnEnabledCache = false;\n      } else {\n        const rootElem = this._getRootElement();\n        this._isGutterStartColumnEnabledCache =\n          window.getComputedStyle(rootElem).getPropertyValue('--oj-core-gutter-start').length > 0;\n      }\n    }\n    return this._isGutterStartColumnEnabledCache;\n  };\n\n  /**\n   * Returns whether the gutter end column is enabled\n   * @return {boolean} true or false\n   * @private\n   */\n  Table.prototype._isGutterEndColumnEnabled = function () {\n    if (this._isGutterEndColumnEnabledCache == null) {\n      if (this.options.display === Table._OPTION_DISPLAY._GRID || !this._isStickyLayoutEnabled()) {\n        this._isGutterEndColumnEnabledCache = false;\n      } else {\n        const rootElem = this._getRootElement();\n        this._isGutterEndColumnEnabledCache =\n          window.getComputedStyle(rootElem).getPropertyValue('--oj-core-gutter-end').length > 0;\n      }\n    }\n    return this._isGutterEndColumnEnabledCache;\n  };\n\n  /**\n   * @param {string} edge start or end\n   * @private\n   */\n  Table.prototype._getTableGutterWidth = function (edge) {\n    let width = edge === 'start' ? this._gutterStartWidth : this._gutterEndWidth;\n    if (width == null || width === 0) {\n      let gutterCell = this._getTableGutterCell('header', edge);\n      if (gutterCell == null) {\n        gutterCell = this._getTableGutterCell('body', edge, this._getTableBodyRow(0));\n      }\n      if (gutterCell == null) {\n        return 0;\n      }\n      width = gutterCell.getBoundingClientRect().width;\n      if (edge === 'start') {\n        this._gutterStartWidth = width;\n      } else {\n        this._gutterEndWidth = width;\n      }\n    }\n    return width;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._createTableGutterCol = function () {\n    let tableCol = document.createElement(Table.DOM_ELEMENT._COL); // @HTMLUpdateOK\n    tableCol.classList.add(Table.CSS_CLASSES._TABLE_COL_GUTTER_CLASS);\n    return tableCol;\n  };\n\n  /**\n   * @param {string} tablePart either header, body or footer\n   * @param {string} edge start or end\n   * @private\n   */\n  Table.prototype._createTableGutterCell = function (tablePart, edge) {\n    let elementName = tablePart === 'header' ? Table.DOM_ELEMENT._TH : Table.DOM_ELEMENT._TD;\n    let gutterCell = document.createElement(elementName); // @HTMLUpdateOK\n    let className;\n    if (tablePart === 'header') {\n      className =\n        edge === 'start'\n          ? Table.CSS_CLASSES._TABLE_GUTTER_START_HEADER_CELL\n          : Table.CSS_CLASSES._TABLE_GUTTER_END_HEADER_CELL;\n    } else if (tablePart === 'footer') {\n      className =\n        edge === 'start'\n          ? Table.CSS_CLASSES._TABLE_GUTTER_START_FOOTER_CELL\n          : Table.CSS_CLASSES._TABLE_GUTTER_END_FOOTER_CELL;\n    } else {\n      className =\n        edge === 'start'\n          ? Table.CSS_CLASSES._TABLE_GUTTER_START_BODY_CELL\n          : Table.CSS_CLASSES._TABLE_GUTTER_END_BODY_CELL;\n    }\n    gutterCell.classList.add(className);\n    if (edge === 'start') {\n      gutterCell.classList.add(Table.CSS_CLASSES._TABLE_FROZEN_START);\n    } else {\n      gutterCell.classList.add(Table.CSS_CLASSES._TABLE_FROZEN_END);\n    }\n    return gutterCell;\n  };\n\n  /**\n   * @param {string} tablePart either header, body or footer\n   * @param {string} edge start or end\n   * @param {string} targetRow table row\n   * @private\n   */\n  Table.prototype._getTableGutterCell = function (tablePart, edge, targetRow) {\n    let className;\n    if (tablePart === 'header') {\n      // eslint-disable-next-line no-param-reassign\n      targetRow = this._getTableHeaderRow();\n      className =\n        edge === 'start'\n          ? Table.CSS_CLASSES._TABLE_GUTTER_START_HEADER_CELL\n          : Table.CSS_CLASSES._TABLE_GUTTER_END_HEADER_CELL;\n    } else if (tablePart === 'footer') {\n      // eslint-disable-next-line no-param-reassign\n      targetRow = this._getTableFooterRow();\n      className =\n        edge === 'start'\n          ? Table.CSS_CLASSES._TABLE_GUTTER_START_FOOTER_CELL\n          : Table.CSS_CLASSES._TABLE_GUTTER_END_FOOTER_CELL;\n    } else {\n      className =\n        edge === 'start'\n          ? Table.CSS_CLASSES._TABLE_GUTTER_START_BODY_CELL\n          : Table.CSS_CLASSES._TABLE_GUTTER_END_BODY_CELL;\n    }\n    if (targetRow != null) {\n      var children = targetRow.children;\n      for (var i = 0; i < children.length; i++) {\n        if (children[i].classList.contains(className)) {\n          return children[i];\n        }\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @private\n   */\n  Table.CSS_CLASSES = {\n    _OPTION_DEFAULTS_CLASS: 'oj-table-option-defaults',\n    _TABLE_CONTAINER_CLASS: 'oj-table-container',\n    _TABLE_SCROLLER_CLASS: 'oj-table-scroller',\n    _TABLE_EXTERNAL_SCROLL_CLASS: 'oj-table-external-scroll',\n    _TABLE_CLASS: 'oj-table',\n    _TABLE_STICKY_CLASS: 'oj-table-sticky',\n    _TABLE_STRETCH_CLASS: 'oj-table-stretch',\n    _TABLE_COMPACT_CLASS: 'oj-table-grid-display',\n    _TABLE_HGRID_CLASS: 'oj-table-horizontal-grid',\n    _TABLE_EDIT_CLASS: 'oj-table-editable',\n    _TABLE_MULTI_ROW_SELECT_CLASS: 'oj-table-multiple-row-selection',\n    _TABLE_SCROLL_VERTICAL_CLASS: 'oj-table-scroll-vertical',\n    _TABLE_SCROLL_HORIZONTAL_CLASS: 'oj-table-scroll-horizontal',\n    _TABLE_SORT_CLASS: 'oj-table-sort',\n    _TABLE_SHOW_REQUIRED_CLASS: 'oj-table-show-required',\n    _TABLE_ELEMENT_CLASS: 'oj-table-element',\n    _TABLE_FOOTER_CLASS: 'oj-table-footer',\n    _TABLE_FOOTER_ROW_CLASS: 'oj-table-footer-row',\n    _TABLE_HEADER_CLASS: 'oj-table-header',\n    _TABLE_HEADER_ROW_CLASS: 'oj-table-header-row',\n    _TABLE_HEADER_SELECTOR_CLASS: 'oj-table-header-selector',\n    _TABLE_COLGROUP_CLASS: 'oj-table-colgroup',\n    _TABLE_COL_GUTTER_CLASS: 'oj-table-gutter-col',\n    _TABLE_COL_SELECTOR_CLASS: 'oj-table-col-selector',\n    _TABLE_COL_CLASS: 'oj-table-col',\n    _TABLE_BOTTOM_SLOT_CLASS: 'oj-table-slot-bottom',\n    _TABLE_SORT_ICON_CONTAINER_CLASS: 'oj-table-sort-icon-container',\n    _COLUMN_HEADER_CELL_CLASS: 'oj-table-column-header-cell',\n    _TABLE_HEADER_WRAP_TEXT_CLASS: 'oj-table-header-cell-wrap-text',\n    _COLUMN_HEADER_SELECTOR_CELL_CLASS: 'oj-table-column-header-selector-cell',\n    _COLUMN_HEADER_DROP_EMPTY_CELL_CLASS: 'oj-table-column-header-drop-empty-cell',\n    _COLUMN_HEADER_CLASS: 'oj-table-column-header',\n    _COLUMN_CUSTOM_HEADER_CLASS: 'oj-table-custom-header',\n    _COLUMN_HEADER_TEXT_CLASS: 'oj-table-column-header-text',\n    _COLUMN_HEADER_ASC_ICON_CLASS: 'oj-table-column-header-asc-icon',\n    _COLUMN_HEADER_DSC_ICON_CLASS: 'oj-table-column-header-dsc-icon',\n    _COLUMN_HEADER_SHOW_REQUIRED_ICON_CLASS: 'oj-table-column-header-show-required-icon',\n    _COLUMN_HEADER_DEFAULT_SORT_ICON_CLASS: 'oj-table-column-header-default-sort-icon',\n    _COLUMN_HEADER_DRAG_INDICATOR_BEFORE_CLASS: 'oj-table-column-header-drag-indicator-before',\n    _COLUMN_HEADER_DRAG_INDICATOR_AFTER_CLASS: 'oj-table-column-header-drag-indicator-after',\n    _COLUMN_HEADER_DRAG_IMAGE: 'oj-table-column-header-cell-drag-image',\n    _COLUMN_HEADER_RESIZING_CLASS: 'oj-table-column-header-resizing',\n    _COLUMN_HEADER_RESIZE_INDICATOR_CLASS: 'oj-table-column-header-resize-indicator',\n    _COLUMN_RESIZE_INDICATOR_CLASS: 'oj-table-column-resize-indicator',\n    _COLUMN_DROP_INDICATOR_CLASS: 'oj-table-column-drop-indicator',\n    _TABLE_BODY_CLASS: 'oj-table-body',\n    _TABLE_BUFFER_ROW_CLASS: 'oj-table-body-scroll-buffer',\n    _TABLE_LEGACY_WIDTH_BUFFER_ROW_CLASS: 'oj-table-legacy-width-buffer',\n    _TABLE_LEGACY_WIDTH_BUFFER_CELL_CLASS: 'oj-table-legacy-width-buffer-cell',\n    _TABLE_DATA_ROW_CLASS: 'oj-table-body-row',\n    _TABLE_STICKY_ROW_CLASS: 'oj-table-sticky-row',\n    _TABLE_STUCK_ROW_CLASS: 'oj-table-stuck-row',\n    _TABLE_DATA_ROW_DRAG_INDICATOR_CLASS: 'oj-table-body-row-drag-indicator',\n    _TABLE_TOUCH_AFFORDANCE_GLASS_PANE_CLASS: 'oj-table-touch-affordance-glass-pane',\n    _TABLE_DATA_ROW_TOUCH_SELECTION_AFFORDANCE_TOP_CLASS:\n      'oj-table-body-row-touch-selection-affordance-top',\n    _TABLE_DATA_ROW_TOUCH_SELECTION_AFFORDANCE_BOTTOM_CLASS:\n      'oj-table-body-row-touch-selection-affordance-bottom',\n    _TABLE_DATA_ROW_TOUCH_SELECTION_AFFORDANCE_TOP_ICON_CLASS:\n      'oj-table-body-row-touch-selection-affordance-top-icon',\n    _TABLE_DATA_ROW_TOUCH_SELECTION_AFFORDANCE_BOTTOM_ICON_CLASS:\n      'oj-table-body-row-touch-selection-affordance-bottom-icon',\n    _TABLE_DATA_ROW_TOUCH_SELECTION_AFFORDANCE_TOUCH_AREA_CLASS:\n      'oj-table-body-row-touch-selection-affordance-touch-area',\n    _TABLE_DATA_ROW_EDIT_CLASS: 'oj-table-body-row-edit',\n    _TABLE_DATA_ROW_SELECTOR_CLASS: 'oj-table-body-row-selector',\n    _TABLE_SELECTOR_CELL_CLASS: 'oj-table-selector-cell',\n    _TABLE_DATA_CURRENT_ROW_CLASS: 'oj-table-body-current-row',\n    _TABLE_ACTIVE_ELEMENT_CLASS: 'oj-table-active-element',\n    _TABLE_DATA_CELL_CLASS: 'oj-table-data-cell',\n    _TABLE_DATA_CELL_EDIT_CLASS: 'oj-table-data-cell-edit',\n    _TABLE_DATE_CELL_FORM_CONTROL_CLASS: 'oj-form-control-inherit',\n    _TABLE_VGRID_LINES_CLASS: 'oj-table-vgrid-lines',\n    _TABLE_FOOTER_CELL_CLASS: 'oj-table-footer-cell',\n    _TABLE_FOOTER_SELECTOR_CELL_CLASS: 'oj-table-footer-selector-cell',\n    _TABLE_FOOTER_DROP_EMPTY_CELL_CLASS: 'oj-table-footer-drop-empty-cell',\n    _TABLE_STATUS_ACC_NOTIFICATION_CLASS: 'oj-table-status-acc-notification',\n    _TABLE_STATUS_MESSAGE_CLASS: 'oj-table-status-message',\n    _TABLE_STATUS_MESSAGE_TEXT_CLASS: 'oj-table-status-message-text',\n    _TABLE_ACC_CONTEXT_INFO_CLASS: 'oj-table-acc-context-info',\n    _TABLE_ACC_STATE_INFO_CLASS: 'oj-table-acc-state-info',\n    _TABLE_ACC_ROW_STATE_INFO_CLASS: 'oj-table-acc-row-state-info',\n    _TABLE_WIDTH_CONTAINER_CLASS: 'oj-table-width-container',\n    _TABLE_LOADING_ICON_CLASS: 'oj-table-loading-icon',\n    _TABLE_BODY_MESSAGE_CLASS: 'oj-table-body-message',\n    _TABLE_BODY_MESSAGE_ROW_CLASS: 'oj-table-body-message-row',\n    _TABLE_NO_DATA_CONTAINER_CLASS: 'oj-table-no-data-container',\n    _TABLE_NO_DATA_ROW_CLASS: 'oj-table-no-data-row',\n    _TABLE_FETCH_SKELETON_ROW_CLASS: 'oj-table-fetch-skeleton-row',\n    _TABLE_SKELETON_CELL_CLASS: 'oj-table-skeleton-cell',\n    _TABLE_SKELETON_CONTAINER_CLASS: 'oj-table-skeleton-container',\n    _TABLE_SKELETON_CLASS: 'oj-table-skeleton',\n    _TABLE_ADD_ROW_CLASS: 'oj-table-add-row',\n    _TABLE_ADD_ROW_PLACEHOLDER_CLASS: 'oj-table-add-row-placeholder',\n    _TABLE_HIDDEN_CELL_CLASS: 'oj-table-hidden-cell',\n    _TABLE_FROZEN_START: 'oj-table-frozen-start',\n    _TABLE_FROZEN_END: 'oj-table-frozen-end',\n    _TABLE_FROZEN_EDGE: 'oj-table-frozen-edge',\n    _TABLE_GUTTER_START_HEADER_CELL: 'oj-table-gutter-start-header-cell',\n    _TABLE_GUTTER_END_HEADER_CELL: 'oj-table-gutter-end-header-cell',\n    _TABLE_GUTTER_START_BODY_CELL: 'oj-table-gutter-start-body-cell',\n    _TABLE_GUTTER_END_BODY_CELL: 'oj-table-gutter-end-body-cell',\n    _TABLE_GUTTER_START_FOOTER_CELL: 'oj-table-gutter-start-footer-cell',\n    _TABLE_GUTTER_END_FOOTER_CELL: 'oj-table-gutter-end-footer-cell',\n    _TABLE_LEGACY_SIZER_CLASS: 'oj-table-legacy-sizer',\n    _TABLE_LEGACY_SCROLL_CLASS: 'oj-table-legacy-scroll',\n    _TABLE_RESIZE_DIALOG_MOBILE_CLASS: 'oj-table-resize-dialog-mobile',\n    _BUTTON_SMALL_CLASS: 'oj-button-sm',\n    _SMALL_HOR_MARGIN_CLASS: 'oj-sm-margin-2x-horizontal',\n    _SMALL_6_CLASS: 'oj-sm-6',\n    _ICON_CLASS: 'oj-icon',\n    _WIDGET_ICON_CLASS: 'oj-component-icon',\n    _HIDDEN_CONTENT_ACC_CLASS: 'oj-helper-hidden-accessible',\n    _TEXT_ALIGN_END: 'oj-helper-text-align-end',\n    _ANIMATION_SKELETON_FADE_IN_CLASS: 'oj-animation-skeleton-fade-in'\n  };\n\n  /**\n   * @private\n   */\n  Table.CSS_PROP = {\n    _DISPLAY: 'display',\n    _VISIBILITY: 'visibility',\n    _POSITION: 'position',\n    _HEIGHT: 'height',\n    _WIDTH: 'width',\n    _TOP: 'top',\n    _BOTTOM: 'bottom',\n    _LEFT: 'left',\n    _RIGHT: 'right',\n    _PADDING_TOP: 'padding-top',\n    _PADDING_BOTTOM: 'padding-bottom',\n    _PADDING_LEFT: 'padding-left',\n    _PADDING_RIGHT: 'padding-right',\n    _OVERFLOW: 'overflow',\n    _OVERFLOW_X: 'overflow-x',\n    _OVERFLOW_Y: 'overflow-y',\n    _MIN_WIDTH: 'min-width',\n    _MAX_WIDTH: 'max-width',\n    _MIN_HEIGHT: 'min-height',\n    _FLOAT: 'float',\n    _BORDER_TOP: 'border-top',\n    _BORDER_TOP_WIDTH: 'border-top-width',\n    _BORDER_BOTTOM_WIDTH: 'border-bottom-width',\n    _BORDER_LEFT_WIDTH: 'border-left-width',\n    _BORDER_RIGHT_WIDTH: 'border-right-width',\n    _BORDER_COLOR: 'border-color',\n    _MARGIN_BOTTOM: 'margin-bottom',\n    _VERTICAL_ALIGN: 'vertical-align',\n    _CURSOR: 'cursor',\n    _ZINDEX: 'z-index',\n    _BACKGROUND_COLOR: 'background-color',\n    _BOX_SIZING: 'box-sizing'\n  };\n\n  /**\n   * @private\n   */\n  Table.CSS_VAL = {\n    _NONE: 'none',\n    _BLOCK: 'block',\n    _INLINE_BLOCK: 'inline-block',\n    _RELATIVE: 'relative',\n    _ABSOLUTE: 'absolute',\n    _INLINE: 'inline',\n    _AUTO: 'auto',\n    _HIDDEN: 'hidden',\n    _SCROLL: 'scroll',\n    _VISIBLE: 'visible',\n    _LEFT: 'left',\n    _PX: 'px',\n    _MIDDLE: 'middle',\n    _MOVE: 'move',\n    _FIXED: 'fixed',\n    _TRANSPARENT: 'transparent',\n    _BORDER_BOX: 'border-box',\n    _COL_RESIZE: 'col-resize'\n  };\n\n  /**\n   * @private\n   */\n  Table.DOM_ATTR = {\n    _STYLE: 'style',\n    _TABINDEX: 'tabindex',\n    _TYPE: 'type',\n    _ID: 'id',\n    _TITLE: 'title',\n    _HREF: 'href',\n    _COLSPAN: 'colspan',\n    _DRAGGABLE: 'draggable',\n    _ROLE: 'role',\n    _ARIA_LABEL: 'aria-label',\n    _ARIA_LABELLEDBY: 'aria-labelledby',\n    _ARIA_HIDDEN: 'aria-hidden'\n  };\n\n  /**\n   * @private\n   */\n  Table.DOM_ELEMENT = {\n    _DIV: 'div',\n    _A: 'a',\n    _TR: 'tr',\n    _TD: 'td',\n    _TH: 'th',\n    _TABLE: 'table',\n    _TBODY: 'tbody',\n    _THEAD: 'thead',\n    _TFOOT: 'tfoot',\n    _INPUT: 'input',\n    _UL: 'ul',\n    _SPAN: 'span',\n    _BUTTON: 'button',\n    _LABEL: 'label',\n    _COLGROUP: 'colgroup',\n    _COL: 'col'\n  };\n\n  /**\n   * @private\n   */\n  Table.MARKER_STYLE_CLASSES = {\n    _WIDGET: 'oj-component',\n    _ACTIVE: 'oj-active',\n    _CLICKABLE_ICON: 'oj-clickable-icon-nocontext',\n    _DISABLED: 'oj-disabled',\n    _ENABLED: 'oj-enabled',\n    _FOCUS: 'oj-focus',\n    _FOCUS_HIGHLIGHT: 'oj-focus-highlight',\n    _HOVER: 'oj-hover',\n    _SELECTED: 'oj-selected',\n    _DEFAULT: 'oj-default',\n    _WARNING: 'oj-warning',\n    _DRAGGABLE: 'oj-draggable',\n    _DRAG: 'oj-drag',\n    _HIDE_VERTICAL_SCROLLBAR: 'oj-table-hide-vertical-scrollbar'\n  };\n\n  /**\n   * The approximate default row height - should only be used for approximate scroll pos calculations\n   * @private\n   */\n  Table.DEFAULT_ROW_HEIGHT_GUESS = 50;\n\n  /**\n   * @private\n   */\n  Table.prototype._clearOpenPopupListeners = function () {\n    if (this._openPopup != null) {\n      this._openPopup.removeEventListener('focusin', this._handlePopupFocusinListener);\n      this._openPopup.removeEventListener('focusout', this._handlePopupFocusoutListener);\n      this._openPopup = null;\n    }\n    this._handlePopupFocusinListener = null;\n    this._handlePopupFocusoutListener = null;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._handlePopupFocusout = function (event) {\n    this._handleFocusout(event, true);\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._handlePopupFocusin = function (event) {\n    this._handleFocusin(event, true);\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._handleFocusout = function (event, isPopupFocusout) {\n    this._clearFocusoutTimeout();\n    var table = this._getTable();\n\n    if (!isPopupFocusout) {\n      // Components that open popups (such as ojSelect, ojCombobox, ojInputDate, etc.) will trigger\n      // focusout, but we don't want to change mode in those cases since the user is still editing.\n      this._clearOpenPopupListeners();\n      var openPopup = ojkeyboardfocusUtils.getLogicalChildPopup(table);\n      if (openPopup != null && !openPopup.classList.contains('oj-messaging-popup')) {\n        // setup focus listeners on popup\n        this._openPopup = openPopup;\n        this._handlePopupFocusinListener = this._handlePopupFocusin.bind(this);\n        this._handlePopupFocusoutListener = this._handlePopupFocusout.bind(this);\n        openPopup.addEventListener('focusin', this._handlePopupFocusinListener);\n        openPopup.addEventListener('focusout', this._handlePopupFocusoutListener);\n        return;\n      }\n    }\n\n    this._setFocusoutBusyState();\n\n    // set timeout to stay in editable/actionable mode if focus comes back into the table\n    // prettier-ignore\n    this._focusoutTimeout = setTimeout( // @HTMLUpdateOK\n      function () {\n        this._isTableTab = null;\n        this._tempFFFocus = null;\n        this._clearOpenPopupListeners();\n        this._focusOutHandler($(table));\n        this._focusOutHandler($(this._getTableContainer()));\n        this._clearKeyboardKeys();\n        this._unhighlightActive();\n        this._getLayoutManager().handleFocusout();\n        this._setTableEditable(false, false, 0, true, event, true);\n        this._cleanAccStatus();\n\n        // clear styling on previous editable data cell if necessary\n        if (this._focusEditCell) {\n          this._focusEditCell.classList.remove(Table.CSS_CLASSES._TABLE_DATA_CELL_EDIT_CLASS);\n          this._focusEditCell = null;\n        }\n        this._setTableActionableMode(false, true);\n        this._clearFocusoutBusyState();\n      }.bind(this),\n      100\n    );\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._handleFocusin = function (event, isPopupFocusin) {\n    // reset focusout timeout and busy state\n    this._clearFocusoutTimeout();\n    this._clearFocusoutBusyState();\n\n    if (!isPopupFocusin) {\n      this._clearOpenPopupListeners();\n      var table = this._getTable();\n      var tableBody = this._getTableBody();\n      var tableContainer = this._getTableContainer();\n\n      this._focusInHandler($(table));\n      this._focusInHandler($(tableContainer));\n      if (event.target === tableBody && !this._tempFFFocus && DataCollectionUtils.isFirefox()) {\n        // workaround for FF. In FF, the tbody is focusable even if it has\n        // tabindex -1. So we have to shift focus back to the table itself if\n        // focus is set on the tbody (ex. a shift-tab from outside the table)\n        setTimeout(function () {\n          table.focus();\n        }, 0);\n      } else if ($(table).has(event.target).length > 0) {\n        var focusedRowIdx = this._getActiveRowIndex();\n        var focusedHeaderColumnIdx = this._getActiveHeaderIndex();\n        var addNewRow = this._getPlaceHolderRow();\n        if (addNewRow != null && $(addNewRow).has(event.target).length > 0) {\n          this._setActiveAddRow();\n          if (ojkeyboardfocusUtils.isActionableElement(event.target)) {\n            this._setTableActionableMode(true, true);\n            if (this._isTableTab) {\n              var addRowCells = this._getPlaceHolderRowCells();\n              for (let i = 0; i < addRowCells.length; i++) {\n                const cell = addRowCells[i];\n                if ($(cell).has(event.target).length > 0) {\n                  let targetColumnIndex = i;\n                  if (this._isDefaultSelectorEnabled()) {\n                    targetColumnIndex -= 1;\n                  }\n                  if (this._isGutterStartColumnEnabled()) {\n                    targetColumnIndex -= 1;\n                  }\n                  this._scrollColumnIntoViewport(targetColumnIndex, cell);\n                  break;\n                }\n              }\n            }\n          }\n        } else if (!this._isTableEditMode()) {\n          // if table edit mode, we don't want to enter actionable mode since it doesn't exist\n          // this seems like an overall issue with the design of the Table and actionable/edit mode\n          if (ojkeyboardfocusUtils.isActionableElement(event.target)) {\n            this._accActionFocus = true;\n            var active = this._getActiveObjectFromActionableChild(event.target);\n            if (active != null) {\n              if (active.type === Table.ACTIVE_ELEMENT_TYPES._DATA_ROW) {\n                this._setActiveRow(active.index, event, true, true);\n              } else if (active.type === Table.ACTIVE_ELEMENT_TYPES._HEADER) {\n                this._setActiveHeader(active.index, event, true);\n              } else if (active.type === Table.ACTIVE_ELEMENT_TYPES._FOOTER) {\n                this._setActiveFooter(active.index, event, true);\n              } else if (active.type === Table.ACTIVE_ELEMENT_TYPES._NO_DATA) {\n                this._setActiveNoData();\n              } else if (active.type === Table.ACTIVE_ELEMENT_TYPES._ADD_ROW) {\n                this._setActiveAddRow();\n              }\n              this._setTableActionableMode(true, true);\n            }\n          }\n        } else if (\n          !this._isNodeEditable(event.target) &&\n          !this._isNodeClickable(event.target) &&\n          !this._isTableActionableMode() &&\n          !this._hasEditableRow() &&\n          !this._tempFFFocus &&\n          focusedRowIdx == null &&\n          focusedHeaderColumnIdx == null\n        ) {\n          // when table is not in editable/actionable mode there shouldn't be\n          // focus to child row elements. Delay the focus to prevent a race\n          // condition with menu launcher re-focus\n          setTimeout(function () {\n            table.focus();\n          }, 0);\n        } else if (this._isTableTab) {\n          // make sure to scroll the focused column into view if this is due to a 'tab' within the component\n          if (focusedRowIdx != null) {\n            var focusedRowCells = this._getTableBodyCells(focusedRowIdx);\n            for (let i = 0; i < focusedRowCells.length; i++) {\n              const cell = focusedRowCells[i];\n              if ($(cell).has(event.target).length > 0) {\n                this._scrollColumnIntoViewport(i, cell);\n                break;\n              }\n            }\n          }\n        }\n      } else {\n        this._setTableActionableMode(false, true);\n      }\n    }\n    this._isTableTab = null;\n  };\n\n  /**\n   * @override\n   * @private\n   */\n  Table.prototype._events = {\n    /*\n     * Reset the keyboard state on focusout and set the inactive\n     * selected rows\n     */\n    focusout: function (event) {\n      this._handleFocusout(event);\n    },\n\n    /*\n     * Check the keyboard state on focus\n     */\n    focus: function (event) {\n      // handle browser auto scroll cases with external scroller specified\n      if (this._isExternalScrollEnabled()) {\n        this._browserAutoScrollInitPos = this._getCurrentVerticalScrollPosition().y;\n        // prettier-ignore\n        this._browserAutoScrollTimeout = setTimeout( // @HTMLUpdateOK\n          function () {\n            this._browserAutoScrollInitPos = null;\n          }.bind(this),\n          0\n        );\n      }\n      // ensure active element is setup\n      this._syncActiveElement(event, true);\n    },\n\n    /*\n     * Handle focus on child row elements\n     */\n    focusin: function (event) {\n      this._handleFocusin(event);\n    },\n\n    /*\n     * Set the cell edit class on cell focus when row is editable.\n     */\n    'focus .oj-table-data-cell': function (event) {\n      var eventTarget = this._getEventTargetElement(event);\n      var rowIdx = this._getElementRowIdx(eventTarget);\n      if (rowIdx === this._getEditableRowIdx()) {\n        // clear styling on previous editable data cell if necessary\n        if (\n          this._focusEditCell &&\n          this._focusEditCell !== eventTarget &&\n          this._focusEditCell.classList.contains(Table.CSS_CLASSES._TABLE_DATA_CELL_EDIT_CLASS)\n        ) {\n          this._focusEditCell.classList.remove(Table.CSS_CLASSES._TABLE_DATA_CELL_EDIT_CLASS);\n        }\n        // add styling on new editable data cell\n        eventTarget.classList.add(Table.CSS_CLASSES._TABLE_DATA_CELL_EDIT_CLASS);\n        this._focusEditCell = eventTarget;\n      }\n    },\n\n    /*\n     * Capture keyboard down events\n     */\n    keydown: function (event) {\n      var key = event.key || event.keyCode;\n      this._addKeyboardKey(key);\n\n      // ignore key event on the footer or target is editable\n      var keyboardCode1 = this._getKeyboardKeys()[0];\n\n      if (\n        this._isEditPending ||\n        (!DataCollectionUtils.isEscapeKeyEvent(keyboardCode1) &&\n          !DataCollectionUtils.isEnterKeyEvent(keyboardCode1) &&\n          !DataCollectionUtils.isF2KeyEvent(keyboardCode1) &&\n          !DataCollectionUtils.isTabKeyEvent(keyboardCode1) &&\n          (this._isNodeEditable(event.target) ||\n            (this._getTableFooter() != null &&\n              $(this._getTableFooter()).has(event.target).length > 0)))\n      ) {\n        return;\n      }\n\n      // process single or two key events\n      if (\n        this._getKeyboardKeys().length === 1 ||\n        (this._getKeyboardKeys().length === 2 && event[Table._KEYBOARD_CODES._MODIFIER_SHIFT])\n      ) {\n        if (\n          this._isKeyPressMatch(DataCollectionUtils.isArrowUpKeyEvent) ||\n          this._isKeyPressMatch(DataCollectionUtils.isArrowDownKeyEvent) ||\n          this._isKeyPressMatch(DataCollectionUtils.isArrowLeftKeyEvent) ||\n          this._isKeyPressMatch(DataCollectionUtils.isArrowRightKeyEvent) ||\n          this._isKeyPressMatch(DataCollectionUtils.isHomeKeyEvent) ||\n          this._isKeyPressMatch(DataCollectionUtils.isEndKeyEvent)\n        ) {\n          // need to do this so that these keys don't act on the page. e.g. pressing Down would cause the\n          // page to go down as well as the row to change\n          event.preventDefault();\n          event.stopPropagation();\n        }\n        var isExtend = event[Table._KEYBOARD_CODES._MODIFIER_SHIFT];\n\n        if (\n          this._isKeyPressMatch(DataCollectionUtils.isArrowUpKeyEvent) ||\n          this._isKeyPressMatch(DataCollectionUtils.isArrowDownKeyEvent)\n        ) {\n          this._handleKeydownUpDown(\n            event,\n            isExtend && this._getRowSelectionMode() === Table._OPTION_SELECTION_MODES._MULTIPLE\n          );\n        } else if (\n          this._isKeyPressMatch(DataCollectionUtils.isArrowLeftKeyEvent) ||\n          this._isKeyPressMatch(DataCollectionUtils.isArrowRightKeyEvent)\n        ) {\n          this._handleKeydownLeftRight(\n            event,\n            isExtend && this._getColumnSelectionMode() === Table._OPTION_SELECTION_MODES._MULTIPLE\n          );\n        } else if (this._isKeyPressMatch(DataCollectionUtils.isTabKeyEvent)) {\n          this._handleKeydownTab(event);\n        } else if (DataCollectionUtils.isF2KeyEvent(keyboardCode1)) {\n          this._handleKeydownF2(event);\n        } else if (DataCollectionUtils.isSpaceBarKeyEvent(keyboardCode1)) {\n          this._handleKeydownSpacebar(event);\n        } else if (DataCollectionUtils.isEnterKeyEvent(keyboardCode1)) {\n          this._handleKeydownEnter(event);\n        } else if (DataCollectionUtils.isHomeKeyEvent(keyboardCode1)) {\n          this._handleKeydownHome(event);\n        } else if (DataCollectionUtils.isEndKeyEvent(keyboardCode1)) {\n          this._handleKeydownEnd(event);\n        } else if (DataCollectionUtils.isEscapeKeyEvent(keyboardCode1)) {\n          this._handleKeydownEsc(event);\n        }\n      }\n    },\n\n    /*\n     * Capture keyboard up events\n     */\n    keyup: function (event) {\n      // fix for mac issue where keyup is not registered when command is pressed\n      if (DataCollectionUtils.isMac() && this._isKeyPressMatch(DataCollectionUtils.isMetaKeyEvent)) {\n        this._clearKeyboardKeys();\n        return;\n      }\n      // process single or 2 key events\n      if (this._getKeyboardKeys().length === 1) {\n        var keyboardCode1 = this._getKeyboardKeys()[0];\n\n        // ignore key event on the footer or target is editable\n        if (\n          this._isNodeEditable(event.target) ||\n          (this._getTableFooter() != null && $(this._getTableFooter()).has(event.target).length > 0)\n        ) {\n          this._removeKeyboardKey(keyboardCode1);\n          return;\n        }\n        this._removeKeyboardKey(keyboardCode1);\n      }\n      // remove the key from our internal list of pressed keys.\n      var key = event.key || event.keyCode;\n      this._removeKeyboardKey(key);\n    },\n\n    /*\n     * Cancel any resize if the mouse leaves the table\n     */\n    'mouseleave .oj-table-element': function () {\n      this._getLayoutManager().handleMouseLeaveTable();\n    },\n\n    /*\n     * Keep track of mousedown/mouseup for multiple selection\n     */\n    'mousedown .oj-table-body': function (event) {\n      var isShift = event[Table._KEYBOARD_CODES._MODIFIER_SHIFT];\n      // disable click event if event source is selector\n      if (\n        DataCollectionUtils.isEventClickthroughDisabled(event, this._getTable()) ||\n        (DataCollectionUtils.isFromDefaultSelector(event) && !isShift) ||\n        this._isEditPending\n      ) {\n        return;\n      }\n      // perform selection only for left click\n      if (event.which !== 1) {\n        return;\n      }\n\n      // get the row index if the mousedown was on a row\n      this._mouseDownRowIdx = this._getElementRowIdx(event.target);\n      if (this._mouseDownRowIdx == null) {\n        return;\n      }\n\n      var tableBodyRow = this._getTableBodyRow(this._mouseDownRowIdx);\n      if (tableBodyRow != null && tableBodyRow.draggable) {\n        // do not do row selection if we are dragging\n        this._mouseDownRowIdx = null;\n      }\n    },\n\n    /*\n     * Keep track of mousedown/mouseup for multiple selection\n     */\n    mouseup: function () {\n      this._mouseDownRowIdx = null;\n    },\n\n    /*\n     * show the row hover when the mouse enters a table row\n     */\n    'mouseenter .oj-table-body-row': function (event) {\n      if (!this._isRowSelectionEnabled()) {\n        return;\n      }\n      // clear the mouse down information if mouse was released outside of the component\n      if (event.originalEvent && event.originalEvent.buttons === 0) {\n        this._mouseDownRowIdx = null;\n      }\n\n      var eventTarget = this._getEventTargetElement(event);\n      var rowIdx = this._getElementRowIdx(eventTarget);\n      if (this._isTableOwned(eventTarget) && this._getTableDndContext()._dragImage == null) {\n        eventTarget.classList.add(Table.MARKER_STYLE_CLASSES._HOVER);\n        this._updateRowStateCellsClass(rowIdx, null, { hover: true });\n        this._handleMouseEnterSelection(event.target);\n      } else {\n        this._updateRowStateCellsClass(rowIdx, null, { hover: false });\n        event.stopPropagation();\n      }\n    },\n\n    /*\n     * hide the row hover when the mouse leaves a table row\n     */\n    'mouseleave .oj-table-body-row': function (event) {\n      var eventTarget = this._getEventTargetElement(event);\n      var rowIdx = this._getElementRowIdx(eventTarget);\n      if (this._isTableOwned(eventTarget)) {\n        eventTarget.classList.remove(Table.MARKER_STYLE_CLASSES._HOVER);\n        this._updateRowStateCellsClass(rowIdx, null, { hover: false });\n      } else {\n        this._updateRowStateCellsClass(rowIdx, null, { hover: true });\n        event.stopPropagation();\n      }\n    },\n\n    /*\n     * set the column header focus.\n     */\n    'mousedown .oj-table-column-header-cell': function (event) {\n      if (\n        DataCollectionUtils.isEventClickthroughDisabled(event, this._getTable()) ||\n        this._isEditPending\n      ) {\n        return;\n      }\n      this._lastSelectedHeaderIdx = null;\n      this._getLayoutManager().handleMouseDownHeaderCell(event);\n    },\n\n    /*\n     * set the column header focus.\n     */\n    'mousedown .oj-table-footer-cell': function (event) {\n      if (\n        DataCollectionUtils.isEventClickthroughDisabled(event, this._getTable()) ||\n        this._isEditPending\n      ) {\n        return;\n      }\n      if (event.which === 1) {\n        // get the column index\n        var columnIdx = this._getElementColumnIdx(this._getEventTargetElement(event));\n        // set the column focus if shift key is not pressed\n        if (!event[Table._KEYBOARD_CODES._MODIFIER_SHIFT]) {\n          // skip scrolling column into viewport\n          this._setActiveFooter(columnIdx, event, true);\n          $(event.target).data(Table._FOCUS_CALLED, true);\n        }\n        if (DataCollectionUtils.isFirefox() && DomUtils.isMetaKeyPressed(event)) {\n          event.preventDefault();\n        }\n      }\n    },\n\n    /*\n     * show the sort icon when the mouse enters a column header\n     */\n    'mouseenter .oj-table-column-header-cell': function (event) {\n      this._getLayoutManager().handleMouseEnterHeaderCell(event);\n      var eventTarget = this._getEventTargetElement(event);\n      this._handleMouseEnterColumnHeader(eventTarget);\n    },\n\n    /*\n     * show the resize cursor\n     */\n    'mousemove .oj-table-header': function (event) {\n      this._getLayoutManager().handleMouseMoveHeader(event);\n    },\n\n    /*\n     * remove the hover for resize\n     */\n    'mousemove .oj-table-column-header-cell': function (event) {\n      this._getLayoutManager().handleMouseMoveHeaderCell(event);\n      var eventTarget = this._getEventTargetElement(event);\n      this._handleMouseEnterColumnHeader(eventTarget);\n    },\n\n    /*\n     * hide the sort icon when the mouse leaves a column header\n     */\n    'mouseleave .oj-table-column-header-cell': function (event) {\n      var eventTarget = this._getEventTargetElement(event);\n      this._handleMouseLeaveColumnHeader(eventTarget);\n    },\n\n    /*\n     * handle column resizing.\n     */\n    'mouseup .oj-table-column-header-cell': function (event) {\n      this._getLayoutManager().handleMouseUp(event);\n    },\n\n    /*\n     * set the row focus when the mouse clicks on a cell.\n     */\n    'mousedown .oj-table-data-cell': function (event) {\n      if (\n        DataCollectionUtils.isEventClickthroughDisabled(event, this._getTable()) ||\n        this._isEditPending\n      ) {\n        return;\n      }\n      this._lastSelectedRowIdx = null;\n      // get the row index of the cell element\n      var eventTarget = this._getEventTargetElement(event);\n      var rowIdx = this._getElementRowIdx(eventTarget);\n      // set row focus only if shift key is not pressed\n      if (!event[Table._KEYBOARD_CODES._MODIFIER_SHIFT]) {\n        this._setActiveRow(rowIdx, event, true);\n        $(event.target).data(Table._FOCUS_CALLED, true);\n      }\n      if (DataCollectionUtils.isFirefox() && DomUtils.isMetaKeyPressed(event)) {\n        event.preventDefault();\n      }\n    },\n\n    /*\n     * handle column resizing.\n     */\n    'mouseup .oj-table-data-cell': function (event) {\n      this._getLayoutManager().handleMouseUp(event);\n    },\n\n    /*\n     * invoke a sort on the column data when the mouse clicks the sort icon\n     */\n    'click .oj-table-sort-icon-container': function (event) {\n      if (this._isEditPending) {\n        return;\n      }\n      var columnIdx = this._getElementColumnIdx(event.target);\n      var tableHeaderColumn = this._getTableHeaderColumn(columnIdx);\n      if (!tableHeaderColumn) {\n        return;\n      }\n\n      // check if the column is currently sorted\n      var sorted = $(tableHeaderColumn).data('sorted');\n      if (sorted === Table._COLUMN_SORT_ORDER._ASCENDING) {\n        this._handleSortTableHeaderColumn(columnIdx, false, event);\n      } else {\n        this._handleSortTableHeaderColumn(columnIdx, true, event);\n      }\n      event.preventDefault();\n      event.stopPropagation();\n    },\n\n    /*\n     * set the row focus or selection when the mouse clicks on a row.\n     * Shift + click results in continuous selection from focused row to target row.\n     * Ctrl + click results in selection and focus. Plain click results in focus.\n     * Plain click on a selected row removes the selection.\n     */\n    'click .oj-table-body-row': function (event) {\n      if (\n        DataCollectionUtils.isEventClickthroughDisabled(event, this._getTable()) ||\n        this._isEditPending\n      ) {\n        return;\n      }\n      // get the row index of the cell element\n      var eventTarget = this._getEventTargetElement(event);\n      var rowIdx = this._getElementRowIdx(eventTarget);\n      var focusCalled = $(event.target).data(Table._FOCUS_CALLED);\n\n      var isShift = event[Table._KEYBOARD_CODES._MODIFIER_SHIFT];\n      if (!focusCalled && (!isShift || this._getActiveRowIndex() == null)) {\n        var focused = this._setActiveRow(rowIdx, event, true);\n        $(event.target).data(Table._FOCUS_CALLED, false);\n\n        if (!focused) {\n          return;\n        }\n      }\n\n      const row = this._getTableBodyRow(rowIdx);\n      if (row[Table._DATA_OJ_SELECTABLE] === Table._CONST_OFF) {\n        return;\n      }\n\n      this._fireActionEvent(rowIdx, event, true);\n\n      if (DataCollectionUtils.isFromDefaultSelector(event) && !isShift) {\n        return;\n      }\n\n      // check if we are selecting\n      if (isShift) {\n        var focusedRowIdx = this._getActiveRowIndex();\n        if (focusedRowIdx != null) {\n          // remove the selection highlight\n          window.getSelection().removeAllRanges();\n\n          if (this._getRowSelectionMode() === Table._OPTION_SELECTION_MODES._MULTIPLE) {\n            // shift selection is always from the focused row to the target row\n            this._selectRange(focusedRowIdx, rowIdx, true);\n            return;\n          }\n        }\n        // otherwise, just do a single row selection\n        this._handleSelectionGesture(rowIdx, true, false);\n      } else if (DomUtils.isMetaKeyPressed(event)) {\n        this._handleSelectionGesture(rowIdx, true, true);\n\n        // ctrl/meta (only) key pressed, update selection anchor\n        if (this._lastSelectedRowIdxArray && this._lastSelectedRowIdxArray.indexOf(rowIdx) > -1) {\n          this._selectionAnchorIdx = rowIdx;\n        }\n      } else if (this._getKeyboardKeys().length === 0) {\n        var isTouch = this._isTouchDevice();\n        this._handleSelectionGesture(\n          rowIdx,\n          true,\n          isTouch && (this._isStickyLayoutEnabled() || this._nonContiguousSelection)\n        );\n\n        // update selection anchor\n        if (this._lastSelectedRowIdxArray && this._lastSelectedRowIdxArray.indexOf(rowIdx) > -1) {\n          this._selectionAnchorIdx = rowIdx;\n        }\n\n        var rowSelected = this._getRowSelection(rowIdx);\n        if (\n          !this._isStickyLayoutEnabled() &&\n          isTouch &&\n          rowSelected &&\n          !this._nonContiguousSelection &&\n          this._getRowSelectionMode() === Table._OPTION_SELECTION_MODES._MULTIPLE\n        ) {\n          this._createTableBodyRowTouchSelectionAffordance(rowIdx);\n        }\n      }\n    },\n\n    /*\n     * Set row to editable.\n     */\n    'dblclick .oj-table-data-cell, .oj-table-gutter-start-body-cell, .oj-table-gutter-end-body-cell':\n      function (event) {\n        if (DataCollectionUtils.isEventClickthroughDisabled(event, this._getTable())) {\n          return;\n        }\n        let columnIdx;\n        if (event.target.classList.contains(Table.CSS_CLASSES._TABLE_GUTTER_START_BODY_CELL)) {\n          columnIdx = 0;\n        } else if (event.target.classList.contains(Table.CSS_CLASSES._TABLE_GUTTER_END_BODY_CELL)) {\n          columnIdx = this._getColumnDefs().length - 1; // last column Idx\n        } else {\n          columnIdx = this._getElementColumnIdx(event.target);\n        }\n        const rowIdx = this._getElementRowIdx(event.target);\n        this._setEditRow({ rowIndex: rowIdx }, columnIdx);\n      },\n\n    /*\n     * set current row when the mouse right clicks on a cell.\n     */\n    'contextmenu .oj-table-data-cell': function (event) {\n      if (\n        DataCollectionUtils.isEventClickthroughDisabled(event, this._getTable()) ||\n        this._isEditPending\n      ) {\n        return;\n      }\n      // get the row index of the cell element\n      var rowIdx = this._getElementRowIdx(this._getEventTargetElement(event));\n      this._setActiveRow(rowIdx, event, true);\n    },\n\n    /*\n     * set the column header selection and focus. Plain click results in\n     * focus and selection. If Ctrl is not pressed then we have single column selection.\n     */\n    'click .oj-table-column-header-cell': function (event) {\n      if (\n        DataCollectionUtils.isEventClickthroughDisabled(event, this._getTable()) ||\n        this._isEditPending\n      ) {\n        return;\n      }\n      // get the column index\n      var eventTarget = this._getEventTargetElement(event);\n      if (eventTarget.style.cursor === Table.CSS_VAL._COL_RESIZE) {\n        return;\n      }\n      var columnIdx = this._getElementColumnIdx(eventTarget);\n      // check if we need to focus\n      var focusCalled = $(event.target).data(Table._FOCUS_CALLED);\n\n      var isShift = event[Table._KEYBOARD_CODES._MODIFIER_SHIFT];\n      if (!focusCalled && (!isShift || this._getActiveHeaderIndex() == null)) {\n        // set the column focus\n        this._setActiveHeader(columnIdx, event);\n        $(event.target).data(Table._FOCUS_CALLED, false);\n      }\n\n      // check if we are selecting\n      if (isShift) {\n        var focusedHeaderColumnIdx = this._getActiveHeaderIndex();\n        if (\n          focusedHeaderColumnIdx != null &&\n          this._getColumnSelectionMode() === Table._OPTION_SELECTION_MODES._MULTIPLE\n        ) {\n          // shift selection is always from the focused column to the target column\n          this._selectRange(focusedHeaderColumnIdx, columnIdx, false);\n        } else {\n          // otherwise, just do a single column selection\n          this._handleSelectionGesture(columnIdx, false, true);\n        }\n      } else if (DomUtils.isMetaKeyPressed(event)) {\n        this._handleSelectionGesture(columnIdx, false, true);\n      } else if (this._getKeyboardKeys().length === 0) {\n        this._handleSelectionGesture(columnIdx, false, this._isTouchDevice());\n      }\n    },\n\n    /*\n     * set the column header selection and focus. Plain click results in\n     * focus and selection. If Ctrl is not pressed then we have single column selection.\n     */\n    'click .oj-table-footer-cell': function (event) {\n      if (\n        DataCollectionUtils.isEventClickthroughDisabled(event, this._getTable()) ||\n        this._isEditPending\n      ) {\n        return;\n      }\n      // get the column index\n      var eventTarget = this._getEventTargetElement(event);\n      if (eventTarget.style.cursor === Table.CSS_VAL._COL_RESIZE) {\n        return;\n      }\n      var columnIdx = this._getElementColumnIdx(eventTarget);\n      // check if we need to focus\n      var focusCalled = $(event.target).data(Table._FOCUS_CALLED);\n\n      var isShift = event[Table._KEYBOARD_CODES._MODIFIER_SHIFT];\n      if (!focusCalled && (!isShift || this._getActiveFooterIndex() == null)) {\n        // set the column focus\n        this._setActiveFooter(columnIdx, event);\n        $(event.target).data(Table._FOCUS_CALLED, false);\n      }\n\n      // check if we are selecting\n      if (isShift) {\n        var focusedFooterColumnIdx = this._getActiveFooterIndex();\n        if (\n          focusedFooterColumnIdx != null &&\n          this._getColumnSelectionMode() === Table._OPTION_SELECTION_MODES._MULTIPLE\n        ) {\n          // shift selection is always from the focused column to the target column\n          this._selectRange(focusedFooterColumnIdx, columnIdx, false);\n        } else {\n          // otherwise, just do a single column selection\n          this._handleSelectionGesture(columnIdx, false, true);\n        }\n      } else if (DomUtils.isMetaKeyPressed(event)) {\n        this._handleSelectionGesture(columnIdx, false, true);\n      } else if (this._getKeyboardKeys().length === 0) {\n        this._handleSelectionGesture(columnIdx, false, false);\n      }\n    },\n\n    /*\n     * Set dragstart handler for column DnD.\n     */\n    'dragstart .oj-table-column-header-cell': function (event) {\n      if (this._isEditPending) {\n        return undefined;\n      }\n      var eventTarget = this._getEventTargetElement(event);\n      if (eventTarget.style.cursor !== Table.CSS_VAL._COL_RESIZE) {\n        return this._getTableDndContext().handleColumnDragStart(event);\n      }\n      return undefined;\n    },\n\n    /*\n     * Set dragenter handler for column DnD.\n     */\n    'dragenter .oj-table-column-header-cell': function (event) {\n      return this._getTableDndContext().handleColumnDragEnter(event);\n    },\n\n    /*\n     * Set dragover handler for column DnD.\n     */\n    'dragover .oj-table-column-header-cell': function (event) {\n      return this._getTableDndContext().handleColumnDragOver(event);\n    },\n\n    /*\n     * Set dragleave handler for column DnD.\n     */\n    'dragleave .oj-table-column-header-cell': function (event) {\n      return this._getTableDndContext().handleColumnDragLeave(event);\n    },\n\n    /*\n     * Set drop handler for column DnD.\n     */\n    'drop .oj-table-column-header-cell': function (event) {\n      return this._getTableDndContext().handleColumnDrop(event);\n    },\n\n    /*\n     * Set dragend handler for column DnD.\n     */\n    'dragend .oj-table-column-header-cell': function (event) {\n      return this._getTableDndContext().handleColumnDragEnd(event);\n    },\n\n    /*\n     * handle the dragstart event on rows and invoke event callback.\n     */\n    'dragstart .oj-table-body-row': function (event) {\n      if (this._isEditPending) {\n        return undefined;\n      }\n      return this._getTableDndContext().handleRowDragStart(event);\n    },\n\n    /*\n     * handle the drag event on rows and invoke event callback.\n     */\n    'drag .oj-table-body-row': function (event) {\n      return this._getTableDndContext().handleRowDrag(event);\n    },\n\n    /*\n     * handle the dragend event on rows and invoke event callback.\n     */\n    'dragend .oj-table-body-row': function (event) {\n      return this._getTableDndContext().handleRowDragEnd(event);\n    },\n\n    /*\n     * handle the dragenter event and invoke event callback.\n     */\n    'dragenter .oj-table-body': function (event) {\n      return this._getTableDndContext().handleRowDragEnter(event);\n    },\n\n    /*\n     * handle the dragover event and invoke event callback.\n     */\n    'dragover .oj-table-body': function (event) {\n      if (this._getTableDndContext()._isColumnReordering()) {\n        return undefined;\n      }\n      return this._getTableDndContext().handleRowDragOver(event);\n    },\n\n    /*\n     * handle the dragleave event and invoke event callback.\n     */\n    'dragleave .oj-table-body': function (event) {\n      return this._getTableDndContext().handleRowDragLeave(event);\n    },\n\n    /*\n     * handle the drop event and invoke event callback.\n     */\n    'drop .oj-table-body': function (event) {\n      if (this._getTableDndContext()._isColumnReordering()) {\n        return undefined;\n      }\n      return this._getTableDndContext().handleRowDrop(event);\n    },\n\n    /*\n     * Set dragover handler for column DnD.\n     */\n    'dragover .oj-table-element': function (event) {\n      if (this._getTableDndContext()._isColumnReordering()) {\n        return this._getTableDndContext().handleColumnReorderDragOver(event);\n      }\n      return undefined;\n    },\n\n    /*\n     * Set drop handler for column DnD.\n     */\n    'drop .oj-table-element': function (event) {\n      if (this._getTableDndContext()._isColumnReordering()) {\n        return this._getTableDndContext().handleColumnReorderDrop(event);\n      }\n      return undefined;\n    }\n  };\n\n  /**\n   * Fires rowAction event\n   * @private\n   */\n  Table.prototype._fireActionEvent = function (rowIdx, event, ignoreActionable) {\n    if (!ignoreActionable && this._isTableActionableMode()) {\n      return;\n    }\n\n    var tableBodyRow = this._getTableBodyRow(rowIdx);\n    if (tableBodyRow != null) {\n      this._trigger('rowAction', event, {\n        context: {\n          key: tableBodyRow[Table._ROW_ITEM_EXPANDO].key,\n          data: tableBodyRow[Table._ROW_ITEM_EXPANDO].data,\n          metadata: tableBodyRow[Table._ROW_ITEM_EXPANDO].metadata\n        }\n      });\n    }\n  };\n\n  /**\n   *\n   * Get the target element\n   * @param {Object} event DOM touch event\n   * @return {Element} element  DOM element\n   * @private\n   */\n  Table.prototype._getEventTargetElement = function (event) {\n    return event.type.indexOf('touch') === 0\n      ? this._getTouchEventTargetElement(event)\n      : event.currentTarget;\n  };\n\n  /**\n   *\n   * Get the target element at the touch event\n   * @param {Object} event DOM touch event\n   * @return {Element} element  DOM element\n   * @private\n   */\n  Table.prototype._getTouchEventTargetElement = function (event) {\n    var eventLocation = event.originalEvent.changedTouches[0];\n    return document.elementFromPoint(eventLocation.clientX, eventLocation.clientY);\n  };\n\n  /**\n   * Register the events which will be published by the table component.\n   * @private\n   */\n  Table.prototype._registerCustomEvents = function () {\n    var jqEvent = /** @type {{special: Object}} */ ($.event);\n    var jqEventSpecial = jqEvent.special;\n    // ojtablebeforecurrentrow handlers will be passed an object which contains the\n    // old and new current row\n    jqEventSpecial.ojtablebeforecurrentrow = {\n      /**\n       * Handle event\n       * @param {{handleObj: {handler: {apply: Function}}}} event\n       * @private\n       */\n      handle: function (event) {\n        var handleObj = event.handleObj;\n        return handleObj.handler.apply(this, [event, arguments[1]]);\n      }\n    };\n    // ojtablesort handlers will be passed an object which contains the\n    // header and direction\n    jqEventSpecial.ojtablesort = {\n      /**\n       * Handle event\n       * @param {{handleObj: {handler: {apply: Function}}}} event\n       * @private\n       */\n      handle: function (event) {\n        var handleObj = event.handleObj;\n        return handleObj.handler.apply(this, [event, arguments[1]]);\n      }\n    };\n  };\n\n  /**\n   * Only process the event handler if it's a double tap\n   * @param {Event} event\n   * @param {Function} eventHandler\n   * @private\n   */\n  Table.prototype._touchEventDoubleTapFunction = function (event, eventHandler) {\n    var eventTarget = $(event.target);\n\n    if (\n      this._lastTapTime != null &&\n      new Date().getTime() - this._lastTapTime < 250 &&\n      this._lastTapTarget[0] === eventTarget[0]\n    ) {\n      this._lastTapTime = null;\n      this._lastTapTarget = null;\n      eventHandler();\n    } else {\n      this._lastTapTarget = eventTarget;\n      this._lastTapTime = new Date().getTime();\n    }\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._registerTouchEvents = function () {\n    const regularTouchEventsAndListeners = {\n      /*\n       * Keep track of touchend for multiple selection\n       */\n      touchend: function (event) {\n        if (this._mouseDownRowIdx != null) {\n          var eventTarget = this._getEventTargetElement(event);\n          this._handleMouseEnterSelection(eventTarget, true);\n        }\n        this._mouseDownRowIdx = null;\n        this._getLayoutManager().handleTouchEnd(event);\n      },\n\n      /*\n       * Keep track of touchend for edit\n       */\n      'touchend .oj-table-body': function (evt) {\n        this._touchEventDoubleTapFunction(\n          evt,\n          function (event) {\n            return function () {\n              var eventTarget = this._getEventTargetElement(event);\n              var columnIdx = this._getElementColumnIdx(eventTarget);\n              this._setTableEditable(true, false, columnIdx, true, event);\n              event.preventDefault();\n            }.bind(this);\n          }.bind(this)(evt)\n        );\n      },\n\n      /*\n       * Keep track of touchcancel for multiple selection\n       */\n      touchcancel: function () {\n        this._mouseDownRowIdx = null;\n        this._getLayoutManager().handleTouchCancel();\n      }\n    };\n\n    const passiveTouchEventsAndListeners = {\n      /*\n       * Keep track of touchstart on selection affordance\n       */\n      'touchstart .oj-table-body-row-touch-selection-affordance-touch-area': function (event) {\n        var fingerCount = event.originalEvent.touches.length;\n        if (\n          fingerCount === 1 &&\n          this._getRowSelectionMode() === Table._OPTION_SELECTION_MODES._MULTIPLE\n        ) {\n          if (\n            event.target.classList.contains(\n              Table.CSS_CLASSES._TABLE_DATA_ROW_TOUCH_SELECTION_AFFORDANCE_TOP_CLASS\n            ) ||\n            event.target.classList.contains(\n              Table.CSS_CLASSES._TABLE_DATA_ROW_TOUCH_SELECTION_AFFORDANCE_TOP_ICON_CLASS\n            )\n          ) {\n            event.preventDefault();\n            this._mouseDownRowIdx = $(this._getTableBodyRowTouchSelectionAffordanceBottom()).data(\n              'rowIdx'\n            );\n          } else if (\n            event.target.classList.contains(\n              Table.CSS_CLASSES._TABLE_DATA_ROW_TOUCH_SELECTION_AFFORDANCE_BOTTOM_CLASS\n            ) ||\n            event.target.classList.contains(\n              Table.CSS_CLASSES._TABLE_DATA_ROW_TOUCH_SELECTION_AFFORDANCE_BOTTOM_ICON_CLASS\n            )\n          ) {\n            event.preventDefault();\n            this._mouseDownRowIdx = $(this._getTableBodyRowTouchSelectionAffordanceTop()).data(\n              'rowIdx'\n            );\n          }\n        }\n      },\n\n      /*\n       * column resizing\n       */\n      'touchstart .oj-table-column-header-cell': function (event) {\n        this._getLayoutManager().handleTouchStartHeaderCell(event);\n      },\n\n      /*\n       * Keep track of touchmove for column resize\n       */\n      'touchmove .oj-table-header': function (event) {\n        this._getLayoutManager().handleTouchMoveHeader(event);\n      },\n\n      /*\n       * Keep track of touchmove for multiple selection\n       */\n      'touchmove .oj-table-body-row-touch-selection-affordance-touch-area': function (event) {\n        if (this._mouseDownRowIdx != null) {\n          event.preventDefault();\n          var eventTarget = this._getEventTargetElement(event);\n          this._handleMouseEnterSelection(eventTarget, true);\n        }\n      }\n    };\n\n    const tableContainer = this._getTableContainer();\n\n    // register regular touch events\n    this._on($(tableContainer), regularTouchEventsAndListeners);\n\n    // register touchstart & touchmove with passive option for custom elements\n    if (this._IsCustomElement()) {\n      const createDelegatedListener = function (selector, listener) {\n        return function (event) {\n          const container = event.currentTarget;\n          const targetElement = event.target.closest(selector);\n          if (targetElement && container.contains(targetElement)) {\n            listener($.Event(event, { currentTarget: targetElement }));\n          }\n        };\n      };\n\n      const TOUCHSTART = 'touchstart';\n      const TOUCHMOVE = 'touchmove';\n      const TABLE_BODY_SELECTOR = '.oj-table-body-row-touch-selection-affordance-touch-area';\n      const TOUCHSTART_CELL_HEADER_SELECTOR = '.oj-table-column-header-cell';\n      const TOUCHMOVE_TABLE_HEADER_SELECTOR = '.oj-table-header';\n\n      this._delegatedTouchStartTableBodyListener = createDelegatedListener(\n        TABLE_BODY_SELECTOR,\n        passiveTouchEventsAndListeners[`${TOUCHSTART} ${TABLE_BODY_SELECTOR}`].bind(this)\n      );\n\n      this._delegatedTouchStartCellHeaderListener = createDelegatedListener(\n        TOUCHSTART_CELL_HEADER_SELECTOR,\n        passiveTouchEventsAndListeners[`${TOUCHSTART} ${TOUCHSTART_CELL_HEADER_SELECTOR}`].bind(this)\n      );\n\n      this._delegatedTouchMoveTableHeaderListener = createDelegatedListener(\n        TOUCHMOVE_TABLE_HEADER_SELECTOR,\n        passiveTouchEventsAndListeners[`${TOUCHMOVE} ${TOUCHMOVE_TABLE_HEADER_SELECTOR}`].bind(this)\n      );\n\n      this._delegatedTouchMoveTableBodyListener = createDelegatedListener(\n        TABLE_BODY_SELECTOR,\n        passiveTouchEventsAndListeners[`${TOUCHMOVE} ${TABLE_BODY_SELECTOR}`].bind(this)\n      );\n\n      tableContainer.addEventListener(TOUCHSTART, this._delegatedTouchStartTableBodyListener, {\n        passive: false\n      });\n      tableContainer.addEventListener(TOUCHSTART, this._delegatedTouchStartCellHeaderListener, {\n        passive: false\n      });\n      tableContainer.addEventListener(TOUCHMOVE, this._delegatedTouchMoveTableHeaderListener, {\n        passive: true\n      });\n      tableContainer.addEventListener(TOUCHMOVE, this._delegatedTouchMoveTableBodyListener, {\n        passive: false\n      });\n    } else {\n      this._on($(tableContainer), passiveTouchEventsAndListeners);\n    }\n  };\n\n  Table.ACTIVE_ELEMENT_TYPES = {\n    _HEADER: 'header',\n    _FOOTER: 'footer',\n    _DATA_ROW: 'dataRow',\n    _NO_DATA: 'noData',\n    _ADD_ROW: 'addRow'\n  };\n\n  /**\n   * Create an active object from an element. Active objects contain:\n   * For header: type, index, key, isActionable\n   * For footer: type, index, key, isActionable\n   * For dataRow: type, index, key, isActionable\n   * For noData: type, isActionable\n   * For addRow: type, isActionable\n   * @param {Element} element the element to create an active object from\n   * @return {Object} an active object\n   * @private\n   */\n  Table.prototype._createActiveObject = function (element) {\n    var index;\n    if (element.classList.contains(Table.CSS_CLASSES._TABLE_DATA_ROW_CLASS)) {\n      index = this._getElementRowIdx(element);\n      return {\n        type: Table.ACTIVE_ELEMENT_TYPES._DATA_ROW,\n        index: index,\n        key: this._getRowKeyForRowIdx(index),\n        isActionable: false\n      };\n    } else if (element.classList.contains(Table.CSS_CLASSES._COLUMN_HEADER_CELL_CLASS)) {\n      index = this._getElementColumnIdx(element);\n      return {\n        type: Table.ACTIVE_ELEMENT_TYPES._HEADER,\n        index: index,\n        key: this._getColumnKeyForColumnIdx(index),\n        isActionable: false\n      };\n    } else if (element.classList.contains(Table.CSS_CLASSES._COLUMN_HEADER_SELECTOR_CELL_CLASS)) {\n      return {\n        type: Table.ACTIVE_ELEMENT_TYPES._HEADER,\n        index: -1,\n        isActionable: false\n      };\n    } else if (element.classList.contains(Table.CSS_CLASSES._TABLE_FOOTER_CELL_CLASS)) {\n      index = this._getElementColumnIdx(element);\n      return {\n        type: Table.ACTIVE_ELEMENT_TYPES._FOOTER,\n        index: index,\n        key: this._getColumnKeyForColumnIdx(index),\n        isActionable: false\n      };\n    } else if (element.classList.contains(Table.CSS_CLASSES._TABLE_FOOTER_SELECTOR_CELL_CLASS)) {\n      return {\n        type: Table.ACTIVE_ELEMENT_TYPES._FOOTER,\n        index: -1,\n        isActionable: false\n      };\n    } else if (\n      element.classList.contains(Table.CSS_CLASSES._TABLE_BODY_MESSAGE_ROW_CLASS) ||\n      element.classList.contains(Table.CSS_CLASSES._TABLE_NO_DATA_ROW_CLASS)\n    ) {\n      return {\n        type: Table.ACTIVE_ELEMENT_TYPES._NO_DATA,\n        isActionable: false\n      };\n    } else if (element.classList.contains(Table.CSS_CLASSES._TABLE_ADD_ROW_PLACEHOLDER_CLASS)) {\n      return {\n        type: Table.ACTIVE_ELEMENT_TYPES._ADD_ROW,\n        isActionable: false\n      };\n    }\n    return null;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._getActiveObjectFromActionableChild = function (childElement) {\n    var activeObject = this._createActiveObject(childElement);\n    if (activeObject != null) {\n      return activeObject;\n    }\n    var parentElement = childElement.parentElement;\n    if (parentElement != null && this._getTable().contains(parentElement)) {\n      return this._getActiveObjectFromActionableChild(parentElement);\n    }\n    return null;\n  };\n\n  /**\n   * Checks whether the given active objects are equivalent.\n   * @param {Object} active1 the first active object\n   * @param {Object} active2 the second active object\n   * @return {boolean} true if the given active objects are equivalent\n   * @private\n   */\n  Table.prototype._areActiveObjectsEqual = function (active1, active2) {\n    if (active1 != null && active2 != null) {\n      return (\n        active1.type === active2.type &&\n        active1.index === active2.index &&\n        oj.KeyUtils.equals(active1.key, active2.key)\n      );\n    }\n    return active1 == null && active2 == null;\n  };\n\n  /**\n   * Retrieve the element based on an active object.\n   * @param {Object} active the object to get the element of\n   * @return {Element|null} the active element of the Table\n   * @private\n   */\n  Table.prototype._getElementFromActiveObject = function (active) {\n    if (active != null) {\n      if (active.type === Table.ACTIVE_ELEMENT_TYPES._DATA_ROW) {\n        return this._getTableBodyRow(active.index);\n      } else if (active.type === Table.ACTIVE_ELEMENT_TYPES._HEADER) {\n        if (active.index === -1) {\n          return this._getTableSelectorColumn();\n        }\n        return this._getTableHeaderColumn(active.index);\n      } else if (active.type === Table.ACTIVE_ELEMENT_TYPES._FOOTER) {\n        if (active.index === -1) {\n          return this._getTableFooterSelectorCell();\n        }\n        return this._getTableFooterCell(active.index);\n      } else if (active.type === Table.ACTIVE_ELEMENT_TYPES._NO_DATA) {\n        var messageRow = this._getTableBodyMessageRow();\n        if (messageRow != null) {\n          return messageRow;\n        }\n        return this._getTableNoDataRow();\n      } else if (active.type === Table.ACTIVE_ELEMENT_TYPES._ADD_ROW) {\n        return this._getPlaceHolderRow();\n      }\n    }\n    return null;\n  };\n\n  /**\n   * Retrieve the active element.\n   * @return {Element|null} the active element of the Table\n   * @private\n   */\n  Table.prototype._getActiveElement = function () {\n    return this._getElementFromActiveObject(this._active);\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._getActiveType = function () {\n    return this._active != null ? this._active.type : null;\n  };\n\n  /**\n   * Highlight the current active element\n   * @param {boolean=} skipFocus whether to skip setting focus highlighting on the active element\n   * @private\n   */\n  Table.prototype._highlightActive = function (skipFocus) {\n    if (this._active != null) {\n      var element = this._getElementFromActiveObject(this._active);\n      if (element) {\n        element.classList.add(Table.CSS_CLASSES._TABLE_ACTIVE_ELEMENT_CLASS);\n        if (this._hasFocus() && !this._active.isActionable && !skipFocus) {\n          this._focusInHandler($(element));\n          if (this._hasActiveHeader() && this._active.index !== -1) {\n            this._showTableHeaderColumnSortIcon(this._active.index);\n          }\n        }\n      }\n    }\n  };\n\n  /**\n   * Unhighlight the current active element\n   * @private\n   */\n  Table.prototype._unhighlightActive = function () {\n    if (this._active != null) {\n      var element = this._getElementFromActiveObject(this._active);\n      if (element) {\n        element.classList.remove(Table.CSS_CLASSES._TABLE_ACTIVE_ELEMENT_CLASS);\n        this._focusOutHandler($(element));\n        if (this._hasActiveHeader() && this._active.index !== -1) {\n          this._hideTableHeaderColumnSortIcon(this._active.index);\n        }\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._hasFocus = function () {\n    return this._getTable().classList.contains(Table.MARKER_STYLE_CLASSES._FOCUS);\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._syncActiveElement = function (event, updateAccStatus) {\n    var hasFocus = this._hasFocus();\n    var rowCount = this._getTableBodyRows().length;\n    if (this._active != null) {\n      if (this._hasActiveHeader() || this._hasActiveFooter()) {\n        // verify active column is still visible\n        var visibleIndex = this._getFirstVisibleColumnIndex(this._active.index, true);\n        if (visibleIndex !== this._active.index) {\n          var activeIndex = this._getFirstVisibleColumnIndex(0, true);\n          if (this._hasActiveHeader()) {\n            this._setActiveHeader(activeIndex, event, !hasFocus);\n          } else {\n            this._setActiveFooter(activeIndex, event, !hasFocus);\n          }\n        } else {\n          if (hasFocus) {\n            this._scrollColumnIntoViewport(this._active.index);\n          }\n          this._highlightActive();\n          if (updateAccStatus) {\n            this._updateAccStatusInfo();\n          }\n        }\n        return;\n      }\n      if (this._hasActiveRow()) {\n        if (oj.KeyUtils.equals(this._active.key, this._getRowKeyForRowIdx(this._active.index))) {\n          if (hasFocus) {\n            this._scrollRowIntoViewport(this._active.index);\n          }\n          if (updateAccStatus) {\n            this._updateAccStatusInfo();\n          }\n          this._highlightActive();\n          return;\n        }\n        var currentRow = this._getCurrentRow();\n        var currentRowKey = currentRow != null ? currentRow.rowKey : null;\n        if (currentRowKey != null) {\n          if (rowCount > 0) {\n            var focusRowIndex = this._getRowIdxForRowKey(currentRowKey);\n            if (focusRowIndex != null) {\n              this._setActiveRow(focusRowIndex, event, true, !hasFocus);\n            } else {\n              // if current row is not found, make new active row the one closest to the previous index\n              focusRowIndex = Math.min(\n                currentRow.rowIndex != null ? currentRow.rowIndex : 0,\n                rowCount - 1\n              );\n              this._setActiveRow(focusRowIndex, event, true, !hasFocus);\n            }\n            return;\n          }\n          this._setActiveNoData();\n        }\n        return;\n      } else if (this._hasActiveNoData()) {\n        if (this._noDataMessageShown === true) {\n          this._highlightActive();\n          if (updateAccStatus) {\n            this._updateAccStatusInfo();\n          }\n          return;\n        }\n      } else if (this._hasActiveAddRow()) {\n        if (this._getPlaceHolderRow() != null) {\n          this._highlightActive();\n          if (updateAccStatus) {\n            this._updateAccStatusInfo();\n          }\n          return;\n        }\n      }\n    }\n    if (!this._isTableHeaderless()) {\n      this._setActiveHeader(this._getFirstVisibleColumnIndex(0, true), event, !hasFocus);\n    } else if (this._getPlaceHolderRow() != null) {\n      this._setActiveAddRow();\n    } else if (rowCount > 0) {\n      this._setActiveRow(0, event, true, !hasFocus);\n    } else {\n      this._setActiveNoData();\n    }\n  };\n\n  /**\n   * Returns the index for the first visible column in the specified direction.\n   * @param {number} currentIndex the column index to start the search from\n   * @param {boolean} isForward whether to search in the forward direction\n   * @private\n   */\n  Table.prototype._getFirstVisibleColumnIndex = function (currentIndex, isForward) {\n    var elementByIndexFunc;\n    if (!this._isTableHeaderless()) {\n      elementByIndexFunc = this._getTableHeaderColumn.bind(this);\n    } else if (!this._isTableFooterless()) {\n      elementByIndexFunc = this._getTableFooterCell.bind(this);\n    } else {\n      return null;\n    }\n\n    var columnsCount = this._getColumnDefs().length;\n    var nextIndex = currentIndex;\n    var element;\n    if (isForward) {\n      while (nextIndex < columnsCount) {\n        element = elementByIndexFunc(nextIndex);\n        if (element && element.clientWidth > 0) {\n          return nextIndex;\n        }\n        nextIndex += 1;\n      }\n    } else {\n      while (nextIndex > -1) {\n        element = elementByIndexFunc(nextIndex);\n        if (element && element.clientWidth > 0) {\n          return nextIndex;\n        }\n        nextIndex -= 1;\n      }\n    }\n    return null;\n  };\n\n  /**\n   * Returns the index for the next visible column in the specified direction\n   * @param {number} currentIndex the column index to start the search from\n   * @param {type} isForward whether to search in the forward direction\n   * @private\n   */\n  Table.prototype._getNextVisibleColumnIndex = function (currentIndex, isForward) {\n    var startIndex = isForward ? currentIndex + 1 : currentIndex - 1;\n    if (startIndex === -1) {\n      return this._isDefaultSelectorEnabled() ? startIndex : currentIndex;\n    }\n    var firstVisibleIndex = this._getFirstVisibleColumnIndex(startIndex, isForward);\n    return firstVisibleIndex !== null ? firstVisibleIndex : currentIndex;\n  };\n\n  /**\n   * Get the current row.\n   * @return {Object|null} current row object or null if none.\n   * @throws {Error}\n   * @private\n   */\n  Table.prototype._getCurrentRow = function () {\n    var dataprovider = this._getData();\n    // if no data then bail\n    if (!dataprovider) {\n      return null;\n    }\n    return this._currentRow;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._hasActiveRow = function () {\n    return this._getActiveType() === Table.ACTIVE_ELEMENT_TYPES._DATA_ROW;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._getActiveRowIndex = function () {\n    return this._hasActiveRow() ? this._active.index : null;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._hasActiveHeader = function () {\n    return this._getActiveType() === Table.ACTIVE_ELEMENT_TYPES._HEADER;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._getActiveHeaderIndex = function () {\n    return this._hasActiveHeader() ? this._active.index : null;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._getActiveHeaderColumn = function () {\n    var headerIndex = this._getActiveHeaderIndex();\n    if (headerIndex != null) {\n      return headerIndex === -1\n        ? this._getTableSelectorColumn()\n        : this._getTableHeaderColumn(headerIndex);\n    }\n    return null;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._hasActiveFooter = function () {\n    return this._getActiveType() === Table.ACTIVE_ELEMENT_TYPES._FOOTER;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._getActiveFooterIndex = function () {\n    return this._hasActiveFooter() ? this._active.index : null;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._hasActiveAddRow = function () {\n    return this._getActiveType() === Table.ACTIVE_ELEMENT_TYPES._ADD_ROW;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._hasActiveNoData = function () {\n    return this._getActiveType() === Table.ACTIVE_ELEMENT_TYPES._NO_DATA;\n  };\n\n  /**\n   * Scroll row into viewport\n   * @param {number=} rowIdx  row index\n   * @param {boolean=} includeStuckRow if a 'stuck' row should be acted on\n   * @param {Element=} tableBodyRow the row element\n   * @private\n   */\n  Table.prototype._scrollRowIntoViewport = function (rowIdx, includeStuckRows, tableBodyRow) {\n    var layoutManager = this._getLayoutManager();\n    if (!layoutManager.hasRenderedSize()) {\n      return;\n    }\n\n    if (tableBodyRow == null) {\n      // eslint-disable-next-line no-param-reassign\n      tableBodyRow = this._getTableBodyRow(rowIdx);\n    }\n    if (\n      !includeStuckRows &&\n      tableBodyRow.classList.contains(Table.CSS_CLASSES._TABLE_STUCK_ROW_CLASS)\n    ) {\n      return;\n    }\n    var $scrollingElement = $(layoutManager.getScroller());\n\n    var vertOverflowDiff = layoutManager.getVerticalOverflowDiff(tableBodyRow);\n    var topOverflowDiff = vertOverflowDiff.top;\n    var hasTopOverflow = topOverflowDiff >= 0;\n    var bottomOverflowDiff = vertOverflowDiff.bottom;\n    var hasBottomOverflow = bottomOverflowDiff >= 0;\n\n    // don't adjust scroll position if row has overflow in both directions\n    if (hasTopOverflow && hasBottomOverflow) {\n      return;\n    }\n    // if row fits fully in viewport, scroll overflow side into view\n    // otherwise, scroll the shortest amount to fill viewport with row\n    if (hasBottomOverflow) {\n      if (Math.abs(topOverflowDiff) > Math.abs(bottomOverflowDiff)) {\n        $scrollingElement.scrollTop($scrollingElement.scrollTop() + bottomOverflowDiff);\n      } else {\n        $scrollingElement.scrollTop($scrollingElement.scrollTop() - topOverflowDiff);\n      }\n      this._skipScrollUpdate = false;\n      layoutManager.updateCurrentScrollState();\n    } else if (hasTopOverflow) {\n      if (Math.abs(bottomOverflowDiff) > Math.abs(topOverflowDiff)) {\n        $scrollingElement.scrollTop($scrollingElement.scrollTop() - topOverflowDiff);\n      } else {\n        $scrollingElement.scrollTop($scrollingElement.scrollTop() + bottomOverflowDiff);\n      }\n      this._skipScrollUpdate = false;\n      layoutManager.updateCurrentScrollState();\n    }\n  };\n\n  /**\n   * Scroll column into viewport\n   * @param {number} columnIdx  row index\n   * @param {Element=} cellElement optional cell element that should be scrolled into view\n   * @private\n   */\n  Table.prototype._scrollColumnIntoViewport = function (columnIdx, cellElement) {\n    var layoutManager = this._getLayoutManager();\n    if (!layoutManager.hasRenderedSize()) {\n      return;\n    }\n\n    // if cell is provided, then focus is really on a body cell that could have colspans\n    // otherwise, use the header cell corresponding to the column index value\n    var targetElement;\n    if (cellElement != null) {\n      targetElement = cellElement;\n    } else {\n      if (columnIdx === -1) {\n        targetElement = this._getTableSelectorColumn();\n      } else {\n        targetElement = this._getTableHeaderColumn(columnIdx);\n      }\n      if (!targetElement) {\n        return;\n      }\n    }\n\n    var scrollingElement = layoutManager.getScroller();\n    var $scrollingElement = $(scrollingElement);\n\n    var horOverflowDiff = layoutManager.getHorizontalOverflowDiff(targetElement, columnIdx);\n    var leftOverflowDiff = horOverflowDiff.left;\n    var rightOverflowDiff = horOverflowDiff.right;\n    var hasLeftOverflow = leftOverflowDiff >= 0;\n    var hasRightOverflow = rightOverflowDiff >= 0;\n\n    if (DataCollectionUtils.isEdge()) {\n      leftOverflowDiff *= -1;\n      rightOverflowDiff *= -1;\n    }\n\n    // don't adjust scroll position if column has overflow in both directions\n    if (hasLeftOverflow && hasRightOverflow) {\n      return;\n    }\n    // if column fits fully in viewport, scroll overflow side into view\n    // otherwise, scroll the shortest amount to fill viewport with column\n    if (hasLeftOverflow) {\n      if (Math.abs(rightOverflowDiff) > Math.abs(leftOverflowDiff)) {\n        $scrollingElement.scrollLeft($scrollingElement.scrollLeft() - leftOverflowDiff);\n      } else {\n        $scrollingElement.scrollLeft($scrollingElement.scrollLeft() + rightOverflowDiff);\n      }\n      this._skipScrollUpdate = false;\n      layoutManager.updateCurrentScrollState();\n    } else if (hasRightOverflow) {\n      if (Math.abs(leftOverflowDiff) > Math.abs(rightOverflowDiff)) {\n        $scrollingElement.scrollLeft($scrollingElement.scrollLeft() + rightOverflowDiff);\n      } else {\n        $scrollingElement.scrollLeft($scrollingElement.scrollLeft() - leftOverflowDiff);\n      }\n      this._skipScrollUpdate = false;\n      layoutManager.updateCurrentScrollState();\n    }\n  };\n\n  /**\n   * Update the current row. If called with null then resets the currentRow.\n   * If index/key argument is specified then sets the current row. A beforecurrentrow\n   * event is fired before the current row is changed. If that event results in\n   * an error then the current row will not be changed.\n   * @param {Object} currentRow current row\n   * @param {Object} event\n   * @param {boolean} optionChange whether it was invoked through an optionChange call\n   * @return {string} 'updated' if the current row was successful, 'ignored' if key/index\n   *                  cannot be set, 'vetoed' if beforeCurrentItem event is vetoed, 'error'\n   *                  if the key/index is invalid or other errors.\n   * @throws {Error}\n   * @private\n   */\n  Table.prototype._setCurrentRow = function (currentRow, event, optionChange) {\n    var existingCurrentRow = this._currentRow;\n    var errSummary;\n    var errDetail;\n    var localRowIndex;\n    var updatedCurrentRow;\n\n    var isClearCurrentRow =\n      currentRow == null || (currentRow.rowKey == null && currentRow.rowIndex == null);\n    if (!isClearCurrentRow) {\n      var dataprovider = this._getData();\n      var rowIndex = currentRow.rowIndex;\n      var rowKey = currentRow.rowKey;\n      if (rowKey == null) {\n        rowKey = this._getRowKeyForDataSourceRowIndex(rowIndex);\n      }\n\n      rowIndex = this._getDataSourceRowIndexForRowKey(rowKey);\n      localRowIndex = this._getRowIdxForRowKey(rowKey);\n      updatedCurrentRow = { rowIndex: rowIndex, rowKey: rowKey };\n      if (\n        localRowIndex !== -1 &&\n        (!dataprovider || localRowIndex < -1 || localRowIndex === null || rowKey === null)\n      ) {\n        errSummary = Table._LOGGER_MSG._ERR_CURRENTROW_UNAVAILABLE_INDEX_SUMMARY;\n        errDetail = ojtranslation.applyParameters(Table._LOGGER_MSG._ERR_CURRENTROW_UNAVAILABLE_INDEX_DETAIL, {\n          rowIdx: localRowIndex\n        });\n        // setting currentRow to previous valid value\n        this.option('currentRow', this._currentRow, {\n          _context: {\n            writeback: true,\n            originalEvent: event,\n            internalSet: true\n          }\n        });\n        if (optionChange) {\n          // Only throw an Error if the current row was set through option change\n          // so that the caller can be notified of the invalid row.\n          throw new Error(errSummary + '\\n' + errDetail);\n        } else {\n          Logger.info(errSummary + '\\n' + errDetail);\n        }\n        // do not update the currentRow\n        return Table._CURRENT_ROW_STATUS._IGNORED;\n      }\n    } else {\n      localRowIndex = -1;\n      updatedCurrentRow = currentRow != null ? currentRow : null;\n    }\n    var currentFocusedRowIdx = this._getActiveRowIndex();\n    var currentRowChanged = !this._compareCurrentRowValues(existingCurrentRow, updatedCurrentRow);\n    if (currentRowChanged) {\n      var accessibleContext = this._getAccessibleContext();\n      this._clearAccessibleContext();\n      var currentRowUpdateAllowed;\n      try {\n        currentRowUpdateAllowed = this._trigger('beforeCurrentRow', event, {\n          currentRow: updatedCurrentRow,\n          previousCurrentRow: existingCurrentRow\n        });\n      } catch (err) {\n        // caught an error. Do not change current row\n        errSummary = Table._LOGGER_MSG._ERR_PRECURRENTROW_ERROR_SUMMARY;\n        errDetail = ojtranslation.applyParameters(Table._LOGGER_MSG._ERR_PRECURRENTROW_ERROR_DETAIL, {\n          error: err.toString()\n        });\n        Logger.info(errSummary + '\\n' + errDetail);\n        // do not update the currentRow to the new value if an exception was caught\n        this.option('currentRow', this._currentRow, {\n          _context: {\n            writeback: true,\n            originalEvent: event,\n            internalSet: true\n          }\n        });\n        return Table._CURRENT_ROW_STATUS._ERROR;\n      }\n\n      if (!currentRowUpdateAllowed) {\n        // restore previous accessible row context if current row is not changing\n        this._setAccessibleContext(accessibleContext);\n        // do not update the currentRow to the new value if a listener returned false\n        this.option('currentRow', this._currentRow, {\n          _context: {\n            writeback: true,\n            originalEvent: event,\n            internalSet: true\n          }\n        });\n        return Table._CURRENT_ROW_STATUS._VETOED;\n      }\n\n      var isExistingCurrentRowClear =\n        existingCurrentRow == null ||\n        (existingCurrentRow.rowKey == null && existingCurrentRow.rowIndex == null);\n      if (!isExistingCurrentRowClear) {\n        var existingCurrentRowIndex = existingCurrentRow.rowIndex;\n        var existingCurrentRowKey = this._getRowKeyForDataSourceRowIndex(existingCurrentRowIndex);\n        var existingCurrentRowIdx = this._getRowIdxForRowKey(existingCurrentRowKey);\n\n        var updateEditable = this._setTableEditable(false, false, 0, true, event);\n        if (updateEditable instanceof Promise) {\n          return updateEditable.then(\n            function (value) {\n              if (value === false) {\n                this._resetCurrentRow(existingCurrentRow, existingCurrentRowIdx, event);\n                return Table._CURRENT_ROW_STATUS._IGNORED;\n              }\n              var existingBodyRow = this._getTableBodyRow(existingCurrentRowIdx);\n              if (existingBodyRow != null) {\n                existingBodyRow.classList.remove(Table.CSS_CLASSES._TABLE_DATA_CURRENT_ROW_CLASS);\n              }\n              this._currentRow = updatedCurrentRow;\n\n              this._updateCurrentRow(isClearCurrentRow, localRowIndex, event);\n              if (event == null) {\n                // only scroll to the new current row and highlight it if the Table has focus\n                this._setActiveRow(localRowIndex, event, false, !this._hasFocus());\n              }\n              return Table._CURRENT_ROW_STATUS._UPDATED;\n            }.bind(this),\n            function () {\n              this._resetCurrentRow(existingCurrentRow, existingCurrentRowIdx, event);\n              return Table._CURRENT_ROW_STATUS._VETOED;\n            }.bind(this)\n          );\n        } else if (updateEditable === false) {\n          this._resetCurrentRow(existingCurrentRow, existingCurrentRowIdx, event);\n          return Table._CURRENT_ROW_STATUS._VETOED;\n        }\n        var existingBodyRow = this._getTableBodyRow(existingCurrentRowIdx);\n        if (existingBodyRow != null) {\n          existingBodyRow.classList.remove(Table.CSS_CLASSES._TABLE_DATA_CURRENT_ROW_CLASS);\n        }\n      }\n      this._currentRow = updatedCurrentRow;\n      this._updateCurrentRow(isClearCurrentRow, localRowIndex, event);\n    }\n    if ((currentRowChanged || currentFocusedRowIdx !== localRowIndex) && event == null) {\n      // only scroll to the new current row and highlight it if the Table has focus\n      this._setActiveRow(localRowIndex, event, false, !this._hasFocus());\n    }\n    return Table._CURRENT_ROW_STATUS._UPDATED;\n  };\n\n  /**\n   * Helper method to reset current row\n   * @private\n   */\n  Table.prototype._resetCurrentRow = function (existingCurrentRow, existingCurrentRowIdx, event) {\n    this._currentRow = existingCurrentRow;\n    var currentFocusElement = document.activeElement;\n    var accessibleContext = this._getAccessibleContext();\n    var columnIdx = this._getElementColumnIdx(currentFocusElement);\n    this._queueTask(\n      function () {\n        var focusRowIdx = existingCurrentRowIdx;\n        var focusColumnIdx = columnIdx;\n        if (focusRowIdx != null && focusColumnIdx != null) {\n          // prettier-ignore\n          setTimeout( // @HTMLUpdateOK\n            function () {\n              this._setCellFocus(focusRowIdx, focusColumnIdx);\n            }.bind(this),\n            0\n          );\n        } else if (focusRowIdx != null) {\n          // prettier-ignore\n          setTimeout( // @HTMLUpdateOK\n            function () {\n              this._setActiveRow(focusRowIdx, event);\n            }.bind(this),\n            0\n          );\n        }\n      }.bind(this)\n    );\n    // restore previous accessible row context if current row is not changing\n    this._setAccessibleContext(accessibleContext);\n    // do not update the currentRow to the new value if updateEditable returned false\n    this.option('currentRow', this._currentRow, {\n      _context: {\n        writeback: true,\n        originalEvent: event,\n        internalSet: true\n      }\n    });\n  };\n\n  /**\n   * Helper method to set current row\n   * @private\n   */\n  Table.prototype._updateCurrentRow = function (isClearCurrentRow, localRowIndex, event) {\n    this.option('currentRow', this._currentRow, {\n      _context: {\n        writeback: true,\n        originalEvent: event,\n        internalSet: true\n      }\n    });\n    if (!isClearCurrentRow) {\n      var tableBodyRow = this._getTableBodyRow(localRowIndex);\n      if (tableBodyRow != null) {\n        tableBodyRow.classList.add(Table.CSS_CLASSES._TABLE_DATA_CURRENT_ROW_CLASS);\n      }\n    }\n  };\n\n  /**\n   * Compares two 'currentRow' values and rturns true if they represent the same row.\n   * @param {Object} currentRowValue1 The first 'currentRow' value.\n   * @param {Bbject} currentRowValue2 The second 'currentRow' value.\n   * @private\n   */\n  Table.prototype._compareCurrentRowValues = function (currentRowValue1, currentRowValue2) {\n    if (currentRowValue1 === currentRowValue2) {\n      return true;\n    }\n    if (currentRowValue1 != null && currentRowValue2 != null) {\n      if (\n        currentRowValue1.rowIndex === currentRowValue2.rowIndex &&\n        oj.KeyUtils.equals(currentRowValue1.rowKey, currentRowValue2.rowKey)\n      ) {\n        return true;\n      }\n    } else if (currentRowValue1 == null && currentRowValue2 == null) {\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * Set focus on a cell\n   * @param {number} rowIdx  row index\n   * @param {number} columnIdx  column index\n   * @return {boolean} whether setting the cell focus was successful\n   * @private\n   */\n  Table.prototype._setCellFocus = function (rowIdx, columnIdx) {\n    var tableBodyCell = this._getTableBodyCell(rowIdx, columnIdx);\n    if (tableBodyCell) {\n      var elements = DataCollectionUtils.getFocusableElementsInNode(tableBodyCell);\n      if (elements.length > 0) {\n        var firstElem = elements[0];\n        firstElem.focus();\n        if (typeof firstElem.select === 'function') {\n          firstElem.select();\n        }\n        this._scrollColumnIntoViewport(columnIdx, tableBodyCell);\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Try setting focus in the cell. If unsuccesful, set focus on the first focusable cell in the row\n   * if forwardSearch is true. Else try from the last cell in the row.\n   * @param {number} rowIdx  row index\n   * @param {number} columnIdx  column index\n   * @param {boolean} forwardSearch try setting focus starting at the first column\n   * @private\n   */\n  Table.prototype._setCellInRowFocus = function (rowIdx, columnIdx, forwardSearch) {\n    if (this._setCellFocus(rowIdx, columnIdx)) {\n      return;\n    }\n    var tableBodyCells = this._getTableBodyCells(rowIdx);\n\n    var tableBodyCellsCount = tableBodyCells.length;\n    for (var i = 0; i < tableBodyCellsCount; i++) {\n      var tableBodyCellIndex = i;\n      if (!forwardSearch) {\n        tableBodyCellIndex = tableBodyCellsCount - i - 1;\n      }\n      if (this._setCellFocus(rowIdx, tableBodyCellIndex)) {\n        return;\n      }\n    }\n  };\n\n  /**\n   * Set the focus in handler\n   * @param {Function} focusHandler focus in handler\n   * @private\n   */\n  Table.prototype._setFocusInHandler = function (focusHandler) {\n    this._focusInHandler = focusHandler;\n  };\n\n  /**\n   * Set the focus out handler\n   * @param {Function} focusHandler focus out handler\n   * @private\n   */\n  Table.prototype._setFocusOutHandler = function (focusHandler) {\n    this._focusOutHandler = focusHandler;\n  };\n\n  /**\n   * Sets the active row by index.\n   * @param {number} index the row index to set as active\n   * @param {Event|null=} event the DOM event causing the active element change\n   * @param {boolean=} updateCurrent whether to update the currentRow\n   * @param {boolean=} skipScroll whether to skip scrolling the row into view\n   * @param {boolean=} skipFocus whether to skip setting focus highlighting on the row\n   * @param {boolean=} scrollStuckRow whether to scroll a stuck row into view\n   * @returns {boolean} true if active was changed, false if not\n   * @private\n   */\n  Table.prototype._setActiveRow = function (\n    index,\n    event,\n    updateCurrent,\n    skipScroll,\n    skipFocus,\n    scrollStuckRow\n  ) {\n    if (index === -1) {\n      return this._clearActiveRow(event, updateCurrent);\n    }\n    var activeElement = this._getTableBodyRow(index);\n    if (activeElement != null) {\n      return this._setActive(\n        activeElement,\n        event,\n        updateCurrent,\n        skipScroll,\n        skipFocus,\n        scrollStuckRow\n      );\n    }\n    return false;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._clearActiveRow = function (event, updateCurrent) {\n    return this._hasActiveRow() ? this._setActive(null, event, updateCurrent) : true;\n  };\n\n  /**\n   * Sets the active header cell by element.\n   * @param {number} index the header index to set as active\n   * @param {Event|null=} event the DOM event causing the active element change\n   * @param {boolean=} skipScroll whether to skip scrolling the header into view\n   * @returns {boolean} true if active was changed, false if not\n   * @private\n   */\n  Table.prototype._setActiveHeader = function (index, event, skipScroll) {\n    if (this._isTableHeaderless() || index == null) {\n      return false;\n    }\n    var activeElement =\n      index === -1 ? this._getTableSelectorColumn() : this._getTableHeaderColumn(index);\n    return this._setActive(activeElement, event, true, skipScroll);\n  };\n\n  /**\n   * Sets the active header cell by element.\n   * @param {number} index the header index to set as active\n   * @param {Event|null=} event the DOM event causing the active element change\n   * @param {boolean=} skipScroll whether to skip scrolling the header into view\n   * @returns {boolean} true if active was changed, false if not\n   * @private\n   */\n  Table.prototype._setActiveFooter = function (index, event, skipScroll) {\n    if (this._isTableFooterless() || index == null) {\n      return false;\n    }\n    var activeElement =\n      index === -1 ? this._getTableFooterSelectorCell() : this._getTableFooterCell(index);\n    return this._setActive(activeElement, event, true, skipScroll);\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._setActiveAddRow = function () {\n    var placeHolderRow = this._getPlaceHolderRow();\n    if (placeHolderRow != null) {\n      return this._setActive(placeHolderRow, null, true);\n    }\n    return false;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._setActiveNoData = function () {\n    var messageRow = this._getTableBodyMessageRow();\n    if (messageRow != null) {\n      this._setActive(messageRow, null, true);\n    } else {\n      var noDataRow = this._getTableNoDataRow();\n      if (noDataRow != null) {\n        this._setActive(noDataRow, null, true);\n      }\n    }\n  };\n\n  /**\n   * Sets the active header cell, footer cell, data row, no data row, or add row by element.\n   * @param {Element|null} element to set active to\n   * @param {Event|null=} event the DOM event causing the active element change\n   * @param {boolean=} updateCurrent whether to update the currentRow\n   * @param {boolean=} skipScroll whether to skip scrolling the active element into view\n   * @param {boolean=} skipFocus whether to skip setting focus highlighting on the row\n   * @param {boolean=} scrollStuckRow whether to scroll a stuck row into view\n   * @returns {boolean} true if active was changed, false if not\n   * @private\n   */\n  Table.prototype._setActive = function (\n    element,\n    event,\n    updateCurrent,\n    skipScroll,\n    skipFocus,\n    scrollStuckRow\n  ) {\n    if (element != null) {\n      var active = this._createActiveObject(element);\n      // see if the active cell is actually changing\n      if (!this._areActiveObjectsEqual(active, this._active)) {\n        // update the current row if we are making a row active\n        if (active.type === Table.ACTIVE_ELEMENT_TYPES._DATA_ROW) {\n          if (updateCurrent) {\n            const updated = this._setCurrentRow({ rowKey: active.key }, event);\n            if (updated instanceof Promise) {\n              return updated.then((value) => {\n                if (value !== Table._CURRENT_ROW_STATUS._UPDATED) {\n                  return false;\n                }\n                this._updateActive(true, active, skipScroll, skipFocus, scrollStuckRow);\n                return true;\n              });\n            } else if (updated !== Table._CURRENT_ROW_STATUS._UPDATED) {\n              return false;\n            }\n          }\n        } else if (!this._clearActiveRow(event, updateCurrent)) {\n          return false;\n        }\n        this._updateActive(true, active, skipScroll, skipFocus, scrollStuckRow);\n      } else {\n        this._updateActive(false, active, skipScroll, skipFocus, scrollStuckRow);\n      }\n    } else if (this._active != null) {\n      // update the current row if we are clearing an active row\n      if (this._hasActiveRow()) {\n        if (updateCurrent) {\n          const updated = this._setCurrentRow(null, event);\n          if (updated instanceof Promise) {\n            return updated.then((value) => {\n              if (value !== Table._CURRENT_ROW_STATUS._UPDATED) {\n                return false;\n              }\n              this._unhighlightActive();\n              this._active = null;\n              return true;\n            });\n          } else if (updated !== Table._CURRENT_ROW_STATUS._UPDATED) {\n            return false;\n          }\n        }\n      }\n      this._unhighlightActive();\n      this._active = null;\n    }\n    return true;\n  };\n\n  Table.prototype._updateActive = function (\n    isNewActiveObj,\n    active,\n    skipScroll,\n    skipFocus,\n    scrollStuckRow\n  ) {\n    if (isNewActiveObj) {\n      this._setTableActionableMode(false, true);\n      // update focus highlighting for previous active element\n      this._unhighlightActive();\n      this._active = active;\n    }\n    if (!skipScroll) {\n      if (\n        active.type === Table.ACTIVE_ELEMENT_TYPES._HEADER ||\n        active.type === Table.ACTIVE_ELEMENT_TYPES._FOOTER\n      ) {\n        this._scrollColumnIntoViewport(active.index);\n      } else if (active.type === Table.ACTIVE_ELEMENT_TYPES._DATA_ROW) {\n        this._scrollRowIntoViewport(active.index, scrollStuckRow);\n      }\n    }\n    // update focus highlighting for current active element\n    this._highlightActive(skipFocus);\n    if (!this._active.isActionable) {\n      this._updateAccStatusInfo();\n    }\n  };\n\n  /**\n   * Set the state of the column. e.g., selected, etc.\n   * @param {number} columnIdx  column index\n   * @param {boolean} selected  whether it's selected\n   * @private\n   */\n  Table.prototype._setColumnState = function (columnIdx, selected) {\n    var headerCell = this._getTableHeaderColumn(columnIdx);\n    var footerCell = this._getTableFooterCell(columnIdx);\n    this._applyColumnState(headerCell, footerCell, columnIdx, selected);\n  };\n\n  /**\n   * Set the state of the column. e.g., selected, etc.\n   * @param {Element=} headerCell header DOM element\n   * @param {Element=} footerCell footer DOM element\n   * @param {number} columnIdx  column index\n   * @param {boolean} selected  whether it's selected\n   * @private\n   */\n  Table.prototype._applyColumnState = function (headerCell, footerCell, columnIdx, selected) {\n    if (!selected) {\n      if (headerCell != null) {\n        headerCell.classList.remove(Table.MARKER_STYLE_CLASSES._SELECTED);\n      }\n      if (footerCell != null) {\n        footerCell.classList.remove(Table.MARKER_STYLE_CLASSES._SELECTED);\n      }\n    } else {\n      if (headerCell != null) {\n        headerCell.classList.add(Table.MARKER_STYLE_CLASSES._SELECTED);\n      }\n      if (footerCell != null) {\n        footerCell.classList.add(Table.MARKER_STYLE_CLASSES._SELECTED);\n      }\n    }\n    this._updateColumnStateCellsClass(columnIdx, selected);\n  };\n\n  /**\n   * Update the css class from all the cells in a column according to column state\n   * @param {number} columnIdx  column index\n   * @param {boolean} selected  whether the column is selected\n   * @private\n   */\n  Table.prototype._updateColumnStateCellsClass = function (columnIdx, selected) {\n    var selectedRowIdxs = this._getSelectedRowIdxs();\n    var tableBodyRows = this._getTableBodyRows();\n    for (var i = 0; i < tableBodyRows.length; i++) {\n      var tableBodyCell = this._getTableBodyCell(i, columnIdx);\n      if (tableBodyCell) {\n        if (!selected) {\n          var rowSelected = false;\n          var selectedRowIdxsCount = selectedRowIdxs.length;\n          for (var j = 0; j < selectedRowIdxsCount; j++) {\n            if (i === selectedRowIdxs[j]) {\n              rowSelected = true;\n              break;\n            }\n          }\n          if (!rowSelected) {\n            tableBodyCell.classList.remove(Table.MARKER_STYLE_CLASSES._SELECTED);\n          }\n        } else {\n          tableBodyCell.classList.add(Table.MARKER_STYLE_CLASSES._SELECTED);\n        }\n      }\n    }\n    var addRow = this._getPlaceHolderRow();\n    if (addRow != null) {\n      var addRowCell = this._getPlaceHolderRowCell(columnIdx);\n      if (addRowCell != null) {\n        if (selected) {\n          addRowCell.classList.add(Table.MARKER_STYLE_CLASSES._SELECTED);\n        } else {\n          addRowCell.classList.remove(Table.MARKER_STYLE_CLASSES._SELECTED);\n        }\n      }\n    }\n  };\n\n  /**\n   * Update the css class from all the cells in a row according to row state\n   * @param {number|null} rowIdx  row index\n   * @param {Element|null} tableBodyRow  tr DOM element\n   * @param {Object} state  row state\n   * @private\n   */\n  Table.prototype._updateRowStateCellsClass = function (rowIdx, tableBodyRow, state) {\n    if (!tableBodyRow) {\n      // eslint-disable-next-line no-param-reassign\n      tableBodyRow = this._getTableBodyRow(rowIdx);\n    }\n\n    if (tableBodyRow[Table._DATA_OJ_SELECTABLE] === Table._CONST_OFF) {\n      return;\n    }\n\n    var tableBodyCells = this._getTableBodyCells(null, tableBodyRow);\n    if (tableBodyCells.length === 0) {\n      return;\n    }\n\n    if (this._isDefaultSelectorEnabled()) {\n      var selectorCell = this._getTableBodySelectorCell(tableBodyRow);\n      tableBodyCells.unshift(selectorCell);\n    }\n    if (this._isGutterStartColumnEnabled()) {\n      let gutterStartCell = this._getTableGutterCell('body', 'start', tableBodyRow);\n      tableBodyCells.unshift(gutterStartCell);\n    }\n    if (this._isGutterEndColumnEnabled()) {\n      let gutterEndCell = this._getTableGutterCell('body', 'end', tableBodyRow);\n      tableBodyCells.push(gutterEndCell);\n    }\n\n    var i;\n    var selected = state.selected;\n    var hover = state.hover;\n    var tableBodyCellsCount = tableBodyCells.length;\n    if (hover != null) {\n      for (i = 0; i < tableBodyCellsCount; i++) {\n        if (!hover) {\n          tableBodyCells[i].classList.remove(Table.MARKER_STYLE_CLASSES._HOVER);\n        } else {\n          tableBodyCells[i].classList.add(Table.MARKER_STYLE_CLASSES._HOVER);\n        }\n      }\n    }\n    if (selected != null) {\n      for (i = 0; i < tableBodyCellsCount; i++) {\n        if (!selected) {\n          tableBodyCells[i].classList.remove(Table.MARKER_STYLE_CLASSES._SELECTED);\n        } else {\n          tableBodyCells[i].classList.add(Table.MARKER_STYLE_CLASSES._SELECTED);\n        }\n      }\n    }\n  };\n\n  /**\n   * Adjust scrollPosition such that it will scroll to the selection anchor (last selected row)\n   * @param {boolean} isSort\n   * @private\n   */\n  Table.prototype._adjustScrollPositionOnFetch = function (isSort) {\n    var scrollPosition = this.options.scrollPosition == null ? {} : this.options.scrollPosition;\n\n    if (isNaN(scrollPosition.rowIndex) || scrollPosition.rowKey === undefined) {\n      // still adjusting, which could happen because a REQUEST event from TableDataSource\n      // results in a Refresh event fired\n      return;\n    }\n\n    var selectedRowIdxs = this._getSelectedRowIdxs();\n    if (\n      selectedRowIdxs != null &&\n      selectedRowIdxs.length > 0 &&\n      this._isRowSelectionEnabled() &&\n      this._isScrollToKey()\n    ) {\n      if (\n        !isNaN(this._selectionAnchorIdx) &&\n        selectedRowIdxs.indexOf(this._selectionAnchorIdx) > -1\n      ) {\n        scrollPosition.rowKey = this._getRowKeyForRowIdx(this._selectionAnchorIdx);\n      } else {\n        // selection is programmatically set\n        scrollPosition.rowKey = this._getRowKeyForRowIdx(selectedRowIdxs[0]);\n      }\n      // row index gets re-computed after refresh\n      delete scrollPosition.rowIndex;\n    } else {\n      if (!this._isExternalScrollEnabled()) {\n        // remain at the top\n        scrollPosition.y = 0;\n      }\n      delete scrollPosition.rowIndex;\n      // row key gets re-computed after refresh\n      delete scrollPosition.rowKey;\n    }\n\n    // don't reset horizontal scroll position while sorting\n    if (!isSort) {\n      scrollPosition.x = 0;\n      scrollPosition.columnKey = null;\n      scrollPosition.columnIndex = 0;\n      scrollPosition.offsetX = 0;\n    }\n    scrollPosition.offsetY = 0;\n\n    // explicitly set changed to false so option change will not be triggered, syncScrollPosition\n    // after invoked after rendering will complete the scrollPosition values and fire the option\n    // change event\n    this.option('scrollPosition', scrollPosition, {\n      _context: {\n        internalSet: true\n      },\n      changed: false\n    });\n  };\n\n  /**\n   * Whether the scrollPosition has been adjusted before data is refresh\n   * @private\n   */\n  Table.prototype._isScrollPositionAdjusted = function () {\n    var scrollPosition = this.options.scrollPosition;\n    if (scrollPosition == null) {\n      return false;\n    }\n    return scrollPosition.rowIndex === undefined && scrollPosition.rowKey != null;\n  };\n\n  /**\n   * Find the row element by the row key\n   * @private\n   */\n  Table.prototype._findRowElementByKey = function (rowKey) {\n    var tableBodyRows = this._getTableBodyRows();\n    for (var i = 0; i < tableBodyRows.length; i++) {\n      if (oj.KeyUtils.equals(tableBodyRows[i][Table._ROW_ITEM_EXPANDO].key, rowKey)) {\n        return tableBodyRows[i];\n      }\n    }\n    return null;\n  };\n\n  /**\n   * Returns true if ListView should handle key based scrollPosition, false otherwise.\n   */\n  Table.prototype._isScrollToKey = function () {\n    var scrollToKey = this.options.scrollToKey;\n    if (scrollToKey === 'never') {\n      return false;\n    } else if (scrollToKey === 'always') {\n      return true;\n    }\n\n    var data = this.options.data;\n    if (!oj.DataProviderFeatureChecker.isDataProvider(data)) {\n      return true;\n    } else if (data.getCapability) {\n      var capability = data.getCapability('fetchFirst');\n      if (capability && capability.iterationSpeed === 'immediate') {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Gets the row key that Table needs to scroll to\n   * @private\n   */\n  Table.prototype._getScrollToKey = function () {\n    var key = this.options.scrollPosition.rowKey;\n    if (key) {\n      return new Promise(\n        function (resolve) {\n          var result = this._validateKeyForScroll(key, true);\n          if (result == null) {\n            resolve(null);\n          } else {\n            result.then(function (value) {\n              resolve(value ? key : null);\n            });\n          }\n        }.bind(this)\n      );\n    }\n    return Promise.resolve(null);\n  };\n\n  /**\n   * Validate a key for the purpose of scrolling\n   * @return {Promise|null} a Promise that resolves to true if one of the keys specified is valid, false otherwise.\n   *                        Returns null if it cannot validate the keys because the DataProvider does not have the\n   *                        proper capability.\n   * @private\n   */\n  Table.prototype._validateKeyForScroll = function (key, skipLocal) {\n    // scrollToKey set to never or DataProvider does not have the right capability\n    if (!this._isScrollToKey()) {\n      return null;\n    }\n\n    // found one of the keys in cache, we are done\n    if (!skipLocal && this._findRowElementByKey(key) != null) {\n      return Promise.resolve(true);\n    }\n\n    // need to verify key if we have a DataProvider that supports containsKeys\n    var dataProvider = this._getData();\n    if (dataProvider.containsKeys) {\n      return new Promise(function (resolve) {\n        var set = new Set();\n        set.add(key);\n        dataProvider.containsKeys({ keys: set }).then(\n          function (value) {\n            resolve(value.results.size > 0);\n          },\n          function () {\n            resolve(false);\n          }\n        );\n      });\n    }\n    // else we can't verify, so just return null and let syncScrollPosition try to fetch and find the row\n    return null;\n  };\n\n  /**\n   * Synchronize value of scrollPosition attribute with the actual table body scroll position\n   * @param {object} position the value of scrollPosition attribute\n   * @param {boolean=} skipKeyValidation whether to skip row key validation in position.\n   * @return {boolean} true if the scroll position syncing is completed.\n   *                   false if the scroll syncing is pending an asynchronous callback.\n   * @private\n   */\n  Table.prototype._syncScrollPosition = function (position, skipKeyValidation) {\n    // only supported in custom element.  Check whether it's scrollable\n    if (\n      !this._IsCustomElement() ||\n      this._noDataMessageShown ||\n      (!this._isScrollableX() && !this._isScrollableY())\n    ) {\n      return true;\n    }\n\n    if (this._scrollPosition != null) {\n      // eslint-disable-next-line no-param-reassign\n      position = this._scrollPosition;\n    } else if (position == null) {\n      // eslint-disable-next-line no-param-reassign\n      position = this.options.scrollPosition;\n    }\n\n    if (!skipKeyValidation && position.rowKey != null) {\n      var promise = this._validateKeyForScroll(position.rowKey, false);\n      if (promise) {\n        // set scroll position rowKey validation busy state\n        var keyValidationResolveFunc = this._createComponentBusyState(\n          'is validating scroll position rowKey.'\n        );\n        promise.then(\n          function (valid) {\n            if (!valid) {\n              // remove invalid or non-existing key\n              // eslint-disable-next-line no-param-reassign\n              delete position.rowKey;\n            }\n            // clear scroll position rowKey validation busy state\n            this._clearComponentBusyState(keyValidationResolveFunc);\n            // try again\n            this._syncScrollPosition(position, true);\n          }.bind(this)\n        );\n      }\n      return false;\n    }\n\n    // figure out what the final y should be\n    var coord = this._getScrollCoordinates(position);\n    var x = this._isScrollableX() ? coord.x : 0;\n    var y = this._isScrollableY() ? coord.y : 0;\n\n    if (isNaN(x) && isNaN(y)) {\n      // invalid scroll position\n      // we'll still need to report current scroll position, which could have changed because of scroll and fetch\n      this.option('scrollPosition', this._getCurrentScrollPosition(), {\n        _context: {\n          originalEvent: null,\n          internalSet: true\n        }\n      });\n      this._scrollPosition = null;\n      this._editRowCallback = null;\n      return true;\n    }\n\n    var scrollTop = isNaN(this._scrollTop) ? 0 : this._scrollTop;\n    var scrollLeft = isNaN(this._scrollLeft) ? 0 : this._scrollLeft;\n\n    // check if only x updated\n    if ((!isNaN(x) && isNaN(y)) || (!isNaN(x) && y === scrollTop && x !== scrollLeft)) {\n      var newScrollPosition;\n      if (this._isScrollableX()) {\n        this._setScrollX(x);\n        newScrollPosition = this._getCurrentScrollPosition(x);\n      } else {\n        newScrollPosition = this._getCurrentScrollPosition();\n      }\n\n      this.option('scrollPosition', newScrollPosition, {\n        _context: {\n          originalEvent: null,\n          internalSet: true\n        }\n      });\n    } else if (y !== scrollTop) {\n      if (!this._isScrollableY()) {\n        // if x has changed, remove y and try again\n        if (!isNaN(x) && x !== scrollLeft) {\n          // eslint-disable-next-line no-param-reassign\n          delete position.y;\n          return this._syncScrollPosition(position, skipKeyValidation);\n        }\n        this.option('scrollPosition', this._getCurrentScrollPosition(), {\n          _context: {\n            originalEvent: null,\n            internalSet: true\n          }\n        });\n        return true;\n      }\n\n      // flag it so that handleScroll won't do anything\n      var handlingScrollY = this._setScrollY(y);\n      if (!isNaN(x) && x !== scrollLeft) {\n        this._setScrollX(x);\n      }\n\n      // check if further scrolling is needed\n      if (y === -1) {\n        // yes, save the scrollPosition to set and bail\n        // syncScrollPosition will be invoked again once fetch is done\n        this._scrollPosition = position;\n        return handlingScrollY;\n      }\n\n      // ok to update scrollPosition option\n      this.option('scrollPosition', this._getCurrentScrollPosition(x, y), {\n        _context: {\n          originalEvent: null,\n          internalSet: true\n        }\n      });\n    } else if (position && (position.rowKey == null || isNaN(position.rowIndex))) {\n      // if x and y is present, but position value is not complete, get it\n      // ok to update scrollPosition option\n      this.option('scrollPosition', this._getCurrentScrollPosition(x, y), {\n        _context: {\n          originalEvent: null,\n          internalSet: true\n        }\n      });\n    }\n\n    if (this._scrollPosition != null) {\n      this._scrollPosition = null;\n    }\n    if (this._editRowCallback) {\n      // if need to set edit row after fetch\n      this._editRowCallback();\n      this._editRowCallback = null;\n    }\n    return true;\n  };\n\n  /**\n   * Whether table can scroll horizontally\n   * @private\n   */\n  Table.prototype._isScrollableX = function () {\n    var layoutManager = this._getLayoutManager();\n    return Math.abs(layoutManager.getScrollWidth() - layoutManager.getClientWidth()) > 1;\n  };\n\n  /**\n   * Whether table can scroll vertically\n   * @private\n   */\n  Table.prototype._isScrollableY = function () {\n    var layoutManager = this._getLayoutManager();\n    return Math.abs(layoutManager.getScrollHeight() - layoutManager.getClientHeight()) > 1;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._setScrollX = function (x) {\n    var scroller = this._getLayoutManager().getScroller();\n\n    // flag it so that handleScroll won't do anything\n    this._skipScrollUpdate = true;\n\n    DomUtils.setScrollLeft(scroller, x);\n  };\n\n  /**\n   * @return {boolean} true if this led to a change in scroller scrollTop position\n   *                   false otherwise\n   * @private\n   */\n  Table.prototype._setScrollY = function (y) {\n    var layoutManager = this._getLayoutManager();\n    var scroller = layoutManager.getScroller();\n\n    // flag it so that handleScroll won't do anything\n    this._skipScrollUpdate = true;\n    var initialScrollTop = scroller.scrollTop;\n    scroller.scrollTop =\n      y === -1 ? layoutManager.getScrollHeight() - layoutManager.getClientHeight() : y;\n\n    // only set scroll pos busy state if a scroll was triggered\n    if (initialScrollTop !== scroller.scrollTop) {\n      this._setScrollPosBusyState();\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * Retrieve the scroll top value based on row index\n   * @return {number|undefined} the scroll top of the row with the specified index,\n   *         or -1 if the row is not yet fetched, or undefined if the index is invalid\n   * @private\n   */\n  Table.prototype._getScrollTopByIndex = function (rowIndex) {\n    // avoid doing offsetTop\n    if (rowIndex === 0) {\n      return 0;\n    }\n    // check to ensure max count is not reached\n    if (this._isLoadMoreOnScroll() && rowIndex > this.options.scrollPolicyOptions.maxCount) {\n      return undefined;\n    }\n    var tableBodyRows = this._getTableBodyRows();\n    var row = tableBodyRows[rowIndex];\n    if (row != null) {\n      return this._getLayoutManager().getRowScrollTop(row);\n    }\n    // we got here because one of the following happened:\n    // 1) item has not been fetched yet\n    // 2) index is large than the number of items, including reaching maxCount\n    if (this._hasMoreToFetch()) {\n      return -1;\n    }\n    return undefined;\n  };\n\n  /**\n   * Retrieve the scroll top value based on row key\n   * @return {number|undefined} the scroll top of the row with the specified key,\n   *         or -1 if the row is not yet fetched, or undefined if the key is invalid\n   * @private\n   */\n  Table.prototype._getScrollTopByKey = function (rowKey) {\n    var row = this._findRowElementByKey(rowKey);\n    if (row != null) {\n      return this._getLayoutManager().getRowScrollTop(row);\n    }\n    // we got here because one of the following happened:\n    // 1) item has not been fetched yet\n    // 2) key does not exists or invalid\n    if (this._hasMoreToFetch()) {\n      return -1;\n    }\n    return undefined;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._getScrollLeftByIndex = function (columnIndex) {\n    return this._getLayoutManager().getColumnScrollLeft(columnIndex);\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._getScrollLeftByKey = function (columnKey) {\n    var index = this._getColumnIdxForColumnKey(columnKey);\n    return this._getScrollLeftByIndex(index);\n  };\n\n  /**\n   * Determine the scroll x and y based on value of scrollPosition\n   * @return {object} contains x and y which is the horizontal and vertical scroll\n   *         position.  If x/y is undefined, that implies the value is invalid.  If\n   *         x/y is -1, that implies there are more data to fetch so the value is\n   *         not final.\n   * @private\n   */\n  Table.prototype._getScrollCoordinates = function (scrollPosition) {\n    var y;\n    var x;\n    var layoutManager = this._getLayoutManager();\n    if (!layoutManager.hasRenderedSize()) {\n      return { x: 0, y: 0 };\n    }\n\n    // key first\n    var rowKey = scrollPosition.rowKey;\n    if (rowKey != null) {\n      y = this._getScrollTopByKey(rowKey);\n    }\n    var columnKey = scrollPosition.columnKey;\n    if (columnKey != null) {\n      x = this._getScrollLeftByKey(columnKey);\n    }\n\n    // then index\n    var rowIndex = scrollPosition.rowIndex;\n    if (isNaN(y) && !isNaN(rowIndex)) {\n      y = this._getScrollTopByIndex(rowIndex);\n    }\n    var columnIndex = scrollPosition.columnIndex;\n    if (isNaN(x) && !isNaN(columnIndex)) {\n      x = this._getScrollLeftByIndex(columnIndex);\n    }\n\n    // apply offset\n    var offsetX = scrollPosition.offsetX;\n    if (!isNaN(x) && !isNaN(offsetX) && x >= 0) {\n      x += offsetX;\n    }\n    var offsetY = scrollPosition.offsetY;\n    if (!isNaN(y) && !isNaN(offsetY) && y >= 0) {\n      y += offsetY;\n    }\n\n    // then pixel position last\n    if (isNaN(x) && !isNaN(scrollPosition.x)) {\n      x = Math.max(0, scrollPosition.x);\n    }\n    if (isNaN(y) && !isNaN(scrollPosition.y)) {\n      if (scrollPosition.y > layoutManager.getScrollHeight()) {\n        // if there's more data to fetch, returns -1, otherwise returns the max scrollTop\n        y = this._hasMoreToFetch()\n          ? -1\n          : layoutManager.getScrollHeight() - layoutManager.getClientHeight();\n      } else {\n        y = Math.max(0, scrollPosition.y);\n      }\n    }\n    return { x: x, y: y };\n  };\n\n  Table.prototype._getCurrentHorizontalScrollPosition = function (newScrollLeft) {\n    // ensure scroll position x value is initialized\n    var scrollLeft = newScrollLeft == null ? this._scrollLeft : newScrollLeft;\n    var scrollPosition = {\n      x: scrollLeft == null ? 0 : scrollLeft\n    };\n\n    var prevScrollPosition = this.option('scrollPosition');\n    var diff = Math.abs(prevScrollPosition.x - scrollPosition.x);\n    if (diff < 1 && prevScrollPosition.columnKey != null && !isNaN(prevScrollPosition.columnIndex)) {\n      scrollPosition.columnKey = prevScrollPosition.columnKey;\n      scrollPosition.columnIndex = prevScrollPosition.columnIndex;\n      scrollPosition.offsetX = prevScrollPosition.offsetX + diff;\n      return scrollPosition;\n    }\n\n    // loop through the cached header values\n    var columnLocations = this._getColumnLocations();\n    if (columnLocations && columnLocations.length > 0) {\n      var i;\n      var index = columnLocations.length - 1;\n      for (i = 0; i < columnLocations.length - 1; i++) {\n        if (scrollPosition.x >= columnLocations[i] && scrollPosition.x < columnLocations[i + 1]) {\n          index = i;\n          break;\n        }\n      }\n      scrollPosition.columnKey = this._getColumnDefs()[index].id;\n      scrollPosition.columnIndex = index;\n      scrollPosition.offsetX = scrollPosition.x - columnLocations[index];\n    }\n    return scrollPosition;\n  };\n\n  Table.prototype._getCurrentVerticalScrollPosition = function (newScrollTop) {\n    // ensure scroll position y value is initialized\n    var scrollTop = newScrollTop == null ? this._scrollTop : newScrollTop;\n    var scrollPosition = {\n      y: scrollTop == null ? 0 : scrollTop\n    };\n\n    var result = this._findClosestElementToTop(scrollPosition);\n    if (result != null) {\n      scrollPosition.rowIndex = result.index;\n      scrollPosition.rowKey = this._getRowKeyForRowIdx(result.index);\n      scrollPosition.offsetY = result.offset;\n    }\n    return scrollPosition;\n  };\n\n  /**\n   * Calculate the scrollPosition based on scrollLeft and scrollTop\n   * @private\n   */\n  Table.prototype._getCurrentScrollPosition = function (scrollLeft, scrollTop) {\n    var layoutManager = this._getLayoutManager();\n    if (!layoutManager.hasRenderedSize()) {\n      return { x: 0, y: 0 };\n    }\n    var scrollPosition = this._getCurrentHorizontalScrollPosition(scrollLeft);\n    var scrollPositionY = this._getCurrentVerticalScrollPosition(scrollTop);\n    Object.keys(scrollPositionY).forEach(function (prop) {\n      scrollPosition[prop] = scrollPositionY[prop];\n    });\n    return scrollPosition;\n  };\n\n  /**\n   * Retrieve the location in pixels of each column and cache it\n   * @private\n   */\n  Table.prototype._getColumnLocations = function () {\n    if (this._columnOffsets == null) {\n      this._columnOffsets = [];\n      var headerColumns = this._getTableHeaderColumns();\n      if (headerColumns.length > 0) {\n        // depending on browser, offsetLeft of first column might not be 0\n        var initOffset = this._getScrollLeftByIndex(0);\n        this._columnOffsets.push(0);\n        for (var i = 1; i < headerColumns.length; i++) {\n          this._columnOffsets.push(this._getScrollLeftByIndex(i) - initOffset);\n        }\n      }\n    }\n    return this._columnOffsets;\n  };\n\n  /**\n   * Find the element closest to the top of the viewport\n   * @param {object} scrollPosition the current scrollPosition\n   * @private\n   */\n  Table.prototype._findClosestElementToTop = function (scrollPosition) {\n    var layoutManager = this._getLayoutManager();\n    var rows = this._getTableBodyRows();\n    var rowCount = rows.length;\n    var scrollHeight = layoutManager.getScrollHeight();\n    // return if there are no rows, or the table has no height\n    if (rowCount === 0 || scrollHeight === 0) {\n      return null;\n    }\n\n    // if the previous scroll position is relatively close to the current one\n    // we'll use the previous index as the starting point\n    var index;\n    var scrollTop = scrollPosition.y;\n    var prevScrollPosition = this.option('scrollPosition');\n    if (\n      Math.abs(prevScrollPosition.y - scrollTop) < Table.DEFAULT_ROW_HEIGHT_GUESS &&\n      prevScrollPosition.rowKey != null &&\n      !isNaN(prevScrollPosition.rowIndex)\n    ) {\n      index = prevScrollPosition.rowIndex;\n    } else {\n      // otherwise we'll need to approximate the index\n      index = Math.floor((scrollTop / scrollHeight) * rowCount);\n    }\n    // ensure estimated index is valid\n    index = Math.min(Math.max(index, 0), rowCount - 1);\n\n    var elem = rows[index];\n    var offsetTop = layoutManager.getRowScrollTop(elem);\n    var diff = scrollTop - offsetTop;\n    var result = { index: index, elem: elem, offsetTop: offsetTop, offset: diff };\n\n    // scroll position perfectly line up with the top of item (take sub-pixels into account), we are done\n    if (Math.abs(diff) < 1) {\n      return result;\n    }\n\n    // go forward or backward to find the row, keep that fix to avoid\n    // potentially going back and forth (shouldn't happen)\n    var forward = diff > 0;\n    if (forward) {\n      index += 1;\n    } else {\n      index -= 1;\n    }\n\n    while (index >= 0 && index < rowCount) {\n      var prevOffsetTop = offsetTop;\n      elem = rows[index];\n      offsetTop = layoutManager.getRowScrollTop(elem);\n      diff = Math.abs(scrollTop - offsetTop);\n\n      if (diff < 1 || (forward ? scrollTop <= offsetTop : scrollTop >= offsetTop)) {\n        // perfect match (diff < 1 due to subpixel) or if we are walking backwards\n        if (diff < 1 || !forward) {\n          result = { index: index, elem: elem, offsetTop: offsetTop, offset: diff };\n        } else {\n          // going forward, use the previous one\n          result = {\n            index: index - 1,\n            elem: rows[index - 1],\n            offsetTop: prevOffsetTop,\n            offset: scrollTop - prevOffsetTop\n          };\n        }\n        break;\n      }\n      if (forward) {\n        index += 1;\n      } else {\n        index -= 1;\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Register event listeners which need to be registered directly on the DOM element.\n   * @private\n   */\n  Table.prototype._registerDomEventListeners = function () {\n    this._getLayoutManager().registerScrollListeners();\n  };\n\n  /**\n   * Return whether the component is in table actionable mode\n   * @return {boolean} true or false\n   * @private\n   */\n  Table.prototype._isTableActionableMode = function () {\n    return this._active != null && this._active.isActionable;\n  };\n\n  /**\n   * Returns whether the table is editabe mode\n   * @return {boolean} true or false\n   * @private\n   */\n  Table.prototype._isTableEditMode = function () {\n    var editMode = this.options.editMode;\n    return editMode === Table._OPTION_EDIT_MODE._ROW_EDIT;\n  };\n\n  /**\n   * Toggles table actionable mode\n   * @private\n   */\n  Table.prototype._toggleTableActionableMode = function () {\n    if (this._isTableActionableMode()) {\n      this._setTableActionableMode(false);\n    } else {\n      this._setTableActionableMode(true);\n    }\n  };\n\n  /**\n   * Set whether the component is in table actionable mode\n   * @param {boolean} value true or false\n   * @param {boolean=} skipFocusShift whether to skip updating browser focus\n   * @private\n   */\n  Table.prototype._setTableActionableMode = function (value, skipFocusShift) {\n    var activeBoundary;\n    // don't do anything if actionable mode was not updated\n    if (value && !this._isTableActionableMode()) {\n      if (this._hasActiveHeader()) {\n        activeBoundary = this._getTableHeaderRow();\n      } else if (this._hasActiveFooter()) {\n        activeBoundary = this._getTableFooterRow();\n      } else {\n        activeBoundary = this._getActiveElement();\n      }\n      this._clearAccStatusInfo();\n      this._applyActionableMode(activeBoundary, skipFocusShift);\n    } else if (!value && this._isTableActionableMode()) {\n      this._active.isActionable = false;\n      if (!skipFocusShift && this._getTable().contains(document.activeElement)) {\n        this._getTable().focus();\n      }\n      // disable all focusable elements\n      if (this._hasActiveHeader()) {\n        activeBoundary = this._getTableHeaderRow();\n      } else if (this._hasActiveFooter()) {\n        activeBoundary = this._getTableFooterRow();\n      } else {\n        activeBoundary = this._getActiveElement();\n      }\n      // active boundary element may no longer exist if row containing actionable element was just refreshed or removed\n      if (activeBoundary != null) {\n        DataCollectionUtils.disableAllFocusableElements(activeBoundary, null, true);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._applyActionableMode = function (boundaryElement, skipFocusShift) {\n    var element = this._getActiveElement();\n    if (element != null) {\n      // enable all focusable elements\n      DataCollectionUtils.enableAllFocusableElements(boundaryElement);\n      var tabbableElementsInFocusedElement = DataCollectionUtils.getFocusableElementsInNode(element);\n      // only set actionable mode if there are any tabbable elements in the row\n      if (tabbableElementsInFocusedElement.length > 0) {\n        // set active internal state to actionable BEFORE focus is set, otherwise screen reader\n        // will read contents multiple times when exiting actionable mode using ESC key\n        this._active.isActionable = true;\n\n        this._focusOutHandler($(element));\n        // set focus on the first tabbable element\n        if (!skipFocusShift) {\n          tabbableElementsInFocusedElement[0].focus();\n        }\n      }\n    }\n  };\n\n  /**\n   * Return the editable row index if there is one\n   * @return {number|null} row index\n   * @private\n   */\n  Table.prototype._getEditableRowIdx = function () {\n    if (this._getEditableRowKey() != null) {\n      var rowIdx = this._getRowIdxForRowKey(this._getEditableRowKey());\n      if (rowIdx !== null) {\n        return rowIdx;\n      }\n    }\n    return this._editableRowIdx;\n  };\n\n  /**\n   * Return the editable row key if there is one\n   * @return {Object|null} row key\n   * @private\n   */\n  Table.prototype._getEditableRowKey = function () {\n    return this._editableRowKey;\n  };\n\n  /**\n   * Return whether the table currently has an editable row\n   * @return {boolean} true or false\n   * @private\n   */\n  Table.prototype._hasEditableRow = function () {\n    if (!this._isTableEditMode()) {\n      return false;\n    }\n    return this._getEditableRowIdx() !== null;\n  };\n\n  /**\n   * Sets a row to be editable\n   * @private\n   */\n  Table.prototype._setEditRow = function (editRow, columnIdx = 0) {\n    if (!this._isTableEditMode()) {\n      return;\n    }\n    if (this._isEditPending !== true) {\n      this._delayed_edit = null;\n      var rowKey = editRow.rowKey;\n      var rowIndex = editRow.rowIndex;\n      if (rowKey != null || rowIndex > -1) {\n        // an editable row has to be current also\n        var changed = this._setCurrentRow({ rowKey: rowKey, rowIndex: rowIndex });\n        if (changed instanceof Promise) {\n          changed.then(\n            function (value) {\n              if (value === Table._CURRENT_ROW_STATUS._UPDATED) {\n                this._setEditableHelper(columnIdx);\n              } else if (value === Table._CURRENT_ROW_STATUS._IGNORED) {\n                this._scrollToRowHelper(editRow, columnIdx);\n              }\n            }.bind(this)\n          );\n        } else if (changed === Table._CURRENT_ROW_STATUS._UPDATED) {\n          this._setEditableHelper(columnIdx);\n        } else if (changed === Table._CURRENT_ROW_STATUS._IGNORED) {\n          this._scrollToRowHelper(editRow, columnIdx);\n        }\n      } else {\n        this._setTableEditable(false, false, 0, true, null);\n      }\n    } else {\n      this._delayed_edit = { editRow: editRow, columnIdx: columnIdx };\n    }\n  };\n\n  /**\n   * Helper method to set table editable\n   * @private\n   */\n  Table.prototype._setEditableHelper = function (columnIdx) {\n    if (this._delayed_edit != null) {\n      return;\n    }\n    this._setTableEditable(true, false, columnIdx, true, null);\n  };\n\n  /**\n   * Helper method to scroll to row and invoke _setEditRow\n   * @private\n   */\n  Table.prototype._scrollToRowHelper = function (editRow, columnIdx) {\n    // try to scroll to editRow.rowKey\n    const _scrollTop = this._scrollTop;\n    if (!this._syncScrollPosition({ rowKey: editRow.rowKey, rowIndex: editRow.rowIndex })) {\n      // this will be invoked after scroll and fetch is done\n      this._editRowCallback = function () {\n        // try again after scroll and fetch\n        if (this._scrollTop !== _scrollTop) {\n          this._setEditRow(editRow, columnIdx);\n        }\n      }.bind(this);\n    }\n  };\n\n  /**\n   * Returns the row from editRowObject\n   * @private\n   */\n  Table.prototype._getRowToBeEdited = function (editRow) {\n    const rowKey = editRow.rowKey;\n    const rowIndex = editRow.rowIndex;\n    if (rowKey != null) {\n      return this._findRowElementByKey(rowKey);\n    } else if (rowIndex > -1) {\n      return this._getTableBodyRow(rowIndex);\n    }\n    return null;\n  };\n\n  /**\n   * Set the editable row index\n   * @param {number} rowIdx  row index\n   * @private\n   */\n  Table.prototype._setEditableRowIdx = function (rowIdx) {\n    // store the rowKey so we can restore easily after sort\n    this._editableRowKey = this._getRowKeyForRowIdx(rowIdx);\n    this._editableRowIdx = rowIdx;\n  };\n\n  /**\n   * Set the next or previous row as editable\n   * @private\n   */\n  Table.prototype._setAdjacentRowEditable = function (columnIdx, origColumnIdx, isNext, event) {\n    var editableRowIdx = this._getEditableRowIdx();\n    var updateEditable = this._setTableEditable(false, false, columnIdx, isNext, event);\n    if (updateEditable instanceof Promise) {\n      updateEditable.then(\n        function () {\n          this._queueTask(\n            function () {\n              this._handleAdjacentEditEndSuccessful(columnIdx, editableRowIdx, isNext, event);\n            }.bind(this)\n          );\n        }.bind(this),\n        function () {\n          this._queueTask(\n            function () {\n              this._handleEditEndRejected(origColumnIdx, editableRowIdx, !isNext);\n            }.bind(this)\n          );\n        }.bind(this)\n      );\n    } else if (updateEditable === false) {\n      this._handleEditEndRejected(origColumnIdx, editableRowIdx, !isNext);\n    } else {\n      this._handleAdjacentEditEndSuccessful(columnIdx, editableRowIdx, isNext, event);\n    }\n  };\n\n  /**\n   * Helper method when attempting to set the adjacent row as editable\n   * @private\n   */\n  Table.prototype._handleAdjacentEditEndSuccessful = function (columnIdx, rowIdx, isNext, event) {\n    var tableBodyRows = this._getTableBodyRows();\n    var newRowIdx = this._findAdjacentEditableRow(rowIdx, tableBodyRows, isNext);\n    if (newRowIdx !== null) {\n      this._setActiveRow(newRowIdx, event, true, false, true);\n      this._setTableEditable(true, false, columnIdx, isNext, event);\n    } else {\n      this._getTable().focus();\n    }\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._findAdjacentEditableRow = function (rowIdx, tableBodyRows, isNext) {\n    if (isNext) {\n      for (let i = rowIdx + 1; i < tableBodyRows.length; i++) {\n        const row = tableBodyRows[i];\n        if (row[Table._DATA_OJ_EDITABLE] !== Table._CONST_OFF) {\n          return i;\n        }\n      }\n    } else {\n      for (let i = rowIdx - 1; i >= 0; i--) {\n        const row = tableBodyRows[i];\n        if (row[Table._DATA_OJ_EDITABLE] !== Table._CONST_OFF) {\n          return i;\n        }\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._handleEditEndRejected = function (origColumnIdx, rowIdx, isNext) {\n    this._setCellInRowFocus(rowIdx, origColumnIdx, isNext);\n  };\n\n  /**\n   * Fire editRow property change event\n   * @private\n   */\n  Table.prototype._fireEditRowChangeEvent = function (newValue, event) {\n    // use _queueTask as _isSettingProperty is preventing writeback\n    // as we are updating editRow option which is triggered by application updating it\n    this._queueTask(\n      function () {\n        this.option('editRow', newValue, {\n          _context: {\n            originalEvent: event,\n            internalSet: true,\n            writeback: true\n          }\n        });\n      }.bind(this)\n    );\n  };\n\n  /**\n   * Set the table editable\n   * @param {boolean} editable true if editable, false otherwise\n   * @param {boolean} cancelled true if edit was cancelled\n   * @param {number} columnIdx  column index\n   * @param {boolean} forwardSearch try setting focus starting at the first column\n   * @param {Object} event\n   * @param {boolean=} skipFocusReset whether to skip resetting focus on the table\n   * @private\n   */\n\n  Table.prototype._setTableEditable = function (\n    editable,\n    cancelled,\n    columnIdx,\n    forwardSearch,\n    event,\n    skipFocusReset\n  ) {\n    if (!this._isTableEditMode() || this._isEditPending) {\n      return undefined;\n    }\n    var isLegacyDataSource = this._getData() instanceof oj.TableDataSourceAdapter;\n    var currentRow = this._getCurrentRow();\n    if (currentRow != null) {\n      const rowElementToBeEdited = this._getRowToBeEdited(currentRow);\n      if (\n        rowElementToBeEdited &&\n        rowElementToBeEdited[Table._DATA_OJ_EDITABLE] !== Table._CONST_OFF\n      ) {\n        var rowKey = currentRow.rowKey;\n        var rowIdx = this._getRowIdxForRowKey(rowKey);\n        var tableBodyRow;\n        var rowContext;\n        var updateEditMode;\n        var newEditRowValue;\n        var editAcceptPromiseArray = [];\n        let updatedItemPromise;\n\n        // save the old editable row info\n        var prevEditableRowKey = this._getEditableRowKey();\n\n        try {\n          if (editable && !this._hasEditableRow()) {\n            // fire the beforeEdit event if there are no existing editable rows\n            // and we are starting edit on a row\n            tableBodyRow = this._getTableBodyRow(rowIdx);\n            rowContext = this._getRendererContextObject(tableBodyRow, {\n              row: {\n                key: rowKey,\n                index: currentRow.rowIndex\n              },\n              isCurrentRow: true\n            });\n            rowContext.item = tableBodyRow[Table._ROW_ITEM_EXPANDO];\n            updateEditMode = this._trigger('beforeRowEdit', event, {\n              accept: function (acceptPromise) {\n                editAcceptPromiseArray.push(acceptPromise);\n              },\n              rowContext: rowContext\n            });\n            if (updateEditMode) {\n              newEditRowValue = { rowKey: rowKey, rowIndex: rowIdx };\n            }\n          } else if (!editable && this._hasEditableRow()) {\n            // only trigger the beforeRowEditEnd if we are actually ending an edit\n            // fire on the edited row\n            tableBodyRow = this._getTableBodyRow(this._getEditableRowIdx());\n            rowKey = this._getRowKeyForRowIdx(this._getEditableRowIdx());\n            rowContext = this._getRendererContextObject(tableBodyRow, {\n              row: {\n                key: rowKey,\n                index: this._getDataSourceRowIndexForRowKey(rowKey)\n              },\n              isCurrentRow: true\n            });\n            rowContext.item = tableBodyRow[Table._ROW_ITEM_EXPANDO];\n            updateEditMode = this._trigger('beforeRowEditEnd', event, {\n              accept: function (acceptPromise) {\n                editAcceptPromiseArray.push(acceptPromise);\n              },\n              setUpdatedItem: function (updatedPromise) {\n                updatedItemPromise = updatedPromise;\n              },\n              cancelEdit: cancelled,\n              rowContext: rowContext\n            });\n\n            if (updateEditMode) {\n              newEditRowValue = { rowKey: null, rowIndex: -1 };\n            }\n          } else {\n            // No updates so just exit\n            return undefined;\n          }\n        } catch (err) {\n          return false;\n        }\n        if (!updateEditMode) {\n          this._syncActiveElement();\n          return false;\n        }\n\n        const tableElement = this._getTable();\n        if (tableElement.contains(document.activeElement)) {\n          this._getTable().focus();\n        }\n\n        if (editAcceptPromiseArray.length !== 0) {\n          this._isEditPending = true;\n          this._insertSkeletonRow(tableBodyRow);\n\n          return this._queueTask(\n            function () {\n              this._editPromise = Promise.all(editAcceptPromiseArray).then(\n                function () {\n                  this._removeSkeletonRow(tableBodyRow);\n                  // recalculate the row index as it could have changed due to other tasks\n                  var editableRowIndex = this._getRowIdxForRowKey(rowKey);\n                  if (editable && rowIdx !== editableRowIndex) {\n                    newEditRowValue.rowIndex = editableRowIndex;\n                  }\n                  // update editRow option\n                  this._fireEditRowChangeEvent(newEditRowValue, event);\n\n                  if (editable) {\n                    // set the editable row index\n                    this._setTableActionableMode(false, true);\n                    this._setEditableRowIdx(editableRowIndex);\n                    this._getTable().setAttribute(Table.DOM_ATTR._ARIA_LABELLEDBY, ''); // @HTMLUpdateOK\n                    // re-render the newly editable row\n                    return this._refreshRow(editableRowIndex, true, false, !isLegacyDataSource).then(\n                      function () {\n                        this._setCellInRowFocus(editableRowIndex, columnIdx, forwardSearch);\n                        // clear out the old editable row\n                        return this._refreshPrevEditableRow(prevEditableRowKey, updatedItemPromise);\n                      }.bind(this)\n                    );\n                  }\n                  this._focusEditCell = null;\n                  this._setEditableRowIdx(null);\n                  if (!skipFocusReset) {\n                    this._getTable().focus();\n                  }\n\n                  // clear out the old editable row\n                  return this._refreshPrevEditableRow(prevEditableRowKey, updatedItemPromise);\n                }.bind(this),\n                function () {\n                  this._removeSkeletonRow(tableBodyRow);\n                  if (editable && prevEditableRowKey == null) {\n                    this._syncActiveElement();\n                  }\n                  this._clearEditPending();\n                  return false;\n                }.bind(this)\n              );\n              return this._editPromise;\n            }.bind(this)\n          );\n        }\n        // update editRow option\n        this._fireEditRowChangeEvent(newEditRowValue, event);\n\n        if (editable) {\n          // set the editable row index\n          this._setTableActionableMode(false, true);\n          this._setEditableRowIdx(rowIdx);\n          this._getTable().setAttribute(Table.DOM_ATTR._ARIA_LABELLEDBY, ''); // @HTMLUpdateOK\n          // re-render the newly editable row\n          this._queueTask(\n            function () {\n              // recalculate the row index as it could have changed due to other tasks\n              var editableRowIndex = this._getRowIdxForRowKey(rowKey);\n              return this._refreshRow(editableRowIndex, true, false, !isLegacyDataSource).then(\n                function () {\n                  // set focus on the column in the row\n                  this._setCellInRowFocus(editableRowIndex, columnIdx, forwardSearch);\n                }.bind(this)\n              );\n            }.bind(this)\n          );\n        } else {\n          this._focusEditCell = null;\n          this._setEditableRowIdx(null);\n          if (!skipFocusReset) {\n            this._getTable().focus();\n          }\n        }\n        this._queueTask(\n          function () {\n            // clear out the old editable row\n            // make sure the row still exists before we refresh it\n            var prevEditableRowIdx = this._getRowIdxForRowKey(prevEditableRowKey);\n            if (prevEditableRowIdx != null) {\n              // re-render the previously editable row, which will be read-only now\n              if (updatedItemPromise != null) {\n                updatedItemPromise.then(\n                  (updatedItemObj) => {\n                    let rowItem;\n                    if (updatedItemObj != null && updatedItemObj.updatedItem) {\n                      rowItem = updatedItemObj.updatedItem;\n                    }\n                    return this._refreshRow(prevEditableRowIdx, false, false, true, rowItem);\n                  },\n                  () => {\n                    return this._refreshRow(prevEditableRowIdx, false, false, cancelled);\n                  }\n                );\n              } else {\n                return this._refreshRow(prevEditableRowIdx, false, false, cancelled);\n              }\n            }\n            return Promise.resolve();\n          }.bind(this)\n        );\n      }\n    }\n    return undefined;\n  };\n\n  Table.prototype._clearEditPending = function () {\n    this._isEditPending = false;\n    this._editPromise = null;\n    if (this._delayed_edit != null) {\n      this._queueTask(() => {\n        this._setEditRow(this._delayed_edit.editRow, this._delayed_edit.columnIdx);\n      });\n    }\n  };\n\n  Table.prototype._refreshPrevEditableRow = function (prevEditableRowKey, updatedItemPromise) {\n    // make sure the row still exists before we refresh it\n    const prevEditableRowIdx = this._getRowIdxForRowKey(prevEditableRowKey);\n    if (prevEditableRowIdx != null) {\n      if (updatedItemPromise != null) {\n        updatedItemPromise.then(\n          (updatedItemObj) => {\n            let rowItem;\n            if (updatedItemObj != null && updatedItemObj.updatedItem) {\n              rowItem = updatedItemObj.updatedItem;\n            }\n            // re-render the previously editable row, which will be read-only now\n            return this._refreshRow(prevEditableRowIdx, false, false, true, rowItem).then(() => {\n              this._clearEditPending();\n            });\n          },\n          () => {\n            return this._refreshRow(prevEditableRowIdx, false).then(() => {\n              this._clearEditPending();\n            });\n          }\n        );\n      } else {\n        return this._refreshRow(prevEditableRowIdx, false).then(() => {\n          this._clearEditPending();\n        });\n      }\n    }\n    this._clearEditPending();\n    return Promise.resolve();\n  };\n\n  /**\n   * Handle add row\n   * @param {boolean} canceled whether submit row is canceled\n   * @param {Object} event\n   * @private\n   */\n  Table.prototype._handleAddRow = function (canceled, event) {\n    let addRowAcceptPromiseArray = [];\n    let isSuccess = this._trigger('beforeRowAddEnd', event, {\n      accept: function (acceptPromise) {\n        addRowAcceptPromiseArray.push(acceptPromise);\n      },\n      cancelAdd: canceled\n    });\n    if (!isSuccess) {\n      return;\n    }\n    this._setTableActionableMode(false);\n    if (addRowAcceptPromiseArray.length !== 0) {\n      this._insertSkeletonRow(null, -1);\n      this._getTable().focus();\n      this._queueTask(\n        function () {\n          return Promise.all(addRowAcceptPromiseArray).then(\n            function () {\n              this._removeSkeletonRow(null, -1);\n              this._isAddRowRendered = false;\n              return this._refreshAddNewRowPlaceholder().then(\n                function () {\n                  let placeHolderRow = this._getPlaceHolderRow();\n                  this._getLayoutManager()._initializeFrozenColumns(false, placeHolderRow);\n                  this._setActiveAddRow();\n                  this._setTableActionableMode(!canceled);\n                }.bind(this)\n              );\n            }.bind(this),\n            function () {\n              this._removeSkeletonRow(null, -1);\n              this._setActiveAddRow();\n              this._setTableActionableMode(true);\n            }.bind(this)\n          );\n        }.bind(this)\n      );\n    } else {\n      this._queueTask(\n        function () {\n          this._isAddRowRendered = false;\n          return this._refreshAddNewRowPlaceholder().then(\n            function () {\n              let placeHolderRow = this._getPlaceHolderRow();\n              this._getLayoutManager()._initializeFrozenColumns(false, placeHolderRow);\n              this._setActiveAddRow();\n              this._setTableActionableMode(!canceled);\n            }.bind(this)\n          );\n        }.bind(this)\n      );\n    }\n  };\n\n  /**\n   * @private\n   */\n  Table._KEYBOARD_CODES = {\n    _MODIFIER_SHIFT: 'shiftKey'\n  };\n\n  /**\n   * Return the currently pressed keyboard keys\n   * @return {Array} Array of keys\n   * @private\n   */\n  Table.prototype._getKeyboardKeys = function () {\n    if (!this._keyboardKeys) {\n      this._keyboardKeys = [];\n    }\n    // reverse the array since we want the keybaord keys to be a LIFO stack\n    return this._keyboardKeys.reverse();\n  };\n\n  /**\n   * Add a key to internally track pressed keys. keys should be added on\n   * key down and then later removed on key up.\n   * @param {number} key  Key of the keyboard key.\n   * @private\n   */\n  Table.prototype._addKeyboardKey = function (key) {\n    var i;\n    var foundCode = false;\n    var props = Object.keys(DataCollectionUtils.KEYBOARD_KEYS);\n    for (i = 0; i < props.length; i++) {\n      var prop = props[i];\n      if (DataCollectionUtils.KEYBOARD_KEYS[prop] === key) {\n        foundCode = true;\n        break;\n      }\n    }\n    if (!foundCode) {\n      // only add keys we are interested in\n      return;\n    }\n    var keyboardKeys = this._getKeyboardKeys();\n    var found = false;\n    var keyboardKeysCount = keyboardKeys.length;\n    for (i = 0; i < keyboardKeysCount; i++) {\n      if (keyboardKeys[i] === key) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      keyboardKeys.push(key);\n    }\n  };\n\n  /**\n   * Determines if a key in the set of currently pressed keyboard keys is a match\n   * for the key check function provided.\n   * @private\n   */\n  Table.prototype._isKeyPressMatch = function (keyCheckFunction) {\n    var keyboardKeys = this._getKeyboardKeys();\n    for (var i = 0; i < keyboardKeys.length; i++) {\n      if (keyCheckFunction(keyboardKeys[i])) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Remove a key from our internal list of pressed keys. This is done on keyup.\n   * @private\n   */\n  Table.prototype._removeKeyboardKey = function (key) {\n    var keyboardKeys = this._getKeyboardKeys();\n    var keyboardKeysCount = keyboardKeys.length;\n    for (var i = 0; i < keyboardKeysCount; i++) {\n      if (keyboardKeys[i] === key) {\n        keyboardKeys.splice(i, 1);\n      }\n    }\n  };\n\n  /**\n   * Clear any keyboard keys\n   * @private\n   */\n  Table.prototype._clearKeyboardKeys = function () {\n    this._keyboardKeys = [];\n  };\n\n  /**\n   * Handler for Left/Right keydown.\n   * @param {Object} event\n   * @private\n   */\n  Table.prototype._handleKeydownLeftRight = function (event, isExtend) {\n    if (this._isTableActionableMode() || this._hasEditableRow()) {\n      // ignore in actionable and editable mode\n      return;\n    }\n    var isRTL = this._GetReadingDirection() === 'rtl';\n    var isLeft = this._isKeyPressMatch(DataCollectionUtils.isArrowLeftKeyEvent);\n    var focusNext = (isRTL && isLeft) || (!isRTL && !isLeft);\n    var current;\n    var target;\n\n    // pressing left/right navigates the column headers\n    var focusedHeaderIndex = this._getActiveHeaderIndex();\n    if (focusedHeaderIndex != null) {\n      if (!isExtend || this._isNavigate || this._lastSelectedHeaderIdx == null) {\n        current = focusedHeaderIndex;\n      } else {\n        current = this._lastSelectedHeaderIdx;\n      }\n      target = this._getNextVisibleColumnIndex(current, focusNext);\n      if (isExtend) {\n        this._isNavigate = false;\n        // select all columns between focusedHeaderIndex and target\n        this._selectRange(focusedHeaderIndex, Math.max(0, target), false);\n        this._scrollColumnIntoViewport(target);\n      } else {\n        this._isNavigate = true;\n        if (target !== focusedHeaderIndex) {\n          this._setActiveHeader(target, event);\n        }\n      }\n      return;\n    }\n    var focusedFooterIndex = this._getActiveFooterIndex();\n    if (focusedFooterIndex != null) {\n      if (!isExtend || this._isNavigate || this._lastSelectedFooterIdx == null) {\n        current = focusedFooterIndex;\n      } else {\n        current = this._lastSelectedFooterIdx;\n      }\n      target = this._getNextVisibleColumnIndex(current, focusNext);\n      if (isExtend) {\n        this._isNavigate = false;\n        // select all columns between focusedFooterIndex and target\n        this._selectRange(focusedFooterIndex, Math.max(0, target), false);\n        this._scrollColumnIntoViewport(target);\n      } else {\n        this._isNavigate = true;\n        if (target !== focusedFooterIndex) {\n          this._setActiveFooter(target, event);\n        }\n      }\n      return;\n    }\n    this._updateAccStatusInfo(this._getNextVisibleColumnIndex(this._accColumnIndex, focusNext));\n  };\n\n  /**\n   * Handler for Up/Down keydown.\n   * @param {Object} event\n   * @private\n   */\n  Table.prototype._handleKeydownUpDown = function (event, isExtend) {\n    if (this._isTableActionableMode() || this._hasEditableRow()) {\n      // ignore in actionable and editable mode\n      return;\n    }\n    // ensure active element is initialized\n    if (this._active == null) {\n      this._syncActiveElement();\n    }\n    var isUpEvent = this._isKeyPressMatch(DataCollectionUtils.isArrowUpKeyEvent);\n    var visibleIndex = this._getFirstVisibleColumnIndex(0, true);\n\n    // handle ctrl+up and ctrl+down cases\n    if (DomUtils.isMetaKeyPressed(event)) {\n      if (isUpEvent && this._getActiveHeaderIndex() == null) {\n        // if user is on the first row and presses up the focus on the first visible column header\n        this._setActiveHeader(visibleIndex, event);\n      } else if (!isUpEvent && this._getActiveFooterIndex() == null) {\n        // if user is on the first row and presses up the focus on the first visible column header\n        this._setActiveFooter(visibleIndex, event);\n      }\n      return;\n    }\n    var focusedRowIdx = this._getActiveRowIndex();\n    if (focusedRowIdx != null) {\n      var rowCount = this._getTableBodyRows().length;\n      var current;\n      if (!isExtend || this._isNavigate || this._lastSelectedRowIdx == null) {\n        current = focusedRowIdx;\n      } else {\n        current = this._lastSelectedRowIdx;\n      }\n      var target;\n      if (isUpEvent) {\n        target = current > 0 ? current - 1 : current;\n      } else {\n        target = current < rowCount - 1 ? current + 1 : current;\n      }\n      if (isExtend) {\n        this._isNavigate = false;\n        // select all rows between focusedRowIdx and target\n        this._selectRange(focusedRowIdx, target, true);\n        this._scrollRowIntoViewport(target, true);\n      } else {\n        this._isNavigate = true;\n        // if row is focused then up/down navigates the rows\n        if (target !== focusedRowIdx) {\n          if (!this._setActiveRow(target, event, true, null, null, true)) {\n            return;\n          }\n          this._getTable().focus();\n        } else if (target === 0 && isUpEvent) {\n          if (this._isAddNewRowEnabled()) {\n            this._setActiveAddRow();\n          } else {\n            // if user is on the first row and presses up then focus on the first visible column header\n            this._setActiveHeader(visibleIndex, event);\n          }\n        } else if (target === rowCount - 1 && !isUpEvent) {\n          // if user is on the last row and presses down, then focus on the first visible column footer\n          this._setActiveFooter(visibleIndex, event);\n        }\n      }\n      return;\n    }\n    if (!isUpEvent && this._getActiveHeaderIndex() != null) {\n      // if user is on a column header and pressed down then focus on the add new row or first data row accordingly\n      if (this._isAddNewRowEnabled()) {\n        this._setActiveAddRow();\n      } else if (this._getTableBodyRows().length > 0) {\n        this._setActiveRow(0, event, true, null, null, true);\n      } else {\n        this._setActiveNoData();\n      }\n    } else if (isUpEvent && this._getActiveFooterIndex() != null) {\n      if (this._getTableBodyRows().length > 0) {\n        // if user is on a column footer and pressed up then focus on the last row\n        this._setActiveRow(this._getTableBodyRows().length - 1, event, true, null, null, true);\n      } else {\n        this._setActiveNoData();\n      }\n    } else if (this._hasActiveAddRow()) {\n      if (isUpEvent) {\n        this._setActiveHeader(visibleIndex, event);\n      } else if (this._getTableBodyRows().length > 0) {\n        this._setActiveRow(0, event, true, null, null, true);\n      } else {\n        this._setActiveNoData();\n      }\n    } else if (this._hasActiveNoData()) {\n      if (isUpEvent) {\n        if (this._isAddNewRowEnabled()) {\n          this._setActiveAddRow();\n        } else {\n          // if user is on the first row and presses up then focus on the first visible column header\n          this._setActiveHeader(visibleIndex, event);\n        }\n      } else {\n        this._setActiveFooter(visibleIndex, event);\n      }\n    }\n  };\n\n  /**\n   * Handler for Tab keydown.\n   * @param {Object} event\n   * @private\n   */\n  Table.prototype._handleKeydownTab = function (event) {\n    // if Tab is pressed while a row has focus and we are in actionable/editable\n    // mode then want to Tab within that row until Esc or F2 is pressed\n    this._isTableTab = true;\n    var focusedRowIdx = this._getActiveRowIndex();\n    var tabbableElementsInFocusedElement;\n    var tableBody = this._getTableBody();\n    var currentFocusElement = document.activeElement;\n\n    if (focusedRowIdx != null && this._getEditableRowIdx() === focusedRowIdx) {\n      // If we are on an editable row and there are no more editable\n      // elements to focus to then go to the next row\n      var tableBodyRow = this._getTableBodyRow(focusedRowIdx);\n      var tabbableElementsInRow = DataCollectionUtils.getFocusableElementsInNode(tableBodyRow);\n      var tabbableElementsInRowCount = tabbableElementsInRow.length;\n      var rowElementTabIndex = $(tabbableElementsInRow).index(currentFocusElement);\n\n      var maxIndex = Math.max(this._getTableHeaderColumns().length - 1, 0);\n      if (\n        rowElementTabIndex === tabbableElementsInRowCount - 1 &&\n        !event[Table._KEYBOARD_CODES._MODIFIER_SHIFT]\n      ) {\n        // last tabbable element in row so go to the next row\n        this._setAdjacentRowEditable(0, maxIndex, true, event);\n        event.preventDefault();\n        event.stopPropagation();\n      } else if (rowElementTabIndex === 0 && event[Table._KEYBOARD_CODES._MODIFIER_SHIFT]) {\n        // first tabbable element in row and Shift+Tab so go to the previous row\n        this._setAdjacentRowEditable(maxIndex, 0, false, event);\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    } else if (this._isTableActionableMode()) {\n      var activeBoundary;\n      if (this._hasActiveHeader()) {\n        activeBoundary = this._getTableHeaderRow();\n      } else if (this._hasActiveFooter()) {\n        activeBoundary = this._getTableFooterRow();\n      } else {\n        activeBoundary = this._getActiveElement();\n      }\n\n      tabbableElementsInFocusedElement =\n        DataCollectionUtils.getFocusableElementsInNode(activeBoundary);\n\n      // If only one tabbable element then stay on it\n      if (tabbableElementsInFocusedElement.length > 1) {\n        var i;\n        if (!event[Table._KEYBOARD_CODES._MODIFIER_SHIFT]) {\n          // Tabbing on the last tabbable element will wrap back\n          var lastTabbableElementFocusedElement =\n            tabbableElementsInFocusedElement[tabbableElementsInFocusedElement.length - 1];\n\n          if (currentFocusElement === lastTabbableElementFocusedElement) {\n            $(tabbableElementsInFocusedElement[0]).focus();\n            event.preventDefault();\n            event.stopPropagation();\n          } else {\n            // find which element it is\n            for (i = 0; i < tabbableElementsInFocusedElement.length; i++) {\n              if (currentFocusElement === tabbableElementsInFocusedElement[i]) {\n                tabbableElementsInFocusedElement[i + 1].focus();\n                event.preventDefault();\n                event.stopPropagation();\n                break;\n              }\n            }\n          }\n        } else {\n          // Shift+Tabbing on the first tabbable element in a row will wrap back\n          var firstTabbableElementFocusedElement = tabbableElementsInFocusedElement[0];\n\n          if (currentFocusElement === firstTabbableElementFocusedElement) {\n            $(tabbableElementsInFocusedElement[tabbableElementsInFocusedElement.length - 1]).focus();\n            event.preventDefault();\n            event.stopPropagation();\n          } else {\n            // find which element it is\n            for (i = 0; i < tabbableElementsInFocusedElement.length; i++) {\n              if (currentFocusElement === tabbableElementsInFocusedElement[i]) {\n                tabbableElementsInFocusedElement[i - 1].focus();\n                event.preventDefault();\n                event.stopPropagation();\n                break;\n              }\n            }\n          }\n        }\n      } else {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    } else {\n      if (\n        DataCollectionUtils.isFirefox() &&\n        !this._isStickyLayoutEnabled() &&\n        !event[Table._KEYBOARD_CODES._MODIFIER_SHIFT]\n      ) {\n        // workaround for FF. In FF, the tbody is focusable even if it has tabindex -1.\n\n        // Need to set this variable because the focus() call will\n        // trigger a focusin which we do not want to handle.\n        this._tempFFFocus = true;\n        tableBody.focus();\n      }\n\n      // we need to remove Tab on keydown because we may not\n      // get a keyup for it if focus moves\n      // outside of table\n      var key = event.key || event.keyCode;\n      this._removeKeyboardKey(key);\n    }\n  };\n\n  /**\n   * Handler for Enter keydown.\n   * @param {Object} event\n   * @private\n   */\n  Table.prototype._handleKeydownEnter = function (event) {\n    if (\n      (this._isTableActionableMode() && !this._hasActiveAddRow()) ||\n      DataCollectionUtils.isEventClickthroughDisabled(event, this._getTable())\n    ) {\n      // ignore in actionable mode but not for new row\n      return;\n    }\n    // pressing enter does sort on the focused column header\n    var focusedColumnIdx = this._getActiveHeaderIndex();\n    if (focusedColumnIdx != null) {\n      if (\n        focusedColumnIdx !== -1 &&\n        this._getColumnDefs()[focusedColumnIdx].sortable === Table._OPTION_ENABLED\n      ) {\n        var tableHeaderColumn = this._getTableHeaderColumn(focusedColumnIdx);\n        var sorted = $(tableHeaderColumn).data('sorted');\n        // if not already sorted then sort ascending. If already sorted\n        // ascending then do descending sort and vice versa.\n        if (sorted == null || sorted === Table._COLUMN_SORT_ORDER._DESCENDING) {\n          this._handleSortTableHeaderColumn(focusedColumnIdx, true, event);\n        } else {\n          this._handleSortTableHeaderColumn(focusedColumnIdx, false, event);\n        }\n      }\n    } else if (this._getActiveFooterIndex() == null) {\n      var currentRow = this._getCurrentRow();\n      currentRow = currentRow || {};\n      var currentRowIdx = currentRow.rowIndex != null ? currentRow.rowIndex : -1;\n      if (currentRowIdx >= 0) {\n        if (this._isTableEditMode()) {\n          if (!this._hasEditableRow()) {\n            this._setTableEditable(true, false, 0, true, event);\n            return;\n          }\n          var columnIdx = this._getElementColumnIdx(event.target);\n\n          if (!event[Table._KEYBOARD_CODES._MODIFIER_SHIFT]) {\n            this._setAdjacentRowEditable(columnIdx, columnIdx, true, event);\n          } else {\n            this._setAdjacentRowEditable(columnIdx, columnIdx, false, event);\n          }\n        } else {\n          this._fireActionEvent(currentRowIdx, event, false);\n          this._setTableActionableMode(true);\n        }\n      } else if (this._hasActiveAddRow() && this._isTableActionableMode()) {\n        this._handleAddRow(false, event);\n      }\n    }\n  };\n\n  /**\n   * Handler for Spacebar keydown.\n   * @param {Object} event\n   * @private\n   */\n  Table.prototype._handleKeydownSpacebar = function (event) {\n    if (this._isTableActionableMode() || this._hasEditableRow()) {\n      // ignore in actionable and editable mode\n      return;\n    }\n    // need to do this so that these keys don't act on the page. e.g. pressing Down would cause the\n    // page to go down as well as the row to change\n    event.preventDefault();\n    event.stopPropagation();\n\n    // pressing spacebar selects the focused row/column\n    var focusedRowIdx = this._getActiveRowIndex();\n    if (focusedRowIdx != null) {\n      this._handleSelectionGesture(focusedRowIdx, true, true);\n      return;\n    }\n    var focusedHeaderColumnIdx = this._getActiveHeaderIndex();\n    if (focusedHeaderColumnIdx != null) {\n      if (focusedHeaderColumnIdx !== -1) {\n        this._handleSelectionGesture(focusedHeaderColumnIdx, false, true);\n      } else if (this._isSelectAllControlVisible()) {\n        this._handleSelectAllGesture();\n      }\n      return;\n    }\n    var focusedFooterColumnIdx = this._getActiveFooterIndex();\n    if (focusedFooterColumnIdx != null) {\n      this._handleSelectionGesture(focusedFooterColumnIdx, false, true);\n    }\n  };\n\n  /**\n   * Handler for F2 keydown.\n   * @param {Object} event\n   * @private\n   */\n  Table.prototype._handleKeydownF2 = function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    if (!this._isStickyLayoutEnabled()) {\n      if (this._isTableEditMode()) {\n        // pressing F2 toggles between editable modes.\n        if (!this._hasEditableRow()) {\n          this._setTableEditable(true, false, 0, true, event);\n          if (!this._hasEditableRow()) {\n            this._toggleTableActionableMode();\n          }\n        } else {\n          this._setTableEditable(false, false, 0, true, event);\n        }\n      } else {\n        this._toggleTableActionableMode();\n      }\n    } else if (!this._isTableEditMode() || !this._hasEditableRow()) {\n      this._toggleTableActionableMode();\n    }\n  };\n\n  /**\n   * Handler for Esc keydown.\n   * @param {Object} event\n   * @private\n   */\n  Table.prototype._handleKeydownEsc = function (event) {\n    // pressing Esc always returns focus back to the table.\n    if (this._hasEditableRow()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this._setTableEditable(false, true, 0, true, event);\n    } else if (this._isTableActionableMode()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this._setTableActionableMode(false);\n    }\n    this._getLayoutManager().handleKeyDownEsc();\n  };\n\n  /**\n   * Handler for Home keydown.\n   * @param {Object} event\n   * @private\n   */\n  Table.prototype._handleKeydownHome = function (event) {\n    if (this._isTableActionableMode() || this._hasEditableRow()) {\n      // ignore in actionable and editable mode\n      return;\n    }\n    // ensure active element is initialized\n    if (this._active == null) {\n      this._syncActiveElement();\n    }\n    // pressing Home focuses on first column\n    if (this._hasActiveHeader() || this._hasActiveFooter()) {\n      var activeIndex = this._getFirstVisibleColumnIndex(0, true);\n      if (this._hasActiveHeader()) {\n        this._setActiveHeader(activeIndex, event);\n      } else {\n        this._setActiveFooter(activeIndex, event);\n      }\n    } else if (this._hasActiveRow()) {\n      this._setActiveRow(0, event, true);\n    }\n  };\n\n  /**\n   * Handler for End keydown.\n   * @param {Object} event\n   * @private\n   */\n  Table.prototype._handleKeydownEnd = function (event) {\n    if (this._isTableActionableMode() || this._hasEditableRow()) {\n      // ignore in actionable and editable mode\n      return;\n    }\n    // ensure active element is initialized\n    if (this._active == null) {\n      this._syncActiveElement();\n    }\n    // pressing End focuses on last column\n    if (this._hasActiveHeader() || this._hasActiveFooter()) {\n      var activeIndex = this._getNextVisibleColumnIndex(this._getColumnDefs().length, false);\n      if (this._hasActiveHeader()) {\n        this._setActiveHeader(activeIndex, event);\n      } else {\n        this._setActiveFooter(activeIndex, event);\n      }\n    } else if (this._hasActiveRow()) {\n      var rowCount = this._getTableBodyRows().length;\n      this._setActiveRow(rowCount - 1, event, true);\n    }\n  };\n\n  /**\n   * Column Header Renderer\n   * @param {Object} context renderer context\n   * @param {function(Object)|null} delegateRenderer delegate renderer\n   * @private\n   */\n  Table.prototype._columnHeaderDefaultRenderer = function (context, delegateRenderer) {\n    var parentElement = context.headerContext.parentElement;\n    var headerColumnDiv = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n    headerColumnDiv.classList.add(Table.CSS_CLASSES._COLUMN_HEADER_CLASS);\n    $(parentElement).empty();\n    parentElement.appendChild(headerColumnDiv); // @HTMLUpdateOK\n\n    // call the delegateRenderer\n    var headerContentDiv = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n    headerContentDiv.classList.add(Table.CSS_CLASSES._COLUMN_HEADER_TEXT_CLASS);\n    headerColumnDiv.insertBefore(headerContentDiv, headerColumnDiv.firstChild); // @HTMLUpdateOK\n\n    if (delegateRenderer != null) {\n      delegateRenderer($(headerContentDiv));\n    } else {\n      this._columnHeaderDefaultTextRenderer(headerContentDiv, context);\n    }\n  };\n\n  /**\n   * Column Header with Sort Icons Renderer\n   * @param {Object} context renderer context\n   * @param {function(Object)|null} delegateRenderer delegate renderer\n   * @private\n   */\n  Table.prototype._columnHeaderSortableIconRenderer = function (context, delegateRenderer) {\n    var parentElement = context.headerContext.parentElement;\n    var headerColumnDiv = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n    headerColumnDiv.classList.add(Table.CSS_CLASSES._COLUMN_HEADER_CLASS);\n    $(parentElement).empty();\n    parentElement.appendChild(headerColumnDiv); // @HTMLUpdateOK\n\n    var sortContainer = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n    sortContainer.classList.add(Table.CSS_CLASSES._TABLE_SORT_ICON_CONTAINER_CLASS);\n    sortContainer.setAttribute(Table.DOM_ATTR._TITLE, this.getTranslatedString('labelSortAsc')); // @HTMLUpdateOK\n    sortContainer.setAttribute(Table.DOM_ATTR._ARIA_HIDDEN, 'true'); // @HTMLUpdateOK\n    this._AddHoverable($(sortContainer));\n    headerColumnDiv.appendChild(sortContainer); // @HTMLUpdateOK\n    var sortIcon = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n    sortIcon.classList.add(Table.CSS_CLASSES._WIDGET_ICON_CLASS);\n    sortIcon.classList.add(Table.CSS_CLASSES._COLUMN_HEADER_DEFAULT_SORT_ICON_CLASS);\n    sortIcon.classList.add(Table.MARKER_STYLE_CLASSES._DISABLED);\n    sortIcon.classList.add(Table.MARKER_STYLE_CLASSES._CLICKABLE_ICON);\n    this._AddHoverable($(sortIcon));\n    sortContainer.appendChild(sortIcon); // @HTMLUpdateOK\n\n    // call the delegateRenderer\n    var headerContentDiv = document.createElement(Table.DOM_ELEMENT._DIV); // @HTMLUpdateOK\n    headerContentDiv.classList.add(Table.CSS_CLASSES._COLUMN_HEADER_TEXT_CLASS);\n    headerColumnDiv.insertBefore(headerContentDiv, headerColumnDiv.firstChild); // @HTMLUpdateOK\n\n    if (delegateRenderer != null) {\n      delegateRenderer($(headerContentDiv));\n    } else {\n      this._columnHeaderDefaultTextRenderer(headerContentDiv, context);\n    }\n  };\n\n  /**\n   * Default column header context text renderer\n   * @param {Element} headerContentDiv header content div\n   * @param {Object} context context object\n   * @private\n   */\n  Table.prototype._columnHeaderDefaultTextRenderer = function (headerContentDiv, context) {\n    var columnIdx = context.columnIndex;\n    var column = this._getColumnDefs()[columnIdx];\n    var textValue = column.headerText == null ? '' : column.headerText;\n    headerContentDiv.appendChild(document.createTextNode(textValue)); // @HTMLUpdateOK\n    if (column.showRequired === true && this._isStickyLayoutEnabled()) {\n      var headerColumnDiv = headerContentDiv.parentElement;\n      var requiredIcon = this._createRequiredIconDomElement();\n      if (headerColumnDiv.childNodes.length > 1) {\n        headerColumnDiv.insertBefore(requiredIcon, headerColumnDiv.childNodes[1]); // @HTMLUpdateOK\n      } else {\n        headerColumnDiv.appendChild(requiredIcon); // @HTMLUpdateOK\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._createRequiredIconDomElement = function () {\n    var requiredDom = document.createElement(Table.DOM_ELEMENT._SPAN); // @HTMLUpdateOK\n    requiredDom.className = Table.CSS_CLASSES._COLUMN_HEADER_SHOW_REQUIRED_ICON_CLASS;\n    requiredDom.setAttribute(Table.DOM_ATTR._ROLE, 'img'); // @HTMLUpdateOK\n    requiredDom.setAttribute(Table.DOM_ATTR._TITLE, this.getTranslatedString('tooltipRequired')); // @HTMLUpdateOK\n    return requiredDom;\n  };\n\n  /**\n   * Default table body row renderer\n   * @param {number} rowIdx  row index\n   * @param {Object} row row\n   * @param {Object} context context object\n   * @private\n   */\n  Table.prototype._tableBodyRowDefaultRenderer = function (rowIdx, row, context) {\n    var columns = this._getColumnDefs();\n    var columnsCount = columns.length;\n    for (var j = 0; j < columnsCount; j++) {\n      // set the cells in the inserted row with values from the row\n      this._tableBodyCellDefaultRenderer(rowIdx, j, row, context);\n    }\n  };\n\n  /**\n   * Default table body cell renderer\n   * @param {number} rowIdx  row index\n   * @param {number} columnIdx  column index\n   * @param {Object} row row\n   * @param {Object} context context object\n   * @private\n   */\n  Table.prototype._tableBodyCellDefaultRenderer = function (rowIdx, columnIdx, row, context) {\n    var tableBodyRow = context.rowContext.parentElement;\n    var columns = this._getColumnDefs();\n    var column = columns[columnIdx];\n\n    var tableBodyCell = this._createTableBodyCell();\n    this._styleTableBodyCell(columnIdx, tableBodyCell, true);\n    this._insertTableBodyCell(rowIdx, row.key, columnIdx, tableBodyCell, tableBodyRow, true);\n\n    var data = null;\n\n    if (column.field != null) {\n      data = this._getObjectPath(row.data, column.field);\n    }\n\n    var cellRenderer = this._getColumnRenderer(columnIdx, 'cell');\n    var cellSlotTemplate = this._getSlotTemplate(column.template);\n    if (cellSlotTemplate == null && this._isDefaultCellTemplateSlotValid()) {\n      cellSlotTemplate = this._getSlotTemplate('cellTemplate');\n    }\n\n    if (!cellRenderer && !cellSlotTemplate) {\n      data = this._getVal(data);\n      var textValue = data == null ? '' : data;\n      tableBodyCell.appendChild(document.createTextNode(textValue)); // @HTMLUpdateOK\n      if (DataCollectionUtils.isIos()) {\n        // only update role for default rendering as the value of several input controls\n        // will not be read out correctly when this role is set on the containing cell\n        tableBodyCell.setAttribute(Table.DOM_ATTR._ROLE, 'text'); // @HTMLUpdateOK\n        var labelledbyVal = this._getVoiceOverCellLabelledby(tableBodyCell, columnIdx);\n        tableBodyCell.setAttribute(Table.DOM_ATTR._ARIA_LABELLEDBY, labelledbyVal); // @HTMLUpdateOK\n      }\n    } else {\n      var cellContext = this._getRendererContextObject(tableBodyCell, { row: row });\n      cellContext.rowEditable = tableBodyRow[Table._DATA_OJ_EDITABLE];\n      // Copy additional properties to top-level context to work with custom element\n      var rendererContext = {\n        cellContext: cellContext,\n        columnIndex: columnIdx,\n        data: data,\n        row: row.data,\n        componentElement: cellContext.componentElement,\n        parentElement: cellContext.parentElement\n      };\n\n      if (cellRenderer) {\n        if (!DataCollectionUtils.applyRendererContent(tableBodyCell, cellRenderer(rendererContext))) {\n          // if the renderer didn't return a value then the existing\n          // cell was manipulated. So get it and set the required\n          // attributes just in case it was replaced or the attributes\n          // got removed\n          tableBodyCell = $(tableBodyRow).children()[columnIdx];\n          this._setTableBodyCellAttributes(rowIdx, row.key, columnIdx, tableBodyCell);\n          this._styleTableBodyCell(columnIdx, tableBodyCell, false);\n        }\n      } else {\n        var componentElement = this._getRootElement();\n        var templateEngine = this._getTemplateEngine();\n        if (templateEngine != null) {\n          var tableBody = this._getTableBody();\n          var slotContext = this._getCellSlotTemplateContextObject(rendererContext);\n          var cellContent = templateEngine.execute(\n            componentElement,\n            cellSlotTemplate,\n            slotContext,\n            this.options.as,\n            tableBody,\n            new Map([[UNSAFE_useFormVariantContext.FormVariantContext, 'embedded']])\n          );\n          if (!(cellContent instanceof Array)) {\n            cellContent = [cellContent];\n          }\n          cellContent.map(function (content) {\n            tableBodyCell.appendChild(content);\n            return undefined;\n          });\n          // eslint-disable-next-line no-param-reassign\n          this._hasCellTemplate = true;\n        }\n      }\n    }\n  };\n\n  /**\n   * Get the context object to pass into the renderer\n   * @param {Object} parentElement element\n   * @param {Object} options options\n   * @private\n   */\n  Table.prototype._getRendererContextObject = function (parentElement, options) {\n    var context = {\n      component: ojcomponentcore.__GetWidgetConstructor(this.element, 'ojTable')\n    };\n    var dataSource = this.options.data;\n    // unwrap the datasource if we have a PagingTableDataSource\n    if (this._isPagingModelTableDataSource()) {\n      dataSource = dataSource.getWrappedDataSource();\n    }\n    context.datasource = dataSource;\n    context.parentElement = parentElement;\n\n    if (options.row != null) {\n      var row = options.row;\n      var rowKey = row.key;\n      context.status = this._getRendererStatusObject(row);\n\n      if (this._hasEditableRow()) {\n        // Check using the editable row key\n        var editableRowKey = this._getEditableRowKey();\n\n        // only set to edit mode for the editable row\n        if (oj.Object.compareValues(rowKey, editableRowKey)) {\n          context.mode = 'edit';\n        } else {\n          context.mode = 'navigation';\n        }\n      } else {\n        context.mode = 'navigation';\n      }\n\n      this._copyMetadata(context, row);\n    }\n\n    // Fix up context to work with custom element\n    return this._FixRendererContext(context);\n  };\n\n  /**\n   * Get the status object to pass into the renderer\n   * @param {Object} row row instance\n   * @return {Object} status object\n   * @private\n   */\n  Table.prototype._getRendererStatusObject = function (row) {\n    return {\n      rowIndex: row.index,\n      rowKey: row.key,\n      currentRow: $.extend({}, this._getCurrentRow())\n    };\n  };\n\n  /**\n   * Get the context object for inline cell templates\n   * @param {Object} context renderer context\n   * @private\n   */\n  Table.prototype._getCellSlotTemplateContextObject = function (context, isAddRowCellTemplate) {\n    var slotContext = this._getSlotTemplateContextObject();\n    var columnIndex = context.columnIndex;\n    if (!isAddRowCellTemplate) {\n      var rowIndex = context.cellContext.status.rowIndex;\n      var rowKey = context.cellContext.status.rowKey;\n      slotContext[Table._CONST_DATA] = context.data;\n      slotContext.row = context.row;\n      slotContext[Table._CONST_INDEX] = rowIndex;\n      slotContext.mode = context.cellContext.mode;\n      slotContext[Table._CONST_KEY] = rowKey;\n      const row = context.parentElement.parentElement;\n      slotContext.item = row[Table._ROW_ITEM_EXPANDO];\n      slotContext.rowEditable = this._invokeRowEditableCallback(row[Table._ROW_ITEM_EXPANDO]);\n    }\n    slotContext.columnIndex = columnIndex;\n    slotContext.columnKey = this._getColumnKeyForColumnIdx(context.columnIndex);\n    var dataSource = this.options.data;\n    if (this._isPagingModelTableDataSource()) {\n      dataSource = dataSource.getWrappedDataSource();\n    }\n    slotContext.datasource = dataSource;\n\n    return slotContext;\n  };\n\n  /**\n   * Get the context object for inline row templates\n   * @param {Object} context renderer context\n   * @private\n   */\n  Table.prototype._getRowSlotTemplateContextObject = function (context, isAddRowTemplate) {\n    var slotContext = this._getSlotTemplateContextObject();\n    if (!isAddRowTemplate) {\n      slotContext[Table._CONST_DATA] = context.data;\n      slotContext[Table._CONST_INDEX] = context.rowContext.status.rowIndex;\n      slotContext[Table._CONST_KEY] = context.rowContext.status.rowKey;\n      slotContext.mode = context.rowContext.mode;\n      slotContext.item = context.parentElement[Table._ROW_ITEM_EXPANDO];\n      slotContext.editable = this._invokeRowEditableCallback(\n        context.parentElement[Table._ROW_ITEM_EXPANDO]\n      );\n      slotContext.rowContext = context.rowContext;\n    }\n    var dataSource = this.options.data;\n    if (this._isPagingModelTableDataSource()) {\n      dataSource = dataSource.getWrappedDataSource();\n    }\n    slotContext.datasource = dataSource;\n    return slotContext;\n  };\n\n  /**\n   * Get the context object for inline header templates\n   * @param {Object} data data\n   * @param {number} columnIdx  column index\n   * @private\n   */\n  Table.prototype._getHeaderSlotTemplateContextObject = function (data, columnIdx) {\n    var slotContext = this._getSlotTemplateContextObject();\n    slotContext[Table._CONST_DATA] = data;\n    slotContext.columnIndex = columnIdx;\n    slotContext.headerText = data;\n    slotContext.columnKey = this._getColumnKeyForColumnIdx(columnIdx);\n\n    return slotContext;\n  };\n\n  /**\n   * Get the context object for inline footer templates\n   * @param {number} columnIdx  column index\n   * @private\n   */\n  Table.prototype._getFooterSlotTemplateContextObject = function (columnIdx) {\n    var slotContext = this._getSlotTemplateContextObject();\n    slotContext.columnIndex = columnIdx;\n    slotContext.columnKey = this._getColumnKeyForColumnIdx(columnIdx);\n\n    return slotContext;\n  };\n\n  /**\n   * Get the context object for inline templates\n   * @private\n   */\n  Table.prototype._getSlotTemplateContextObject = function () {\n    return { componentElement: this._getRootElement() };\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._copyMetadata = function (context, row) {\n    var metadataContext = row.metadata;\n    if (metadataContext) {\n      var keys = Object.keys(metadataContext);\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        // eslint-disable-next-line no-param-reassign\n        context[key] = metadataContext[key];\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._getObjectPath = function (obj, path) {\n    if (\n      obj != null &&\n      (typeof path === 'string' || path instanceof String) &&\n      (path.indexOf('.') !== -1 || (path.indexOf('[') !== -1 && path.indexOf(']') !== -1))\n    ) {\n      var currentObj = obj;\n      var foundPath = false;\n      var pathArray = path.split('.');\n      pathArray.map(function (pathSegment) {\n        if (\n          currentObj != null &&\n          pathSegment.indexOf('[') !== -1 &&\n          pathSegment.indexOf(']') !== -1\n        ) {\n          var basePathSegment = pathSegment.substr(0, pathSegment.indexOf('['));\n          var pathSegmentIndex = parseInt(\n            pathSegment.substr(\n              pathSegment.indexOf('[') + 1,\n              pathSegment.indexOf(']') - pathSegment.indexOf('[') - 1\n            ),\n            10\n          );\n          currentObj = currentObj[basePathSegment][pathSegmentIndex];\n          foundPath = true;\n        } else if (currentObj !== null && currentObj[pathSegment] !== undefined) {\n          currentObj = currentObj[pathSegment];\n          foundPath = true;\n        }\n        return undefined;\n      });\n      if (foundPath) {\n        return currentObj;\n      }\n    } else if (obj == null) {\n      return null;\n    }\n    return obj[path];\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._getVal = function (val) {\n    if (typeof val === 'function') {\n      return val();\n    }\n    return val;\n  };\n\n  /**\n   * Return the row selection mode\n   * @return {string|null} single, multiple, none, or null\n   * @private\n   */\n  Table.prototype._getRowSelectionMode = function () {\n    return this.options.selectionMode == null ? null : this.options.selectionMode[Table._CONST_ROW];\n  };\n\n  /**\n   * Returns whether or not row selection is enabled\n   * @return {boolean} whether row selection is enabled\n   * @private\n   */\n  Table.prototype._isRowSelectionEnabled = function () {\n    var rowSelectionMode = this._getRowSelectionMode();\n    return (\n      rowSelectionMode === Table._OPTION_SELECTION_MODES._SINGLE ||\n      rowSelectionMode === Table._OPTION_SELECTION_MODES._MULTIPLE\n    );\n  };\n\n  /**\n   * Return the column selection mode\n   * @return {string|null} single, multiple, none, or null\n   * @private\n   */\n  Table.prototype._getColumnSelectionMode = function () {\n    return this.options.selectionMode == null\n      ? null\n      : this.options.selectionMode[Table._CONST_COLUMN];\n  };\n\n  /**\n   * Returns whether or not column selection is enabled\n   * @return {boolean} whether column selection is enabled\n   * @private\n   */\n  Table.prototype._isColumnSelectionEnabled = function () {\n    var colSelectionMode = this._getColumnSelectionMode();\n    return (\n      colSelectionMode === Table._OPTION_SELECTION_MODES._SINGLE ||\n      colSelectionMode === Table._OPTION_SELECTION_MODES._MULTIPLE\n    );\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._syncSelectionState = function () {\n    var selected = this.option('selected');\n    var selection = this.option('selection');\n\n    // generate new selected value from existing selection value if required\n    if (this._selectionSet) {\n      // recreate 'selected' option in case selection ranges need to be applied\n      selected = this._getSelectedEquivalent(selection);\n      // update row index/key values in the 'selection' option\n      this._syncRangeSelection();\n    }\n    if (!this._isSelectionRequiredSatisfied(selected)) {\n      this._selectFirstRowOrColumn();\n    } else {\n      this._setSelected(selected, this._selectionSet);\n    }\n  };\n\n  /**\n   * Updates the Table's selection state based on the rows being removed\n   */\n  Table.prototype._updateSelectionStateFromEventDetailRemove = function (\n    eventDetail,\n    addEventDetail\n  ) {\n    var selected = this.option('selected');\n    var rowKeySet = selected.row;\n    if (rowKeySet) {\n      eventDetail[Table._CONST_KEYS].forEach(function (key) {\n        if (addEventDetail == null || !addEventDetail[Table._CONST_KEYS].has(key)) {\n          // remove rowKey reference from the existing selection state\n          if (!rowKeySet.isAddAll()) {\n            rowKeySet = rowKeySet.delete([key]);\n          } else if (!rowKeySet.has(key)) {\n            rowKeySet = rowKeySet.add([key]);\n          }\n        }\n      });\n      // only update selection if this led to a new selection state\n      if (selected.row !== rowKeySet) {\n        selected = { row: rowKeySet, column: selected.column };\n        // ensure selectionRequired is satisfied\n        if (!this._isSelectionRequiredSatisfied(selected)) {\n          this._selectFirstRowOrColumn();\n        } else {\n          this._setSelected(selected);\n        }\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._updateSelectionStateFromEventDetailChange = function (eventDetail) {\n    var currentFirstSelectedRow = this.option('firstSelectedRow');\n    if (currentFirstSelectedRow != null) {\n      var eventKeys = [];\n      eventDetail[Table._CONST_KEYS].forEach(function (key) {\n        eventKeys.push(key);\n      });\n      for (var i = 0; i < eventKeys.length; i++) {\n        var key = eventKeys[i];\n        var updatedRowData = eventDetail[Table._CONST_DATA][i];\n        // update firstSelectedRow data if selected row is updated\n        if (oj.KeyUtils.equals(key, currentFirstSelectedRow.key)) {\n          this.option(\n            'firstSelectedRow',\n            { key: key, data: updatedRowData },\n            {\n              _context: {\n                writeback: true,\n                internalSet: true\n              }\n            }\n          );\n        }\n        // update any affected row key data for out of view selections\n        if (this._validatedSelectedRowKeyData != null) {\n          for (var j = 0; j < this._validatedSelectedRowKeyData.length; j++) {\n            var rowKeyData = this._validatedSelectedRowKeyData[j];\n            if (oj.KeyUtils.equals(key, rowKeyData.key)) {\n              this._validatedSelectedRowKeyData[j] = updatedRowData;\n              break;\n            }\n          }\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {boolean=} isOptionUpdate\n   * @private\n   */\n  Table.prototype._validateInitialSelectionState = function (isOptionUpdate) {\n    var useSelection;\n    var validateSelectedResult;\n    var selection = this.option('selection');\n    var selected = this.option('selected');\n    var rowKeySet = selected.row;\n    var columnKeySet = selected.column;\n    this._validatedSelectedRowKeyData = null;\n\n    // generate new selected value from existing selection value if required\n    if (\n      this._selectionSet ||\n      (!isOptionUpdate &&\n        selection != null &&\n        selection.length !== 0 &&\n        rowKeySet === rowKeySet.clear() &&\n        columnKeySet === columnKeySet.clear())\n    ) {\n      // recreate 'selected' option in case selection ranges need to be applied\n      selected = this._getSelectedEquivalent(selection);\n      useSelection = true;\n    }\n    if (this._isSelectionRequired()) {\n      validateSelectedResult = this._validateSelected(selected);\n      if (!validateSelectedResult.isLocal) {\n        // set selection-required rowKey validation busy state\n        var validationResolveFunc = this._createComponentBusyState(\n          'is validating selection-required keys.'\n        );\n        validateSelectedResult.result.then(\n          function (validSelected) {\n            this._enforceSelectionRequired(selected, validSelected, useSelection);\n            // clear selection-required rowKey validation busy state\n            this._clearComponentBusyState(validationResolveFunc);\n          }.bind(this)\n        );\n      } else {\n        this._enforceSelectionRequired(selected, validateSelectedResult.result, useSelection);\n      }\n    } else {\n      if (useSelection) {\n        // update row index/key values in the 'selection' option\n        this._syncRangeSelection();\n      }\n      this._setSelected(selected, useSelection);\n    }\n    this._initialSelectionStateValidated = true;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._isSelectionRequired = function () {\n    return String(this.options.selectionRequired).toLowerCase() === 'true';\n  };\n\n  /**\n   * @param {Object=} selected\n   * @private\n   */\n  Table.prototype._hasSelected = function (selected) {\n    if (selected == null) {\n      // eslint-disable-next-line no-param-reassign\n      selected = this.option('selected');\n    }\n    var rowKeySet = selected.row;\n    var columnKeySet = selected.column;\n    return (\n      rowKeySet.isAddAll() ||\n      rowKeySet.values().size > 0 ||\n      columnKeySet.isAddAll() ||\n      columnKeySet.values().size > 0\n    );\n  };\n\n  /**\n   * @param {Object} selected\n   * @private\n   */\n  Table.prototype._isSelectionRequiredSatisfied = function (selected) {\n    if (this._isSelectionRequired()) {\n      return this._hasSelected(selected);\n    }\n    return true;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._enforceSelectionRequired = function (selected, validSelected, useSelection) {\n    if (useSelection) {\n      if (this._hasSelected(validSelected)) {\n        if (validSelected.row === selected.row && validSelected.column === selected.column) {\n          // update row index/key values in the 'selection' option\n          this._syncRangeSelection();\n          this._setSelected(validSelected, true);\n        } else {\n          // override selection option as it was not fully valid\n          this._setSelected(validSelected);\n        }\n      } else {\n        // selection state does not satisfy selection-required, override to valid state\n        this._selectFirstRowOrColumn();\n      }\n    } else if (this._hasSelected(validSelected)) {\n      this._setSelected(validSelected);\n    } else {\n      // selection state does not satisfy selection-required, override to valid state\n      this._selectFirstRowOrColumn();\n    }\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._selectFirstRowOrColumn = function () {\n    var newKeySet;\n    var key;\n    if (this._isRowSelectionEnabled()) {\n      key = this._getRowKeyForRowIdx(0);\n      if (key != null) {\n        newKeySet = new ojkeyset.KeySetImpl([key]);\n        this._setSelected({ row: newKeySet, column: new ojkeyset.KeySetImpl() });\n        return;\n      }\n    }\n    if (this._isColumnSelectionEnabled()) {\n      key = this._getColumnKeyForColumnIdx(0);\n      if (key != null) {\n        newKeySet = new ojkeyset.KeySetImpl([key]);\n        this._setSelected({ row: new ojkeyset.KeySetImpl(), column: newKeySet });\n      }\n    }\n  };\n\n  /**\n   * @param {Object} selected\n   * @private\n   */\n  Table.prototype._validateSelected = function (selected) {\n    var columnKeySet = selected.column;\n    var validatedColumnKeySet = columnKeySet;\n    if (!columnKeySet.isAddAll()) {\n      var columnKeys = this._getColumnKeys();\n      var invalidColumnKeys = [];\n      var pendingColumnKeys = columnKeySet.values();\n      pendingColumnKeys.forEach(function (key) {\n        if (columnKeys.indexOf(key) === -1) {\n          invalidColumnKeys.push(key);\n        }\n      });\n      if (invalidColumnKeys.length > 0) {\n        validatedColumnKeySet = validatedColumnKeySet.delete(invalidColumnKeys);\n      }\n    }\n\n    var rowKeySet = selected.row;\n    var validatedRowKeySet = rowKeySet;\n    if (!rowKeySet.isAddAll()) {\n      var localRowKeys = this._getLocalRowKeys();\n      var invalidLocalRowKeys = [];\n      var pendingRowKeys = rowKeySet.values();\n      pendingRowKeys.forEach(function (key) {\n        if (localRowKeys.indexOf(key) === -1) {\n          invalidLocalRowKeys.push(key);\n        }\n      });\n      // if any keys are not locally available, attempt to validate keys in the data provider\n      if (invalidLocalRowKeys.length > 0) {\n        var validRowKeyDataPromise = this._fetchValidRowKeyData(invalidLocalRowKeys);\n        if (validRowKeyDataPromise) {\n          var validateSelectedPromise = validRowKeyDataPromise.then(\n            function (validRowKeyData) {\n              // save validatedSelectedRowKeyData for 'firstSelectedRow' updates\n              this._validatedSelectedRowKeyData = validRowKeyData;\n              validRowKeyData.forEach(function (rowKeyData) {\n                invalidLocalRowKeys.splice(invalidLocalRowKeys.indexOf(rowKeyData.key), 1);\n              });\n              validatedRowKeySet = validatedRowKeySet.delete(invalidLocalRowKeys);\n              return { row: validatedRowKeySet, column: validatedColumnKeySet };\n            }.bind(this)\n          );\n          return { isLocal: false, result: validateSelectedPromise };\n        }\n        validatedRowKeySet = validatedRowKeySet.delete(invalidLocalRowKeys);\n      }\n    }\n    return { isLocal: true, result: { row: validatedRowKeySet, column: validatedColumnKeySet } };\n  };\n\n  /**\n   * Validate keys in selected\n   * @private\n   */\n  Table.prototype._fetchValidRowKeyData = function (keys) {\n    // need to verify keys if we have a DataProvider that supports non-iteration 'fetchByKeys'\n    var dataProvider = this._getData();\n    if (dataProvider && dataProvider.getCapability) {\n      var capability = dataProvider.getCapability('fetchByKeys');\n      if (capability && capability.implementation === 'lookup') {\n        return new Promise(function (resolve) {\n          dataProvider.fetchByKeys({ keys: new Set(keys), scope: 'global' }).then(\n            function (fetchResult) {\n              var validKeyData = [];\n              var validKeysResult = fetchResult.results;\n              validKeysResult.forEach(function (value, key) {\n                validKeyData.push({ key: key, data: value.data });\n              });\n              resolve(validKeyData);\n            },\n            function () {\n              // something bad happened, treat keys as invalid\n              resolve([]);\n            }\n          );\n        });\n      }\n    }\n    // if we can't validate, return null\n    return null;\n  };\n\n  /**\n   * Update the row/column index of each selection range\n   * @private\n   */\n  Table.prototype._syncRangeSelection = function (selection) {\n    if (selection === undefined) {\n      // eslint-disable-next-line no-param-reassign\n      selection = this.option('selection');\n    }\n    if (selection == null) {\n      return;\n    }\n\n    var selectionCount = selection.length;\n    for (var i = 0; i < selectionCount; i++) {\n      var rangeObj = selection[i];\n\n      var startRowKey;\n      var startRowIndex;\n      if (rangeObj.startKey != null && rangeObj.startKey[Table._CONST_ROW] != null) {\n        startRowKey = rangeObj.startKey[Table._CONST_ROW];\n        startRowIndex = this._getDataSourceRowIndexForRowKey(startRowKey);\n        rangeObj.startIndex = {};\n        rangeObj.startIndex[Table._CONST_ROW] = startRowIndex;\n      } else if (rangeObj.startIndex != null && rangeObj.startIndex[Table._CONST_ROW] != null) {\n        startRowIndex = rangeObj.startIndex[Table._CONST_ROW];\n        startRowKey = this._getRowKeyForDataSourceRowIndex(startRowIndex);\n        if (startRowKey != null) {\n          rangeObj.startKey = {};\n          rangeObj.startKey[Table._CONST_ROW] = startRowKey;\n        }\n      }\n      var endRowKey;\n      var endRowIndex;\n      if (rangeObj.endKey != null && rangeObj.endKey[Table._CONST_ROW] != null) {\n        endRowKey = rangeObj.endKey[Table._CONST_ROW];\n        endRowIndex = this._getDataSourceRowIndexForRowKey(endRowKey);\n        rangeObj.endIndex = {};\n        rangeObj.endIndex[Table._CONST_ROW] = endRowIndex;\n      } else if (rangeObj.endIndex != null && rangeObj.endIndex[Table._CONST_ROW] != null) {\n        endRowIndex = rangeObj.endIndex[Table._CONST_ROW];\n        endRowKey = this._getRowKeyForDataSourceRowIndex(endRowIndex);\n        if (endRowKey != null) {\n          rangeObj.endKey = {};\n          rangeObj.endKey[Table._CONST_ROW] = endRowKey;\n        }\n      }\n    }\n  };\n\n  /**\n   * Process the selected rows defined in the range object.\n   * @return {Object} returns an object that contains the following:\n   *         status: true if the range is processed, false if the range is not processed, undefined if the range is partially processed.\n   *         rowKeySet: updated KeySet for row.\n   *         columnKeySet: updated KeySet for column.\n   * @private\n   */\n  Table.prototype._processRowRangeSelection = function (rangeObj, rowKeySet, columnKeySet) {\n    var startRowIndex;\n    var endRowIndex;\n    var startRowIdx;\n    var endRowIdx;\n    var startRowKey;\n    var endRowKey;\n    var status = true;\n\n    // if keys are specified, we get the index from the key\n    if (rangeObj.startKey != null && rangeObj.startKey[Table._CONST_ROW] != null) {\n      startRowKey = rangeObj.startKey[Table._CONST_ROW];\n      startRowIndex = this._getDataSourceRowIndexForRowKey(startRowKey);\n      if (isNaN(startRowIndex)) {\n        // start key is outside of range\n        status = null;\n      }\n    } else if (rangeObj.startIndex != null && rangeObj.startIndex[Table._CONST_ROW] != null) {\n      startRowIndex = rangeObj.startIndex[Table._CONST_ROW];\n    }\n    if (rangeObj.endKey != null && rangeObj.endKey[Table._CONST_ROW] != null) {\n      endRowKey = rangeObj.endKey[Table._CONST_ROW];\n      endRowIndex = this._getDataSourceRowIndexForRowKey(endRowKey);\n      if (endRowIndex === null && this._isLoadMoreOnScroll()) {\n        // we'll still need to process range selection next time\n        endRowIndex = this._getDataSourceLastFetchedRowIndex();\n        status = null;\n      }\n    } else if (rangeObj.endIndex != null && rangeObj.endIndex[Table._CONST_ROW] != null) {\n      endRowIndex = rangeObj.endIndex[Table._CONST_ROW];\n      var lastRowIndex = this._getDataSourceLastFetchedRowIndex();\n      if (this._isLoadMoreOnScroll() && endRowIndex > lastRowIndex) {\n        // we'll still need to process range selection next time\n        endRowIndex = lastRowIndex;\n        status = null;\n      }\n    }\n\n    if (startRowIndex === undefined && endRowIndex === undefined) {\n      // there's no row range set\n      status = false;\n    } else if (startRowIndex != null && endRowIndex != null && startRowIndex <= endRowIndex) {\n      // this is a row based selection\n      startRowKey = this._getRowKeyForDataSourceRowIndex(startRowIndex);\n      endRowKey = this._getRowKeyForDataSourceRowIndex(endRowIndex);\n      startRowIdx = this._getRowIdxForRowKey(startRowKey);\n      endRowIdx = this._getRowIdxForRowKey(endRowKey);\n      for (var i = startRowIdx; i <= endRowIdx; i++) {\n        // update keySet\n        var rowKey = this._getRowKeyForRowIdx(i);\n        // eslint-disable-next-line no-param-reassign\n        rowKeySet = rowKeySet.add([rowKey]);\n      }\n      // eslint-disable-next-line no-param-reassign\n      columnKeySet = columnKeySet.clear();\n    } else {\n      // use warn instead of error because the start/end key could be out of range\n      Logger.warn(\n        'Error: Cannot resolve row range in selection - \\n start row key: ' +\n          startRowKey +\n          '\\n end row key: ' +\n          endRowKey +\n          '\\n start row index: ' +\n          startRowIndex +\n          '\\n end row index: ' +\n          endRowIndex\n      );\n\n      // although row keys are possibly out of range, we still need to update our keyset\n      if (startRowKey != null && endRowKey != null) {\n        // eslint-disable-next-line no-param-reassign\n        rowKeySet = rowKeySet.add([startRowKey]);\n        // eslint-disable-next-line no-param-reassign\n        rowKeySet = rowKeySet.add([endRowKey]);\n        // eslint-disable-next-line no-param-reassign\n        columnKeySet = columnKeySet.clear();\n      }\n    }\n    return { status: status, rowKeySet: rowKeySet, columnKeySet: columnKeySet };\n  };\n\n  /**\n   * Returns the index of the last fetched row in table.\n   * @private\n   */\n  Table.prototype._getDataSourceLastFetchedRowIndex = function () {\n    var tableBodyRows = this._getTableBodyRows();\n    if (tableBodyRows.length > 0) {\n      var dataprovider = this._getData();\n      var offset = 0;\n      if (this._isPagingModelDataProvider()) {\n        offset = dataprovider.getStartItemIndex();\n      }\n      return tableBodyRows.length + offset - 1;\n    }\n    return 0;\n  };\n\n  /**\n   * Process the selected columns defined in the range object.\n   * @return {Object} returns an object that contains the following:\n   *         status: true if the range is processed, false if the range is not processed.\n   *         rowKeySet: updated KeySet for row.\n   *         columnKeySet: updated KeySet for column.\n   * @private\n   */\n  Table.prototype._processColumnRangeSelection = function (rangeObj, rowKeySet, columnKeySet) {\n    var startColumnKey;\n    var endColumnKey;\n    var startColumnIndex;\n    var endColumnIndex;\n    var status = true;\n\n    if (rangeObj.startKey != null && rangeObj.startKey[Table._CONST_COLUMN] != null) {\n      startColumnKey = rangeObj.startKey[Table._CONST_COLUMN];\n      startColumnIndex = this._getColumnIdxForColumnKey(startColumnKey);\n    } else if (rangeObj.startIndex != null && rangeObj.startIndex[Table._CONST_COLUMN] != null) {\n      startColumnIndex = rangeObj.startIndex[Table._CONST_COLUMN];\n    }\n    if (rangeObj.endKey != null && rangeObj.endKey[Table._CONST_COLUMN] != null) {\n      endColumnKey = rangeObj.endKey[Table._CONST_COLUMN];\n      endColumnIndex = this._getColumnIdxForColumnKey(endColumnKey);\n    } else if (rangeObj.endIndex != null && rangeObj.endIndex[Table._CONST_COLUMN] != null) {\n      endColumnIndex = rangeObj.endIndex[Table._CONST_COLUMN];\n    }\n\n    if (startColumnIndex === undefined && endColumnIndex === undefined) {\n      // column range wasn't specified\n      status = false;\n    } else if (\n      startColumnIndex != null &&\n      endColumnIndex != null &&\n      !isNaN(startColumnIndex) &&\n      !isNaN(endColumnIndex) &&\n      startColumnIndex <= endColumnIndex\n    ) {\n      // this is a column based selection\n      for (var i = startColumnIndex; i <= endColumnIndex; i++) {\n        // update keySet\n        var columnKey = this._getColumnKeyForColumnIdx(i);\n        // eslint-disable-next-line no-param-reassign\n        columnKeySet = columnKeySet.add([columnKey]);\n      }\n      // eslint-disable-next-line no-param-reassign\n      rowKeySet = rowKeySet.clear();\n    } else {\n      Logger.error(\n        'Error: Cannot resolve column range in selection - \\n start column key: ' +\n          startColumnKey +\n          '\\n end column key: ' +\n          endColumnKey +\n          '\\n start column index: ' +\n          startColumnIndex +\n          '\\n end column index: ' +\n          endColumnIndex\n      );\n    }\n    return { status: status, rowKeySet: rowKeySet, columnKeySet: columnKeySet };\n  };\n\n  /**\n   * When data change occurs (sort, refresh etc.), invalidate any remaining selection range by\n   * syncing the value with what's stored in the selected row KeySet\n   * @private\n   */\n  Table.prototype._invalidateRangeSelection = function () {\n    var selection = this.option('selection');\n    if (selection == null) {\n      return;\n    }\n    for (var i = 0; i < selection.length; i++) {\n      var startRowKey;\n      var endRowKey;\n      var rangeObj = selection[i];\n      if (rangeObj.startKey != null) {\n        startRowKey = rangeObj.startKey[Table._CONST_ROW];\n      }\n      if (rangeObj.endKey != null) {\n        endRowKey = rangeObj.endKey[Table._CONST_ROW];\n      }\n\n      // all the ranges should be converted to keyset already\n      // the only exception is if there are un-resolved ranges, in which case\n      // we will invalidate them by syncing up with what's stored in the KeySet\n      if (startRowKey !== endRowKey || startRowKey === undefined) {\n        var keySet = this.option('selected.row');\n        var newSelection = this._getRowSelectionFromKeySet(keySet);\n        this.option('selection', newSelection, {\n          _context: {\n            writeback: true,\n            internalSet: true\n          }\n        });\n        break;\n      }\n    }\n  };\n\n  /**\n   * Sets selected keyset\n   * @param {Object} selected\n   * @param {boolean=} skipSelectionUpdate\n   * @private\n   */\n  Table.prototype._setSelected = function (selected, skipSelectionUpdate) {\n    this._selectionSet = skipSelectionUpdate;\n    if (selected != null) {\n      if (selected.row == null) {\n        // eslint-disable-next-line no-param-reassign\n        selected.row = new ojkeyset.KeySetImpl();\n      }\n      if (selected.column == null) {\n        // eslint-disable-next-line no-param-reassign\n        selected.column = new ojkeyset.KeySetImpl();\n      }\n      var updateSelected;\n      var currentSelected = this.option('selected');\n      if (this._selectionSet) {\n        // when selection is set, we need to check if selected key sets are equivalent\n        if (\n          !DataCollectionUtils.areKeySetsEqual(currentSelected.row, selected.row) ||\n          !DataCollectionUtils.areKeySetsEqual(currentSelected.column, selected.column)\n        ) {\n          updateSelected = true;\n        }\n      } else if (currentSelected.row !== selected.row || currentSelected.column !== selected.column) {\n        updateSelected = true;\n      }\n      // only update selected option if it has changed\n      if (updateSelected) {\n        this.option('selected', selected, {\n          _context: {\n            writeback: true,\n            internalSet: true\n          }\n        });\n\n        // update local rowKeyData storage when selected value is updated\n        if (this._isSelectionRequired() && this._validatedSelectedRowKeyData) {\n          for (var i = this._validatedSelectedRowKeyData.length - 1; i >= 0; i--) {\n            var rowKeyData = this._validatedSelectedRowKeyData[i];\n            // if the key is no longer in the selected value, remove it from the local storage\n            if (!selected.row.has(rowKeyData.key)) {\n              this._validatedSelectedRowKeyData.splice(i, 1);\n            }\n          }\n        }\n      }\n      if (this._isDefaultSelectorEnabled()) {\n        this._updateSelectors(selected.row);\n      }\n      this._applySelected(selected);\n\n      // update firstSelectedRow option\n      var newKey = null;\n      var rowSelection = this._getRowSelectionFromKeySet(selected.row);\n      if (rowSelection != null && rowSelection.length > 0) {\n        var range = rowSelection[0];\n        if (range.startKey != null) {\n          newKey = range.startKey[Table._CONST_ROW];\n        }\n      }\n      this._setFirstSelectedRow(newKey);\n\n      // sync selection option with new selected value\n      if (!skipSelectionUpdate) {\n        var selection = this._getSelectionEquivalent(selected);\n        this.option('selection', selection, {\n          _context: {\n            writeback: true,\n            internalSet: true\n          }\n        });\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._setFirstSelectedRow = function (newKey) {\n    // only update the firstSelectedRow option if it has changed\n    var currentFirstSelectedRow = this.option('firstSelectedRow');\n    if (\n      !oj.KeyUtils.equals(newKey, currentFirstSelectedRow.key) ||\n      !this._initialSelectionStateValidated\n    ) {\n      var newData = null;\n      if (newKey != null) {\n        var row = this.getDataForVisibleRow(this._getRowIdxForRowKey(newKey));\n        if (row != null) {\n          newData = row[Table._CONST_DATA];\n        } else if (this._validatedSelectedRowKeyData) {\n          for (var i = 0; i < this._validatedSelectedRowKeyData.length; i++) {\n            var rowKeyData = this._validatedSelectedRowKeyData[i];\n            if (oj.KeyUtils.equals(newKey, rowKeyData.key)) {\n              newData = rowKeyData.data;\n              break;\n            }\n          }\n        }\n      }\n      this.option(\n        'firstSelectedRow',\n        { key: newKey, data: newData },\n        {\n          _context: {\n            writeback: true,\n            internalSet: true\n          }\n        }\n      );\n    }\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._getSelectedEquivalent = function (selection) {\n    var selected;\n    if (selection != null) {\n      selected = { row: new ojkeyset.KeySetImpl(), column: new ojkeyset.KeySetImpl() };\n      var rowKeySet = selected.row;\n      var columnKeySet = selected.column;\n\n      var selectionCount = selection.length;\n      for (var i = 0; i < selectionCount; i++) {\n        var rangeObj = selection[i];\n        if (\n          (rangeObj.startKey == null && rangeObj[Table._CONST_STARTINDEX] == null) ||\n          (rangeObj.endKey == null && rangeObj[Table._CONST_ENDINDEX] == null)\n        ) {\n          Logger.error(\n            'Error: Invalid range object in selection. Both start and end objects must be specified'\n          );\n          // eslint-disable-next-line no-continue\n          continue;\n        }\n\n        var retObj = this._processRowRangeSelection(rangeObj, rowKeySet, columnKeySet);\n        rowKeySet = retObj.rowKeySet;\n        columnKeySet = retObj.columnKeySet;\n        // it's not a row range, proceed to process column ranges\n        if (retObj.status === false) {\n          retObj = this._processColumnRangeSelection(rangeObj, rowKeySet, columnKeySet);\n          if (retObj.status === false) {\n            Logger.error('Error: Invalid range object');\n          }\n          rowKeySet = retObj.rowKeySet;\n          columnKeySet = retObj.columnKeySet;\n        }\n      }\n\n      // update if the keyset has actually changed as a result of processing range selection\n      // note that since KeySet is immutable, the only time when it will return the same\n      // instance is if nothing has changed, so using !== is fine.\n      if (selected.row !== rowKeySet || selected.column !== columnKeySet) {\n        selected = { row: rowKeySet, column: columnKeySet };\n      }\n    } else {\n      // pre-7.0.0, null was handled without issue even though it wasn't part of the doc\n      selected = { row: new ojkeyset.KeySetImpl(), column: new ojkeyset.KeySetImpl() };\n    }\n    return selected;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._getSelectionEquivalent = function (selected) {\n    var selection = this._getRowSelectionFromKeySet(selected.row);\n    // if there is a row selection, return that selection as it takes precedence over column selection\n    if (selection.length > 0 || selection.inverted) {\n      return selection;\n    }\n    selection = this._getColumnSelectionFromKeySet(selected.column);\n    // otherwise, if there is a column selection, return that selection\n    if (selection.length > 0 || selection.inverted) {\n      return selection;\n    }\n    // if there is no row or column selection, return an empty selection state\n    return [];\n  };\n\n  /**\n   * Derive the value of row selection (ranges) from selected row KeySet\n   * @private\n   */\n  Table.prototype._getRowSelectionFromKeySet = function (keySet) {\n    var selection = [];\n    var iterator = keySet.isAddAll() ? keySet.deletedValues() : keySet.values();\n    iterator.forEach(function (key) {\n      var range = { startKey: { row: key }, endKey: { row: key } };\n      var index = this._getDataSourceRowIndexForRowKey(key);\n      if (!isNaN(index) && index >= 0) {\n        range.startIndex = { row: index };\n        range.endIndex = { row: index };\n      }\n      selection.push(range);\n    }, this);\n    selection.inverted = keySet.isAddAll();\n    return selection;\n  };\n\n  /**\n   * Derive the value of column selection (ranges) from selected column KeySet\n   * @private\n   */\n  Table.prototype._getColumnSelectionFromKeySet = function (keySet) {\n    var selection = [];\n    var iterator = keySet.isAddAll() ? keySet.deletedValues() : keySet.values();\n    iterator.forEach(function (key) {\n      var range = { startKey: { column: key }, endKey: { column: key } };\n      var index = this._getColumnIdxForColumnKey(key);\n      if (index >= 0) {\n        range.startIndex = { column: index };\n        range.endIndex = { column: index };\n      }\n      selection.push(range);\n    }, this);\n    selection.inverted = keySet.isAddAll();\n    return selection;\n  };\n\n  /**\n   * Applies the 'selected' state on the Table\n   * @param {Object} selected The selected state.\n   * @private\n   */\n  Table.prototype._applySelected = function (selected) {\n    var rowKeySet = selected.row;\n    var columnKeySet = selected.column;\n\n    // remove selection state from previously selected rows that are no longer selected\n    var prevSelectedRows = this._getSelectedRowIdxs();\n    prevSelectedRows.forEach(function (rowIndex) {\n      var row = this._getTableBodyRow(rowIndex);\n      const isSelectable = row[Table._DATA_OJ_SELECTABLE] !== Table._CONST_OFF;\n      if (!rowKeySet.has(this._getRowKey(row)) && isSelectable) {\n        this._applyRowSelection(rowIndex, row, false);\n        this._setLastRowSelection(rowIndex, false);\n      }\n    }, this);\n\n    if (this._isRowSelectionEnabled()) {\n      // apply selection state to selected rows\n      if (rowKeySet.isAddAll()) {\n        var rows = this._getTableBodyRows();\n        let lastRowIndex;\n        rows.forEach(function (row, index) {\n          const isSelectable = row[Table._DATA_OJ_SELECTABLE] !== Table._CONST_OFF;\n          const rowKey = this._getRowKey(row);\n          if (rowKeySet.has(rowKey) && isSelectable) {\n            this._applyRowSelection(index, row, true);\n            lastRowIndex = index;\n          }\n        }, this);\n        if (lastRowIndex) {\n          this._setLastRowSelection(lastRowIndex, true);\n        }\n      } else {\n        rowKeySet.values().forEach(function (rowKey) {\n          var index = this._getRowIdxForRowKey(rowKey);\n          if (index != null && index >= 0) {\n            const row = this._getTableBodyRow(index);\n            const isSelectable = row[Table._DATA_OJ_SELECTABLE] !== Table._CONST_OFF;\n            if (isSelectable) {\n              this._applyRowSelection(index, row, true);\n              this._setLastRowSelection(index, true);\n            }\n          }\n        }, this);\n      }\n    }\n\n    // cleanup touch selection affordance if present\n    var currentSelectedRows = this._getSelectedRowIdxs();\n    if (currentSelectedRows.length === 0) {\n      this._removeTableBodyRowTouchSelectionAffordance();\n    }\n\n    // remove selection state from previously selected columns that are no longer selected\n    var prevSelectedColumns = this._getSelectedHeaderColumnIdxs();\n    prevSelectedColumns.forEach(function (columnIndex) {\n      if (!columnKeySet.has(this._getColumnKeyForColumnIdx(columnIndex))) {\n        this._applyColumnSelection(columnIndex, false);\n      }\n    }, this);\n\n    if (this._isColumnSelectionEnabled()) {\n      // apply selection state to selected columns\n      if (columnKeySet.isAddAll()) {\n        var headers = this._getTableHeaderColumns();\n        headers.forEach(function (header, index) {\n          if (columnKeySet.has(this._getColumnKeyForColumnIdx(index))) {\n            this._applyColumnSelection(index, true);\n          }\n        }, this);\n\n        var lastColumnIndex = headers.length - 1;\n        var lastColumnKey = this._getColumnKeyForColumnIdx(lastColumnIndex);\n        this._setLastHeaderColumnSelection(lastColumnIndex, columnKeySet.has(lastColumnKey));\n      } else {\n        columnKeySet.values().forEach(function (columnKey) {\n          var index = this._getColumnIdxForColumnKey(columnKey);\n          if (index != null && index >= 0) {\n            this._applyColumnSelection(index, true);\n          }\n        }, this);\n      }\n    }\n  };\n\n  /**\n   * Applies or removes the selection state to the specified row.\n   * @param {number} index The row index.\n   * @param {Element} tableBodyRow The <tr> element of the row.\n   * @param {boolean} selected True if the selection state should be applied, false if it should be removed.\n   * @private\n   */\n  Table.prototype._applyRowSelection = function (rowIdx, tableBodyRow, selected) {\n    var rowSelected = tableBodyRow.classList.contains(Table.MARKER_STYLE_CLASSES._SELECTED);\n    if (rowSelected !== selected) {\n      if (!selected) {\n        tableBodyRow.classList.remove(Table.MARKER_STYLE_CLASSES._SELECTED);\n      } else {\n        tableBodyRow.classList.add(Table.MARKER_STYLE_CLASSES._SELECTED);\n      }\n\n      // Set the draggable property on the row element if the dnd.drag.rows option is specified\n      var dragOption = this.options.dnd.drag;\n      if (dragOption && (dragOption === 'rows' || dragOption.rows)) {\n        this._getTableDndContext().setElementDraggable(tableBodyRow, selected);\n      }\n    }\n\n    // if selection was set then we want to override the default style precedence\n    if (selected) {\n      this._updateRowStateCellsClass(rowIdx, null, {\n        selected: true\n      });\n    } else {\n      this._updateRowStateCellsClass(rowIdx, null, { selected: false });\n    }\n  };\n\n  /**\n   * Applies or removes the selection state to the specified column.\n   * @param {number} index The column index.\n   * @param {boolean} selected True if the selection state should be applied, false if it should be removed.\n   * @private\n   */\n  Table.prototype._applyColumnSelection = function (columnIdx, selected) {\n    // Set the draggable property on the header element if the dnd.reorder.columns option is specified\n    var reorderOption = this.options.dnd.reorder;\n    if (reorderOption && reorderOption.columns === Table._OPTION_ENABLED) {\n      var headerColumn = this._getTableHeaderColumn(columnIdx);\n      this._getTableDndContext().setElementDraggable(headerColumn, selected);\n    }\n    this._setColumnState(columnIdx, selected);\n  };\n\n  /**\n   * Set the last row which was selected (chronologically)\n   * @param {number} rowIdx  row index\n   * @param {boolean} selected  whether it's selected\n   * @private\n   */\n  Table.prototype._setLastRowSelection = function (rowIdx, selected) {\n    if (!this._lastSelectedRowIdxArray) {\n      this._lastSelectedRowIdxArray = [];\n    }\n    var lastSelectedRowIdxArrayCount = this._lastSelectedRowIdxArray.length;\n    for (var i = 0; i < lastSelectedRowIdxArrayCount; i++) {\n      if (this._lastSelectedRowIdxArray[i] === rowIdx) {\n        this._lastSelectedRowIdxArray.splice(i, 1);\n        break;\n      }\n    }\n    if (selected) {\n      this._lastSelectedRowIdxArray.push(rowIdx);\n    }\n  };\n\n  /**\n   * Set the last column which was selected (chronologically)\n   * @param {number} columnIdx  column index\n   * @param {boolean} selected  whether it's selected\n   * @private\n   */\n  Table.prototype._setLastHeaderColumnSelection = function (columnIdx, selected) {\n    if (!this._lastSelectedColumnIdxArray) {\n      this._lastSelectedColumnIdxArray = [];\n    }\n    var lastSelectedColumnIdxArrayCount = this._lastSelectedColumnIdxArray.length;\n    for (var i = 0; i < lastSelectedColumnIdxArrayCount; i++) {\n      if (this._lastSelectedColumnIdxArray[i] === columnIdx) {\n        this._lastSelectedColumnIdxArray.splice(i, 1);\n        break;\n      }\n    }\n    if (selected) {\n      this._lastSelectedColumnIdxArray.push(columnIdx);\n    }\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._handleSelectionGesture = function (index, isRow, isMultiSelectGesture) {\n    var isSelect;\n    var selected = this.option('selected');\n    var rowKeySet = selected.row;\n    var columnKeySet = selected.column;\n    if (isRow) {\n      columnKeySet = columnKeySet.clear();\n      const row = this._getTableBodyRow(index);\n      if (\n        this._isRowSelectionEnabled() &&\n        row &&\n        row[Table._DATA_OJ_SELECTABLE] !== Table._CONST_OFF\n      ) {\n        var rowKey = this._getRowKeyForRowIdx(index);\n        var rowSelectionMode = this._getRowSelectionMode();\n        if (!rowKeySet.has(rowKey)) {\n          // handle multiple selection gesture\n          if (isMultiSelectGesture && rowSelectionMode === Table._OPTION_SELECTION_MODES._MULTIPLE) {\n            // add row to the existing selection\n            rowKeySet = rowKeySet.add([rowKey]);\n          } else {\n            // selection is now the new row key\n            rowKeySet = new ojkeyset.KeySetImpl([rowKey]);\n          }\n          isSelect = true;\n        } else if (this._isStickyLayoutEnabled()) {\n          // handle selection for non-alta themes as windows explorer rather than legacy logic in 'else' cases below\n          rowKeySet = isMultiSelectGesture ? rowKeySet.delete([rowKey]) : new ojkeyset.KeySetImpl([rowKey]);\n          isSelect = !isMultiSelectGesture;\n        } else if (\n          !isMultiSelectGesture &&\n          this._getSelectedRowIdxs().length > 1 &&\n          rowSelectionMode === Table._OPTION_SELECTION_MODES._MULTIPLE\n        ) {\n          // selection is now the new row key\n          rowKeySet = new ojkeyset.KeySetImpl([rowKey]);\n          isSelect = true;\n        } else {\n          // remove row from the existing selection\n          rowKeySet = rowKeySet.delete([rowKey]);\n          isSelect = false;\n        }\n      }\n    } else if (this._isColumnSelectionEnabled()) {\n      rowKeySet = rowKeySet.clear();\n      var columnSelectionMode = this._getColumnSelectionMode();\n      if (index > -1) {\n        var columnKey = this._getColumnKeyForColumnIdx(index);\n        if (!columnKeySet.has(columnKey)) {\n          // handle multiple selection gesture\n          if (\n            isMultiSelectGesture &&\n            columnSelectionMode === Table._OPTION_SELECTION_MODES._MULTIPLE\n          ) {\n            // add column to the existing selection\n            columnKeySet = columnKeySet.add([columnKey]);\n          } else {\n            // selection is now the new column key\n            columnKeySet = new ojkeyset.KeySetImpl([columnKey]);\n          }\n          isSelect = true;\n        } else if (this._isStickyLayoutEnabled()) {\n          // handle selection for non-alta themes as windows explorer rather than legacy logic in 'else' cases below\n          columnKeySet = isMultiSelectGesture\n            ? columnKeySet.delete([columnKey])\n            : new ojkeyset.KeySetImpl([columnKey]);\n          isSelect = !isMultiSelectGesture;\n        } else if (\n          !isMultiSelectGesture &&\n          this._getSelectedHeaderColumnIdxs().length > 1 &&\n          columnSelectionMode === Table._OPTION_SELECTION_MODES._MULTIPLE\n        ) {\n          // selection is now the new column key\n          columnKeySet = new ojkeyset.KeySetImpl([columnKey]);\n          isSelect = true;\n        } else {\n          // remove column from the existing selection\n          columnKeySet = columnKeySet.delete([columnKey]);\n          isSelect = false;\n        }\n      }\n    }\n    // only update selection if this gesture led to a new selection state\n    if (selected.row !== rowKeySet || selected.column !== columnKeySet) {\n      selected = { row: rowKeySet, column: columnKeySet };\n      if (this._isSelectionRequiredSatisfied(selected)) {\n        this._announceAccSelectionUpdate(isSelect);\n        this._setSelected(selected);\n      }\n    }\n  };\n\n  /**\n   * Updates the selection state to reflect the select all checkbox being toggled.\n   * @private\n   */\n  Table.prototype._handleSelectAllGesture = function () {\n    var selected = this.option('selected');\n    var rowKeySet = selected.row;\n    var columnKeySet = selected.column;\n    columnKeySet = columnKeySet.clear();\n    if (rowKeySet.isAddAll()) {\n      rowKeySet = new ojkeyset.KeySetImpl();\n    } else {\n      rowKeySet = new ojkeyset.AllKeySetImpl();\n    }\n    // only update selection if this gesture led to a new selection state\n    if (selected.row !== rowKeySet || selected.column !== columnKeySet) {\n      selected = { row: rowKeySet, column: columnKeySet };\n      if (this._isSelectionRequiredSatisfied(selected)) {\n        this._setSelected(selected);\n      }\n    }\n  };\n\n  /**\n   * Callback handler mouse move for selection.\n   * @param {Element} element\n   * @param {boolean=} isTouchAffordance true if this is from a touch affordance\n   * @private\n   */\n  Table.prototype._handleMouseEnterSelection = function (element, isTouchAffordance) {\n    // skip selection state updates if row selection is not enabled\n    if (!this._isRowSelectionEnabled()) {\n      return;\n    }\n    var rowIdx = this._getElementRowIdx(element);\n    if (this._mouseDownRowIdx != null && rowIdx != null && this._mouseDownRowIdx !== rowIdx) {\n      if (this._getRowSelectionMode() === Table._OPTION_SELECTION_MODES._MULTIPLE) {\n        this._selectRange(this._mouseDownRowIdx, rowIdx, true);\n      }\n      if (rowIdx < this._mouseDownRowIdx) {\n        this._moveTableBodyRowTouchSelectionAffordanceTop(rowIdx);\n      } else {\n        this._moveTableBodyRowTouchSelectionAffordanceBottom(rowIdx);\n      }\n    } else if (rowIdx != null && rowIdx === this._mouseDownRowIdx) {\n      if (isTouchAffordance) {\n        this._selectRange(rowIdx, rowIdx, true);\n        this._moveTableBodyRowTouchSelectionAffordanceTop(rowIdx);\n        this._moveTableBodyRowTouchSelectionAffordanceBottom(rowIdx);\n      } else {\n        this._clearSelectedRows();\n      }\n    }\n  };\n\n  /**\n   * Select range of rows or columns from start to end index\n   * @param {number} firstSelctedIndex the first selected index\n   * @param {number} lastSelectedIndex the last selected index\n   * @param {boolean} isRow whether this is a range of rows\n   * @private\n   */\n  Table.prototype._selectRange = function (firstSelectedIndex, lastSelectedIndex, isRow) {\n    var selected = this.option('selected');\n    var rowKeySet = selected.row;\n    var columnKeySet = selected.column;\n\n    var i;\n    if (isRow) {\n      columnKeySet = columnKeySet.clear();\n      if (this._isRowSelectionEnabled()) {\n        rowKeySet = rowKeySet.clear();\n\n        // selected rows should be added in the order that they are selected\n        if (firstSelectedIndex <= lastSelectedIndex) {\n          for (i = firstSelectedIndex; i <= lastSelectedIndex; i++) {\n            const key = this._getRowKeyForRowIdx(i);\n            const row = this._findRowElementByKey(key);\n            if (row && row[Table._DATA_OJ_SELECTABLE] !== Table._CONST_OFF) {\n              rowKeySet = rowKeySet.add([key]);\n            }\n          }\n        } else {\n          for (i = firstSelectedIndex; i >= lastSelectedIndex; i--) {\n            const key = this._getRowKeyForRowIdx(i);\n            const row = this._findRowElementByKey(key);\n            if (row && row[Table._DATA_OJ_SELECTABLE] !== Table._CONST_OFF) {\n              rowKeySet = rowKeySet.add([key]);\n            }\n          }\n        }\n        // save last selected row, so that selection can be continued using shift+arrow keys(up/down)\n        this._lastSelectedRowIdx = lastSelectedIndex;\n      }\n    } else {\n      rowKeySet = rowKeySet.clear();\n      if (this._isColumnSelectionEnabled()) {\n        columnKeySet = columnKeySet.clear();\n\n        // selected columns should be added in the order that they are selected\n        if (firstSelectedIndex <= lastSelectedIndex) {\n          for (i = firstSelectedIndex; i <= lastSelectedIndex; i++) {\n            columnKeySet = columnKeySet.add([this._getColumnKeyForColumnIdx(i)]);\n          }\n        } else {\n          for (i = firstSelectedIndex; i >= lastSelectedIndex; i--) {\n            columnKeySet = columnKeySet.add([this._getColumnKeyForColumnIdx(i)]);\n          }\n        }\n        // save last selected column, so that selection can be continued using shift+arrow keys(left/right)\n        this._lastSelectedHeaderIdx = lastSelectedIndex;\n      }\n    }\n    // only update selection if this gesture led to a new selection state\n    if (selected.row !== rowKeySet || selected.column !== columnKeySet) {\n      selected = { row: rowKeySet, column: columnKeySet };\n      if (this._isSelectionRequiredSatisfied(selected)) {\n        this._setSelected(selected);\n      }\n    }\n  };\n\n  /**\n   * Return whether the row is selected\n   * @param {number} rowIdx  row index\n   * @return {boolean} whether the row is selected\n   * @private\n   */\n  Table.prototype._getRowSelection = function (rowIdx) {\n    return this._getTableBodyRow(rowIdx).classList.contains(Table.MARKER_STYLE_CLASSES._SELECTED);\n  };\n\n  /**\n   * Return whether the column header at the index is selected\n   * @param {number} columnIdx  column index\n   * @return {boolean} whether it's selected\n   * @private\n   */\n  Table.prototype._getHeaderColumnSelection = function (columnIdx) {\n    var headerColumn = this._getTableHeaderColumn(columnIdx);\n    return headerColumn.classList.contains(Table.MARKER_STYLE_CLASSES._SELECTED);\n  };\n\n  /**\n   * Return whether the column footer at the index is selected\n   * @param {number} columnIdx  column index\n   * @return {boolean} whether it's selected\n   * @private\n   */\n  Table.prototype._getFooterColumnSelection = function (columnIdx) {\n    var footerColumn = this._getTableFooterCell(columnIdx);\n    return footerColumn.classList.contains(Table.MARKER_STYLE_CLASSES._SELECTED);\n  };\n\n  /**\n   * Return the selected row indexes\n   * @return {Array} array of row indexes\n   * @private\n   */\n  Table.prototype._getSelectedRowIdxs = function () {\n    // selected rows have the selected css class\n    return this._getRowIdxsForElementsWithStyleClass(\n      '.' + Table.CSS_CLASSES._TABLE_DATA_ROW_CLASS + '.' + Table.MARKER_STYLE_CLASSES._SELECTED\n    );\n  };\n\n  /**\n   * Return the selected column header indexes\n   * @return {Array} array of column header indexes\n   * @private\n   */\n  Table.prototype._getSelectedHeaderColumnIdxs = function () {\n    // selected column headers have the selected css class\n    return this._getColumnIdxsForElementsWithStyleClass(\n      '.' + Table.CSS_CLASSES._COLUMN_HEADER_CELL_CLASS + '.' + Table.MARKER_STYLE_CLASSES._SELECTED\n    );\n  };\n\n  /**\n   * Return the selected column footer indexes\n   * @return {Array} array of column footer indexes\n   * @private\n   */\n  Table.prototype._getSelectedFooterColumnIdxs = function () {\n    // selected column headers have the selected css class\n    return this._getColumnIdxsForElementsWithStyleClass(\n      '.' + Table.CSS_CLASSES._TABLE_FOOTER_CELL_CLASS + '.' + Table.MARKER_STYLE_CLASSES._SELECTED\n    );\n  };\n\n  /**\n   * Clear the selected rows\n   * @private\n   */\n  Table.prototype._clearSelectedRows = function () {\n    this._selectionAnchorIdx = null;\n    this._lastSelectedRowIdx = null;\n    var rowKeySet = this.option('selected.row');\n    var newRowKeySet = rowKeySet.clear();\n    if (newRowKeySet !== rowKeySet) {\n      var selected = { row: newRowKeySet, column: this.option('selected.column') };\n      this._setSelected(selected);\n    }\n  };\n\n  /**\n   * Clear entire selection state\n   * @private\n   */\n  Table.prototype._clearSelectionState = function () {\n    this._selectionAnchorIdx = null;\n    this._lastSelectedRowIdx = null;\n    this._lastSelectedHeaderIdx = null;\n    if (this._hasSelected()) {\n      var selected = { row: new ojkeyset.KeySetImpl(), column: new ojkeyset.KeySetImpl() };\n      this._setSelected(selected);\n    }\n  };\n\n  /**\n   * Listener applied to internal selector elements.\n   * @private\n   */\n  Table.prototype._selectedKeysChangedListener = function (event) {\n    if (event.detail.updatedFrom === 'internal') {\n      if (event.detail.value.isAddAll()) {\n        this._setSelected({ row: event.detail.value, column: new ojkeyset.KeySetImpl() }, false, true);\n      } else {\n        let rowSelectedKeySet = this.option('selected').row;\n        // header selector\n        if (event.target.rowKey == null) {\n          this._setSelected({ row: new ojkeyset.KeySetImpl(), column: new ojkeyset.KeySetImpl() }, false, true);\n          return;\n        }\n        if (rowSelectedKeySet.has(event.target.rowKey)) {\n          rowSelectedKeySet = rowSelectedKeySet.delete([event.target.rowKey]);\n        } else {\n          rowSelectedKeySet = rowSelectedKeySet.add([event.target.rowKey]);\n        }\n        let table = this._getTable();\n        let headerSelectorElement = table.getElementsByClassName(\n          Table.CSS_CLASSES._TABLE_HEADER_SELECTOR_CLASS\n        )[0];\n        if (headerSelectorElement) {\n          let keySetSize = rowSelectedKeySet.values\n            ? rowSelectedKeySet.values().size\n            : rowSelectedKeySet.deletedValues().size;\n          headerSelectorElement.indeterminate = keySetSize !== 0;\n        }\n        this._setSelected({ row: rowSelectedKeySet, column: new ojkeyset.KeySetImpl() }, false, true);\n      }\n    }\n  };\n\n  /**\n   * Set selector values\n   * @param {Object} selected the selected key set\n   * @private\n   */\n  Table.prototype._updateSelectors = function (selected) {\n    let table = this._getTable();\n    let headerSelectorElements = table.getElementsByClassName(\n      Table.CSS_CLASSES._TABLE_HEADER_SELECTOR_CLASS\n    );\n    if (headerSelectorElements.length > 0) {\n      headerSelectorElements[0].selectedKeys = selected;\n      let keySetSize = selected.values ? selected.values().size : selected.deletedValues().size;\n      headerSelectorElements[0].indeterminate = keySetSize !== 0;\n    }\n\n    let selectedSelectors = [];\n    // this relies on the inner dom structure and selected state markup of oj-selector - would be better\n    // to avoid this internal knowledge in the future if possible\n    let selectedSelectorSpans = table.querySelectorAll(`\n    .${Table.CSS_CLASSES._TABLE_DATA_ROW_SELECTOR_CLASS} >\n    .${Table.MARKER_STYLE_CLASSES._SELECTED}`);\n    for (let i = 0; i < selectedSelectorSpans.length; i++) {\n      selectedSelectors.push(selectedSelectorSpans[i].parentElement);\n    }\n    let selectors = Array.from(\n      table.getElementsByClassName(Table.CSS_CLASSES._TABLE_DATA_ROW_SELECTOR_CLASS)\n    );\n    for (let i = 0; i < selectors.length; i++) {\n      let selector = selectors[i];\n      let hasSelectedState = selectedSelectors.indexOf(selector) !== -1;\n      if (selected.has(selector.rowKey)) {\n        if (!hasSelectedState) {\n          selector.selectedKeys = new ojkeyset.KeySetImpl([selector.rowKey]);\n        }\n      } else if (hasSelectedState) {\n        selector.selectedKeys = new ojkeyset.KeySetImpl([]);\n      }\n    }\n  };\n\n  /**\n   * @ojcomponent oj.ojTable\n   * @augments oj.baseComponent\n   * @ojimportmembers oj.ojSharedContextMenu\n   * @since 0.6.0\n   * @ojshortdesc A table displays data items in a tabular format with highly interactive features.\n   * @ojrole application\n   * @ojtsimport {module: \"ojdataprovider\", type: \"AMD\", imported: [\"DataProvider, Item\"]}\n   * @ojtsimport {module: \"ojkeyset\", type: \"AMD\", imported: [\"KeySet\"]}\n   * @ojtsimport {module: \"ojcommontypes\", type: \"AMD\", importName: [\"ojcommontypes\"]}\n   * @ojsignature [{\n   *                target: \"Type\",\n   *                value: \"class ojTable<K, D> extends baseComponent<ojTableSettableProperties<K,D>>\",\n   *                genericParameters: [{\"name\": \"K\", \"description\": \"Type of key of the dataprovider\"}, {\"name\": \"D\", \"description\": \"Type of data from the dataprovider\"}]\n   *               },\n   *               {\n   *                target: \"Type\",\n   *                value: \"ojTableSettableProperties<K,D> extends baseComponentSettableProperties\",\n   *                for: \"SettableProperties\"\n   *               }\n   *              ]\n   *\n   * @ojpropertylayout {propertyGroup: \"common\", items: [\"selectionMode.row\", \"selectionMode.column\", \"display\", \"horizontalGridVisible\", \"verticalGridVisible\"]}\n   * @ojpropertylayout {propertyGroup: \"data\", items: [\"data\", \"columns\", \"selected.row\", \"selected.column\", \"firstSelectedRow\"]}\n   * @ojvbdefaultcolumns 12\n   * @ojvbmincolumns 2\n   *\n   * @ojoracleicon 'oj-ux-ico-tables-basic'\n   * @ojuxspecs ['table']\n   *\n   * @classdesc\n   * <h3 id=\"tableOverview-section\">\n   *   JET Table\n   *   <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#tableOverview-section\"></a>\n   * </h3>\n   * <p>Description:</p>\n   * <p>A JET Table enhances a HTML table element into one that supports all\n   * the features in JET Table.</p>\n   *\n   * <pre class=\"prettyprint\">\n   * <code>\n   * &lt;oj-table\n   *   aria-label=\"Departments Table\"\n   *   data='{{datasource}}'\n   *   columns='[{\"headerText\": \"Department Id\", \"field\": \"DepartmentId\"},\n   *             {\"headerText\": \"Department Name\", \"field\": \"DepartmentName\"},\n   *             {\"headerText\": \"Location Id\", \"field\": \"LocationId\"},\n   *             {\"headerText\": \"Manager Id\", \"field\": \"ManagerId\"}]' &gt;\n   * &lt;/oj-table>\n   * </code>\n   * </pre>\n   *\n   * <h3 id=\"touch-section\">\n   *   Touch End User Information\n   *   <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#touch-section\"></a>\n   * </h3>\n   *\n   * {@ojinclude \"name\":\"touchDoc\"}\n   *\n   * <h3 id=\"keyboard-section\">\n   *   Keyboard End User Information\n   *   <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#keyboard-section\"></a>\n   * </h3>\n   *\n   * {@ojinclude \"name\":\"keyboardDoc\"}\n   *\n   * <h3 id=\"a11y-section\">\n   *   Accessibility\n   *   <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#a11y-section\"></a>\n   * </h3>\n   *\n   * <p>Developers should always either specify the <code class=\"prettyprint\">aria-label</code> attribute or use other alternatives for the table element to conform to accessibility guidelines.</p>\n   * <p>Nesting collection components such as ListView, Table, TreeView, and Table inside of Table is not supported.</p>\n   *\n   * <p>To facilitate drag and drop including row reordering using only keyboard, application must ensure that either to expose the functionality using context menu, and/or\n   * allow users to perform the functionality with the appropriate keystroke.  You can find examples of how this can be done in the cookbook demos.</p>\n   * <p>Hiding Column headers is not supported by table to avoid accessibility issues.</p>\n   * <h4>Custom Colours</h4>\n   * <p>Using colors, including background and text colors, is not accessible if it is the only way information is conveyed.\n   * Low vision users may not be able to see the different colors, and in high contrast mode the colors are removed.\n   * The Redwood approved way to show status is to use badge.</p>\n   *\n   * <h3 id=\"perf-section\">\n   *   Performance\n   *   <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#perf-section\"></a>\n   * </h3>\n   *\n   * <h4>Data Set Size</h4>\n   * <p>As a rule of thumb, it's recommended that applications limit the amount of data displayed in a Table. Displaying a large\n   * number of items in a Table makes it hard for users to find what they are looking for, and affects the rendering performance\n   * as well. If displaying a large number of items is necessary, consider using a search control with the Table. This will allow\n   * the user to filter data and display only the rows desired. Also consider setting <code class=\"prettyprint\">scrollPolicy</code>\n   * to 'loadMoreOnScroll' to enable high-water mark scrolling to reduce the number of items to display initially.</p>\n   *\n   * <h4>Cell Content</h4>\n   * <p>The Table allows developers to specify arbitrary content inside its cells. In order to minimize any negative effect on\n   * performance, you should avoid putting a large number of heavy-weight components inside a cell because as you add more complexity\n   * to the structure, the effect will be multiplied because there can be many items in the Table.</p>\n   * <p><code class=\"prettyprint\">label-hint/label-edge</code> are expected as attributes when <code class=\"prettyprint\">oj-input-text</code> is used for accessibility purpose in <code class=\"prettyprint\">oj-form-layout</code>.\n   * Since <code class=\"prettyprint\">oj-table</code> itself handles accessibility for cell content, user does not need to add attributes <code class=\"prettyprint\">label-hint/label-edge</code> when <code class=\"prettyprint\">oj-input-text</code> is used.\n   * But for read-only texts, it is a best practice to avoid using <code class=\"prettyprint\">oj-input-text</code>, prefer <code class=\"prettyprint\">oj-bind-text</code> or plain html instead.</p>\n   *\n   * <h4>Layout Attribute</h4>\n   * <p>The Table's <code class=\"prettyprint\">layout</code> attribute can have a significant effect on rendering performance. When set to\n   * <code class=\"prettyprint\">contents</code> (the default value), the Table's initial column widths are determined by the size of its rendered\n   * contents. Although this ensures column widths are appropriately sized in most cases, this convenience can lead to long initial render times\n   * depending on the number of rows and columns. When set to <code class=\"prettyprint\">fixed</code>, the Table's column widths are determined\n   * using the specified <code class=\"prettyprint\">columns[].weight</code> values. This is much more performant when rendering large numbers of\n   * columns and rows in the Table.\n   *\n   * <h3 id=\"sizing-section\">\n   *   Sizing Behavior\n   *   <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#sizing-section\"></a>\n   * </h3>\n   *\n   * <h4>Flex Layouts</h4>\n   * <p>By default, the Table does not support being rendered within flex layouts that specify a flex-basis value that is dependent on content sizes.\n   * To ensure that the Table renders correctly, applications should specify a real flex-basis value on any flex layouts containing a Table. If that\n   * is not possible, applications may choose to use the <code class=\"prettyprint\">oj-table-stretch</code> style class on the Table. This should\n   * enable the Table to render correctly within any flex layout, but requires that the Table's outer size is set to a non-auto value in the\n   * non-flex direction. For example, for a horizontal flex layout, the application must specify a height on the Table (400px, 50vh, etc.). For a\n   * vertical flex-layout, the application must specify a width on the Table (400px, 100%, etc.). A max-height or max-width is not sufficient.</p>\n   *\n   * <h3 id=\"animation-section\">\n   *   Animation\n   *   <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#animation-section\"></a>\n   * </h3>\n   *\n   * {@ojinclude \"name\":\"animationDoc\"}\n   *\n   * <h3 id=\"background-section\">\n   *   Background Color\n   *   <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#background-section\"></a>\n   * </h3>\n   *\n   * <p>Depending on the Theme, the Table may have a solid default background color. If a different background color is desired, it can be changed by adding a background color class on the Table.\n   * See table background color demo for examples.</p>\n   *\n   * <h3 id=\"data-attributes-section\">\n   *   Custom Data Attributes\n   *   <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#data-attributes-section\"></a>\n   * </h3>\n   *\n   * {@ojinclude \"name\":\"customAttrDoc\"}\n   *\n   */\n\n  Table.prototype.version = '1.0.0';\n\n  Table.prototype.defaultElement = '<table>';\n\n  Table.prototype.widgetEventPrefix = 'oj';\n\n  Table.prototype.options = {\n    /**\n     * Accessibility attributes.\n     *\n     * @expose\n     * @name accessibility\n     * @public\n     * @instance\n     * @memberof oj.ojTable\n     * @type {Object|null}\n     *\n     * @example <caption>Initialize the Table, overriding accessibility value:</caption>\n     * &lt;!-- Using dot notation -->\n     * &lt;oj-table accessibility.row-header='headerColumnId'>&lt;/oj-table>\n     *\n     * &lt;!-- Using JSON notation -->\n     * &lt;oj-table accessibility='{\"rowHeader\":\"headerColumnId\"}'>&lt;/oj-table>\n     *\n     * @example <caption>Get or set the <code class=\"prettyprint\">accessibility</code> property after initialization:</caption>\n     * // Get one\n     * var value = myTable.accessibility.rowHeader;\n     *\n     * // Set one. Always use the setProperty API for\n     * // subproperties rather than setting a subproperty directly.\n     * myTable.setProperty('accessibility.rowHeader', 'headerColumnId');\n     *\n     * // Get all\n     * var values = myTable.accessibility;\n     *\n     * // Set all.  Must list every accessibility key, as those not listed are lost.\n     * myTable.accessibility = {\n     *     rowHeader: 'headerColumnId'\n     * };\n     */\n    accessibility: null,\n\n    /**\n     * Specifies whether to show or hide add new row when addRowTemplate or addRowCellTemplate is present.\n     *\n     * @expose\n     * @public\n     * @instance\n     * @memberof! oj.ojTable\n     * @ojshortdesc Specifies whether to show or hide add new row when addRowTemplate or addRowCellTemplate is present.\n     * @type {string}\n     * @ojvalue {string} \"top\" Display add new row at the top.\n     * @ojvalue {string} \"hidden\" Hide add new row.\n     * @default \"top\"\n     * @ojunsupportedthemes [\"Alta\"]\n     *\n     * @example <caption>Initialize the Table with the <code class=\"prettyprint\">add-row-display</code> attribute specified:</caption>\n     * &lt;oj-table add-row-display='hidden'>&lt;/oj-table>\n     *\n     * @example <caption>Get or set the <code class=\"prettyprint\">addRowDisplay</code> property after initialization:</caption>\n     * // getter\n     * var addRowDisplayValue = myTable.addRowDisplay;\n     *\n     * // setter\n     * myTable.addRowDisplay = 'top';\n     */\n    addRowDisplay: 'top',\n\n    /**\n     * The column ids to be used as the row headers by screen readers. This can be a string if there is only one\n     * column id, or an array of strings if multiple column ids are desired.\n     *\n     * <p>This is required by screen readers. By default the first column\n     * will be taken as the row header.</p>\n     * <p>See the <a href=\"#accessibility\">accessibility</a> attribute for usage examples.</p>\n     *\n     * @expose\n     * @name accessibility.rowHeader\n     * @ojshortdesc Specifies the column ids to be used as the row headers by screen readers. See the Help documentation for more information.\n     * @memberof! oj.ojTable\n     * @instance\n     * @public\n     * @type {string | Array.<string>}\n     */\n    /**\n     * Triggered when the default animation of a particular action is about to start.  The default animation can be cancelled by calling <code class=\"prettyprint\">event.preventDefault</code>.\n     * If the event listener calls <code class=\"prettyprint\">event.preventDefault</code> to cancel the default animation, it must call the <code class=\"prettyprint\">event.detail.endCallback</code> function when it finishes its own animation handling.\n     * Row animations will only be triggered for rows in the current viewport and an event will be triggered for each cell in the animated row.\n     * @ojdeprecated {since: \"12.1.0\", description: \"This web component no longer supports this event.\"}\n     *\n     * @expose\n     * @event\n     * @memberof oj.ojTable\n     * @ojshortdesc Triggered when a default animation is about to start.\n     * @instance\n     * @ojbubbles\n     * @ojcancelable\n     * @property {\"add\"|\"remove\"|\"update\"} action The action that triggers the animation.<br><br>See <a href=\"#animation-section\">animation</a> section for a list of actions.\n     * @property {Element} element The target of animation. For row animations this will be the cell contents wrapped in a div.\n     * @property {function():void} endCallback If the event listener calls event.preventDefault to cancel the default animation, it must call the endCallback function when it finishes its own animation handling and when any custom animation ends.\n     */\n    animateStart: null,\n\n    /**\n     * Triggered when the default animation of a particular action has ended.  Note this event will not be triggered if application cancelled the default animation on animateStart.\n     * Row animations will only be triggered for rows in the current viewport and an event will be triggered for each cell in the animated row.\n     * @ojdeprecated {since: \"12.1.0\", description: \"This web component no longer supports this event.\"}\n     *\n     * @expose\n     * @event\n     * @memberof oj.ojTable\n     * @ojshortdesc Triggered when a default animation has ended.\n     * @instance\n     * @ojbubbles\n     * @ojcancelable\n     * @property {\"add\"|\"remove\"|\"update\"} action The action that triggered the animation.<br><br>See <a href=\"#animation-section\">animation</a> section for a list of actions.\n     * @property {Element} element The target of animation. For row animations this will be the cell contents wrapped in an HTML div element.\n     */\n    animateEnd: null,\n\n    /**\n     * Table's current row can be on index and/or key value, when both are specified, the index is used as a hint.\n     * @typedef {Object} oj.ojTable.CurrentRow\n     * @ojsignature [{target:\"Type\", value:\"{rowIndex: number, rowKey?: K}|{rowIndex?: number, rowKey: K}\"},\n     *               {target:\"Type\", value:\"<K>\", for: \"genericTypeParameters\"}]\n     */\n\n    /**\n     * An alias for the current context when referenced inside the cell template. This can be especially useful\n     * if oj-bind-for-each element is used inside the cell template since it has its own scope of data access.\n     *\n     * @ojshortdesc An alias for the '$current' context variable passed to the content of the cell template.\n     *\n     * @expose\n     * @public\n     * @instance\n     * @memberof! oj.ojTable\n     * @type {string}\n     * @default ''\n     * @ojdeprecated {since: '6.2.0', description: 'Set the alias directly on the template element using the data-oj-as attribute instead.'}\n     *\n     * @example <caption>Initialize the Table with the <code class=\"prettyprint\">as</code> attribute specified:</caption>\n     * &lt;oj-table as='cell' columns='[{\"headerText\": \"Department Id\",\n     *                                   \"field\": \"DepartmentId\",\n     *                                   \"template\": \"cellTemplate\"}]'>\n     *   &lt;template slot='cellTemplate'>\n     *     &lt;p>&lt;oj-bind-text value='[[cell.data.name]]'>&lt;/oj-bind-text>&lt;/p>\n     *   &lt;/template>\n     * &lt;/oj-table>\n     */\n    as: '',\n\n    /**\n     * The row that currently has keyboard focus.  Can be an index and/or key value.\n     * When both are specified, the index is used as a hint.\n     * Returns the current row or null if there is none.\n     * @expose\n     * @public\n     * @instance\n     * @memberof! oj.ojTable\n     * @ojshortdesc Specifies the row that currently has keyboard focus. See the Help documentation for more information.\n     * @type {Object}\n     * @ojsignature {target: \"Type\", value: \"oj.ojTable.CurrentRow<K> | null\"}\n     * @default null\n     * @ojwriteback\n     *\n     * @example <caption>Initialize the Table with the <code class=\"prettyprint\">current-row</code> attribute specified:</caption>\n     * &lt;oj-table current-row='{\"rowIndex\": 1}'>&lt;/oj-table>\n     *\n     * @example <caption>Get or set the <code class=\"prettyprint\">currentRow</code> property after initialization:</caption>\n     * // getter\n     * var value = myTable.currentRow;\n     *\n     * // setter\n     * myTable.currentRow = {rowKey: '123'};\n     */\n    currentRow: null,\n\n    /**\n     * The data to bind to the element.\n     * <p>\n     * Must be of type DataProvider {@link DataProvider}\n     * or type TableDataSource {@link TableDataSource}\n     * @expose\n     * @public\n     * @instance\n     * @memberof! oj.ojTable\n     * @ojshortdesc Specifies the data for the table. See the Help documentation for more information.\n     * @type {Object|null}\n     * @ojsignature [{target: \"Type\", value: \"DataProvider<K, D>|null\"},\n     *               {target: \"Type\", value: \"DataProvider|TableDataSource|null\", consumedBy:\"js\"}]\n     * @default null\n     * @ojwebelementstatus {type: \"unsupported\", since: \"13.0.0\",\n     *   description: \"Data sets from a DataProvider cannot be sent to WebDriverJS; use ViewModels or page variables instead.\"}\n     *\n     * @example <caption>Initialize the Table with the <code class=\"prettyprint\">data</code> attribute specified:</caption>\n     * &lt;oj-table data='{{dataProvider}}'>&lt;/oj-table>\n     *\n     * @example <caption>Get or set the <code class=\"prettyprint\">data</code> property after initialization:</caption>\n     * // getter\n     * var dataProvider = myTable.data;\n     *\n     * // setter\n     * myTable.data = dataProvider;\n     */\n    data: null,\n\n    /**\n     * Whether to display table in list or grid mode. Setting a value of grid\n     * will cause the table to display in grid mode.\n     *\n     * @expose\n     * @public\n     * @instance\n     * @memberof! oj.ojTable\n     * @ojshortdesc Specifies whether to display this table in list or grid mode. See the Help documentation for more information.\n     * @type {string}\n     * @ojvalue {string} \"list\" Display table in list mode.\n     * @ojvalue {string} \"grid\" Display table in grid mode. This is a more compact look than list mode.\n     * @default \"list\"\n     *\n     * @example <caption>Initialize the Table with the <code class=\"prettyprint\">display</code> attribute specified:</caption>\n     * &lt;oj-table display='grid'>&lt;/oj-table>\n     *\n     * @example <caption>Get or set the <code class=\"prettyprint\">display</code> property after initialization:</caption>\n     * // getter\n     * var displayValue = myTable.display;\n     *\n     * // setter\n     * myTable.display = 'grid';\n     */\n    display: 'list',\n\n    /**\n     * Enable drag and drop functionality.<br><br>\n     * JET provides support for HTML5 Drag and Drop events.  Please refer to {@link https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_and_drop third party documentation}\n     * on HTML5 Drag and Drop to learn how to use it.\n     *\n     * @type {Object}\n     * @expose\n     * @instance\n     * @memberof! oj.ojTable\n     * @ojshortdesc Specifies drag and drop features. See the Help documentation for more information.\n     *\n     * @example <caption>Initialize the table with some dnd functionality:</caption>\n     * &lt;!-- Using dot notation -->\n     * &lt;oj-table dnd.reorder.columns='enabled' dnd.drag.rows.dataTypes='application/ojtablerows+json'>&lt;/oj-table>\n     *\n     * &lt;!-- Using JSON notation -->\n     * &lt;oj-table dnd='{\"reorder\":{\"columns\":\"enabled\"}, \"drag\":{\"rows\":{\"dataTypes\":\"application/ojtablerows+json\"}}}'>&lt;/oj-table>\n     *\n     * @example <caption>Get or set the <code class=\"prettyprint\">dnd</code> property after initialization:</caption>\n     * // Get one\n     * var value = myTable.dnd.reorder;\n     *\n     * // Set one, leaving the others intact. Use the setProperty API for\n     * // subproperties so that a property change event is fired.\n     * myTable.setProperty('dnd.reorder', {\"columns\":\"enabled\"});\n     *\n     * // Get all\n     * var values = myTable.dnd;\n     *\n     * // Set all.  Must list every dnd functionality, as those not listed are lost.\n     * myTable.dnd = {\n     *     reorder: {\"columns\":\"enabled\"},\n     *     drag: {\"rows\":{\"dataTypes\":\"application/ojtablerows+json\"}}\n     * };\n     */\n    dnd: {\n      /**\n       * An object that describes drag functionality.\n       *\n       * <p>See the <a href=\"#dnd\">dnd</a> attribute for usage examples.\n       *\n       * @expose\n       * @name dnd.drag\n       * @ojshortdesc An object that describes drag functionality.\n       * @memberof! oj.ojTable\n       * @instance\n       * @type {Object}\n       * @ojsignature {target:\"Type\", value:\"?\"}\n       * @default null\n       */\n      drag: null,\n\n      /**\n       * @typedef {object} oj.ojTable.DragRowContext Context for table DnD on Rows\n       * @property {Array<Object>} rows An array of objects, with each object representing the data of one selected row in the structure below.\n       * @property {any} rows.data The raw row data.\n       * @property {number} rows.index The index for the row.\n       * @property {any} rows.key The key value for the row.\n       * @ojsignature [{target:\"Type\", value:\"<K,D>\", for:\"genericTypeParameters\"},\n       *               {target:\"Type\", value:\"D\", for:\"rows.data\", jsdocOverride:true},\n       *               {target:\"Type\", value:\"K\", for:\"rows.key\", jsdocOverride:true}]\n       */\n      /**\n       * If this object is specified, the table will initiate drag operation when the user drags on selected rows.\n       *\n       * <p>See the <a href=\"#dnd\">dnd</a> attribute for usage examples.\n       *\n       * @property {string | Array.<string>} [dataTypes] The MIME types to use for the dragged data in the dataTransfer object.  This can be a string if there is only one\n       * type, or an array of strings if multiple types are needed.<br><br>\n       * For example, if selected rows of employee data are being dragged, dataTypes could be \"application/employees+json\". Drop targets can examine the data types and decide\n       * whether to accept the data. A text input may only accept \"text\" data type, while a chart for displaying employee data may be configured to accept the \"application/employees+json\" type.<br><br>\n       * For each type in the array, dataTransfer.setData will be called with the specified type and the JSON version of the selected rows data as the value. The selected rows data\n       * is an array of objects, with each object representing one selected row in the format returned by TableDataSource.get().<br><br>\n       * This property is required unless the application calls setData itself in a dragStart callback function.\n       * @property {function(DragEvent, oj.ojTable.DragRowContext<K,D>):void} [dragStart] A callback function that receives the \"dragstart\" event and context information as its arguments.<br><br>\n       * <code class=\"prettyprint\">function(event, context)</code><br><br>\n       * Parameters:<br><br>\n       * <code class=\"prettyprint\">event</code>: The DOM event object<br><br>\n       * <code class=\"prettyprint\">context</code>: {@link oj.ojTable.DragRowContext} object with the following properties:<br>\n       * <ul>\n       *   <li><code class=\"prettyprint\">rows</code>: An array of objects, with each object representing the data of one selected row in the structure below:\n       *     <table>\n       *     <tbody>\n       *     <tr><td><b>data</b></td><td>The raw row data</td></tr>\n       *     <tr><td><b>index</b></td><td>The index for the row</td></tr>\n       *     <tr><td><b>key</b></td><td>The key value for the row</td></tr>\n       *     </tbody>\n       *     </table>\n       *   </li>\n       * </ul><br><br>\n       * This function can set its own data and drag image as needed. If dataTypes is specified, event.dataTransfer is already populated with the default data when this function is invoked.\n       * If dataTypes is not specified, this function must call event.dataTransfer.setData to set the data or else the drag operation will be cancelled.  In either case, the drag image is\n       * set to an image of the selected rows visible on the table.\n       * @property {function(DragEvent):void} [drag] A callback function that receives the \"drag\" event as its argument.<br><br>\n       * <code class=\"prettyprint\">function(event)</code><br><br>\n       * Parameters:<br><br>\n       * <code class=\"prettyprint\">event</code>: The DOM event object\n       * @property {function(DragEvent):void} [dragEnd] A callback function that receives the \"dragend\" event as its argument.<br><br>\n       * <code class=\"prettyprint\">function(event)</code><br><br>\n       * Parameters:<br><br>\n       * <code class=\"prettyprint\">event</code>: The DOM event object<br>\n       *\n       * @expose\n       * @name dnd.drag.rows\n       * @ojshortdesc An object that describes drag functionality for a selected set of rows. See the Help documentation for more information.\n       * @memberof! oj.ojTable\n       * @instance\n       * @type {Object}\n       * @ojsignature {target:\"Type\", value:\"?\"}\n       */\n      /**\n       * An object that describes drop functionality.\n       *\n       * <p>See the <a href=\"#dnd\">dnd</a> attribute for usage examples.\n       *\n       * @expose\n       * @name dnd.drop\n       * @ojshortdesc An object that describes drop functionality.\n       * @memberof! oj.ojTable\n       * @instance\n       * @type {Object}\n       * @ojsignature {target:\"Type\", value:\"?\"}\n       * @default null\n       */\n      drop: null,\n\n      /**\n       * @typedef {object} oj.ojTable.DropColumnContext\n       * @property {number} columnIndex The index for the column.\n       */\n      /**\n       * An object that specifies callback functions to handle dropping columns<br><br>\n       * For all callback functions, the following arguments will be passed:<br><br>\n       * <code class=\"prettyprint\">event</code>: The DOM event object<br><br>\n       * <code class=\"prettyprint\">context</code>: Context object with the following properties:\n       * <ul>\n       *   <li><code class=\"prettyprint\">columnIndex</code>: The index of the column being dropped on</li>\n       * </ul>\n       *\n       * <p>See the <a href=\"#dnd\">dnd</a> attribute for usage examples.\n       *\n       * @property {string | Array.<string>} dataTypes  A data type or an array of data types this element can accept.<br><br>\n       * This property is required unless dragEnter, dragOver, and drop callback functions are specified to handle the corresponding events.\n       * @property {function(DragEvent, oj.ojTable.DropColumnContext):void} [dragEnter] A callback function that receives the \"dragenter\" event and context information as its arguments.<br><br>\n       * <code class=\"prettyprint\">function(event, context)</code><br><br>\n       * This function should call <code class=\"prettyprint\">event.preventDefault()</code> to indicate the dragged data can be accepted.\n       * Calling <code class=\"prettyprint\">event.preventDefault()</code> is required by HTML5 Drag and Drop to indicate acceptance of data.<br><br>\n       * If dataTypes is specified, it will be matched against the drag data types to determine if the data is acceptable.  If there is a match, JET will call\n       * <code class=\"prettyprint\">event.preventDefault()</code> to indicate that the data can be accepted.\n       * @property {function(DragEvent, oj.ojTable.DropColumnContext):void} [dragOver] A callback function that receives the \"dragover\" event and context information as its arguments.<br><br>\n       * <code class=\"prettyprint\">function(event, context)</code><br><br>\n       * Similar to dragEnter, this function should call <code class=\"prettyprint\">event.preventDefault()</code> to indicate the dragged data can be accepted.  If dataTypes is specified,\n       * it will be matched against the drag data types to determine if the data is acceptable.\n       * @property {function(DragEvent, oj.ojTable.DropColumnContext):void} [dragLeave] A callback function that receives the \"dragleave\" event and context information as its arguments.<br><br>\n       * <code class=\"prettyprint\">function(event, context)</code>\n       * @property {function(DragEvent, oj.ojTable.DropColumnContext):void} drop A required callback function that receives the \"drop\" event and context information as its arguments.<br><br>\n       * <code class=\"prettyprint\">function(event, context)</code><br><br>\n       * This function should call <code class=\"prettyprint\">event.preventDefault()</code> to indicate the dragged data is accepted.\n       *\n       * @expose\n       * @name dnd.drop.columns\n       * @ojshortdesc An object that describes drop functionality for a selected set of columns. See the Help documentation for more information.\n       * @memberof! oj.ojTable\n       * @instance\n       * @type {Object}\n       * @ojsignature {target:\"Type\", value:\"?\"}\n       */\n      /**\n       * @typedef {object} oj.ojTable.DropRowContext\n       * @property {number} rowIndex The index for the row.\n       */\n      /**\n       * An object that specifies callback functions to handle dropping rows<br><br>\n       * For all callback functions, the following arguments will be passed:<br><br>\n       * <code class=\"prettyprint\">event</code>: The DOM event object<br><br>\n       * <code class=\"prettyprint\">context</code>: Context object with the following properties:\n       * <ul>\n       *   <li><code class=\"prettyprint\">rowIndex</code>: The index of the row being dropped on</li>\n       * </ul>\n       *\n       * <p>See the <a href=\"#dnd\">dnd</a> attribute for usage examples.\n       *\n       * @property {string | Array.<string>} dataTypes  A data type or an array of data types this element can accept.<br><br>\n       * This property is required unless dragEnter, dragOver, and drop callback functions are specified to handle the corresponding events.\n       * @property {function(DragEvent, oj.ojTable.DropRowContext):void} [dragEnter] A callback function that receives the \"dragenter\" event and context information as its arguments.<br><br>\n       * <code class=\"prettyprint\">function(event, context)</code><br><br>\n       * This function should call <code class=\"prettyprint\">event.preventDefault()</code> to indicate the dragged data can be accepted.\n       * Calling <code class=\"prettyprint\">event.preventDefault()</code> is required by HTML5 Drag and Drop to indicate acceptance of data.<br><br>\n       * If dataTypes is specified, it will be matched against the drag data types to determine if the data is acceptable.  If there is a match, JET will call\n       * <code class=\"prettyprint\">event.preventDefault()</code> to indicate that the data can be accepted.\n       * @property {function(DragEvent, oj.ojTable.DropRowContext):void} [dragOver] A callback function that receives the \"dragover\" event and context information as its arguments.<br><br>\n       * <code class=\"prettyprint\">function(event, context)</code><br><br>\n       * Similar to dragEnter, this function should call <code class=\"prettyprint\">event.preventDefault()</code> to indicate the dragged data can be accepted.  If dataTypes is specified,\n       * it will be matched against the drag data types to determine if the data is acceptable.\n       * @property {function(DragEvent, oj.ojTable.DropRowContext):void} [dragLeave] A callback function that receives the \"dragleave\" event and context information as its arguments.<br><br>\n       * <code class=\"prettyprint\">function(event, context)</code>\n       * @property {function(DragEvent, oj.ojTable.DropRowContext):void} drop A required callback function that receives the \"drop\" event and context information as its arguments.<br><br>\n       * <code class=\"prettyprint\">function(event, context)</code><br><br>\n       * This function should call <code class=\"prettyprint\">event.preventDefault()</code> to indicate the dragged data is accepted.<br><br>\n       * If the application needs to look at the data for the row being dropped on, it can use the getDataForVisibleRow method.\n       *\n       * @expose\n       * @name dnd.drop.rows\n       * @ojshortdesc An object that describes drop functionality for a selected set of rows. See the Help documentation for more information.\n       * @memberof! oj.ojTable\n       * @instance\n       * @type {Object}\n       * @ojsignature {target:\"Type\", value:\"?\"}\n       */\n      /**\n       * An object that describes reorder functionality.\n       *\n       * <p>See the <a href=\"#dnd\">dnd</a> attribute for usage examples.\n       *\n       * @expose\n       * @name dnd.reorder\n       * @ojshortdesc An object that describes reorder functionality.\n       * @memberof! oj.ojTable\n       * @instance\n       * @type {Object}\n       * @ojsignature {target:\"Type\", value:\"?\"}\n       */\n      reorder: {\n        // in general it does not seem great that any rowTemplate, rowRenderer, and addRowTemplate logic shouldn't be dynamic\n        // and respond to dnd column reorder operations... the doc below concerning this is just to make it clear HOW things\n        // work today - at this point this is not something that can change without potentially breaking every single row-based\n        // content definition existing applications may already be using combined with the Table's internal column reordering...\n\n        /**\n         * Enable or disable reordering the columns within the same table using drag and drop.<br><br>\n         * Re-ordering is supported one column at a time. In addition, re-ordering will not re-order\n         * any cells which have the colspan attribute with value > 1. Such cells will need to be re-ordered manually by listening to\n         * the property change event on the columns property.<br><br>\n         * If using a rowTemplate, rowRenderer, or addRowTemplate to configure the display of rows, the Table will handle\n         * any change in column reordering due to a dnd operation internally. Any application logic behind rowTemplate,\n         * rowRenderer, or addRowTemplate definitions should not dynamically respond to 'columns' change notifications pushed\n         * due to dnd reorder operations. Once an application or an external source updates the Table's 'columns' attribute\n         * though, the Table will no longer honor any previous user-performed dnd reorder operations, and any relevant changes\n         * in logic needed for the rowTemplate, rowRenderer, or addRowTemplate definitions must be handled by the application.<br><br>\n         *\n         * <p>See the <a href=\"#dnd\">dnd</a> attribute for usage examples.\n         *\n         * @expose\n         * @name dnd.reorder.columns\n         * @ojshortdesc An object that describes reorder functionality for a selected column. See the Help documentation for more information.\n         * @memberof! oj.ojTable\n         * @instance\n         * @type {string}\n         * @ojvalue {string} 'enabled' Enable column reordering.\n         * @ojvalue {string} 'disabled' Disable column reordering.\n         * @default \"disabled\"\n         */\n        columns: 'disabled'\n      }\n    },\n\n    /**\n     * Determine if the table is read-only or editable. Use 'none' if the table is strictly read-only and will be a single Tab stop on the page.\n     * Use 'rowEdit' if you want single row at a time editability. The table will initially render with all rows in read-only mode. Pressing Enter/F2 or double click will make the current row editable and pressing Tab navigates to the next cell. Pressing ESC/F2 while in this mode will switch the table back to all rows in read-only mode and will be a single Tab stop the page.\n     *\n     * @expose\n     * @memberof! oj.ojTable\n     * @ojshortdesc Specifies if the table is read-only or editable. See the Help documentation for more information.\n     * @instance\n     * @type {string}\n     * @ojvalue {string} \"none\" The table is read-only and is a single Tab stop.\n     * @ojvalue {string} \"rowEdit\" The table has single row at a time editability and the cells within the editable row are tabbable.\n     * @default \"none\"\n     *\n     * @example <caption>Initialize the Table with the <code class=\"prettyprint\">edit-mode</code> attribute specified:</caption>\n     * &lt;oj-table edit-mode='rowEdit'>&lt;/oj-table>\n     *\n     * @example <caption>Get or set the <code class=\"prettyprint\">editMode</code> property after initialization:</caption>\n     * // getter\n     * var value = myTable.editMode;\n     *\n     * // setter\n     * myTable.editMode = 'rowEdit';\n     */\n    editMode: 'none',\n\n    /**\n     * Table's current edit row can be on index and/or key value, when both are specified, the index is used as a hint.\n     * @typedef {Object} oj.ojTable.EditRow\n     * @ojsignature [{target:\"Type\", value:\"{rowIndex: number, rowKey?: K}|{rowIndex?: number, rowKey: K}\"},\n     *               {target:\"Type\", value:\"<K>\", for: \"genericTypeParameters\"}]\n     */\n\n    /**\n     * The information about the row that is currently being edited.  The value of this property contains:\n     * <ul>\n     * <li>rowKey - The key of the currently edited row.</li>\n     * <li>rowIndex - The index of the currently edited row.</li>\n     * </ul>\n     * Note that the row the is currently being edited is also the current keyboard focus row.  Therefore, when\n     * this value is updated, the value of currentRow is updated also.  In addition, editRow update can be cancelled if\n     * beforeCurrentRow event is vetoed.\n     *\n     * @expose\n     * @memberof! oj.ojTable\n     * @ojshortdesc Specifies the row that is currently being edited. See the Help documentation for more information.\n     * @instance\n     * @default {'rowKey': null, 'rowIndex': -1}\n     * @type {Object}\n     * @ojsignature {target: \"Type\", value: \"oj.ojTable.EditRow<K> | null\"}\n     * @ojwriteback\n     *\n     * @example <caption>Get the key of the edit row:</caption>\n     * // getter\n     * var editRowKey = myTable.editRow.rowKey;\n     */\n    editRow: { rowKey: null, rowIndex: -1 },\n\n    /**\n     * The text to display when there are no data in the Table. If it is not defined,\n     * then a default empty text is extracted from the resource bundle.\n     *\n     * @expose\n     * @memberof! oj.ojTable\n     * @instance\n     * @type {string|null}\n     * @default null\n     * @example <caption>Initialize the table with the <code class=\"prettyprint\">empty-text</code> attribute specified:</caption>\n     * &lt;oj-table\n     *   aria-label=\"Departments Table\"\n     *   data='{{datasource}}'\n     *   empty-text='No data'\n     *   columns='[{\"headerText\": \"Department Id\", \"field\": \"DepartmentId\"},\n     *             {\"headerText\": \"Department Name\", \"field\": \"DepartmentName\"}]'&gt;\n     * &lt;/oj-table>\n     *\n     * @ignore\n     */\n    emptyText: null,\n\n    /**\n     * Whether the horizontal gridlines are to be drawn. Can be enabled or disabled.\n     * The default value of auto means it's determined by the display attribute.\n     *\n     * @expose\n     * @public\n     * @instance\n     * @memberof! oj.ojTable\n     * @ojshortdesc Specifies the visibility of the horizontal gridlines. See the Help documentation for more information.\n     * @type {string}\n     * @ojvalue {string} \"auto\" Determined by display attribute.\n     * @ojvalue {string} \"enabled\" Horizontal gridlines are enabled.\n     * @ojvalue {string} \"disabled\" Horizontal gridlines are disabled.\n     * @default \"auto\"\n     *\n     * @example <caption>Initialize the Table with the <code class=\"prettyprint\">horizontal-grid-visible</code> attribute specified:</caption>\n     * &lt;oj-table horizontal-grid-visible='disabled'>&lt;/oj-table>\n     *\n     * @example <caption>Get or set the <code class=\"prettyprint\">horizontalGridVisible</code> property after initialization:</caption>\n     * // getter\n     * var value = myTable.horizontalGridVisible;\n     *\n     * // setter\n     * myTable.horizontalGridVisible = 'disabled';\n     */\n    horizontalGridVisible: 'auto',\n\n    /**\n     * The column sizing method used for the Table and its columns.\n     * @expose\n     * @public\n     * @instance\n     * @memberof! oj.ojTable\n     * @shortdesc Specifies the layout behavior of the Table and its columns.\n     * @type {string}\n     * @ojvalue {string} \"contents\" <ul><li>When specified, the default column sizing is determined by the contents of the data.</li>\n     *                                  <li>Does not require an overall width set on the Table.</li>\n     *                                  <li>Can have performance issues when large numbers of columns and/or rows are initially rendered.</li></ul>\n     * @ojvalue {string} \"fixed\" <ul><li>When specified, the default column sizing is determined by column weights.</li>\n     *                               <li>Requires an overall width set on the Table (width='100%', width='200rem', etc.)</li>\n     *                               <li>Very performant when rendering large numbers of columns and/or rows.</li></ul>\n     * @default \"contents\"\n     * @ojunsupportedthemes [\"Alta\"]\n     *\n     * @example <caption>Initialize the Table with the <code class=\"prettyprint\">layout</code> attribute specified:</caption>\n     * &lt;oj-table layout='fixed'>&lt;/oj-table>\n     *\n     * @example <caption>Get or set the <code class=\"prettyprint\">layout</code> property after initialization:</caption>\n     * // getter\n     * var value = myTable.layout;\n     *\n     * // setter\n     * myTable.layout = 'fixed';\n     */\n    layout: 'contents',\n    /**\n     * The row attribute contains a subset of attributes for controlling certain behaviors on a per row basis.\n     *\n     * @expose\n     * @memberof! oj.ojTable\n     * @ojshortdesc Customizes the functionality of each row in the table.\n     * @type {Object}\n     * @since 13.1.0\n     * @instance\n     */\n    row: {\n      /**\n       * A function that returns whether the row can be edited.\n       * See <a href=\"Item.html\">Item</a> to see the object passed into the editable function.\n       * If no function is specified, and edit-mode is set to \"rowEdit\" then all the rows will be editable.\n       *\n       * @expose\n       * @name row.editable\n       * @ojshortdesc Specifies whether the row can be edited. See the Help documentation for more information.\n       * @memberof! oj.ojTable\n       * @since 13.1.0\n       * @instance\n       * @type {Function|null}\n       * @ojsignature {target: \"Type\",\n       *               value: \"?((item: Item<K,D>) => 'on'|'off') | null)\",\n       *               jsdocOverride: true}\n       * @default null\n       *\n       * @example <caption>Initialize the Table with the <code class=\"prettyprint\">editable</code> attribute specified:</caption>\n       * &lt;oj-table row.editable='{{myEditableFunc}}'>&lt;/oj-table>\n       *\n       * @example <caption>Get or set the <code class=\"prettyprint\">editable</code> property after initialization:</caption>\n       * // getter\n       * const editable = myTable.row.editable;\n       *\n       * // setter\n       * myTable.row.editable = myEditableFunc;\n       */\n      editable: null,\n      /**\n       * If selection-mode.row is 'multiple' or 'single', this callback will be invoked and allows apps to control selection on individual rows.\n       * See <a href=\"Item.html\">Item</a> to see the object passed into the selectable function.\n       * If no function is specified then all the rows will be selectable, unless selection-mode.row is not set to \"none\".\n       * In addition, <code>row.selectable</code> does not impact column selection modes.\n       * If an <a href=\"AllKeySetImpl.html\">AllKeySetImpl</a> is set on the table the table will not show those rows as selected.\n       * However, the table will not add the non-selectable keys to AllKeySets's deletedValues set.\n       * If selection-mode.row = 'multiple', turning selection off for a particular row will remove the oj-selector and increase the span of the td in the first column by one for that row.\n       *\n       * @expose\n       * @name row.selectable\n       * @ojshortdesc Specifies whether the row can be selected. See the Help documentation for more information.\n       * @memberof! oj.ojTable\n       * @instance\n       * @since 13.1.0\n       * @type {Function|null}\n       * @ojsignature {target: \"Type\",\n       *               value: \"?((item: Item<K,D>) => 'on'|'off') | null)\",\n       *               jsdocOverride: true}\n       * @default null\n       *\n       * @example <caption>Initialize the Table with the <code class=\"prettyprint\">selectable</code> attribute specified:</caption>=\n       * &lt;oj-table row.selectable='{{mySelectableFunc}}'>&lt;/oj-table>\n       *\n       * @example <caption>Get or set the <code class=\"prettyprint\">selectable</code> property after initialization:</caption>\n       * // getter\n       * const selectable = myTable.row.selectable;\n       *\n       * // setter\n       * myTable.row.selectable = mySelectableFunc;\n       */\n      selectable: null,\n      /**\n       * A function that returns whether the row should be sticky.\n       * See <a href=\"Item.html\">Item</a> to see the object passed into the sticky function.\n       * If no function is specified, no rows will be sticky.\n       *\n       * @expose\n       * @name row.sticky\n       * @ojshortdesc Specifies whether the row is sticky. See the Help documentation for more information.\n       * @memberof! oj.ojTable\n       * @instance\n       * @since 13.1.0\n       * @type {Function|null}\n       * @ojsignature {target: \"Type\",\n       *               value: \"?((item: Item<K,D>) => 'on'|'off') | null)\",\n       *               jsdocOverride: true}\n       * @default null\n       * @ojunsupportedthemes [\"Alta\"]\n       *\n       * @example <caption>Initialize the Table with the <code class=\"prettyprint\">sticky</code> attribute specified:</caption>\n       * &lt;oj-table row.sticky='{{myStickyFunc}}'>&lt;/oj-table>\n       *\n       * @example <caption>Get or set the <code class=\"prettyprint\">sticky</code> property after initialization:</caption>\n       * // getter\n       * const sticky = myTable.row.sticky;\n       *\n       * // setter\n       * myTable.row.sticky = myStickyFunc;\n       */\n      sticky: null\n    },\n    /**\n     * A function that renders the content of the row. The function takes a context argument, provided by the Table.\n     * <ul>\n     *    <li>An Object with the following property:\n     *     <ul><li>insert: HTMLElement - A DOM element of the content inside the row.</li></ul>\n     *    </li>\n     *    <li>undefined: If the developer chooses to manipulate the row element directly, the function should return undefined.</li>\n     * </ul></p>\n     *\n     * <p>If using a rowRenderer to configure the display of rows, the Table will handle any change in column reordering due\n     * to a dnd operation internally. Any application logic behind rowRenderer definitions should not dynamically respond to\n     * 'columns' change notifications pushed due to dnd reorder operations. Once an application or an external source updates\n     * the Table's 'columns' attribute though, the Table will no longer honor any previous user-performed dnd reorder operations,\n     * and any relevant changes in logic needed for the rowRenderer definitions must be handled by the application.</p>\n     *\n     * @expose\n     * @public\n     * @instance\n     * @memberof! oj.ojTable\n     * @ojshortdesc A function that returns row content. The function takes a context argument, provided by the table. See the Help documentation for more information.\n     * @type {Function|null}\n     * @ojsignature {target: \"Type\", value: \"((context: oj.ojTable.RowRendererContext<K,D>) => {insert: HTMLElement} | void) | null)\"}\n     * @default null\n     *\n     * @example <caption>Initialize the Table with the <code class=\"prettyprint\">row-renderer</code> attribute specified:</caption>\n     * &lt;oj-table row-renderer='{{myRowRenderer}}'>&lt;/oj-table>\n     *\n     * @example <caption>Get or set the <code class=\"prettyprint\">rowRenderer</code> property after initialization:</caption>\n     * // getter\n     * var value = myTable.rowRenderer;\n     *\n     * // setter\n     * myTable.rowRenderer = myRowRenderer;\n     */\n    rowRenderer: null,\n\n    /**\n     * @typedef {Object} oj.ojTable.RowRendererContext Context object passed into the rowRenderer callback function.\n     * @property {Element} componentElement A reference to the Table root element.\n     * @property {any} data Key/value pairs of the row.\n     * @property {Element} parentElement Empty rendered TR element.\n     * @property {Object} rowContext context of the row\n     * @property {DataProvider<K, D>|null} rowContext.datasource The \"data\" attribute of the Table\n     * @property {\"edit\"|\"navigation\"} rowContext.mode The mode of the row.  It can be \"edit\" or \"navigation\".\n     * @property {ojTable.ContextStatus<K>} rowContext.status Contains the rowIndex, rowKey, and currentRow.\n     * @property {\"on\"|\"off\"} rowContext.editable On if row is editable, off if editing has been disabled.\n     * @ojsignature [{target:\"Type\", value:\"D\", for:\"data\"},\n     *               {target:\"Type\", value:\"<K,D>\", for:\"genericTypeParameters\"}]\n     */\n\n    /**\n     * @typedef {Object} oj.ojTable.ContextStatus<K>\n     * @property {number} rowIndex index of the row\n     * @property {any} rowKey key of the row\n     * @property {oj.ojTable.CurrentRow<K>} currentRow current row.\n     * @ojsignature {target:\"Type\", value:\"K\", for:\"rowKey\", jsdocOverride:true}\n     */\n\n    /**\n     * Specifies the behavior when table needs to scroll to a position based on a row key.  This includes the case where 1) a value of\n     * scrollPosition attribute is specified with a key property, 2) Table scrolls to the selection anchor after a refresh has occurred.\n     *\n     * @ojshortdesc Specifies the behavior when Table needs to scroll to a position based on an item key.\n     * @expose\n     * @memberof! oj.ojTable\n     * @instance\n     * @type {string|null}\n     * @default \"auto\"\n     * @ojvalue {string} \"auto\" The behavior is determined by the component.  By default the behavior is the same as \"capability\" except\n     *                          when legacy TableDataSource is used, in which case the behavior is the same as \"always\".\n     * @ojvalue {string} \"capability\" Table will only scroll to a position based on a row key if either the row has already been fetched\n     *                                or if the associated DataProvider supports 'immediate' iterationSpeed for 'fetchFirst' capability.\n     * @ojvalue {string} \"always\" Table will scroll to a position based on a row key as long as the key is valid.\n     * @ojvalue {string} \"never\" Table will not change the scroll position if the request is based on a row key.\n     *\n     * @example <caption>Initialize the Table with the <code class=\"prettyprint\">scroll-by-key</code> attribute specified:</caption>\n     * &lt;oj-table scroll-to-key='never'>&lt;/oj-table>\n     *\n     * @example <caption>Get or set the <code class=\"prettyprint\">scrollToKey</code> property after initialization:</caption>\n     * // getter\n     * var scrollToKeyBehavior = myTable.scrollToKey;\n     *\n     * // setter\n     * myTable.scrollToKey = 'never';\n     */\n    scrollToKey: 'auto',\n\n    /**\n     * Specifies the mechanism used to scroll the data inside the table. Possible values are: \"auto\", \"loadMoreOnScroll\", and \"loadAll\".\n     * When \"loadMoreOnScroll\" is specified, additional data are fetched when the user scrolls to the bottom of the table.\n     * When \"loadAll\" is specified, table will fetch all the data when it is initially rendered.\n     * If you are using Paging Control with the Table, please note that \"loadMoreOnScroll\" scroll-policy is not compatible with\n     * Paging Control \"loadMore\" mode.\n     *\n     * @expose\n     * @memberof! oj.ojTable\n     * @ojshortdesc Specifies how data are fetched as user scrolls down the table.\n     * @instance\n     * @type {string}\n     * @ojvalue {string} \"auto\" Determined by element. The default is to have the same behavior as \"loadMoreOnScroll\" except when\n     *                          legacy TableDataSource is used, in which case the behavior is the same as \"loadAll\".\n     * @ojvalue {string} \"loadAll\" Fetch and render all data.\n     * @ojvalue {string} \"loadMoreOnScroll\" Additional data are fetched when the user scrolls to the bottom of the table. This option should be used\n     *                                      only when table height is specified.\n     *                   <br/>Not compatible when used with Paging Control \"loadMore\" mode.\n     * @default \"auto\"\n     *\n     * @example <caption>Initialize the Table with the <code class=\"prettyprint\">scroll-policy</code> attribute specified:</caption>\n     * &lt;oj-table scroll-policy='loadMoreOnScroll'>&lt;/oj-table>\n     *\n     * @example <caption>Get or set the <code class=\"prettyprint\">scrollPolicy</code> property after initialization:</caption>\n     * // getter\n     * var value = myTable.scrollPolicy;\n     *\n     * // setter\n     * myTable.scrollPolicy = 'loadMoreOnScroll';\n     */\n    scrollPolicy: 'auto',\n\n    /**\n     * scrollPolicy options.\n     * <p>\n     * When scrollPolicy is loadMoreOnScroll, the next block of rows is fetched\n     * when the user scrolls to the end of the table. The fetchSize property\n     * determines how many rows are fetched in each block.\n     * @expose\n     * @public\n     * @instance\n     * @memberof! oj.ojTable\n     * @ojshortdesc Specifies fetch options for scrolling behaviors that trigger data fetches.\n     * @type {Object|null}\n     *\n     * @example <caption>Initialize the component, overriding some scroll-policy-options values and leaving the others intact:</caption>\n     * &lt;!-- Using dot notation -->\n     * &lt;oj-table scroll-policy-options.some-key='some value' scroll-policy-options.some-other-key='some other value'>&lt;/oj-table>\n     *\n     * &lt;!-- Using JSON notation -->\n     * &lt;oj-table scroll-policy-options='{\"someKey\":\"some value\", \"someOtherKey\":\"some other value\"}'>&lt;/oj-table>\n     *\n     * @example <caption>Get or set the <code class=\"prettyprint\">scrollPolicyOptions</code> property after initialization:</caption>\n     * // Get one\n     * var value = myTable.scrollPolicyOptions.someKey;\n     *\n     * // Set one, leaving the others intact. Always use the setProperty API for\n     * // subproperties rather than setting a subproperty directly.\n     * myTable.setProperty('scrollPolicyOptions.someKey', 'some value');\n     *\n     * // Get all\n     * var values = myTable.scrollPolicyOptions;\n     *\n     * // Set all.  Must list every scrollPolicyOptions key, as those not listed are lost.\n     * myTable.scrollPolicyOptions = {\n     *     someKey: 'some value',\n     *     someOtherKey: 'some other value'\n     * };\n     */\n    scrollPolicyOptions: {\n      /**\n       * The number of rows to fetch in each block of rows. The specified number is passed to the underlying data provider through\n       * the size attribute of the fetch first parameters. Note, the underlying data provider may not request that exact number from the back end.\n       * <p>See the <a href=\"#scrollPolicyOptions\">scroll-policy-options</a> attribute for usage examples.</p>\n       *\n       * @expose\n       * @name scrollPolicyOptions.fetchSize\n       * @ojshortdesc The number of data rows to fetch in each block.\n       * @memberof! oj.ojTable\n       * @instance\n       * @type {number}\n       * @ojsignature {target:\"Type\", value:\"?\"}\n       * @default 25\n       * @ojmin 1\n       */\n      fetchSize: 25,\n\n      /**\n       * The maximum number of rows which will be displayed before fetching more rows will be stopped.\n       * <p>See the <a href=\"#scrollPolicyOptions\">scroll-policy-options</a> attribute for usage examples.</p>\n       *\n       * @expose\n       * @name scrollPolicyOptions.maxCount\n       * @ojshortdesc The maximum number of rows to display before fetching more data rows will be stopped.\n       * @memberof! oj.ojTable\n       * @instance\n       * @type {number}\n       * @ojsignature {target:\"Type\", value:\"?\"}\n       * @default 500\n       * @ojmin 0\n       */\n      maxCount: 500,\n\n      /**\n       * The CSS selector string to an element which Table uses to determine the scroll position as well as the maximum scroll position.\n       * <ul>\n       *   <li>When specified, the Table will listen to the scroll events of the scroller element to determine when to load more data.</li>\n       *   <li>To specify the HTML body itself, set 'html' as the scroller element. (Most common on mobile devices).</li>\n       *   <li>The Table must not have a constrained height or width. It can have minimum sizes specified, but nothing that prevents it from growing in size in either direction.</li>\n       *   <li>The scroller element specified must have horizontal AND vertical scrolling enabled (ie. overflow: auto).</li>\n       *   <li>The scroller element must be an ancestor of the Table at some level in the DOM tree.</li>\n       *   <li>Applications should be aware that when using an external scroller, the Table can (and will) become wider than the viewport's width depending on the number of columns defined. When this occurs, other content on the page should be positioned in a way that handles this behavior gracefully.</li>\n       *   <li>Another potential option would be to setup the page content of an application to always stretch to match the width that the Table grows to. This would allow the page content to scroll horizontally when the Table becomes wider than the viewport, and may be preferred in some cases.</li>\n       * </ul>\n       * @expose\n       * @name scrollPolicyOptions.scroller\n       * @ojshortdesc The CSS selector string to an element used to determine the scroll position as well as the maximum scroll position. See the Help documentation for more information.\n       * @memberof! oj.ojTable\n       * @instance\n       * @type {string|null}\n       * @ojsignature {target:\"Type\", value:\"? | keyof HTMLElementTagNameMap | keyof SVGElementTagNameMap | string\"}\n       * @default null\n       * @ojunsupportedthemes [\"Alta\"]\n       */\n      scroller: null,\n\n      /**\n       * The bottom offset value (in pixels) used for the Table's external scroller. This value is used to specify the location where the Table's footer region becomes 'sticky' when the 'scroller' attribute is specified.\n       * @expose\n       * @name scrollPolicyOptions.scrollerOffsetBottom\n       * @ojshortdesc The bottom offset value (in pixels) used for the Table's external scroller. This value is used to specify the location where the Table's footer region becomes 'sticky' when the 'scroller' attribute is specified.\n       * @memberof! oj.ojTable\n       * @instance\n       * @type {number|null}\n       * @ojsignature {target:\"Type\", value:\"?\"}\n       * @default null\n       * @ojunsupportedthemes [\"Alta\"]\n       */\n      scrollerOffsetBottom: null,\n\n      /**\n       * The start offset value (in pixels) used for the Table's external scroller. This value is used to specify the location where the Table's frozen 'start' columns (or frozen 'end' columns in RTL) become 'sticky' when the 'scroller' attribute is specified.\n       * @expose\n       * @name scrollPolicyOptions.scrollerOffsetStart\n       * @ojshortdesc The start offset value (in pixels) used for the Table's external scroller. This value is used to specify the location where the Table's frozen 'start' columns (or frozen 'end' columns in RTL) become 'sticky' when the 'scroller' attribute is specified.\n       * @memberof! oj.ojTable\n       * @instance\n       * @type {number|null}\n       * @ojsignature {target:\"Type\", value:\"?\"}\n       * @default null\n       * @ojunsupportedthemes [\"Alta\"]\n       */\n      scrollerOffsetStart: null,\n\n      /**\n       * The end offset value (in pixels) used for the Table's external scroller. This value is used to specify the location where the Table's frozen 'end' columns (or frozen 'start' columns in RTL) become 'sticky' when the 'scroller' attribute is specified.\n       * @expose\n       * @name scrollPolicyOptions.scrollerOffsetEnd\n       * @ojshortdesc The end offset value (in pixels) used for the Table's external scroller. This value is used to specify the location where the Table's frozen 'end' columns (or frozen 'start' columns in RTL) become 'sticky' when the 'scroller' attribute is specified.\n       * @memberof! oj.ojTable\n       * @instance\n       * @type {number|null}\n       * @ojsignature {target:\"Type\", value:\"?\"}\n       * @default null\n       * @ojunsupportedthemes [\"Alta\"]\n       */\n      scrollerOffsetEnd: null,\n\n      /**\n       * The top offset value (in pixels) used for the Table's external scroller. This value is used to specify the location where the Table's header region becomes 'sticky' when the 'scroller' attribute is specified.\n       * @expose\n       * @name scrollPolicyOptions.scrollerOffsetTop\n       * @ojshortdesc The top offset value (in pixels) used for the Table's external scroller. This value is used to specify the location where the Table's header region becomes 'sticky' when the 'scroller' attribute is specified.\n       * @memberof! oj.ojTable\n       * @instance\n       * @type {number|null}\n       * @ojsignature {target:\"Type\", value:\"?\"}\n       * @default null\n       * @ojunsupportedthemes [\"Alta\"]\n       */\n      scrollerOffsetTop: null\n    },\n\n    /**\n     * The current scroll position of Table. The scroll position is updated when either the vertical or horizontal scroll position\n     * (or its scroller, as specified in scrollPolicyOptions.scroller) has changed.  The value contains the x and y scroll position,\n     * the index and key information of the item closest to the top of the viewport, as well as horizontal and vertical offset from the\n     * position of the item to the actual scroll position.\n     * <p>\n     * The default value contains just the scroll position.  Once data is fetched the row/column index and key sub-properties will be added.\n     * If there is no data then the row/column index and key sub-properties will not be available.\n     * </p>\n     * <p>\n     * When setting the scrollPosition property, applications can change any combination of the sub-properties.\n     * If multiple sub-properties are set at once they will be used in key, index, pixel order where the latter serves as hints.\n     * If offsetX or offsetY are specified, they will be used to adjust the scroll position from the position where the key or index\n     * of the item is located.\n     * </p>\n     * <p>\n     * If a sparse object is set the other sub-properties will be populated and updated once Table has scrolled to that position.\n     * </p>\n     * <p>\n     * Also, if <a href=\"#scrollPolicy\">scrollPolicy</a> is set to 'loadMoreOnScroll' and the scrollPosition is set to a value outside\n     * of the currently rendered region, then Table will attempt to fetch until the specified scrollPosition is satisfied or the end\n     * is reached (either at max count or there's no more items to fetch), in which case the scroll position will remain at the end.\n     * The only exception to this is when the row key specified does not exists and a DataProvider is specified for <a href=\"#data\">data</a>,\n     * then the scroll position will not change (unless other sub-properties like row index or x/y are specified as well).\n     * </p>\n     * Lastly, when a re-rendered is triggered by a <a href=\"DataProviderRefreshEvent.html\">refresh event</a> from the DataProvider,\n     * or if the value for <a href=\"#data\">data</a> attribute has changed, then the scrollPosition will be adjusted such that the selection\n     * anchor (typically the last row selected by the user) prior to refresh will appear at the top of the viewport after refresh.  If\n     * selection is disabled or if there are no selected rows, then the scrollPosition will remain at the top.\n     * </p>\n     *\n     * @ojshortdesc Specifies the scroll position of the table. See the Help documentation for more information.\n     * @expose\n     * @memberof! oj.ojTable\n     * @instance\n     * @type {Object}\n     * @default {\"x\": 0, \"y\": 0}\n     * @property {number=} x The horizontal position in pixels.\n     * @property {number=} y The vertical position in pixels.\n     * @property {number=} columnIndex The zero-based index of the cell at the origin of the table.\n     * @property {number=} rowIndex The zero-based index of the cell at the origin of the table.  If <a href=\"#scrollPolicy\">scrollPolicy</a>\n     * is set to 'loadMoreOnScroll and the row index is greater than maxCount set in <a href=\"#scrollPolicyOptions\">scrollPolicyOptions</a>,\n     * then it will scroll and fetch until the end of the table is reached and there are no more rows to fetch.\n     * @property {any=} columnKey The key of the column.  This corresponds to the identifier of the column specified in <a href=\"#columns\">columns</a>.\n     * If the column does not exists then the value is ignored.\n     * @property {any=} rowKey The key of the row.  If DataProvider is used for <a href=\"#data\">data</a> and the key does not exists in the\n     * DataProvider, then the value is ignored.  If DataProvider is not used then Table will fetch and scroll until the item is found\n     * or the end of the table is reached and there's no more items to fetch.\n     * @property {number=} offsetX The horizontal offset in pixels relative to the column identified by columnKey/columnIndex.\n     * @property {number=} offsetY The vertical offset in pixels relative to the row identified by rowKey/rowIndex.\n     *\n     * @ojsignature [{target:\"Type\", value:\"K\", for:\"parent\"},\n     *               {target:\"type\", value:\"K\", for:\"key\"}]\n     * @ojwriteback\n     * @example <caption>Initialize the Table with the <code class=\"prettyprint\">scroll-position</code> attribute specified:</caption>\n     * &lt;!-- Using dot notation -->\n     * &lt;oj-table scroll-position.row-index='10'>&lt;/oj-table>\n     *\n     * &lt;!-- Using JSON notation -->\n     * &lt;oj-table scroll-position='{\"rowIndex\": 10}'>&lt;/oj-table>\n     *\n     * @example <caption>Get or set the <code class=\"prettyprint\">scrollPosition</code> property after initialization:</caption>\n     * // Get one\n     * var scrollPositionValue = myTable.scrollPosition.rowIndex;\n     *\n     * // Set one, leaving the others intact\n     * myTable.setProperty('scrollPosition.rowKey', 'row10key');\n     *\n     * // Get all\n     * var scrollPositionValues = myTable.scrollPosition;\n     *\n     * // Set all.  Those not listed will be lost until the scroll completes and the remaining fields are populated.\n     * myTable.scrollPosition = {x: 0, y: 150};\n     */\n    scrollPosition: { x: 0, y: 0 },\n\n    /**\n     * @typedef {Object} oj.ojTable.RowSelectionStart start of one row selection, can be on index or key or both.\n     * @ojsignature [{target:\"Type\", value:\"{startIndex: {row: number}, startKey?:{row: K}}|{startIndex?: {row: number}, startKey:{row: K}}\"},\n     *               {target:\"Type\", value:\"<K>\", for:\"genericTypeParameters\"}]\n     */\n\n    /**\n     * @typedef {Object} oj.ojTable.RowSelectionEnd end of one row selection, can be on index or key or both.\n     * @ojsignature [{target:\"Type\", value:\"{endIndex: {row: number}, endKey?: {row: K}}|{endIndex?:{row: number}, endKey:{row: K}}\"},\n     *               {target:\"Type\", value:\"<K>\", for:\"genericTypeParameters\"}]\n     */\n\n    /**\n     * @typedef {Object} oj.ojTable.ColumnSelectionStart start of one column selection, can be on index or key or both.\n     * @ojsignature [{target:\"Type\", value:\"{startIndex:{column:number}, startKey?:{column:K}}|{startIndex?:{column:number}, startKey:{column:K}}\"},\n     *               {target:\"Type\", value:\"<K>\", for:\"genericTypeParameters\"}]\n     */\n\n    /**\n     * @typedef {Object} oj.ojTable.ColumnSelectionEnd end of one column selection, can be on index or key or both.\n     * @ojsignature [{target:\"Type\", value:\"{endIndex:{column:number},endKey?:{column:K}}|{endIndex?:{column:number}, endKey:{column:K}}\"},\n     *               {target:\"Type\", value:\"<K>\", for:\"genericTypeParameters\"}]\n     */\n\n    /**\n     * Whether the select all control should be rendered.\n     *\n     * @expose\n     * @public\n     * @instance\n     * @memberof! oj.ojTable\n     * @ojunsupportedthemes ['Alta']\n     * @ojshortdesc Specifies the visibility of the select all control. See the Help documentation for more information.\n     * @type {string}\n     * @ojvalue {string} \"visible\" Select all control is visible.\n     * @ojvalue {string} \"hidden\" Select all control is hidden.\n     * @default \"visible\"\n     *\n     * @example <caption>Initialize the Table with the <code class=\"prettyprint\">select-all-control</code> attribute specified:</caption>\n     * &lt;oj-table select-all-control='hidden'>&lt;/oj-table>\n     *\n     * @example <caption>Get or set the <code class=\"prettyprint\">selectAllControl</code> property after initialization:</caption>\n     * // getter\n     * var value = myTable.selectAllControl;\n     *\n     * // setter\n     * myTable.selectAllControl = 'hidden';\n     */\n    selectAllControl: 'visible',\n\n    /**\n     * Gets the key and data of the first selected row.  The first selected row is defined as the first\n     * key returned by the <a href=\"#selection\">selection</a> property.  The value of this property contains:\n     * <ul>\n     * <li>key - the key of the first selected row.</li>\n     * <li>data - the data of the first selected row.  If the selected row is not locally available, this will\n     *        be null.</li>\n     * </ul>\n     * If no rows are selected then this property will return an object with both key and data properties set to null.\n     *\n     * @expose\n     * @memberof! oj.ojTable\n     * @ojshortdesc Read-only property used for retrieving the key and data of the first selected row. See the Help documentation for more information.\n     * @instance\n     * @default {'key': null, 'data': null}\n     * @type {Object}\n     * @ojeventgroup common\n     * @property {any} key The key of first selected row.\n     * @property {any} data The data for first selected row.\n     * @ojsignature {target:\"Type\", value:\"ojcommontypes.ItemContext<K,D>\", jsdocOverride:true}\n     *\n     * @ojwriteback\n     * @readonly\n     *\n     * @example <caption>Get the data of the first selected row:</caption>\n     * // getter\n     * var firstSelectedRowValue = myTable.firstSelectedRow;\n     */\n    firstSelectedRow: { key: null, data: null },\n\n    /**\n     * Specifies the current selections in the table. Can be either an index or key value.\n     * When both are specified, the index is used as a hint.\n     * Returns an array of range objects, or an empty array if there's no selection.\n     *\n     * Note that this attribute has been replaced by <a href=\"#selected\">selected</a>, and it is recommended that\n     * applications use the selected attribute going forward.\n     *\n     * <p>Selection range object has following subproperties:\n     * <ul>\n     * <li>\n     * startIndex, startKey - In case of row selection, startIndex and startKey refers to first row(which is near to table header) in range selection.<br/>\n     * In case of column selection, startIndex and startKey refers to first column in range selection.\n     * </li>\n     * <li>\n     *  endIndex, endKey - In case of row selection, endIndex and endKey refers to last row(which is far from table header) in range selection.<br/>\n     *  In case of column selection, endIndex and endKey refers to last column in range selection.\n     * </li>\n     * </ul>\n     * startIndex, startKey, endIndex and endKey are of type object. In case of row selection, these objects will have 'row' subpropety. In case of column selection, objects will have 'column' subproperty.</p>\n     *\n     * @expose\n     * @public\n     * @instance\n     * @memberof! oj.ojTable\n     * @ojshortdesc Specifies the current selections in the table. See the Help documentation for more information.\n     * @type {Array.<Object>}\n     * @ojsignature {target: \"Type\", value: \"Array<oj.ojTable.RowSelectionStart<K> & oj.ojTable.RowSelectionEnd<K>> | Array<oj.ojTable.ColumnSelectionStart<K> & oj.ojTable.ColumnSelectionEnd<K>>\"}\n     * @default []\n     * @ojwriteback\n     * @ojdeprecated {since: '7.0.0', description: 'Use selected attribute instead.'}\n     *\n     * @example <caption>Initialize the table with the <code class=\"prettyprint\">selection</code> attribute specified:</caption>\n     * &lt;oj-table selection='[{\"startIndex\": {\"row\":1}, \"endIndex\":{\"row\":3}}]'>&lt;/oj-table>\n     *\n     * @example <caption>Get or set the <code class=\"prettyprint\">selection</code> property after initialization:</caption>\n     * // Get one\n     * var value = myTable.selection[0];\n     *\n     * // Get all\n     * var values = myTable.selection;\n     *\n     * // Set all (There is no permissible \"set one\" syntax.)\n     * myTable.selection = [{startIndex: {\"row\":1}, endIndex:{\"row\":3}},\n     *                      {startIndex: {\"row\":7}, endIndex:{\"row\":9}}];\n     *\n     * @example <caption>Set a row selection using index:</caption>\n     * myTable.selection = [{startIndex: {\"row\":1}, endIndex:{\"row\":3}}];\n     *\n     * @example <caption>Set a column selection using index:</caption>\n     * myTable.selection = [{startIndex: {\"column\":2}, endIndex: {\"column\":4}}];\n     *\n     * @example <caption>Set a row selection using key value:</caption>\n     * myTable.selection = [{startKey: {\"row\":\"10\"}, endKey:{\"row\":\"30\"}}];\n     *\n     * @example <caption>Set a column selection using key value:</caption>\n     * myTable.selection = [{startKey: {\"column\": \"column1\"}, endKey: {\"column\": \"column2\"}}];\n     */\n    selection: [],\n\n    /**\n     * Specifies the current selected rows and/or columns in the table.\n     * Note that property change event for the deprecated selection property will still be fired when\n     * selected property has changed. In addition, <a href=\"AllKeySetImpl.html\">AllKeySetImpl</a> set can be used to represent\n     * select all state. In this case, the value for selection would have an 'inverted' property set to true,\n     * and would contain index/key of the rows that are not selected.\n     *\n     * @expose\n     * @public\n     * @instance\n     * @memberof! oj.ojTable\n     * @ojshortdesc Specifies the current selected rows and/or columns in the table. See the Help documentation for more information.\n     * @type {Object}\n     * @ojsignature {target:\"Type\", value:\"{row?: oj.KeySet<K>, column?: oj.KeySet<K>}\"}\n     * @default {row: new KeySetImpl(), column: new KeySetImpl()};\n     * @ojwriteback\n     * @ojeventgroup common\n     *\n     * @example <caption>Initialize the table with the specific rows selected:</caption>\n     * myTable.selected.row = new KeySetImpl(['row1', 'row2', 'row3']);\n     *\n     * @example <caption>Initialize the table with the specific columns selected:</caption>\n     * myTable.selected.column = new KeySetImpl(['col2', 'col4']);\n     */\n    selected: { row: new ojkeyset.KeySetImpl(), column: new ojkeyset.KeySetImpl() },\n\n    /**\n     * <p>Specifies whether row or column selections can be made, and the cardinality of each (single/multiple/none) selection in the Table.\n     *\n     * @expose\n     * @public\n     * @instance\n     * @memberof! oj.ojTable\n     * @ojshortdesc Specifies the row and column selection modes.\n     * @type {Object.<string, string>|null}\n     * @default null\n     *\n     * @example <caption>Initialize the Table, setting selection modes:</caption>\n     * &lt;!-- Using dot notation -->\n     * &lt;oj-table selection-mode.row='single' selection-mode.column='multiple'>&lt;/oj-table>\n     *\n     * &lt;!-- Using JSON notation -->\n     * &lt;oj-table selection-mode='{\"row\":\"single\", \"column\":\"multiple\"}'>&lt;/oj-table>\n     *\n     * @example <caption>Get or set the <code class=\"prettyprint\">selectionMode</code> property after initialization:</caption>\n     * // Get one\n     * var value = myTable.selectionMode.row;\n     *\n     * // Set one. Use the setProperty API for\n     * // subproperties so that a property change event is fired.\n     * myTable.setProperty('selectionMode.row', 'single');\n     *\n     * // Get all\n     * var values = myTable.selectionMode;\n     *\n     * // Set all\n     * myTable.selectionMode = {\n     *     row: 'single',\n     *     column: 'multiple'\n     * };\n     */\n    selectionMode: null,\n\n    /**\n     * <p>The type of row selection behavior that is enabled on the Table. This attribute controls the number of selections that can be made via selection gestures at any given time.\n     *\n     * <p>If <code class=\"prettyprint\">single</code> or <code class=\"prettyprint\">multiple</code> is specified, selection gestures will be enabled, and the Table's selection styling will be applied to all rows specified by the <a href=\"#selection\">selection</a> and <a href=\"#selected\">selected</a> attributes.\n     * If <code class=\"prettyprint\">none</code> is specified, selection gestures will be disabled, and the Table's selection styling will not be applied to any rows specified by the <a href=\"#selection\">selection</a> and <a href=\"#selected\">selected</a> attributes.\n     *\n     * <p>Changing the value of this attribute will not affect the value of the <a href=\"#selection\">selection</a> or <a href=\"#selected\">selected</a> attributes.\n     *\n     * <p>See the <a href=\"#selectionMode\">selection-mode</a> attribute for usage examples.\n     * By default, this element does not allow any selection.\n     *\n     * @expose\n     * @name selectionMode.row\n     * @ojshortdesc Specifies the selection mode for rows. By default, row selection is disabled.\n     * @memberof! oj.ojTable\n     * @instance\n     * @type {string}\n     * @ojsignature {target:\"Type\", value:\"?\"}\n     * @ojvalue {string} \"none\" Selection is disabled.\n     * @ojvalue {string} \"single\" Only a single row can be selected at a time.\n     * @ojvalue {string} \"multiple\" Multiple rows can be selected at the same time.\n     */\n\n    /**\n     * <p>The type of column selection behavior that is enabled on the Table. This attribute controls the number of selections that can be made via selection gestures at any given time.\n     *\n     * <p>If <code class=\"prettyprint\">single</code> or <code class=\"prettyprint\">multiple</code> is specified, selection gestures will be enabled, and the Table's selection styling will be applied to all columns specified by the <a href=\"#selection\">selection</a> and <a href=\"#selected\">selected</a> attributes.\n     * If <code class=\"prettyprint\">none</code> is specified, selection gestures will be disabled, and the Table's selection styling will not be applied to any columns specified by the <a href=\"#selection\">selection</a> and <a href=\"#selected\">selected</a> attributes.\n     *\n     * <p>Changing the value of this attribute will not affect the value of the <a href=\"#selection\">selection</a> or <a href=\"#selected\">selected</a> attributes.\n     *\n     * <p>See the <a href=\"#selectionMode\">selection-mode</a> attribute for usage examples.\n     * By default, this element does not allow any selection. (As a note, the 'id' property of each column is required when column selection is enabled).\n     *\n     * @expose\n     * @name selectionMode.column\n     * @ojshortdesc Specifies the selection mode for columns. By default, column selection is disabled.\n     * @memberof! oj.ojTable\n     * @instance\n     * @type {string}\n     * @ojsignature {target:\"Type\", value:\"?\"}\n     * @ojvalue {string} \"none\" Selection is disabled.\n     * @ojvalue {string} \"single\" Only a single column can be selected at a time.\n     * @ojvalue {string} \"multiple\" Multiple columns can be selected at the same time.\n     */\n\n    /**\n     * <p>Specifies whether selection is required on the Table. When row selection is enabled, this attribute will take effect when at least\n     * one row is present. When <code class=\"prettyprint\">true</code>, the Table will ensure that at least one valid row is selected at all\n     * times. If no rows are specified by the <a href=\"#selection\">selection</a> or <a href=\"#selected\">selected</a> attributes, the first\n     * row in the Table will be added to the selection state during initial render. Additionally, selection gestures that would otherwise\n     * leave the Table with no selected rows will be disabled.\n     *\n     * <p>When <code class=\"prettyprint\">true</code>, the Table will also attempt to validate all rows specified by the\n     * <a href=\"#selection\">selection</a> and <a href=\"#selected\">selected</a> attributes. If any rows specified are not immediately\n     * available, the Table's underlying <a href=\"DataProvider.html\">DataProvider</a> will be queried. This will only occur if the\n     * data provider supports <a href=\"DataProvider.html#getCapability\">getCapability</a>, and returns a\n     * <a href=\"FetchByKeysCapability.html#implementation\">fetchByKeys capability implementation</a> of <code class=\"prettyprint\">lookup</code>.\n     * Any rows that fail this validation process will be removed from the <a href=\"#selection\">selection</a> and <a href=\"#selected\">selected</a>\n     * attributes. This guarantees that the Table's <a href=\"#firstSelectedRow\">firstSelectedRow</a> attribute is populated at all times.\n     *\n     * <p>Otherwise, when column selection is enabled, this attribute will take effect when at least one column is present. When\n     * <code class=\"prettyprint\">true</code>, the Table will ensure that at least one valid column is selected at all times. If no\n     * columns are specified by the <a href=\"#selection\">selection</a> or <a href=\"#selected\">selected</a> attributes, the first\n     * column in the Table will be added to the selection state during initial render. Additionally, selection gestures that would otherwise\n     * leave the Table with no selected columns will be disabled.\n     *\n     * <p>See <a href=\"#selectionMode\">selectionMode</a> for information on how to enable or disable selection on the Table.\n     *\n     * @expose\n     * @public\n     * @instance\n     * @memberof! oj.ojTable\n     * @ojshortdesc Specifies whether selection is required on the Table.\n     * @type {boolean}\n     * @default false\n     *\n     * @example <caption>Initialize the Table, setting selection required:</caption>\n     * &lt;!-- Using dot notation -->\n     * &lt;oj-table selection-required='true'>&lt;/oj-table>\n     *\n     * @example <caption>Get or set the <code class=\"prettyprint\">selectionRequired</code> property after initialization:</caption>\n     * // Get one\n     * var value = myTable.selectionRequired;\n     *\n     * // Set one. Use the setProperty API for\n     * // subproperties so that a property change event is fired.\n     * myTable.setProperty('selectionRequired', 'true');\n     */\n    selectionRequired: false,\n\n    /**\n     * Whether the vertical gridlines are to be drawn. Can be enabled or disabled.\n     * The default value of auto means it's determined by the display attribute.\n     * @expose\n     * @public\n     * @instance\n     * @memberof! oj.ojTable\n     * @ojshortdesc Specifies the visibility of the vertical gridlines. See the Help documentation for more information.\n     * @type {string}\n     * @ojvalue {string} \"auto\" Determined by display attribute.\n     * @ojvalue {string} \"enabled\" Vertical gridlines are enabled.\n     * @ojvalue {string} \"disabled\" Vertical gridlines are disabled.\n     * @default \"auto\"\n     */\n    verticalGridVisible: 'auto',\n\n    /**\n     * @typedef {Object} oj.ojTable.ColumnsRendererContext Context object passed into the columns[].renderer callback function.\n     * @property {Object} cellContext Context of the cell containing properties.\n     * @property {DataProvider<K, D>|null} cellContext.datasource The \"data\" attribute of the Table.\n     * @property {\"edit\"|\"navigation\"} cellContext.mode The mode of the row.  It can be \"edit\" or \"navigation\".\n     * @property {ojTable.ContextStatus<K>} cellContext.status Contains the rowIndex, rowKey, and currentRow.\n     * @property {\"on\"|\"off\"} cellContext.rowEditable On if row is editable, off if editing has been disabled.\n     * @property {number} columnIndex The column index.\n     * @property {Element} componentElement A reference to the Table root element.\n     * @property {any} data The cell data.\n     * @property {Element} parentElement Empty rendered &lt;td> element.\n     * @property {Object} row Key/value pairs of the row.\n     * @ojsignature [{target:\"Type\", value:\"D\", for:\"row\", jsdocOverride:true},\n     *               {target:\"Type\", value:\"<K,D>\", for:\"genericTypeParameters\"}]\n     */\n    /**\n     * @typedef {Object} oj.ojTable.FooterRendererContext Context object passed into the footerRenderer callback function.\n     * @property {number} columnIndex The column index.\n     * @property {Element} componentElement A reference to the Table root element.\n     * @property {Object} footerContext Context of the footer.\n     * @property {DataProvider<K, D>|null} footerContext.datasource The \"data\" attribute of the Table.\n     * @property {Element} parentElement Empty rendered <td> element.\n     * @ojsignature {target:\"Type\", value:\"<K,D>\", for:\"genericTypeParameters\"}\n     */\n    /**\n     * @typedef {Object} oj.ojTable.FooterTemplateContext Context passed into default and column-specific footer templates.\n     * @property {Element} componentElement The &lt;oj-table> custom element.\n     * @property {number} columnIndex The zero-based index of the current column during initial rendering.\n     * @property {any} columnKey The key of the current column being rendered.\n     * @ojdeprecated {target:\"property\", for: \"componentElement\", since:\"10.0.0\", description:\"Use HTMLDocument methods to retrieve this element.\" }\n     * @ojsignature [{target:\"Type\", value:\"keyof D\", for:\"columnKey\", jsdocOverride:true},\n     * {target:\"Type\", value:\"<D>\", for:\"genericTypeParameters\"}]\n     */\n    /**\n     * @typedef {Object} oj.ojTable.HeaderRendererContext Context object passed into the headerRenderer callback function.\n     * @property {number} columnIndex The column index.\n     * @property {function(Object, function(Element):void):void} [columnHeaderDefaultRenderer]\n     *           If the column is not sortable then this function will be included in the context.\n     *           The options parameter specifies the options (future use) for the renderer while the\n     *           delegateRenderer parameter specifies the function which the developer would\n     *           like to be called during rendering of the column header.\n     * @property {function(Object, function(Element):void):void} [columnHeaderSortableIconRenderer]\n     *           If the column is sortable then this function will be included in the context.\n     *           The options parameter specifies the options (future use) for the renderer while the\n     *           delegateRenderer parameter specifies the function which the developer would\n     *           like to be called during rendering of the sortable column header. Calling the\n     *           columnHeaderSortableIconRenderer function enables rendering custom header content\n     *           while also preserving the sort icons.\n     * @property {Element} componentElement A reference to the Table root element.\n     * @property {string} data The header text for the column.\n     * @property {Object} headerContext Context for the header.\n     * @property {DataProvider<K, D>|null} headerContext.datasource\n     *           The \"data\" attribute of the Table.\n     * @property {Element} parentElement Empty rendered TH element.\n     * @ojsignature {target:\"Type\", value:\"<K,D>\", for:\"genericTypeParameters\"}\n     */\n    /**\n     * @typedef {Object} oj.ojTable.HeaderTemplateContext Context passed into default and column-specific header templates.\n     * @property {Element} componentElement The &lt;oj-table> custom element.\n     * @property {any} data The data object for the current header.\n     * @property {number} columnIndex The zero-based index of the current column during initial rendering.\n     * @property {any} columnKey  The key of the current column being rendered.\n     * @property {string} headerText The text for the current header being rendered.\n     * @ojdeprecated [{target:\"property\", for: \"componentElement\", since:\"10.0.0\", description:\"Use HTMLDocument methods to retrieve this element.\" },\n     * {target:\"property\", for: \"data\", since:\"10.0.0\", description:\"Use HeaderTemplateContext.headerText instead.\" }]\n     * @ojsignature [{target:\"Type\", value:\"keyof D\", for:\"columnKey\", jsdocOverride:true},\n     * {target:\"Type\", value:\"<D>\", for:\"genericTypeParameters\"}]\n     */\n    /**\n     * @typedef {Object} oj.ojTable.CellTemplateContext Context passed into default and column-specific cell templates.\n     * @property {Element} componentElement The &lt;oj-table> custom element.\n     * @property {any} data The data for the current cell being rendered.\n     * @property {any} row  The data for the row contained the current cell being rendered.\n     * @property {number} index The zero-based index of the current row during initial rendering.  Note the index is not updated in response to row additions and removals.\n     * @property {number} columnIndex The zero-based index of the current column during initial rendering.\n     * @property {any} key The key of the current cell being rendered.\n     * @property {\"edit\"|\"navigation\"} mode The mode of the row containing the cell.  It can be \"edit\" or \"navigation\".\n     * @property {Item<K,D>} item The Item<K, D> for the row being rendered.\n     * @property {any} columnKey The key of the current column being rendered.\n     * @property {DataProvider<K, D> | null} datasource The \"data\" attribute of the Table.\n     * @property {\"on\"|\"off\"} rowEditable On if row is editable, off if editing has been disabled.\n     * @ojsignature [{target:\"Type\", value:\"D[keyof D]\", for:\"data\", jsdocOverride:true},\n     * {target:\"Type\", value:\"keyof D\", for:\"columnKey\", jsdocOverride:true},\n     * {target:\"Type\", value:\"<K,D>\", for:\"genericTypeParameters\"}]\n     * @ojdeprecated [{target:\"property\", for: \"componentElement\", since:\"10.0.0\", description:\"Use HTMLDocument methods to retrieve this element.\" },\n     * {target:\"property\", for: \"row\", since:\"10.0.0\", description:\"Use CellTemplateContext.item.data instead.\" },\n     * {target:\"property\", for: \"key\", since:\"10.0.0\", description:\"Use CellTemplateContext.item.key instead.\" }]\n     */\n    /**\n     * Object that defines Column properties\n     * @typedef {object} oj.ojTable.Column\n     * @ojimportmembers oj.ojTableBaseColumnProperties\n     * @ojimportmembers oj.ojTableColumnProperties\n     * @ojsignature {target:\"Type\", value:\"<K,D>\", for:\"genericTypeParameters\"}\n     */\n    /**\n     * The knockout template used to render the content of the column header.\n     *\n     * This attribute is only exposed via the <code class=\"prettyprint\">ojComponent</code> binding, and is not a\n     * component option. The following\n     *   variables are also passed into the template\n     *     <ul>\n     *       <li>$columnIndex: The column index</li>\n     *       <li>$data: The header text</li>\n     *       <li>$headerContext: The header context</li>\n     *     </ul>\n     *   </li>\n     *\n     * @ojbindingonly\n     * @name headerTemplate\n     * @memberof! oj.ojTable.Column\n     * @instance\n     * @type {string|null}\n     * @ojsignature {target:\"Type\", value:\"?\"}\n     * @default null\n     *\n     * @example <caption>Specify the column header <code class=\"prettyprint\">template</code> when initializing Table:</caption>\n     * // set the template\n     * &lt;oj-table aria-label=\"Departments Table\"\n     *      data='{{dataProvider}}'\n     *      columns='[{\"headerText\": \"Department Id\", \"field\": \"DepartmentId\"},\n     *                {\"headerText\": \"Department Name\", \"field\": \"DepartmentName\"},\n     *                {\"headerText\": \"Location Id\", \"field\": \"LocationId\"},\n     *                {\"headerText\": \"Manager Id\", \"field\": \"ManagerId\"},\n     *                {\"headerTemplate\": \"oracle_link_hdr\"}]'&gt;\n     * &lt;/oj-table&gt;\n     *\n     * @ignore\n     */\n    /**\n     * The knockout template used to render the content of the column footer.\n     *\n     * This attribute is only exposed via the <code class=\"prettyprint\">ojComponent</code> binding, and is not a\n     * component option. The following\n     *   variables are also passed into the template\n     *     <ul>\n     *       <li>$columnIndex: The column index</li>\n     *       <li>$footerContext: The header context</li>\n     *     </ul>\n     *   </li>\n     *\n     * @ojbindingonly\n     * @name footerTemplate\n     * @memberof! oj.ojTable.Column\n     * @instance\n     * @type {string|null}\n     * @ojsignature {target:\"Type\", value:\"?\"}\n     * @default null\n     *\n     * @example <caption>Specify the column footer <code class=\"prettyprint\">template</code> when initializing Table:</caption>\n     * // set the template\n     * &lt;oj-table aria-label=\"Departments Table\"\n     *      data='{{dataProvider}}'\n     *      columns-default='[{\"headerText\": \"Department Id\", \"field\": \"DepartmentId\"},\n     *                       {\"headerText\": \"Department Name\", \"field\": \"DepartmentName\"},\n     *                       {\"headerText\": \"Location Id\", \"field\": \"LocationId\"},\n     *                       {\"headerText\": \"Manager Id\", \"field\": \"ManagerId\"},\n     *                       {\"footerTemplate\": \"oracle_link_ftr\"}]'&gt;\n     * &lt;/oj-table&gt;\n     *\n     * @ignore\n     */\n    /**\n     * An array of column definitions.\n     * <p>If the application change the column definitions after the Table is loaded, it must call the\n     * <a href=\"#refresh\"><code class=\"prettyprint\">refresh()</code></a> method to update the Table display.\n     *\n     * @expose\n     * @public\n     * @instance\n     * @memberof! oj.ojTable\n     * @ojshortdesc An array of column definitions. See the Help documentation for more information.\n     * @ojwriteback\n     * @type {Array.<Object>|null}\n     * @default null\n     * @ojsignature [{target: \"Type\", value: \"Array<oj.ojTable.Column<K,D>> | null\", jsdocOverride: true},\n     *               {target:\"Type\", value:\"<K,D>\", for:\"genericTypeParameters\"}]\n     * @example <caption>Initialize the table with the <code class=\"prettyprint\">columns</code> attribute specified:</caption>\n     * &lt;oj-table\n     *   columns='[{\"headerText\": \"Department Id\", \"field\": \"DepartmentId\"},\n     *             {\"headerText\": \"Department Name\", \"field\": \"DepartmentName\"}]'&gt;\n     * &lt;/oj-table>\n     *\n     * @example <caption>Get or set the <code class=\"prettyprint\">columns</code> property after initialization:</caption>\n     * // Get one\n     * var value = myTable.columns[0];\n     *\n     * // Get all\n     * var values = myTable.columns;\n     *\n     * // Set all (There is no permissible \"set one\" syntax.)\n     * myTable.columns = [{\"headerText\": \"Department Id\", \"field\": \"DepartmentId\"},\n     *                    {\"headerText\": \"Department Name\", \"field\": \"DepartmentName\"}];\n     */\n    columns: [\n      {\n        className: null,\n        field: null,\n        footerClassName: null,\n        footerRenderer: null,\n        footerStyle: null,\n        footerTemplate: null,\n        frozenEdge: null,\n        headerClassName: null,\n        headerRenderer: null,\n        headerStyle: null,\n        headerTemplate: null,\n        headerText: null,\n        renderer: null,\n        resizable: 'disabled',\n        id: null,\n        sortProperty: null,\n        sortable: 'auto',\n        style: null,\n        template: null,\n        minWidth: null,\n        maxWidth: null,\n        weight: null,\n        width: null\n      }\n    ],\n\n    /**\n     * The default knockout template used to render the content of the column header.\n     *\n     * This attribute is only exposed via the <code class=\"prettyprint\">ojComponent</code> binding, and is not a\n     * component option. The following\n     *   variables are also passed into the template\n     *     <ul>\n     *       <li>$columnIndex: The column index.</li>\n     *       <li>$data: The header text.</li>\n     *       <li>$headerContext: The header context.</li>\n     *     </ul>\n     *   </li>\n     *\n     * @ojbindingonly\n     * @name headerTemplate\n     * @memberof! oj.ojTable.ColumnDefault\n     * @instance\n     * @type {string|null}\n     * @ojsignature {target:\"Type\", value:\"?\"}\n     * @default null\n     *\n     * @example <caption>Specify the column header <code class=\"prettyprint\">template</code> when initializing Table:</caption>\n     * // set the template\n     * &lt;oj-table aria-label=\"Departments Table\"\n     *      data='{{dataProvider}}'\n     *      columns-default='[{\"headerText\": \"Department Id\", \"field\": \"DepartmentId\"},\n     *                        {\"headerText\": \"Department Name\", \"field\": \"DepartmentName\"},\n     *                        {\"headerText\": \"Location Id\", \"field\": \"LocationId\"},\n     *                        {\"headerText\": \"Manager Id\", \"field\": \"ManagerId\"},\n     *                        {\"headerTemplate\": \"oracle_link_hdr\"}]'&gt;\n     * &lt;/oj-table&gt;\n     *\n     * @ignore\n     */\n    /**\n     * The default knockout template used to render the content of the column footer.\n     *\n     * This attribute is only exposed via the <code class=\"prettyprint\">ojComponent</code> binding, and is not a\n     * component option. The following\n     *   variables are also passed into the template\n     *     <ul>\n     *       <li>$columnIndex: The column index.</li>\n     *       <li>$footerContext: The header context.</li>\n     *     </ul>\n     *   </li>\n     *\n     * @ojbindingonly\n     * @name footerTemplate\n     * @memberof! oj.ojTable.ColumnDefault\n     * @instance\n     * @type {string|null}\n     * @ojsignature {target:\"Type\", value:\"?\"}\n     * @default null\n     *\n     * @example <caption>Specify the column footer <code class=\"prettyprint\">template</code> when initializing Table:</caption>\n     * // set the template\n     * &lt;oj-table aria-label=\"Departments Table\"\n     *      data='{{dataProvider}}'\n     *      columns-default='[{\"headerText\": \"Department Id\", \"field\": \"DepartmentId\"},\n     *                        {\"headerText\": \"Department Name\", \"field\": \"DepartmentName\"},\n     *                        {\"headerText\": \"Location Id\", \"field\": \"LocationId\"},\n     *                        {\"headerText\": \"Manager Id\", \"field\": \"ManagerId\"},\n     *                        {\"footerTemplate\": \"oracle_link_ftr\"}]'&gt;\n     * &lt;/oj-table&gt;\n     *\n     * @ignore\n     */\n    /**\n     * Object that defines Column default properties\n     * @typedef {object} oj.ojTable.ColumnDefault\n     * @ojimportmembers oj.ojTableBaseColumnProperties\n     * @ojimportmembers oj.ojTableColumnDefaultProperties\n     * @ojsignature [{target:\"Type\", value:\"<K,D>\", for:\"genericTypeParameters\"}]\n     * @ojdeprecated [{target:\"property\", for: \"footerTemplate\", since:\"7.0.0\", description:\"Use the footerTemplate slot instead.\" },\n     * {target:\"property\", for: \"headerTemplate\", since:\"7.0.0\", description:\"Use the headerTemplate slot instead.\" },\n     * {target:\"property\", for: \"template\", since:\"7.0.0\", description:\"Use the template slot instead.\" }]\n     */\n    /**\n     * Default values to apply to all column objects.\n     * @expose\n     * @public\n     * @instance\n     * @memberof! oj.ojTable\n     * @type {Object|null}\n     * @ojsignature [{target: \"Type\", value: \"oj.ojTable.ColumnDefault<K,D> | null\", jsdocOverride: true},\n     *                {target:\"Type\", value:\"<K,D>\", for:\"genericTypeParameters\"}]\n     *\n     * @example <caption>Initialize the component, overriding some columns defaults and leaving the others intact:</caption>\n     * &lt;!-- Using dot notation -->\n     * &lt;oj-table columns-default.sortable='disabled' columns-default.header-style='text-align: left; white-space:nowrap;'>&lt;/oj-table>\n     *\n     * &lt;!-- Using JSON notation -->\n     * &lt;oj-table columns-default='{\"sortable\":\"disabled\", \"headerStyle\":\"text-align: left; white-space:nowrap;\"}'>&lt;/oj-table>\n     *\n     * @example <caption>Get or set the <code class=\"prettyprint\">columnsDefault</code> property after initialization:</caption>\n     * // Get one\n     * var value = myTable.columnsDefault.headerStyle;\n     *\n     * // Set one, leaving the others intact. Use the setProperty API for\n     * // subproperties so that a property change event is fired.\n     * myTable.setProperty('columnsDefault.headerStyle', 'text-align: left; white-space:nowrap;');\n     *\n     * // Get all\n     * var values = myTable.columnsDefault;\n     *\n     * // Set all.  Must list every default, as those not listed are lost.\n     * myTable.columnsDefault = {\n     *     sortable: 'disabled',\n     *     headerStyle: 'text-align: left; white-space:nowrap;'\n     * };\n     */\n    columnsDefault: {\n      className: null,\n      field: null,\n      footerClassName: null,\n      footerRenderer: null,\n      footerStyle: null,\n      footerTemplate: null,\n      headerClassName: null,\n      headerRenderer: null,\n      headerStyle: null,\n      headerTemplate: null,\n      headerText: null,\n      renderer: null,\n      resizable: 'disabled',\n      sortProperty: null,\n      sortable: 'auto',\n      style: null,\n      template: null,\n      minWidth: 'auto',\n      maxWidth: null,\n      weight: 1,\n      width: null\n    },\n\n    /**\n     * Triggered before the current row is changed via the <code class=\"prettyprint\">currentRow</code> property or via the UI.\n     *\n     * @expose\n     * @event\n     * @ojbubbles\n     * @ojcancelable\n     * @memberof oj.ojTable\n     * @ojshortdesc Triggered before the current row is changed.\n     * @instance\n     * @property {Object} currentRow The new current row.\n     * @property {Object} previousCurrentRow The previous current row.\n     * @ojsignature [{target:\"Type\", value:\"<K>\", for:\"genericTypeParameters\"},\n     *               {target:\"Type\", value:\"oj.ojTable.CurrentRow<K>\", for:\"currentRow\", jsdocOverride:true},\n     *               {target:\"Type\", value:\"oj.ojTable.CurrentRow<K>\", for:\"previousCurrentRow\", jsdocOverride:true}]\n     */\n    beforeCurrentRow: null,\n\n    /**\n     * Triggered before the table is going to enter edit mode. To prevent editing the row, call <code class=\"prettyprint\">event.preventDefault()</code> in the listener.\n     *\n     * @expose\n     * @event\n     * @ojbubbles\n     * @ojcancelable\n     * @memberof oj.ojTable\n     * @ojshortdesc Triggered before the table is going to enter edit mode.\n     * @instance\n     * @property {function} accept This method can be called with an application-created Promise to cancel this event asynchronously.\n     * The Promise should be resolved or rejected to accept or cancel the event, respectively.\n     * @property {Object} rowContext The rowContext of the row that editing is going to be performed on.\n     * @property {Element} rowContext.componentElement A reference to the Table root element.\n     * @property {Element} rowContext.parentElement Empty rendered TR element.\n     * @property {any} rowContext.datasource The \"data\" attribute of the Table.\n     * @property {\"edit\"|\"navigation\"} rowContext.mode The mode of the row.  It can be \"edit\" or \"navigation\".\n     * @property {Item<K, D>} rowContext.item The Item<K, D> for the row being edited.\n     * @property {any} rowContext.status Contains the rowIndex, rowKey, and currentRow\n     * @ojsignature [{target:\"Type\", value:\"<K,D>\", for:\"genericTypeParameters\"},\n     *               {target:\"Type\", value:\"(acceptPromise:Promise<void>) => void\", for:\"accept\", jsdocOverride: true},\n     *               {target:\"Type\", value:\"DataProvider<K, D>|null\", for:\"rowContext.datasource\", jsdocOverride:true},\n     *               {target:\"Type\", value:\"ojTable.ContextStatus<K>\", for:\"rowContext.status\", jsdocOverride:true}]\n     * @ojdeprecated [{target:\"property\", for: \"rowContext.componentElement\", since:\"10.0.0\", description:\"Use HTMLDocument methods to retrieve this element.\"},\n     *                {target:\"property\", for: \"rowContext.parentElement\", since:\"10.0.0\", description:\"Use HTMLDocument methods to retrieve this element.\"},\n     *                {target:\"property\", for: \"rowContext.status\", since:\"10.0.0\", description:\"Use rowContext.item instead.\"}]\n     */\n    beforeRowEdit: null,\n\n    /**\n     * Triggered before the table is going to exit edit mode. To prevent exit editing, call <code class=\"prettyprint\">event.preventDefault()</code> in the listener.\n     * There is a provided beforeRowEditEnd function, oj.DataCollectionEditUtils.basicHandleRowEditEnd, which can be specified.\n     * This function will handle canceling edits as well as invoking validation on input elements.\n     *\n     * @expose\n     * @event\n     * @ojbubbles\n     * @ojcancelable\n     * @memberof oj.ojTable\n     * @ojshortdesc Triggered before the table is going to exit edit mode. See the Help documentation for more information.\n     * @instance\n     * @property {function} accept This method can be called with an application-created Promise to cancel this event asynchronously.\n     * The Promise should be resolved or rejected to accept or cancel the event, respectively.\n     * @property {function} setUpdatedItem This method can be called with an application-created Promise to resolve with updated row item object. This method can be called in synchronous or asynchronous editing.\n     * In case of asynchronous editing this method should be involked before resolving accept promise.\n     * This is an optional method to prevent table from calling fetch on the dataprovider and also useful when application know about the no data change for the row.\n     * Note: If called more than once, only the most recent Promise provided will be honored.\n     * @property {Object} rowContext The rowContext of the edited row.\n     * @property {Element} rowContext.componentElement A reference to the Table root element.\n     * @property {Element} rowContext.parentElement Empty rendered TR element.\n     * @property {any} rowContext.datasource The \"data\" attribute of the Table.\n     * @property {\"edit\"|\"navigation\"} rowContext.mode The mode of the row.  It can be \"edit\" or \"navigation\".\n     * @property {Item<K, D>} rowContext.item The Item<K, D> for the row being edited.\n     * @property {any} rowContext.status Contains the rowIndex, rowKey, and currentRow.\n     * @property {boolean} cancelEdit true if the edit should be negated based on actions (i.e. escape key).\n     * @ojsignature [{target:\"Type\", value:\"<K,D>\", for:\"genericTypeParameters\"},\n     *               {target:\"Type\", value:\"(acceptPromise:Promise<void>) => void\", for:\"accept\", jsdocOverride: true},\n     *               {target:\"Type\", value:\"(param:Promise<{updatedItem: Item<K,D>}>) => void\", for:\"setUpdatedItem\", jsdocOverride: true},\n     *               {target:\"Type\", value:\"DataProvider<K, D>|null\", for:\"rowContext.datasource\", jsdocOverride:true},\n     *               {target:\"Type\", value:\"ojTable.ContextStatus<K>\", for:\"rowContext.status\", jsdocOverride:true}]\n     * @ojdeprecated [{target:\"property\", for: \"rowContext.componentElement\", since:\"10.0.0\", description:\"Use HTMLDocument methods to retrieve this element.\" },\n     *                {target:\"property\", for: \"rowContext.parentElement\", since:\"10.0.0\", description:\"Use HTMLDocument methods to retrieve this element.\" },\n     *                {target:\"property\", for: \"rowContext.status\", since:\"10.0.0\", description:\"Use rowContext.item instead.\" }]\n     */\n    beforeRowEditEnd: null,\n\n    /**\n     * Triggered before the table is going to exit the insert row mode. To prevent exit inserting, call <code class=\"prettyprint\">event.preventDefault()</code> in the listener.\n     * @expose\n     * @event\n     * @ojbubbles\n     * @ojcancelable\n     * @memberof oj.ojTable\n     * @instance\n     * @property {function} accept This method can be called with an application-created Promise to cancel this event asynchronously.\n     * The Promise should be resolved or rejected to accept or cancel the event, respectively.\n     * @property {boolean} cancelAdd true if the insert should be negated based on actions (i.e. escape key).\n     * @ojshortdesc Triggered before the table is going to exit the insert row mode. See the Help documentation for more information.\n     */\n    beforeRowAddEnd: null,\n\n    /**\n     * Triggered when the table has finished rendering.\n     *\n     * @expose\n     * @event\n     * @memberof! oj.ojTable\n     * @instance\n     *\n     * @ignore\n     */\n    ready: null,\n\n    /**\n     * Triggered when user performs an action gesture on a row while Table is in navigation mode.  The action gestures include:\n     * <ul>\n     *   <li>User clicks anywhere in a row</li>\n     *   <li>User taps anywhere in a row</li>\n     *   <li>User pressed enter key while a row or a cell within the row or content within a cell has focus</li>\n     * </ul>\n     *\n     * @expose\n     * @event\n     * @ojbubbles\n     * @memberof oj.ojTable\n     * @ojshortdesc Triggered when user performs an action gesture on a row.\n     * @instance\n     * @property {Object} context The context information about the row where the action gesture is performed on.\n     * @property {Event} originalEvent The DOM event that triggers the action.\n     * @ojsignature [{target:\"Type\", value:\"<K,D>\", for:\"genericTypeParameters\"},\n     *                {target:\"Type\", value:\"ojcommontypes.ItemContext<K,D>\", for:\"context\", jsdocOverride:true}]\n     */\n    rowAction: null,\n\n    /**\n     * Triggered when a sort is performed on the table.\n     *\n     * @expose\n     * @event\n     * @ojbubbles\n     * @ojcancelable\n     * @memberof oj.ojTable\n     * @instance\n     * @property {string} header The key of the header which was sorted on.\n     * @property {'ascending'|'descending'} direction The direction of the sort.\n     */\n    sort: null\n\n    /**\n     * The knockout template used to render the content of the row.\n     *\n     * This attribute is only exposed via the <code class=\"prettyprint\">ojComponent</code> binding, and is not a\n     * component option. The following\n     *   variables are also passed into the template\n     *     <ul>\n     *       <li>$rowContext: The row context</li>\n     *     </ul>\n     *   </li>\n     *\n     * @ojbindingonly\n     * @name rowTemplate\n     * @memberof! oj.ojTable\n     * @instance\n     * @type {string|null}\n     * @default null\n     *\n     * @example <caption>Specify the row <code class=\"prettyprint\">template</code> when initializing Table:</caption>\n     * // set the template\n     * &lt;oj-table aria-label=\"Departments Table\"\n     *   data='{{dataProvider}}' row-template='row_tmpl'&gt;&lt;/oj-table&gt;\n     *\n     * @ignore\n     */\n  };\n\n  /** ** start Public APIs ****/\n\n  /**\n   * {@ojinclude \"name\":\"nodeContextDoc\"}\n   * @param {!Element} node - {@ojinclude \"name\":\"nodeContextParam\"}\n   * @returns {Object|null} {@ojinclude \"name\":\"nodeContextReturn\"}\n   * @ojsignature {target:\"Type\", value:\"{subId: 'oj-table-cell', rowIndex: number, columnIndex: number, key: K} | {subId: 'oj-table-footer'|'oj-table-header',index: number}\",for:\"returns\"}\n   * @alias getContextByNode\n   * @example {@ojinclude \"name\":\"nodeContextExample\"}\n   * @expose\n   * @instance\n   * @memberof! oj.ojTable\n   * @ojshortdesc Returns an object with context for the given child DOM node. See the Help documentation for more information.\n   */\n  Table.prototype.getContextByNode = function (node) {\n    // context objects are documented with @ojnodecontext\n    var context = this.getSubIdByNode(node, true);\n    if (context) {\n      if (context.subId === Table._SUB_ID._TABLE_CELL) {\n        var rowIdx = context.rowIndex;\n        var rowKey = this._getRowKeyForRowIdx(rowIdx);\n        context.key = rowKey;\n      }\n    }\n    return context;\n  };\n\n  /**\n   * Return the row data for a rendered row in the table.\n   * @param {number} rowIndex row index\n   * @returns {Object | null} a compound object which has the structure below. If the row has not been rendered, returns null.<p>\n   * <table>\n   * <tbody>\n   * <tr><td><b>data</b></td><td>The raw row data</td></tr>\n   * <tr><td><b>index</b></td><td>The index for the row</td></tr>\n   * <tr><td><b>key</b></td><td>The key value for the row</td></tr>\n   * </tbody>\n   * </table>\n   * @ojsignature {target: \"Type\", value: \"(rowIndex: number) : {data: D, index: number, key: K} | null\"}\n   * @export\n   * @expose\n   * @alias getDataForVisibleRow\n   * @memberof! oj.ojTable\n   * @instance\n   * @example <caption>Invoke the <code class=\"prettyprint\">getDataForVisibleRow</code> method:</caption>\n   * myTable.getDataForVisibleRow(2);\n   */\n  Table.prototype.getDataForVisibleRow = function (rowIndex) {\n    var tableBodyRow = this._getTableBodyRow(rowIndex);\n    if (tableBodyRow != null) {\n      return {\n        key: tableBodyRow[Table._ROW_ITEM_EXPANDO].key,\n        data: tableBodyRow[Table._ROW_ITEM_EXPANDO].data,\n        index: rowIndex\n      };\n    }\n    return null;\n  };\n\n  // @inheritdoc\n  Table.prototype.getNodeBySubId = function (locator) {\n    if (locator == null) {\n      return this.element ? this.element[0] : null;\n    }\n    var columnIdx;\n    var subId = locator.subId;\n    if (subId === Table._SUB_ID._TABLE_CELL) {\n      var rowIdx = parseInt(locator.rowIndex, 10);\n      columnIdx = parseInt(locator.columnIndex, 10);\n      return this._getTableBodyLogicalCells(rowIdx)[columnIdx];\n    } else if (\n      subId === Table._SUB_ID._TABLE_HEADER ||\n      subId === Table._SUB_ID._TABLE_SORT_ASCENDING ||\n      subId === Table._SUB_ID._TABLE_SORT_DESCENDING\n    ) {\n      columnIdx = locator.index;\n      var tableHeaderColumn = this._getTableHeaderLogicalColumns()[columnIdx];\n      if (tableHeaderColumn != null) {\n        if (subId === Table._SUB_ID._TABLE_HEADER) {\n          return tableHeaderColumn;\n        } else if (subId === Table._SUB_ID._TABLE_SORT_ASCENDING) {\n          var tableHeaderColumnSortAsc = this._getTableElementsByClassName(\n            tableHeaderColumn,\n            Table.CSS_CLASSES._COLUMN_HEADER_ASC_ICON_CLASS\n          );\n          if (tableHeaderColumnSortAsc.length > 0) {\n            return tableHeaderColumnSortAsc[0];\n          }\n        } else {\n          var tableHeaderColumnSortDsc = this._getTableElementsByClassName(\n            tableHeaderColumn,\n            Table.CSS_CLASSES._COLUMN_HEADER_DSC_ICON_CLASS\n          );\n          if (tableHeaderColumnSortDsc.length > 0) {\n            return tableHeaderColumnSortDsc[0];\n          }\n        }\n      }\n    } else if (subId === Table._SUB_ID._TABLE_FOOTER) {\n      columnIdx = locator.index;\n      var tableFooterCell = this._getTableFooterLogicalCells()[columnIdx];\n      if (tableFooterCell != null) {\n        return tableFooterCell;\n      }\n    }\n\n    // Non-null locators have to be handled by the component subclasses\n    return null;\n  };\n\n  // @inheritdoc\n  Table.prototype.getSubIdByNode = function (node, ignoreSortIcons) {\n    var cell = this._getFirstAncestor(node, '.' + Table.CSS_CLASSES._TABLE_DATA_CELL_CLASS, true);\n    if (cell != null) {\n      return {\n        subId: Table._SUB_ID._TABLE_CELL,\n        rowIndex: this._getElementRowIdx(cell),\n        columnIndex: this._getElementColumnIdx(cell)\n      };\n    }\n\n    var headerSortAsc = this._getFirstAncestor(\n      node,\n      '.' + Table.CSS_CLASSES._COLUMN_HEADER_ASC_ICON_CLASS,\n      true\n    );\n    if (headerSortAsc != null) {\n      return {\n        subId: ignoreSortIcons ? Table._SUB_ID._TABLE_HEADER : Table._SUB_ID._TABLE_SORT_ASCENDING,\n        index: this._getElementColumnIdx(headerSortAsc)\n      };\n    }\n\n    var headerSortDsc = this._getFirstAncestor(\n      node,\n      '.' + Table.CSS_CLASSES._COLUMN_HEADER_DSC_ICON_CLASS,\n      true\n    );\n    if (headerSortDsc != null) {\n      return {\n        subId: ignoreSortIcons ? Table._SUB_ID._TABLE_HEADER : Table._SUB_ID._TABLE_SORT_DESCENDING,\n        index: this._getElementColumnIdx(headerSortDsc)\n      };\n    }\n\n    var header = this._getFirstAncestor(\n      node,\n      '.' + Table.CSS_CLASSES._COLUMN_HEADER_CELL_CLASS,\n      true\n    );\n    if (header != null) {\n      return {\n        subId: Table._SUB_ID._TABLE_HEADER,\n        index: this._getElementColumnIdx(header)\n      };\n    }\n\n    var footer = this._getFirstAncestor(node, '.' + Table.CSS_CLASSES._TABLE_FOOTER_CELL_CLASS, true);\n    if (footer != null) {\n      return {\n        subId: Table._SUB_ID._TABLE_FOOTER,\n        index: this._getElementColumnIdx(footer)\n      };\n    }\n    return null;\n  };\n\n  /**\n   * Refresh the table.\n   * @export\n   * @expose\n   * @alias refresh\n   * @memberof! oj.ojTable\n   * @instance\n   * @return {void}\n   * @example <caption>Invoke the <code class=\"prettyprint\">refresh</code> method:</caption>\n   * myTable.refresh();\n   */\n  Table.prototype.refresh = function () {\n    this._super();\n    this._refresh();\n  };\n\n  /**\n   * Refresh a row in the table.\n   * @param {number} rowIdx  Index of the row to refresh.\n   * @return {Promise.<boolean>} Promise resolves when done to true if refreshed, false if not\n   * @throws {Error}\n   * @export\n   * @expose\n   * @alias refreshRow\n   * @memberof! oj.ojTable\n   * @ojdeprecated {since: \"13.0.0\", description: \"Use DataProvider mutations and update events instead.\"}\n   * @instance\n   * @example <caption>Invoke the <code class=\"prettyprint\">refreshRow</code> method:</caption>\n   * myTable.refreshRow(1);\n   */\n  Table.prototype.refreshRow = function (rowIdx) {\n    var dataprovider = this._getData();\n    // if no data then bail\n    if (!dataprovider) {\n      return Promise.resolve(false);\n    }\n\n    var tableBodyRows = this._getTableBodyRows();\n\n    if (isNaN(rowIdx) || rowIdx < 0 || rowIdx >= tableBodyRows.length || tableBodyRows.length === 0) {\n      // validate rowIdx value\n      var errSummary = Table._LOGGER_MSG._ERR_REFRESHROW_INVALID_INDEX_SUMMARY;\n      var errDetail = ojtranslation.applyParameters(Table._LOGGER_MSG._ERR_REFRESHROW_INVALID_INDEX_DETAIL, {\n        rowIdx: rowIdx.toString()\n      });\n      throw new RangeError(errSummary + '\\n' + errDetail);\n    }\n    return this._queueTask(\n      function () {\n        return this._refreshRow(rowIdx, true, true);\n      }.bind(this)\n    );\n  };\n\n  /**\n   * Returns a jQuery object containing the root dom element of the table\n   *\n   * <p>This method does not accept any arguments.\n   *\n   * @expose\n   * @override\n   * @memberof oj.ojTable\n   * @instance\n   * @ignore\n   * @return {jQuery} the root DOM element of table\n   */\n  Table.prototype.widget = function () {\n    var tableContainer = this._getTableContainer();\n    if (tableContainer != null) {\n      return $(tableContainer);\n    }\n    return this.element;\n  };\n\n  /** ** end Public APIs ****/\n\n  /** ** start internal widget functions ****/\n\n  /**\n   * @override\n   * @protected\n   * @instance\n   * @memberof! oj.ojTable\n   */\n  Table.prototype._ComponentCreate = function () {\n    this._super();\n    this._initTemplateEngine();\n    this._draw();\n    this._registerCustomEvents();\n    this._on(this._events);\n    if (this._isTouchDevice()) {\n      this._registerTouchEvents();\n    }\n    this._registerDomEventListeners();\n    this._setEditableRowIdx(null);\n\n    DataCollectionUtils.disableDefaultBrowserStyling(this.element[0]);\n  };\n\n  /**\n   * Initialize the table after creation\n   * @protected\n   * @override\n   * @memberof! oj.ojTable\n   */\n  Table.prototype._AfterCreate = function () {\n    this._super();\n    // create the context menu\n    this._createContextMenuContainer();\n    this._isInitFetch = true;\n  };\n\n  /**\n   * Sets up needed resources for table, for example, add\n   * listeners.\n   * @protected\n   * @override\n   * @memberof! oj.ojTable\n   */\n  Table.prototype._SetupResources = function () {\n    this._super();\n    this._registerResizeListener();\n    // register event listeners for table on the datasource so that the table\n    // component is notified when rows are added, deleted, etc from the datasource.\n    this._registerDataSourceEventListeners();\n    if (this._isInitFetch) {\n      this._initFetch();\n      this._isInitFetch = false;\n    } else {\n      this._queueTask(\n        function () {\n          this._getLayoutManager().notifyTableUpdate(Table._UPDATE._REFRESH);\n          return this._invokeDataFetchRows();\n        }.bind(this)\n      );\n    }\n  };\n\n  /**\n   * Releases resources for table.\n   * @protected\n   * @override\n   * @memberof! oj.ojTable\n   */\n  Table.prototype._ReleaseResources = function () {\n    this._super();\n    this._cleanComponent();\n  };\n\n  /**\n   * @override\n   * @private\n   */\n  Table.prototype._destroy = function () {\n    this._cleanComponent(true);\n  };\n\n  /**\n   * <p>Notifies the component that its subtree has been connected to the document programmatically after the component has\n   * been created.\n   *\n   * @memberof! oj.ojTable\n   * @instance\n   * @protected\n   * @override\n   */\n  Table.prototype._NotifyAttached = function () {\n    this._super();\n\n    // reattaching the Table causes the scroll position to be reset\n    this._scrollTop = undefined;\n    this._scrollLeft = undefined;\n\n    // for custom element, SetupResources will be called if needed\n    if (!this._IsCustomElement()) {\n      this._getLayoutManager().notifyTableUpdate(Table._UPDATE._ATTACHED);\n      // refresh dimensions if no tasks are pending since refresh dimensions runs during final task\n      if (!this._hasPendingTasks()) {\n        this._syncTableSizing();\n      }\n    } else {\n      this._initializeNotifyAttachedTimeout();\n    }\n  };\n\n  /**\n   * <p>Notifies the component that its subtree has been removed from the document programmatically after the component has\n   * been created.\n   *\n   * @memberof! oj.ojTable\n   * @instance\n   * @protected\n   * @override\n   */\n  Table.prototype._NotifyDetached = function () {\n    this._super();\n    this._clearNotifyAttachedTimeout();\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._initializeNotifyAttachedTimeout = function () {\n    this._clearNotifyAttachedTimeout();\n    // prettier-ignore\n    this._notifyAttachedTimeout = setTimeout( // @HTMLUpdateOK\n      function () {\n        if (!this._hasPendingTasks()) {\n          this._syncScrollPosition();\n        }\n        this._notifyAttachedTimeout = null;\n      }.bind(this),\n      0\n    );\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._clearNotifyAttachedTimeout = function () {\n    if (this._notifyAttachedTimeout != null) {\n      clearTimeout(this._notifyAttachedTimeout);\n      this._notifyAttachedTimeout = null;\n    }\n  };\n\n  /**\n   * <p>Notifies the component that its subtree has been made hidden programmatically after the component has\n   * been created.\n   */\n  Table.prototype._NotifyHidden = function () {\n    this._super();\n    this._getLayoutManager().clearCachedDimensions();\n  };\n\n  /**\n   * <p>Notifies the component that its subtree has been made visible programmatically after the component has\n   * been created.\n   *\n   * @memberof! oj.ojTable\n   * @instance\n   * @protected\n   * @override\n   */\n  Table.prototype._NotifyShown = function () {\n    this._super();\n    this._getLayoutManager().notifyTableUpdate(Table._UPDATE._SHOWN);\n    // refresh dimensions if no tasks are pending since refresh dimensions runs during final task\n    if (!this._hasPendingTasks()) {\n      this._syncTableSizing();\n    }\n  };\n\n  /**\n   * Override to do the delay connect/disconnect\n   * @memberof oj.ojTable\n   * @override\n   * @protected\n   */\n  Table.prototype._VerifyConnectedForSetup = function () {\n    return true;\n  };\n\n  Table.prototype._GetDefaultContextMenu = function () {\n    return this._defaultContextMenu;\n  };\n\n  /**\n   * @param {Object} contextMenu The JET Menu to open as a context menu\n   * @param {Event} event What triggered the menu launch\n   * @param {string} eventType \"mouse\", \"touch\", \"keyboard\"\n   * @private\n   */\n  Table.prototype._NotifyContextMenuGesture = function (contextMenu, event, eventType) {\n    var openOptions = {};\n    this._contextMenuEvent = event.originalEvent;\n\n    // first check if we are invoking on an editable or clickable element, or draggable element on touch event. If so bail\n    if (\n      this._isNodeEditable(this._contextMenuEvent.target) ||\n      this._isNodeClickable(this._contextMenuEvent.target) ||\n      (eventType === 'touch' && this._isNodeDraggable(this._contextMenuEvent.target))\n    ) {\n      return;\n    }\n\n    var headerColumn;\n    var tableBodyCell = this._getFirstAncestor(\n      this._contextMenuEvent.target,\n      '.' + Table.CSS_CLASSES._TABLE_DATA_CELL_CLASS,\n      true\n    );\n    if (tableBodyCell != null) {\n      var columnIdx = this._getElementColumnIdx(tableBodyCell);\n      headerColumn = this._getTableHeaderColumn(columnIdx);\n    } else {\n      headerColumn = this._getFirstAncestor(\n        this._contextMenuEvent.target,\n        '.' + Table.CSS_CLASSES._COLUMN_HEADER_CELL_CLASS,\n        true\n      );\n    }\n\n    if (this._contextMenuEvent.type === 'keydown') {\n      var table = this._getTable();\n      if (headerColumn == null) {\n        headerColumn = this._getActiveHeaderColumn();\n      }\n      if (this._contextMenuEvent.target === table) {\n        if (headerColumn != null) {\n          openOptions.position = {\n            my: Table._POSITION._START_TOP,\n            at: Table._POSITION._START_BOTTOM,\n            of: headerColumn\n          };\n        } else {\n          var focusedRowIdx = this._getActiveRowIndex();\n          if (focusedRowIdx >= 0) {\n            var tableBodyRow = this._getTableBodyRow(focusedRowIdx);\n            openOptions.position = {\n              my: Table._POSITION._START_TOP,\n              at: Table._POSITION._START_BOTTOM,\n              of: tableBodyRow\n            };\n          } else {\n            openOptions.position = {\n              my: Table._POSITION._START_TOP,\n              at: Table._POSITION._START_BOTTOM,\n              of: this._contextMenuEvent.target\n            };\n          }\n        }\n      } else {\n        openOptions.position = {\n          my: Table._POSITION._START_TOP,\n          at: Table._POSITION._START_BOTTOM,\n          of: this._contextMenuEvent.target\n        };\n      }\n    } else {\n      // don't show context menu if gesture triggered outside of Table's data regions\n      var footerCell = this._getFirstAncestor(\n        this._contextMenuEvent.target,\n        '.' + Table.CSS_CLASSES._TABLE_FOOTER_CELL_CLASS,\n        true\n      );\n      if (headerColumn == null && tableBodyCell == null && footerCell == null) {\n        return;\n      }\n    }\n    this._contextMenuEventHeaderColumn = headerColumn;\n\n    // for jQuery it's the menu instance, for custom element it's the element node\n    var contextMenuNode = contextMenu.element ? contextMenu.element[0] : contextMenu;\n    // Populate context menu items\n    this._populateContextMenuItems(contextMenuNode, this._handleContextMenuSelect.bind(this));\n    var contextMenuItemAsc = contextMenuNode.querySelectorAll('[data-oj-command=oj-table-sortAsc]');\n    if (contextMenuItemAsc.length > 0) {\n      contextMenuItemAsc = contextMenuItemAsc[0];\n      if (headerColumn && headerColumn.getAttribute('data-oj-sortable') === Table._OPTION_ENABLED) {\n        if (contextMenuItemAsc.nodeName === 'OJ-OPTION') {\n          contextMenuItemAsc.removeAttribute('disabled');\n        } else {\n          contextMenuItemAsc.classList.remove(Table.MARKER_STYLE_CLASSES._DISABLED);\n        }\n      } else if (contextMenuItemAsc.nodeName === 'OJ-OPTION') {\n        contextMenuItemAsc.setAttribute('disabled', 'true');\n      } else {\n        contextMenuItemAsc.classList.add(Table.MARKER_STYLE_CLASSES._DISABLED);\n      }\n    }\n    var contextMenuItemDsc = contextMenuNode.querySelectorAll('[data-oj-command=oj-table-sortDsc]');\n    if (contextMenuItemDsc.length > 0) {\n      contextMenuItemDsc = contextMenuItemDsc[0];\n      if (headerColumn && headerColumn.getAttribute('data-oj-sortable') === Table._OPTION_ENABLED) {\n        if (contextMenuItemDsc.nodeName === 'OJ-OPTION') {\n          contextMenuItemDsc.removeAttribute('disabled');\n        } else {\n          contextMenuItemDsc.classList.remove(Table.MARKER_STYLE_CLASSES._DISABLED);\n        }\n      } else if (contextMenuItemDsc.nodeName === 'OJ-OPTION') {\n        contextMenuItemDsc.setAttribute('disabled', 'true');\n      } else {\n        contextMenuItemDsc.classList.add(Table.MARKER_STYLE_CLASSES._DISABLED);\n      }\n    }\n    var contextMenuItemResize = contextMenuNode.querySelectorAll('[data-oj-command=oj-table-resize]');\n    if (contextMenuItemResize.length > 0) {\n      contextMenuItemResize = contextMenuItemResize[0];\n      if (headerColumn && headerColumn.getAttribute('data-oj-resizable') === Table._OPTION_ENABLED) {\n        if (contextMenuItemResize.nodeName === 'OJ-OPTION') {\n          contextMenuItemResize.removeAttribute('disabled');\n        } else {\n          contextMenuItemResize.classList.remove(Table.MARKER_STYLE_CLASSES._DISABLED);\n        }\n      } else if (contextMenuItemResize.nodeName === 'OJ-OPTION') {\n        contextMenuItemResize.setAttribute('disabled', 'true');\n      } else {\n        contextMenuItemResize.classList.add(Table.MARKER_STYLE_CLASSES._DISABLED);\n      }\n    }\n    this._OpenContextMenu(event, eventType, openOptions);\n  };\n\n  /**\n   * Sets multiple options\n   * @param {Object} options the options object\n   * @param {Object} flags additional flags for option\n   * @override\n   * @private\n   */\n  // eslint-disable-next-line no-unused-vars\n  Table.prototype._setOptions = function (options, flags) {\n    var requiresRefresh = false;\n    var requiresDataRefresh = false;\n    var requiresHeaderRefresh = false;\n    var keys = Object.keys(options);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var value = options[key];\n      if (this._isTableRefreshNeeded(key, value, flags)) {\n        if (key === 'columns') {\n          // an external change in 'columns' must reset any previous column reorder operations\n          this._columnsDestMap = null;\n          requiresHeaderRefresh = true;\n        } else if (key === 'selectionMode' && value.row !== undefined) {\n          requiresHeaderRefresh = true;\n        } else if (key === 'data') {\n          requiresDataRefresh = true;\n        }\n        requiresRefresh = true;\n      }\n    }\n    this._superApply(arguments);\n    if (requiresRefresh) {\n      if (requiresHeaderRefresh) {\n        this._clearCachedMetadata();\n        this._refreshTableHeader();\n      }\n      if (requiresDataRefresh) {\n        this._beforeDataRefresh();\n      }\n      this._refresh();\n    }\n  };\n\n  /**\n   * @override\n   * @private\n   */\n  Table.prototype._setOption = function (key, value, flags) {\n    if (key === 'selection') {\n      this._selectionSet = true;\n      // update row index/key values in the 'selection' option\n      this._syncRangeSelection(value);\n      this._superApply(arguments);\n      // after applying the new selection value, sync the selection state\n      this._validateInitialSelectionState(true);\n    } else if (key === 'selected') {\n      this._selectionSet = false;\n      this._superApply(arguments);\n      // after applying the new selected value, sync the selection state\n      this._validateInitialSelectionState(true);\n    } else if (key === 'currentRow') {\n      this._queueTask(\n        function () {\n          this._setCurrentRow(value, null, true);\n        }.bind(this)\n      ).catch(function () {});\n      this._superApply(arguments);\n    } else if (key === 'scrollPosition') {\n      this._queueTask(\n        function () {\n          // syncScrollPosition will update with proper value\n          this._syncScrollPosition(value);\n        }.bind(this)\n      );\n      this._superApply(arguments);\n    } else if (key === 'editRow') {\n      // setEditRow will update with all props within value\n      this._setEditRow(value);\n    } else if (key === 'scrollPolicyOptions' && flags != null) {\n      this._superApply(arguments);\n      if (this._isStickyLayoutEnabled()) {\n        if (flags.subkey === 'scrollerOffsetTop') {\n          this._styleTableContainer(this._getTableContainer());\n          this._getLayoutManager()._updateStickyRowTops();\n        } else if (flags.subkey === 'scrollerOffsetBottom') {\n          this._styleTableContainer(this._getTableContainer());\n        } else if (flags.subkey === 'scrollerOffsetStart' || flags.subkey === 'scrollerOffsetEnd') {\n          this._getLayoutManager()._initializeFrozenColumns();\n        }\n      }\n    } else if (key === 'addRowDisplay') {\n      this._queueTask(\n        function () {\n          return this._refreshAddRowDisplay();\n        }.bind(this)\n      );\n      this._superApply(arguments);\n    } else {\n      this._superApply(arguments);\n    }\n  };\n\n  // @inheritdoc\n  Table.prototype._CompareOptionValues = function (option, value1, value2) {\n    switch (option) {\n      case 'columns':\n      case 'currentRow':\n        return oj.Object.compareValues(value1, value2);\n      case 'selection':\n        if (value1 && value1.inverted === undefined) {\n          // eslint-disable-next-line no-param-reassign\n          value1.inverted = false;\n        }\n        if (value2 && value2.inverted === undefined) {\n          // eslint-disable-next-line no-param-reassign\n          value2.inverted = false;\n        }\n        if (value1 && value2 && value1.inverted !== value2.inverted) {\n          return false;\n        }\n        return oj.Object.compareValues(value1, value2);\n      case 'selected':\n        return (\n          ((value1.row && value2.row && DataCollectionUtils.areKeySetsEqual(value1.row, value2.row)) ||\n            (value1.row == null && value2.row == null)) &&\n          ((value1.column && value2.column && DataCollectionUtils.areKeySetsEqual(value1.column, value2.column)) ||\n            (value1.column == null && value2.column == null))\n        );\n      default:\n        return this._super(option, value1, value2);\n    }\n  };\n\n  /** ** end internal widget functions ****/\n\n  /** ** start internal functions ****/\n\n  /**\n   * Return table DnD utils instance\n   * @return {Object} instance of table DnD utils\n   * @private\n   */\n  Table.prototype._getTableDndContext = function () {\n    if (!this._tableDndContext) {\n      this._tableDndContext = new TableDndContext(this);\n    }\n    return this._tableDndContext;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._getLayoutManager = function () {\n    if (this._layoutManager == null) {\n      if (this._isStickyLayoutEnabled()) {\n        if (this._isFixedLayoutEnabled()) {\n          this._layoutManager = new TableFixedLayoutManager(this);\n        } else {\n          this._layoutManager = new TableStickyLayoutManager(this);\n        }\n      } else {\n        this._layoutManager = new TableLegacyLayoutManager(this);\n        // layout attribute is not supported with legacy rendering\n        if (this._isFixedLayoutEnabled()) {\n          Logger.error(\n            'The current theme does not support the layout=\"fixed\" attribute setting of the <oj-table>.'\n          );\n        }\n      }\n    }\n    return this._layoutManager;\n  };\n\n  /**\n   * @private\n   */\n  Table.prototype._clearLayoutManager = function () {\n    if (this._layoutManager != null) {\n      this._layoutManager.unregisterListeners();\n    }\n    this._layoutManager = null;\n  };\n\n  /**\n   * @private\n   */\n  // exposing this on the custom element so that it can be called by the Webelement\n  Table.prototype._doSortHelper = function (header, direction) {\n    const columDef = this._getColumnDefs();\n    const columnIdx = this._getColumnIdxForColumnKey(header);\n    const headerColumn = this._getTableHeaderColumn(columnIdx);\n    if (columnIdx < columDef.length) {\n      if (this._getColumnDefs()[columnIdx].sortable === Table._OPTION_ENABLED) {\n        if (headerColumn != null && $(headerColumn).data('sorted') === direction) {\n          return `Column is already sorted in ${direction} order.`;\n        }\n        this._handleSortTableHeaderColumn(\n          columnIdx,\n          direction === Table._COLUMN_SORT_ORDER._ASCENDING,\n          null\n        );\n        return null;\n      }\n      return 'Sort is not enabled for given header.';\n    }\n    return 'Invalid header.';\n  };\n\n  /* Later when needed\n  Table.prototype._whenReady = function() {\n    if (this._pendingTasks) {\n      return this._pendingTasks;\n    }\n    return Promise.resolve();\n  }\n  */\n\n  // --------------------------------------------------- oj.ojTable Styling Start -----------------------------------------------------------\n  // ---------------- oj-table-data-cell-no-padding --------------\n  /**\n   * Used to style a table cell so that it has no padding. <br/>\n   * An app developer would likely use this in the case of editable tables when an editable cell content does not need the default cell padding.<br/>\n   * The class is applied as follows:<br/><br/>\n   * The class must be applied to the table cell.\n   * @ojstyleclass oj-table-data-cell-no-padding\n   * @ojdisplayname No Padding\n   * @memberof oj.ojTable\n   * @ojtsexample\n   * &lt;oj-table id=\"tableId\" class='oj-table-data-cell-no-padding'>\n   * &lt;/oj-table>\n   */\n  // ---------------- oj-table-data-cell-padding --------------\n  /**\n   * Used to style a table cell so that it has default padding. <br/>\n   * An app developer would likely use this in the case of editable tables when an editable cell content does not need the default cell padding.<br/>\n   * The class is applied as follows:<br/><br/>\n   * The class must be applied to the table cell.\n   * @ojstyleclass oj-table-data-cell-padding\n   * @ojdisplayname Padding\n   * @memberof oj.ojTable\n   * @ojtsexample\n   * &lt;oj-table id=\"tableId\" class='oj-table-data-cell-padding'>\n   * &lt;/oj-table>\n   */\n  // ---------------- oj-table-hide-vertical-scrollbar --------------\n  /**\n   * Used to explicitly hide the vertical scrollbar when the table body is scrollable.<br/>\n   * An app developer would likely use this when synchronizing the vertical scrolling of the Table with another component, such as a Gantt chart.\n   * The class is applied as follows:<br/><br/>\n   * The class must be applied to the oj-table custom element.\n   * @ojstyleclass oj-table-hide-vertical-scrollbar\n   * @ojdisplayname Hide Vertical Scrollbar\n   * @memberof oj.ojTable\n   * @ojtsexample\n   * &lt;oj-table id=\"tableId\" class='oj-table-hide-vertical-scrollbar'>\n   * &lt;/oj-table>\n   */\n  // ---------------- oj-table-stretch --------------\n  /**\n   * Used to notify the Table that it should stretch its inner contents to fill all available horizontal and vertical space.\n   * This requires that the Table's outer dimensions are controlled externally, either by its containing layout or by height and width\n   * values being set on it.<br/>\n   * An app developer would likely use this when rendering a Table within a flex layout that specifies a content-based flex-basis value.\n   * The class is applied as follows:<br/><br/>\n   * The class must be applied to the oj-table custom element.\n   * @ojstyleclass oj-table-stretch\n   * @ojdisplayname Stretch\n   * @memberof oj.ojTable\n   * @ojunsupportedthemes ['Alta']\n   * @ojtsexample\n   * &lt;oj-table id=\"tableId\" class='oj-table-stretch'>\n   * &lt;/oj-table>\n   */\n  /**\n   * @ojstylevariableset oj-table-css-set1\n   * @ojdisplayname Table cell padding CSS\n   * @ojstylevariable oj-table-cell-padding-horizontal {description: \"Table horizontal cell padding\", formats: [\"length\"], help:\"#oj-table-css-set1\"}\n   * @memberof oj.ojTable\n   */\n\n  // --------------------------------------------------- oj.ojTable Styling End -----------------------------------------------------------\n  (function () {\n    oj.__registerWidget('oj.ojTable', $.oj.baseComponent, new Table());\n  })();\n\n  ojcomponentcore.setDefaultOptions({\n    ojTable: {\n      display: ojcomponentcore.createDynamicPropertyGetter(function () {\n        return ThemeUtils.getCachedCSSVarValues(['--oj-private-table-global-display-default'])[0];\n      })\n    }\n  });\n\n});\n","/**\n * @license\n * Copyright (c) 2014, 2023, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\ndefine(['exports', 'ojs/ojcore', 'ojs/ojmessaging'], function (exports, oj, Message) { 'use strict';\n\n  oj = oj && Object.prototype.hasOwnProperty.call(oj, 'default') ? oj['default'] : oj;\n  Message = Message && Object.prototype.hasOwnProperty.call(Message, 'default') ? Message['default'] : Message;\n\n  // ValidatorError\n\n  /**\n   * Constructs a ValidatorError instance from a summary and detail\n   *\n   * @param {string} summary a localized String that provides a summary of the error\n   * @param {string} detail a localized String that provides a detail of the error\n   * @example <caption>throw new oj.ValidationError from custom validator's validate method</caption>\n   *  // A custom validator whose validate method ensures that the value is not 'junk'.\n   *  self.noJunkValidator = {\n   *  'validate' : function (value)\n   *  {\n   *    value = value + \"\";\n   *    if (value && value.toLowerCase()  === \"junk\")\n   *    {\n   *      throw new ValidatorError(\"Invalid value\", \"You cannot enter a value that is 'junk'!!\");\n   *    }\n   *    return;\n   *    }\n   *  };\n   * @constructor\n   * @final\n   * @ojtsnoexport\n   * @ojtsexportastype\n   * @ojtsimport {module: \"ojmessaging\", type: \"AMD\", importName: \"Message\"}\n   * @since 0.6.0\n   * @export\n   */\n  const ValidatorError = function (summary, detail) {\n    var message = {\n      summary: summary,\n      detail: detail,\n      severity: Message.SEVERITY_LEVEL.ERROR\n    };\n    this.Init(message);\n  };\n\n  ValidatorError.prototype = new Error();\n\n  oj._registerLegacyNamespaceProp('ValidatorError', ValidatorError);\n\n  /**\n   * Initializes the instance.\n   * @param {Object} message an Object that duck-types oj.Message which is an\n   * Object with summary, detail, and severity keys. The severity is\n   * oj.Message.SEVERITY_LEVEL['ERROR'].\n   * @export\n   * @ignore\n   */\n  ValidatorError.prototype.Init = function (message) {\n    var detail = message.detail;\n    var summary = message.summary;\n    this._message = message;\n\n    // so browser can get to e.name and e.message\n    this.name = 'Validator Error';\n    this.message = detail || summary;\n  };\n\n  /**\n   * Returns an Object that duck-types oj.Message which is an\n   * Object with summary, detail, and severity properties. The severity is\n   * oj.Message.SEVERITY_LEVEL['ERROR']\n   *\n   * @example <caption>get the oj.ValidationError that was thrown and get the message</caption>\n   * var ojmessage = valError.getMessage();\n   * var severity = ojmessage['severity'] || oj.Message.SEVERITY_LEVEL['ERROR'];\n   * var summary = ojmessage['summary'];\n   * var detail = ojmessage['detail'];\n   * @returns {Object} an Object that duck-types oj.Message which is an\n   * Object with summary, detail, and severity properties.\n   * The severity is\n   * oj.Message.SEVERITY_LEVEL['ERROR']\n   * @ojsignature {target: \"Type\", value: \"oj.Message\", for: \"returns\"}\n   * @export\n   */\n  ValidatorError.prototype.getMessage = function () {\n    return this._message;\n  };\n\n  // ConverterError\n\n  /**\n   * Constructs a ConverterError instance from a summary and detail\n   *\n   * @param {string} summary a localized String that provides a summary of the error\n   * @param {string} detail a localized String that provides a detail of the error\n   * @constructor\n   * @final\n   * @ojtsnoexport\n   * @ojtsexportastype\n   * @since 0.6.0\n   * @export\n   */\n  const ConverterError = function (summary, detail) {\n    var message = {\n      summary: summary,\n      detail: detail,\n      severity: Message.SEVERITY_LEVEL.ERROR\n    };\n    this.Init(message);\n  };\n\n  ConverterError.prototype = new Error();\n\n  oj._registerLegacyNamespaceProp('ConverterError', ConverterError);\n\n  /**\n   * Initializes the instance.\n   * @param {Object} message an Object that duck-types oj.Message which is an\n   * Object with summary, detail, and severity properties.\n   * @export\n   * @ignore\n   */\n  ConverterError.prototype.Init = function (message) {\n    var detail = message.detail;\n    var summary = message.summary;\n    this._message = message;\n\n    // so browser can get to e.name and e.message\n    this.name = 'Converter Error';\n    this.message = detail || summary;\n  };\n\n  /**\n   * Returns an Object that duck-types oj.Message which is an\n   * Object with summary, detail, and severity properties.\n   *\n   * @return {Object} an Object that duck-types oj.Message which is an\n   * Object with summary, detail, and severity properties.\n   * @ojsignature {target: \"Type\", value: \"oj.Message\", for: \"returns\"}\n   * @export\n   */\n  ConverterError.prototype.getMessage = function () {\n    return this._message;\n  };\n\n  exports.ConverterError = ConverterError;\n  exports.ValidatorError = ValidatorError;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n});\n","/**\n * @license\n * Copyright (c) 2014, 2023, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\ndefine(['ojs/ojcore', 'ojs/ojtranslation', 'ojs/ojvalidator', 'ojs/ojvalidation-error', 'ojs/ojconverterutils'], function (oj, Translations, Validator, ojvalidationError, ConverterUtils) { 'use strict';\n\n  oj = oj && Object.prototype.hasOwnProperty.call(oj, 'default') ? oj['default'] : oj;\n  Validator = Validator && Object.prototype.hasOwnProperty.call(Validator, 'default') ? Validator['default'] : Validator;\n  ConverterUtils = ConverterUtils && Object.prototype.hasOwnProperty.call(ConverterUtils, 'default') ? ConverterUtils['default'] : ConverterUtils;\n\n  /**\n   * Constructs a NumberRangeValidator that ensures the value provided is within a given range.\n   * @param {Object=} options an object literal used to provide the following properties\n   * @export\n   * @constructor\n   * @final\n   * @augments oj.Validator\n   * @name oj.NumberRangeValidator\n   * @ojtsimport {module: \"ojvalidator\", type: \"AMD\", importName: \"Validator\"}\n   * @ojtsimport {module: \"ojconverter-number\", type:\"AMD\", imported: [\"NumberConverter\"]}\n   * @ojtsmodule\n   * @ojsignature [{target: \"Type\",\n   *                value: \"class NumberRangeValidator implements Validator<string|number>\"},\n   *               {target: \"Type\",\n   *                value: \"oj.NumberRangeValidator.ValidatorOptions\",\n   *                for: \"options\", jsdocOverride: true}\n   *              ]\n   * @since 0.7.0\n   * @see oj.AsyncNumberRangeValidator\n   *\n   */\n  const NumberRangeValidator = function _NumberRangeValidator(options) {\n    this.Init(options);\n  };\n\n  // Subclass from oj.Validator\n  oj.Object.createSubclass(NumberRangeValidator, Validator, 'oj.NumberRangeValidator');\n\n  /**\n   * @typedef {object} oj.NumberRangeValidator.ValidatorOptions\n   * @property {oj.NumberConverter=} converter - an instance implementation of oj.NumberConverter.\n   * It is used to format the value in error message. It is optional for the validator that a converter is passed in.\n   * @property {number=} min - the minimum number value of the entered value.\n   * @property {number=} max - the maximum number value of the entered value.\n   * @property {Object=} hint - an optional object literal of hints to be used. If not set,\n   * defaults will be used for the validator hint.\n   * See the individual hint properties below for details.\n   * <p>The hint strings (e.g., hint.min) are  passed as the 'pattern' parameter to\n   * [oj.Translations.html#applyParameters]{@link oj.Translations}. As stated in\n   * that documentation, if you are using a reserved character, you need to escape it with\n   * a dollar character ('$').\n   * </p>\n   * @property {string=} hint.max - a hint used to indicate the allowed maximum. When not present,\n   * the default hint is the resource defined with the key\n   * <code class=\"prettyprint\">oj-validator.range.number.hint.max</code>.<p>\n   * Tokens: <br/>\n   * {max} - the maximum<p>\n   * Usage: <br/>\n   * Enter a number less than or equal to {max}\n   * @property {string=} hint.min - a hint used to indicate the allowed minimum. When not present,\n   * the default hint is the resource defined with the key\n   * <code class=\"prettyprint\">oj-validator.range.number.hint.min</code>.<p>\n   * Tokens: <br/>\n   * {min} the minimum <p>\n   * Usage: <br/>\n   * Enter a number greater than or equal to {min}</li>\n   * @property {string=} hint.inRange - a hint used to indicate the allowed range. When not\n   * present, the default hint is the resource defined with the key\n   * <code class=\"prettyprint\">oj-validator.range.number.hint.inRange</code>.<p>\n   * Tokens:<br/>\n   * {min} the minimum<br/>\n   * {max} the maximum<p>\n   * Usage: <br/>\n   * Enter a number between {min} and {max}\n   * @property {string=} hint.exact - a hint used to indicate the allowed value.\n   * This is used when min and max are non-null and are equal to each other.\n   * When not present, the default hint is the resource defined with the key\n   * <code class=\"prettyprint\">oj-validator.range.number.hint.exact</code>.<p>\n   * Tokens:<br/>\n   * {num} the number allowed<br/>\n   * Usage: <br/>\n   * Enter the number {num}\n   * @since 3.0.0\n   * @property {Object=} messageDetail - an optional object literal of custom error messages to\n   * be used.\n   * <p>The messageDetail strings (e.g., messageDetail.rangeUnderflow) are  passed as the 'pattern'\n   * parameter to [oj.Translations.html#applyParameters]{@link oj.Translations}. As stated in\n   * that documentation, if you are using a reserved character, you need to escape it with\n   * a dollar character ('$').\n   * </p>\n   * @property {string=} messageDetail.rangeUnderflow - the detail error message to be used when\n   * input value is less than the set minimum value. When not present, the default detail message is\n   * the resource defined with the key\n   * <code class=\"prettyprint\">oj-validator.range.number.messageDetail.rangeUnderflow</code>.<p>\n   * Tokens:<br/>\n   * {value} - value entered by the user<br/>\n   * {min} - the minimum allowed value<p>\n   * Usage: <br/>\n   * The number must be greater than or equal to {min}.\n   * @property {string=} messageDetail.rangeOverflow - the detail error message to be used when\n   * input value exceeds the maximum value set. When not present, the default detail message is\n   * the resource defined with the key\n   * <code class=\"prettyprint\">oj-validator.range.number.messageDetail.rangeOverflow</code>.<p>\n   * Tokens:<br/>\n   * {value} - value entered by the user<br/>\n   * {max} - the maximum allowed value<p>\n   * Usage: <br/>\n   * The number must be less than or equal to {max}.\n   * @property {string=} messageDetail.exact - the detail error message to be used when the\n   * input value is not between min and max when min and max are both non-null and equal.\n   *  When not present, the default detail message is the resource defined with the key\n   * <code class=\"prettyprint\">oj-validator.range.number.messageDetail.exact</code>.<p>\n   * Tokens:<br/>\n   * {num} - the allowed value<p>\n   * Usage: <br/>\n   * The number must be {num}.\n   * @since 3.0.0\n   * @property {Object=} messageSummary - optional object literal of custom error summary message\n   * to be used.\n   * @property {string=} messageSummary.rangeUnderflow - the summary of the error message when\n   * input value is less than the set minimum value. When not present, the default message summary is\n   * the resource defined with the key\n   * <code class=\"prettyprint\">oj-validator.range.number.messageSummary.rangeUnderflow</code>.\n   * @property {string=} messageSummary.rangeOverflow - the summary of the error message when\n   * input value exceeds the maximum value set.  When not present, the default message summary is\n   * the resource defined with the key\n   * <code class=\"prettyprint\">oj-validator.range.number.messageSummary.rangeOverflow</code>.\n   */\n\n  /**\n   * Initializes validator instance with the set options\n   * @param {Object=} options\n   * @memberof oj.NumberRangeValidator\n   * @instance\n   * @export\n   * @ignore\n   */\n  NumberRangeValidator.prototype.Init = function (options) {\n    NumberRangeValidator.superclass.Init.call(this);\n\n    if (options) {\n      this._min = options.min;\n      this._max = options.max;\n      this._converter = ConverterUtils.getConverterInstance(options.converter);\n      this._hint = options.hint || {};\n      this._customMessageSummary = options.messageSummary || {};\n      this._customMessageDetail = options.messageDetail || {};\n    }\n  };\n\n  /**\n   * Validates the minimum + maximum conditions\n   *\n   * @param {string|number} value that is being validated\n   * @returns {void}\n   *\n   * @throws {Error} when value is out of range\n   * @ojsignature {target: \"Type\", for: \"returns\",\n   *                value: \"void\"}\n   * @memberof oj.NumberRangeValidator\n   * @instance\n   * @export\n   * @method validate\n   */\n  NumberRangeValidator.prototype.validate = function (value) {\n    var string = value ? value.toString() : value;\n    var numberValue = parseFloat(string);\n    var customMessageSummary = this._customMessageSummary;\n    var customMessageDetail = this._customMessageDetail;\n    var messageDetailRangeOverflow = customMessageDetail.rangeOverflow;\n    var messageDetailRangeUnderflow = customMessageDetail.rangeUnderflow;\n    var messageDetailExact = customMessageDetail.exact;\n    var messageSummaryRangeOverflow = customMessageSummary.rangeOverflow;\n    var messageSummaryRangeUnderflow = customMessageSummary.rangeUnderflow;\n    var min = this._min !== undefined ? parseFloat(this._min) : null;\n    var max = this._max !== undefined ? parseFloat(this._max) : null;\n    var summary = '';\n    var detail = '';\n    var params = null;\n    var translations = Translations;\n\n    if (value === null) {\n      // request to not throw an error when value being passed is of null\n      return;\n    }\n\n    if (min !== null && max !== null) {\n      // range\n      if ((numberValue >= min && numberValue <= max) || min > max) {\n        return;\n      }\n    } else if (min !== null) {\n      // only min\n      if (numberValue >= min) {\n        return;\n      }\n    } else if (max === null || numberValue <= max) {\n      // max only or no min or max\n      return;\n    }\n\n    var generateValidationError = function (minStr, maxStr) {\n      // if we haven't returned with an OK, then we need to throw a ValidatorError\n      //\n      // First check if we have both a max and a min and if they are equal. If so the message will\n      // be the messageDetail.exact message, like \"Enter the number 1\"\n      if (max !== null && min !== null && min === max) {\n        params = { value: value, num: maxStr };\n        detail = messageDetailExact\n          ? translations.applyParameters(messageDetailExact, params)\n          : translations.getTranslatedString('oj-validator.range.number.messageDetail.exact', params);\n        // if number is greater than max, the summary may say \"The number is too high\"\n        if (numberValue > max) {\n          summary =\n            messageSummaryRangeOverflow ||\n            translations.getTranslatedString(\n              'oj-validator.range.number.messageSummary.rangeOverflow'\n            );\n        } else if (numberValue < min) {\n          // if number is less than min, the summary may say \"The number is too low\"\n          summary = messageSummaryRangeOverflow\n            ? messageSummaryRangeUnderflow\n            : translations.getTranslatedString(\n                'oj-validator.range.number.messageSummary.rangeUnderflow'\n              );\n        }\n      } else if (max !== null && numberValue > max) {\n        // Next check if we have a max, and the number we are validating is greater than the max\n        // throw an error,\n        // like \"The number is too high.\" and \"The number must be less than or equal to {max}\"\n        params = { value: value, max: maxStr };\n        summary =\n          messageSummaryRangeOverflow ||\n          translations.getTranslatedString('oj-validator.range.number.messageSummary.rangeOverflow');\n        detail = messageDetailRangeOverflow\n          ? translations.applyParameters(messageDetailRangeOverflow, params)\n          : translations.getTranslatedString(\n              'oj-validator.range.number.messageDetail.rangeOverflow',\n              params\n            );\n      } else {\n        // Else the number we are validating is less than the min, throw an error,\n        // like \"The number is too low.\" and \"The number must be greater than or equal to {min}\"\n        params = { value: value, min: minStr };\n        summary =\n          messageSummaryRangeUnderflow ||\n          translations.getTranslatedString('oj-validator.range.number.messageSummary.rangeUnderflow');\n        detail = messageDetailRangeUnderflow\n          ? translations.applyParameters(messageDetailRangeUnderflow, params)\n          : translations.getTranslatedString(\n              'oj-validator.range.number.messageDetail.rangeUnderflow',\n              params\n            );\n      }\n      return [summary, detail];\n    };\n\n    var minStr = min && this._converter ? this._converter.format(min) : min;\n    var maxStr = max && this._converter ? this._converter.format(max) : max;\n    var error = generateValidationError(minStr, maxStr);\n    throw new ojvalidationError.ValidatorError(error[0], error[1]);\n  };\n\n  /**\n   * @returns {string|null} a hint message or null if no hint is available in the options.\n   * A hint message may be like \"Enter a value between {min} and {max}\"\n   * or \"Enter a number greater than or equal to {min}\"\n   * @memberof oj.NumberRangeValidator\n   * @instance\n   * @export\n   * @method getHint\n   */\n  NumberRangeValidator.prototype.getHint = function () {\n    var hints = this._hint;\n    var hintInRange = hints.inRange;\n    var hintExact = hints.exact;\n    var hintMinimum = hints.min;\n    var hintMaximum = hints.max;\n    var translations = Translations;\n    var min = this._min !== undefined ? parseFloat(this._min) : null;\n    var max = this._max !== undefined ? parseFloat(this._max) : null;\n\n    var generateHintText = function (minStr, maxStr) {\n      var hint = null;\n      // if both min and max are specified, the hint may say something like \"Enter a value\n      // between {min} and {max}\".\n      if (min !== null && max !== null) {\n        if (min !== max) {\n          // if hintInRange is specified (validator's hint.inRange option is set),\n          // use that string, else use the default.\n          hint = hintInRange\n            ? translations.applyParameters(hintInRange, { min: minStr, max: maxStr })\n            : translations.getTranslatedString('oj-validator.range.number.hint.inRange', {\n                min: minStr,\n                max: maxStr\n              });\n        } else {\n          // if hintExact is specified (validator's hint.exact option is set),\n          // use that string, else use the default.\n          hint = hintExact\n            ? translations.applyParameters(hintExact, { num: minStr })\n            : translations.getTranslatedString('oj-validator.range.number.hint.exact', {\n                num: minStr\n              });\n        }\n      } else if (min !== null) {\n        // else if min is specified, the hint may say something like \"Enter a value\n        // greater than or equal to {min}\".\n\n        // if hintMinimum is specified (validator's hint.min option is set),\n        // use that string, else use the default.\n        hint = hintMinimum\n          ? translations.applyParameters(hintMinimum, { min: minStr })\n          : translations.getTranslatedString('oj-validator.range.number.hint.min', { min: minStr });\n      } else if (max !== null) {\n        // else if max is specified, the hint may say something like \"Enter a value\n        // less than or equal to {max}\".\n\n        // if hintMaximum is specified (validator's hint.max option is set),\n        // use that string, else use the default.\n        hint = hintMaximum\n          ? translations.applyParameters(hintMaximum, { max: maxStr })\n          : translations.getTranslatedString('oj-validator.range.number.hint.max', { max: maxStr });\n      }\n      return hint;\n    };\n\n    var minStr = min && this._converter ? this._converter.format(min) : min;\n    var maxStr = max && this._converter ? this._converter.format(max) : max;\n\n    return generateHintText(minStr, maxStr);\n  };\n\n  return NumberRangeValidator;\n\n});\n","/**\n * @license\n * Copyright (c) 2014, 2023, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\ndefine(['ojs/ojcore', 'ojs/ojtranslation', 'ojs/ojvalidator', 'ojs/ojvalidation-error'], function (oj, Translations, Validator, ojvalidationError) { 'use strict';\n\n  oj = oj && Object.prototype.hasOwnProperty.call(oj, 'default') ? oj['default'] : oj;\n  Validator = Validator && Object.prototype.hasOwnProperty.call(Validator, 'default') ? Validator['default'] : Validator;\n\n  /**\n   * Constructs a RegExpValidator that ensures the value matches the provided pattern.\n   * @param {Object=} options an object literal used to provide the pattern, an optional hint and error\n   * message.\n   * @export\n   * @constructor\n   * @final\n   * @augments oj.Validator\n   * @name oj.RegExpValidator\n   * @ojtsimport {module: \"ojvalidator\", type: \"AMD\", importName: \"Validator\"}\n   * @ojtsmodule\n   * @ojsignature [{target: \"Type\",\n   *                value: \"class RegExpValidator implements Validator<string|number>\"},\n   *               {target: \"Type\",\n   *                value: \"oj.RegExpValidator.ValidatorOptions\",\n   *                for: \"options\", jsdocOverride: true}\n   *              ]\n   * @since 0.6.0\n   * @see oj.AsyncRegExpValidator\n   */\n  const RegExpValidator = function (options) {\n    this.Init(options);\n  };\n\n  // Subclass from oj.Object or Validator. It does not matter\n  oj.Object.createSubclass(RegExpValidator, Validator, 'oj.RegExpValidator');\n\n  // key to access required validator specific resources in the bundle\n  RegExpValidator._BUNDLE_KEY_DETAIL = 'oj-validator.regExp.detail';\n  RegExpValidator._BUNDLE_KEY_SUMMARY = 'oj-validator.regExp.summary';\n\n  /**\n   * @typedef {object} oj.RegExpValidator.ValidatorOptions\n   * @property {string=} pattern - a regexp pattern that the validator matches a value against.<p>\n   * Example:<br/>\n   * '\\\\d{10}'\n   * @property {string=} hint - an optional hint text. There is no default hint provided by the\n   * validator. It is generally not recommended to show the actual pattern in the hint as it might be\n   * confusing to end-user, but if you do, you can use the {pattern} token.<p>\n   * <p>The hint string is passed as the 'pattern' parameter to\n   * [oj.Translations.html#applyParameters]{@link oj.Translations}. As stated in\n   * that documentation, if you are using a reserved character, you need to escape it with\n   * a dollar character ('$').\n   * </p>\n   * Tokens: <br/>\n   * {pattern} - the pattern to enforce<p>\n   * Example:<br/>\n   * \"value must meet this pattern {pattern}\"\n   * @property {string=} label - an optional label text used when the {label} token is passed\n   * into messageSummary or messageDetail.\n   * @property {string=} messageSummary - a custom error message summarizing the error when the\n   * users input does not match the specified pattern. When not present, the default summary is the\n   * resource defined with the key <code class=\"prettyprint\">oj-validator.regExp.summary</code>.\n   * It is generally not recommended to show the actual pattern in the message as it might be\n   *  confusing to end-user. <p>\n   * <p>The messageSummary string is passed as the 'pattern' parameter to\n   * [oj.Translations.html#applyParameters]{@link oj.Translations}. As stated in\n   * that documentation, if you are using a reserved character, you need to escape it with\n   * a dollar character ('$').\n   * </p>\n   * Tokens: <p>\n   * {label} - label of the component for which this message applies. The label may not always be\n   * available depending on the usage of the validator. <br/>\n   * {pattern} - the pattern the value should match<br/>\n   * {value} - value entered by user<p>\n   * Examples:<br/>\n   * \"'{label}' Format Incorrect\" // translating to 'Phone Number' Format Incorrect\n   * @property {string=} messageDetail - a custom error message to be used for creating detail\n   * part of message, when the users input does not match the specified pattern. When not present, the\n   * default detail message is the resource defined with the key\n   * <code class=\"prettyprint\">oj-validator.regExp.detail</code>.<p>\n   * <p>The messageDetail string is passed as the 'pattern' parameter to\n   * [oj.Translations.html#applyParameters]{@link oj.Translations}. As stated in\n   * that documentation, if you are using a reserved character, you need to escape it with\n   * a dollar character ('$').\n   * </p>\n   * Tokens:<br/>\n   * {label} - label text of the component for which this message applies. <br/>\n   * {pattern} the 'pattern' that the value should match <br/>\n   * {value} value entered by the user <p>\n   * Examples:<br/>\n   * \"The value {value} must contain at least 3 alphanumeric characters\"<br/>\n   */\n  /**\n   * Initializes validator instance with the set options\n   * @param {Object=} options\n   * @memberof oj.RegExpValidator\n   * @instance\n   * @ignore\n   */\n  RegExpValidator.prototype.Init = function (options) {\n    RegExpValidator.superclass.Init.call(this);\n    this._options = options;\n  };\n\n  /**\n   * Validates value for matches using the regular expression provided by the pattern. This method\n   * does not raise an error when value is the empty string or null; the method returns true indicating\n   * that the validation was successful. If the application wants the empty string to fail validation,\n   * then the application should chain in the required validator (e.g., set required on the input).\n   *\n   * @param {string|number} value that is being validated\n   * @returns {void}\n   * @ojsignature {target: \"Type\", for: \"returns\",\n   *                value: \"void\"}\n   *\n   * @throws {Error} when there is no match\n   * @memberof oj.RegExpValidator\n   * @instance\n   * @export\n   * @method validate\n   */\n  RegExpValidator.prototype.validate = function (value) {\n    var detail;\n    var label;\n    var summary;\n    var pattern = (this._options && this._options.pattern) || '';\n\n    // don't validate null or empty string; per \n    // There are one of two ways we could handle the empty string:\n    // 1) blow up on null and then require that customers wrap the validator with one that\n    // succeeds on null if they don’t like the behavior\n    // 2) Accept null and expect that the application will chain in the required checked if necessary\n    // As a team we decided 2) was better than 1).\n    if (value === null || value === undefined || value === '') {\n      return;\n    }\n\n    // when using digits as input values parseString becomes a integer type, so get away with it.\n    var valueString = value.toString();\n\n    // We intend that the pattern provided is matched exactly\n    var exactPattern = '^(' + pattern + ')$';\n\n    var matchArr = valueString.match(exactPattern);\n    if (!(matchArr !== null && matchArr[0] === valueString)) {\n      if (this._options) {\n        summary = this._options.messageSummary || null;\n        detail = this._options.messageDetail || null;\n        label = (this._options && this._options.label) || '';\n      }\n\n      var params = { label: label, pattern: pattern, value: valueString };\n      var localizedSummary = summary\n        ? Translations.applyParameters(summary, params)\n        : Translations.getTranslatedString(this._getSummaryKey(), params);\n      var localizedDetail = detail\n        ? Translations.applyParameters(detail, params)\n        : Translations.getTranslatedString(this._getDetailKey(), params);\n\n      throw new ojvalidationError.ValidatorError(localizedSummary, localizedDetail);\n    }\n  };\n\n  /**\n   * A message to be used as hint, when giving a hint on the expected pattern. There is no default\n   * hint for this property.\n   *\n   * @returns {string|null} a hint message or null if no hint is available in the options\n   * @memberof oj.RegExpValidator\n   * @instance\n   * @export\n   * @method getHint\n   */\n  RegExpValidator.prototype.getHint = function () {\n    var hint = null;\n    var params = {};\n    if (this._options && this._options.hint) {\n      params = { pattern: this._options.pattern };\n      hint = Translations.applyParameters(this._options.hint, params);\n    }\n\n    return hint;\n  };\n\n  RegExpValidator.prototype._getSummaryKey = function () {\n    return RegExpValidator._BUNDLE_KEY_SUMMARY;\n  };\n\n  RegExpValidator.prototype._getDetailKey = function () {\n    return RegExpValidator._BUNDLE_KEY_DETAIL;\n  };\n\n  return RegExpValidator;\n\n});\n","/**\n * @license\n * Copyright (c) 2014, 2023, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\ndefine(['ojs/ojcore', 'ojs/ojtranslation', 'ojs/ojvalidator', 'ojs/ojvalidation-error'], function (oj, Translations, Validator, ojvalidationError) { 'use strict';\n\n  oj = oj && Object.prototype.hasOwnProperty.call(oj, 'default') ? oj['default'] : oj;\n  Validator = Validator && Object.prototype.hasOwnProperty.call(Validator, 'default') ? Validator['default'] : Validator;\n\n  /**\n   * Constructs a RequiredValidator that ensures that the value provided is not empty.\n   * @param {Object=} options an object literal used to provide an optional hint and error message.<p>\n   *\n   * @export\n   * @constructor\n   * @final\n   * @augments oj.Validator\n   * @name oj.RequiredValidator\n   * @ojtsimport {module: \"ojvalidator\", type: \"AMD\", importName: \"Validator\"}\n   * @ojtsmodule\n   * @ojsignature [{target: \"Type\", value: \"class RequiredValidator implements Validator<object|string|number>\"},\n   *               {target: \"Type\", value: \"oj.RequiredValidator.ValidatorOptions\", for: \"options\", jsdocOverride: true}]\n   * @since 0.6.0\n   * @see oj.AsyncRequiredValidator\n   *\n   */\n  const RequiredValidator = function (options) {\n    this.Init(options);\n  };\n\n  // Subclass from oj.Object or oj.Validator. It does not matter\n  oj.Object.createSubclass(RequiredValidator, Validator, 'oj.RequiredValidator');\n\n  // key to access required validator specific resources in the bundle\n  RequiredValidator._BUNDLE_KEY_DETAIL = 'oj-validator.required.detail';\n  RequiredValidator._BUNDLE_KEY_SUMMARY = 'oj-validator.required.summary';\n\n  /**\n   * @typedef {object} oj.RequiredValidator.ValidatorOptions\n   * @property {string=} hint an optional hint text. There is no default hint provided by this\n   * validator.\n   * @property {string=} label - an optional label text used when the {label} token is passed\n   * into messageSummary or messageDetail.\n   * @property {string=} messageSummary - an optional custom error message summarizing the\n   * error. When not present, the default message summary is the resource defined with the key\n   * <code class=\"prettyprint\">oj-validator.required.summary</code>.<p>\n   * <p>The messageSummary string is passed as the 'pattern' parameter to\n   * [oj.Translations.html#applyParameters]{@link oj.Translations}. As stated in\n   * that documentation, if you are using a reserved character, you need to escape it with\n   * a dollar character ('$').\n   * </p>\n   * Tokens: {label} - this token can be used to substitute the label of the component at runtime. </p>\n   * <p>\n   * Example:<br/>\n   * \"'{label}' Required\"<br/>\n   * </p>\n   * @property {string=} messageDetail - a custom error message used for creating detail part\n   * of message, when the value provided is empty. When not present, the default message detail is the\n   * resource defined with the key <code class=\"prettyprint\">oj-validator.required.detail</code>.\n   * <p>The messageDetail string is passed as the 'pattern' parameter to\n   * [oj.Translations.html#applyParameters]{@link oj.Translations}. As stated in\n   * that documentation, if you are using a reserved character, you need to escape it with\n   * a dollar character ('$').\n   * </p>\n   * <p>Tokens: {label} - this token can be used to substitute the label of the component at runtime.</p>\n   * <p>\n   * Example:<br/>\n   * \"A value is required for the field '{label}'.\"<br/>\n   * </p>\n   */\n  /**\n   * Initializes validator instance with the set options\n   * @param {Object=} options\n   * @memberof oj.RequiredValidator\n   * @instance\n   * @ignore\n   */\n  RequiredValidator.prototype.Init = function (options) {\n    RequiredValidator.superclass.Init.call(this);\n    this._options = options;\n  };\n\n  /**\n   * Validates value to be non-empty\n   *\n   * @param {any} value value that is being validated\n   * @returns {void}\n   * @throws {Error} when fails required-ness check\n   * @ojsignature {target: \"Type\", for: \"returns\",\n   *                value: \"void\"}\n   * @memberof oj.RequiredValidator\n   * @instance\n   * @export\n   * @method validate\n   */\n  RequiredValidator.prototype.validate = function (value) {\n    var detail;\n    var label = '';\n    var localizedDetail;\n    var localizedSummary;\n    var summary;\n    var params = {};\n\n    // checks for empty arrays and String. Objects are considered non-null.\n    if (\n      value !== undefined &&\n      value !== null &&\n      !((typeof value === 'string' || value instanceof Array) && value.length === 0)\n    ) {\n      return;\n    }\n\n    if (this._options) {\n      // we have deprecated support for message param and instead use messageDetail.\n      detail = this._options.messageDetail || this._options.message || null;\n      summary = this._options.messageSummary || null;\n      label = this._options.label || '';\n    }\n    params = { label: label };\n    localizedSummary = summary\n      ? Translations.applyParameters(summary, params)\n      : Translations.getTranslatedString(this._getSummaryKey(), params);\n    localizedDetail = detail\n      ? Translations.applyParameters(detail, params)\n      : Translations.getTranslatedString(this._getDetailKey(), params);\n\n    throw new ojvalidationError.ValidatorError(localizedSummary, localizedDetail);\n  };\n\n  /**\n   * A message to be used as hint, when giving a hint on the expected pattern. There is no default\n   * hint for this property.\n   *\n   * @returns {string|null} a hint message or null if no hint is available in the options\n   * @memberof oj.RequiredValidator\n   * @instance\n   * @export\n   * @method getHint\n   */\n  RequiredValidator.prototype.getHint = function () {\n    var hint = '';\n    if (this._options && this._options.hint) {\n      hint = Translations.getTranslatedString(this._options.hint);\n    }\n\n    return hint;\n  };\n\n  RequiredValidator.prototype._getSummaryKey = function () {\n    return RequiredValidator._BUNDLE_KEY_SUMMARY;\n  };\n\n  RequiredValidator.prototype._getDetailKey = function () {\n    return RequiredValidator._BUNDLE_KEY_DETAIL;\n  };\n\n  return RequiredValidator;\n\n});\n","/**\n * @license\n * Copyright (c) 2014, 2023, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\ndefine(['ojs/ojcore'], function (oj) { 'use strict';\n\n  oj = oj && Object.prototype.hasOwnProperty.call(oj, 'default') ? oj['default'] : oj;\n\n  /**\n   * Validator Contract\n   * @ignore\n   */\n\n  /**\n   *  @example <caption>Create a Validator and implement its methods.</caption>\n   *\n   *  //Validator to ensure that the selected time is a multiple of 15 minute interval.\n   *  //This converter takes in a converter option which will be used to format the hint/error\n   *  //message shown to the user. It is mandatory to pass the converter option.\n   *  var TimeIncrementValidator = function (options) {\n   *    if(options && options.converter){\n   *      this._converter = options.converter;\n   *    }\n   *  };\n   *  //Need to be a subclass of Validator\n   *  oj.Object.createSubclass(TimeIncrementValidator, Validator, \"TimeIncrementValidator\");\n   *\n   *  // Validates if the passed in value is a multiple of 15 minute interval.\n   *  // Throws an error if the validation fails.\n   *  TimeIncrementValidator.prototype.validate = function (value)\n   *  {\n   *    if (value)\n   *    {\n   *      var currentTime = oj.IntlConverterUtils.isoToLocalDate(value);\n   *      var previousValidValue, nextValidValue, sampleMinutes;\n   *      var minutes = currentTime.getMinutes();\n   *      //Check if the minute is in increment of 15 by taking a modulo\n   *      if ((minutes % 15) !== 0)\n   *      {\n   *        sampleMinute = Math.floor((minutes / 15))*15;\n   *        currentTime.setMinutes(sampleMinute);\n   *        previousValidValue = oj.IntlConverterUtils.dateToLocalIso(currentTime);\n   *        sampleMinute = sampleMinute+ 15;\n   *        if(sampleMinute >= 60){\n   *          sampleMinute = 0;\n   *          currentTime.setTime(currentTime.getTime() + (60*60*1000));\n   *        }\n   *        currentTime.setMinutes(sampleMinute);\n   *        nextValidValue = oj.IntlConverterUtils.dateToLocalIso(currentTime);\n   *        throw new ValidatorError(\"Only multiples of 15 minute intervals are allowed.\", \"For example, \" + this._converter.format(previousValidValue) +\n   *                                     \" or \"+ this._converter.format(nextValidValue));\n   *      }\n   *    }\n   *  };\n   *\n   *  //Generates a hint message with 4 different samples of valid values.\n   *  TimeIncrementValidator.prototype.getHint = function ()\n   *  {\n   *    var currentTime = new Date();\n   *    var hintMessage = \"Only 15 minute intervals accepted, for example\";\n   *    //generate 4 sample values\n   *    for (var i = 0; i < 4; i++) {\n   *      currentTime.setMinutes(i * 15);\n   *      hintMessage = hintMessage + \", \" + this._converter.format(oj.IntlConverterUtils.dateToLocalIso(currentTime));\n   *    }\n   *    return hintMessage;\n   *  };\n   * @example <caption>Create a Validator and implement its methods. Bind it to the\n   * JET form component which will call this 'validate' to validate the user's input.</caption>\n   *  // Validator that ensures endDate is never less than start date\n   *  self.endDateValidator = {\n   *    'validate' : function(value)\n   *    {\n   *      var value =  oj.IntlConverterUtils.isoToLocalDate(value);\n   *      var start = oj.IntlConverterUtils.isoToLocalDate(self.startDate());\n   *      if (value && !(value.getFullYear() > start.getFullYear() ||\n   *      {\n   *        throw new ValidatorError('End Date cannot be less than Start Date');\n   *      }\n   *    },\n   *    'getHint' : function() { return \"End Date needs to be greater than Start Date\");}\n   *  };\n   *  -- HTML --\n   *  &lt;oj-input-date id=\"nextday\" value=\"{{endDate}}\"\n   *  validators=\"{{[weekendDateValidator, endDateValidator]}}\">&lt;/oj-input-date>\n   * @interface\n   * @name oj.Validator\n   * @param {Object=} options An object which contains the options for the validator\n   * @ojsignature {target: \"Type\", value: \"interface Validator<V>\", genericParameters: [{\"name\": \"V\", \"description\": \"Type of value to be validated\"}]}\n   * @ojtsmodule\n   * @export\n   * @since 0.6.0\n   *\n   */\n  const Validator = function (options) {\n    this.Init(options);\n  };\n\n  // Subclass from oj.Object\n  oj.Object.createSubclass(Validator, oj.Object, 'oj.Validator');\n\n  /**\n   * Initializes validator instance with the set options\n   * @export\n   * @ignore\n   */\n  // eslint-disable-next-line no-unused-vars\n  Validator.prototype.Init = function (options) {\n    Validator.superclass.Init.call(this);\n  };\n\n  /**\n   * Validates the value.\n   * The function typically returns if the validation passes and throws an error if it fails.\n   *\n   * @example <caption>Create a Validator and implement the validate method. Bind it to the\n   * JET form component which will call this 'validate' to validate the user's input.</caption>\n   *  // Validator that ensures endDate is never less than start date\n   *  self.endDateValidator = {\n   *    'validate' : function(value)\n   *    {\n   *      var value =  oj.IntlConverterUtils.isoToLocalDate(value);\n   *      var start = oj.IntlConverterUtils.isoToLocalDate(self.startDate());\n   *      if (value && !(value.getFullYear() > start.getFullYear() ||\n   *      {\n   *        throw new ValidatorError('End Date cannot be less than Start Date');\n   *      }\n   *    },\n   *    'getHint' : function() { return \"End Date needs to be greater than Start Date\");}\n   *  };\n   *  -- HTML --\n   *  &lt;oj-input-date id=\"nextday\" value=\"{{endDate}}\"\n   *  validators=\"{{[weekendDateValidator, endDateValidator]}}\">&lt;/oj-input-date>\n   * @param {any} value to be validated\n   * @return {void}\n   * @throws {Error} if validation fails\n   * @method validate\n   * @ojsignature [{target: \"Type\",\n   *                value: \"V\",\n   *                for: \"value\"},\n   *                {target: \"Type\",\n   *                value: \"void\",\n   *                for: \"returns\"}]\n   * @memberof oj.Validator\n   * @instance\n   */\n\n  /**\n   * Returns a hint that describes the validator rule.\n   * @example <caption>Create a Validator and implement the getHint method. Bind it to the\n   * JET form component which will show the hint.</caption>\n   *  // Validator that ensures endDate is never less than start date\n   *  self.endDateValidator = {\n   *    'validate' : function(value)\n   *    {\n   *      ...\n   *    },\n   *    'getHint' : function() { return \"End Date needs to be greater than Start Date\");}\n   *  };\n   *  -- HTML --\n   *  &lt;oj-input-date id=\"nextday\" value=\"{{endDate}}\"\n   *  validators=\"{{[weekendDateValidator, endDateValidator]}}\">&lt;/oj-input-date>\n   * @returns {string|null} a hint string or null\n   * @method getHint\n   * @memberof oj.Validator\n   * @ojsignature {target: \"Type\", value: \"?(): string|null\"}\n   * @instance\n   */\n\n  return Validator;\n\n});\n","/**\n * Licenced under the MIT License\n *\n * Copyright (c) 2010 Seznam.cz, a.s.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * @license\n */\n/*\n * Internet explorer generates pointer events by default for all input types like mouse, pen or touch (finger).\n * Touchr is generating touch events only for touch type by default but it can be overwritten by\n * window.Touchr_ALLOWED_POINTER_TYPE bitmask property. It can have values:\n * 1 for touch\n * 2 for mouse\n * 4 for pen\n * and their combinations.\n */\n\n(function(window) {\n\tvar IE_10\t\t= !!window.navigator.msPointerEnabled,\n\t\t// Check below can mark as IE11+ also other browsers which implements pointer events in future\n\t\t// that is not issue, because touch capability is tested in IF statement bellow.\n\t\t// Note since Edge 16/Windows 10 1709 the property 'window.navigator.pointerEnabled' is undefined.\n\t\tIE_11_PLUS\t= (!!window.navigator.pointerEnabled || !!window.PointerEvent);\n\n\t// Only pointer enabled browsers without touch capability.\n\tif (!!window.navigator.maxTouchPoints > 0 && (IE_10 || (IE_11_PLUS && !window.TouchEvent))) {\n\t\tvar document = window.document,\n\t\t\tPOINTER_DOWN\t\t= IE_11_PLUS ? \"pointerdown\"\t: \"MSPointerDown\",\n\t\t\tPOINTER_UP \t\t\t= IE_11_PLUS ? \"pointerup\"\t\t: \"MSPointerUp\",\n\t\t\tPOINTER_MOVE\t\t= IE_11_PLUS ? \"pointermove\"\t: \"MSPointerMove\",\n\t\t\tPOINTER_CANCEL\t\t= IE_11_PLUS ? \"pointercancel\"\t: \"MSPointerCancel\",\n\t\t\tPOINTER_TYPE_TOUCH \t= IE_11_PLUS ? \"touch\"\t: MSPointerEvent.MSPOINTER_TYPE_TOUCH,\n\t\t\tPOINTER_TYPE_MOUSE \t= IE_11_PLUS ? \"mouse\"\t: MSPointerEvent.MSPOINTER_TYPE_MOUSE,\n\t\t\tPOINTER_TYPE_PEN \t= IE_11_PLUS ? \"pen\"\t: MSPointerEvent.MSPOINTER_TYPE_PEN, //IE11+ has also unknown type which Touchr doesn't support\n\t\t\tGESTURE_START\t\t= \"MSGestureStart\",\n\t\t\tGESTURE_CHANGE\t\t= \"MSGestureChange\",\n\t\t\tGESTURE_END\t\t\t= \"MSGestureEnd\",\n\t\t\tTOUCH_ACTION\t\t= IE_11_PLUS ? \"touchAction\" : \"msTouchAction\",\n\t\t\t_180_OVER_PI\t\t= 180/Math.PI,\n\t\t\t// Which pointer types will be used for generating touch events: 1 - touch, 2 - mouse, 4 - pen or their combination\n\t\t\tALLOWED_POINTER_TYPE = window.Touchr_ALLOWED_POINTER_TYPE || 1,\n\t\t\tcreateEvent = function (eventName, target, params) {\n\t\t\t\tvar k,\n\t\t\t\t\tevent = document.createEvent(\"Event\");\n\n\t\t\t\tevent.initEvent(eventName, true, true);\n\t\t\t\tfor (k in params) {\n\t\t\t\t\tevent[k] = params[k];\n\t\t\t\t}\n\t\t\t\ttarget.dispatchEvent(event);\n\t\t\t},\n\t\t\t/**\n\t\t\t * ECMAScript 5 accessors to the rescue\n\t\t\t * @see http://perfectionkills.com/how-ecmascript-5-still-does-not-allow-to-subclass-an-array/\n\t\t\t */\n\t\t\tmakeSubArray = (function() {\n\t\t\t\tvar MAX_SIGNED_INT_VALUE = Math.pow(2, 32) - 1,\n\t\t\t\t\thasOwnProperty = Object.prototype.hasOwnProperty;\n\n\t\t\t\tfunction ToUint32(value) {\n\t\t\t\t\treturn value >>> 0;\n\t\t\t\t}\n\n\t\t\t\tfunction getMaxIndexProperty(object) {\n\t\t\t\t\tvar maxIndex = -1,\n\t\t\t\t\t\tisValidProperty,\n\t\t\t\t\t\tprop;\n\n\t\t\t\t\tfor (prop in object) {\n\n\t\t\t\t\t\tisValidProperty = (\n\t\t\t\t\t\t\tString(ToUint32(prop)) === prop &&\n\t\t\t\t\t\t\t\tToUint32(prop) !== MAX_SIGNED_INT_VALUE &&\n\t\t\t\t\t\t\t\thasOwnProperty.call(object, prop));\n\n\t\t\t\t\t\tif (isValidProperty && prop > maxIndex) {\n\t\t\t\t\t\t\tmaxIndex = prop;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn maxIndex;\n\t\t\t\t}\n\n\t\t\t\treturn function(methods) {\n\t\t\t\t\tvar length = 0;\n\t\t\t\t\tmethods = methods || { };\n\n\t\t\t\t\tmethods.length = {\n\t\t\t\t\t\tget: function() {\n\t\t\t\t\t\t\tvar maxIndexProperty = +getMaxIndexProperty(this);\n\t\t\t\t\t\t\treturn Math.max(length, maxIndexProperty + 1);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tset: function(value) {\n\t\t\t\t\t\t\tvar constrainedValue = ToUint32(value);\n\t\t\t\t\t\t\tif (constrainedValue !== +value) {\n\t\t\t\t\t\t\t\tthrow new RangeError();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (var i = constrainedValue, len = this.length; i < len; i++) {\n\t\t\t\t\t\t\t\tdelete this[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlength = constrainedValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tmethods.toString = {\n\t\t\t\t\t\tvalue: Array.prototype.join\n\t\t\t\t\t};\n\t\t\t\t\treturn Object.create(Array.prototype, methods);\n\t\t\t\t};\n\t\t\t})(),\n\t\t\t// methods passed to TouchList closure method to extend Array\n\t\t\ttouchListMethods = {\n\t\t\t\t/**\n\t\t\t\t * Returns touch by id. This method fulfill the TouchList interface.\n\t\t\t\t * @param {Number} id\n\t\t\t\t * @returns {Touch}\n\t\t\t\t */\n\t\t\t\tidentifiedTouch: {\n\t\t\t\t\tvalue: function (id) {\n\t\t\t\t\t\tvar length = this.length;\n\t\t\t\t\t\twhile (length--) {\n\t\t\t\t\t\t\tif (this[length].identifier === id) return this[length];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/**\n\t\t\t\t * Returns touch by index. This method fulfill the TouchList interface.\n\t\t\t\t * @param {Number} index\n\t\t\t\t * @returns {Touch}\n\t\t\t\t */\n\t\t\t\titem: {\n\t\t\t\t\tvalue: function (index) {\n\t\t\t\t\t\treturn this[index];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/**\n\t\t\t\t * Returns touch index\n\t\t\t\t * @param {Touch} touch\n\t\t\t\t * @returns {Number}\n\t\t\t\t */\n\t\t\t\t_touchIndex: {\n\t\t\t\t\tvalue: function (touch) {\n\t\t\t\t\t\tvar length = this.length;\n\t\t\t\t\t\twhile (length--) {\n\t\t\t\t\t\t\tif (this[length].pointerId == touch.pointerId) return length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * Add all events and convert them to touches\n\t\t\t\t * @param {Event[]} events\n\t\t\t\t */\n\t\t\t\t_addAll: {\n\t\t\t\t\tvalue: function(events) {\n\t\t\t\t\t\tvar i = 0,\n\t\t\t\t\t\t\tlength = events.length;\n\n\t\t\t\t\t\tfor (; i < length; i++) {\n\t\t\t\t\t\t\tthis._add(events[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * Add and MSPointer event and convert it to Touch like object\n\t\t\t\t * @param {Event} event\n\t\t\t\t */\n\t\t\t\t_add: {\n\t\t\t\t\tvalue: function(event) {\n\t\t\t\t\t\tvar index = this._touchIndex(event);\n\n\t\t\t\t\t\tindex = index < 0 ? this.length : index;\n\n\t\t\t\t\t\t//normalizing Pointer to Touch\n\t\t\t\t\t\tevent.type = POINTER_MOVE;\n\t\t\t\t\t\tevent.identifier = event.pointerId;\n\t\t\t\t\t\t//in DOC is mentioned that it is 0..255 but actually it returns 0..1 value\n\t\t\t\t\t\t//returns 0.5 for mouse down buttons in IE11, should it be issue?\n\t\t\t\t\t\tevent.force = event.pressure;\n\t\t\t\t\t\t//default values for Touch which we cannot obtain from Pointer\n\t\t\t\t\t\tevent.radiusX = event.radiusY = 1;\n\t\t\t\t\t\tevent.rotationAngle = 0;\n\n\t\t\t\t\t\tthis[index] = event;\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * Removes an event from this touch list.\n\t\t\t\t * @param {Event} event\n\t\t\t\t */\n\t\t\t\t_remove: {\n\t\t\t\t\tvalue: function(event) {\n\t\t\t\t\t\tvar index = this._touchIndex(event);\n\n\t\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\t\tthis.splice(index,1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * This class store touches in an list which can be also accessible as array which is\n\t\t\t * little bit bad because TouchList have to extend Array. Because we are aiming on\n\t\t\t * IE10+ we can use ECMAScript5 solution.\n\t\t\t * @extends Array\n\t\t\t * @see http://www.w3.org/TR/2011/WD-touch-events-20110913/#touchlist-interface\n\t\t\t * @see https://developer.mozilla.org/en-US/docs/DOM/TouchList\n\t\t\t */\n\t\t\tTouchList = (function(methods) {\n\t\t\t\treturn function() {\n\t\t\t\t\tvar arr = makeSubArray(methods);\n\t\t\t\t\tif (arguments.length === 1) {\n\t\t\t\t\t\tarr.length = arguments[0];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tarr.push.apply(arr, arguments);\n\t\t\t\t\t}\n\t\t\t\t\treturn arr;\n\t\t\t\t};\n\t\t\t})(touchListMethods),\n\n\t\t\t/**\n\t\t\t * list of all touches running during life cycle\n\t\t\t * @type TouchList\n\t\t\t */\n\t\t\tgeneralTouchesHolder,\n\n\t\t\t/**\n\t\t\t * Storage of link between pointer {id} and original target\n\t\t\t * @type Object\n\t\t\t */\n\t\t\tpointerToTarget = {},\n\n\t\t\t/**\n\t\t\t * General gesture object which fires MSGesture events whenever any associated MSPointer event changed.\n\t\t\t */\n\t\t\tgesture = window.MSGesture ? new MSGesture() : null,\n\n\t\t\tgestureScale = 1,\n\t\t\tgestureRotation = 0,\n\n\t\t\t/**\n\t\t\t * Storage of targets and anonymous MSPointerStart handlers for later\n\t\t\t * unregistering\n\t\t\t * @type Array\n\t\t\t */\n\t\t\tattachedPointerStartMethods = [],\n\n\t\t\t/**\n\t\t\t * Checks if node is some of parent children or sub-children\n\t\t\t * @param {HTMLElement|Document} parent\n\t\t\t * @param {HTMLElement} node\n\t\t\t * @returns {Boolean}\n\t\t\t */\n\t\t\tcheckSameTarget = function (parent, node) {\n\t\t\t\tif (node) {\n\t\t\t\t\tif (parent === node) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn checkSameTarget(parent, node.parentNode);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns bitmask type of pointer to compare with allowed pointer types\n\t\t\t * @param {Number|String} pointerType\n\t\t\t * @returns {Number}\n\t\t\t */\n\t\t\tpointerTypeToBitmask = function (pointerType) {\n\t\t\t\tif (pointerType == POINTER_TYPE_TOUCH) {\n\t\t\t\t\treturn 1;\n\t\t\t\t} else if (pointerType == POINTER_TYPE_MOUSE) {\n\t\t\t\t\treturn 2;\n\t\t\t\t} else {\n\t\t\t\t\treturn 4;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Main function which is rewriting the MSPointer event to touch event\n\t\t\t * and preparing all the necessary lists of touches.\n\t\t\t * @param {Event} evt\n\t\t\t */\n\t\t\tpointerListener = function (evt) {\n\t\t\t\tvar type,\n\t\t\t\t\ti,\n\t\t\t\t\ttarget = evt.target,\n\t\t\t\t\toriginalTarget,\n\t\t\t\t\tchangedTouches,\n\t\t\t\t\ttargetTouches;\n\n\t\t\t\t// Skip pointers which are not allowed by users:\n\t\t\t\tif (!(pointerTypeToBitmask(evt.pointerType) & ALLOWED_POINTER_TYPE)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (evt.type === POINTER_DOWN) {\n\t\t\t\t\tgeneralTouchesHolder._add(evt);\n\t\t\t\t\tpointerToTarget[evt.pointerId] = evt.target;\n\n\t\t\t\t\ttype = \"touchstart\";\n\n\t\t\t\t\t// Fires MSGesture event when we have at least two pointers in our holder\n\t\t\t\t\t// (adding pointers to gesture object immediately fires Gesture event)\n\t\t\t\t\tif (gesture && generalTouchesHolder.length > 1) {\n\t\t\t\t\t\tgesture.target = evt.target;\n\t\t\t\t\t\tfor (i = 0; i < generalTouchesHolder.length; i++) {\n\t\t\t\t\t\t\t// Adds to gesture only touches\n\t\t\t\t\t\t\t// It is not necessary to create separate gesture for mouse or pen pointers\n\t\t\t\t\t\t\t// because they cannot be present more than by 1 pointer.\n\t\t\t\t\t\t\tif (generalTouchesHolder[i].pointerType === POINTER_TYPE_TOUCH) {\n\t\t\t\t\t\t\t\tgesture.addPointer(generalTouchesHolder[i].pointerId);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (evt.type === POINTER_MOVE && generalTouchesHolder.identifiedTouch(evt.pointerId)) {\n\t\t\t\t\tgeneralTouchesHolder._add(evt);\n\n\t\t\t\t\ttype = \"touchmove\";\n\t\t\t\t}\n\n\t\t\t\t//Preparation of touch lists have to be done before pointerup/MSPointerUp where we delete some information\n\n\t\t\t\t//Which touch fired this event, because we know that MSPointer event is fired for every\n\t\t\t\t//changed pointer than we create a list only with actual pointer\n\t\t\t\tchangedTouches = document.createTouchList(evt);\n\t\t\t\t//Target touches is list of touches which started on (touchstart) on target element, they\n\t\t\t\t//are in this array even if these touches have coordinates outside target elements\n\t\t\t\ttargetTouches = document.createTouchList();\n\t\t\t\tfor (i = 0; i < generalTouchesHolder.length; i++) {\n\t\t\t\t\t//targetTouches._add(generalTouchesHolder[i]);\n\t\t\t\t\t//check if the pointerTarget is in the target\n\t\t\t\t\tif (checkSameTarget(target, pointerToTarget[generalTouchesHolder[i].identifier])) {\n\t\t\t\t\t\ttargetTouches._add(generalTouchesHolder[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\toriginalTarget = pointerToTarget[evt.pointerId];\n\n\t\t\t\tif (evt.type === POINTER_UP || evt.type === POINTER_CANCEL) {\n\t\t\t\t\tgeneralTouchesHolder._remove(evt);\n\t\t\t\t\tpointerToTarget[evt.pointerId] = null;\n\n\t\t\t\t\tdelete pointerToTarget[evt.pointerId];\n\t\t\t\t\ttype = \"touchend\";\n\n\t\t\t\t\t// Fires MSGestureEnd event when there is only one ore zero touches:\n\t\t\t\t\tif (gesture && generalTouchesHolder.length <= 1) {\n\t\t\t\t\t\tgesture.stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t//console.log(\"+\", evt.type, evt.pointerType, generalTouchesHolder.length, evt.target.nodeName+\"#\"+evt.target.id);\n\t\t\t\tif (type && originalTarget) {\n\t\t\t\t\tcreateEvent(type, originalTarget, {touches: generalTouchesHolder, changedTouches: changedTouches, targetTouches: targetTouches});\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Main function which is rewriting the MSGesture event to gesture event.\n\t\t\t * @param {Event} evt\n\t\t\t */\n\t\t\tgestureListener = function (evt) {\n\t\t\t\t//TODO: check first, other than IE (FF?), browser which implements pointer events how to make gestures from pointers. Maybe it would be mix of pointer/gesture events.\n\t\t\t\tvar type, scale, rotation;\n\t\t\t\tif (evt.type === GESTURE_START) {type = \"gesturestart\"}\n\t\t\t\telse if (evt.type === GESTURE_CHANGE) {type = \"gesturechange\"}\n\t\t\t\telse if (evt.type === GESTURE_END) {type = \"gestureend\"}\n\n\t\t\t\t// -------- SCALE ---------\n\t\t\t\t//MSGesture:\n\t\t\t\t//Scale values represent the difference in scale from the last MSGestureEvent that was fired.\n\t\t\t\t//Apple:\n\t\t\t\t//The distance between two fingers since the start of an event, as a multiplier of the initial distance. The initial value is 1.0.\n\n\t\t\t\t// ------- ROTATION -------\n\t\t\t\t//MSGesture:\n\t\t\t\t//Clockwise rotation of the cursor around its own major axis expressed as a value in radians from the last MSGestureEvent of the interaction.\n\t\t\t\t//Apple:\n\t\t\t\t//The delta rotation since the start of an event, in degrees, where clockwise is positive and counter-clockwise is negative. The initial value is 0.0\n\t\t\t\tif (evt.type === GESTURE_START) {\n\t\t\t\t\tscale = gestureScale = 1;\n\t\t\t\t\trotation = gestureRotation = 0;\n\t\t\t\t} else {\n\t\t\t\t\tscale = gestureScale = gestureScale + (evt.scale - 1); //* evt.scale;\n\t\t\t\t\trotation = gestureRotation = gestureRotation + evt.rotation * _180_OVER_PI;\n\t\t\t\t}\n\n\t\t\t\tcreateEvent(type, evt.target, {scale: scale, rotation: rotation, screenX: evt.screenX, screenY: evt.screenY});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * This method augments event listener methods on given class to call\n\t\t\t * our own method which attach/detach the MSPointer events handlers\n\t\t\t * when user tries to attach touch events.\n\t\t\t * @param {Function} elementClass Element class like HTMLElement or Document\n\t\t\t */\n\t\t\taugmentEventListener = function(elementClass) {\n\t\t\t\tvar customAddEventListener = attachTouchEvents,\n\t\t\t\t\tcustomRemoveEventListener = removeTouchEvents,\n\t\t\t\t\toldAddEventListener = elementClass.prototype.addEventListener,\n\t\t\t\t\toldRemoveEventListener = elementClass.prototype.removeEventListener;\n\n\t\t\t\telementClass.prototype.addEventListener = function(type, listener, useCapture) {\n\t\t\t\t\t//\"this\" is HTML element\n\t\t\t\t\tif ((type.indexOf(\"gesture\") === 0 || type.indexOf(\"touch\") === 0)) {\n\t\t\t\t\t\tcustomAddEventListener.call(this, type, listener, useCapture);\n\t\t\t\t\t}\n\t\t\t\t\toldAddEventListener.call(this, type, listener, useCapture);\n\t\t\t\t};\n\n\t\t\t\telementClass.prototype.removeEventListener = function(type, listener, useCapture) {\n\t\t\t\t\tif ((type.indexOf(\"gesture\") === 0 || type.indexOf(\"touch\") === 0)) {\n\t\t\t\t\t\tcustomRemoveEventListener.call(this, type, listener, useCapture);\n\t\t\t\t\t}\n\t\t\t\t\toldRemoveEventListener.call(this, type, listener, useCapture);\n\t\t\t\t};\n\t\t\t},\n\t\t\t/**\n\t\t\t * This method attach event handler for MSPointer / MSGesture events when user\n\t\t\t * tries to attach touch / gesture events.\n\t\t\t * @param {String} type\n\t\t\t * @param {Function} listener\n\t\t\t * @param {Boolean} useCapture\n\t\t\t */\n\t\t\tattachTouchEvents = function (type, listener, useCapture) {\n\t\t\t\t//element owner document or document itself\n\t\t\t\tvar doc = this.nodeType == 9 ?  this : this.ownerDocument;\n\n\t\t\t\t// Because we are listening only on document, it is not necessary to\n\t\t\t\t// attach events on one document more times\n\t\t\t\tif (attachedPointerStartMethods.indexOf(doc) < 0) {\n\t\t\t\t\t//TODO: reference on node, listen on DOM removal to clean the ref?\n\t\t\t\t\tattachedPointerStartMethods.push(doc);\n\t\t\t\t\tdoc.addEventListener(POINTER_DOWN, pointerListener, useCapture);\n\t\t\t\t\tdoc.addEventListener(POINTER_MOVE, pointerListener, useCapture);\n\t\t\t\t\tdoc.addEventListener(POINTER_UP, pointerListener, useCapture);\n\t\t\t\t\tdoc.addEventListener(POINTER_CANCEL, pointerListener, useCapture);\n\t\t\t\t\tdoc.addEventListener(GESTURE_START, gestureListener, useCapture);\n\t\t\t\t\tdoc.addEventListener(GESTURE_CHANGE, gestureListener, useCapture);\n\t\t\t\t\tdoc.addEventListener(GESTURE_END, gestureListener, useCapture);\n\t\t\t\t}\n\n\t\t\t\t// e.g. Document has no style\n\t\t\t\t// only touchmove event requires touch-action:none, don't set it unless it's neccessary\n\t\t\t\t// as it affects native behavior such as scrolling with pan gesture\n\t\t\t\tif (type === \"touchmove\" && this.style && (typeof this.style[TOUCH_ACTION] == \"undefined\" || !this.style[TOUCH_ACTION])) {\n\t\t\t\t\tthis._touchActionUpdated = true;\n\t\t\t\t\tthis.style[TOUCH_ACTION] = \"none\";\n\t\t\t\t\t// handle scrolling\n\t\t\t\t\t// if the element is draggable, don't scroll\n\t\t\t\t\tif (!this.hasAttribute(\"draggable\")) {\n\t\t\t\t\t\tattachScrollHandler(this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t/**\n\t\t\t * This method attach the scroll event handler.\n\t\t\t * @param {Element} elem \n\t\t\t */\n\t\t\tattachScrollHandler = function(elem) {\n\t\t\t\tvar last, scrollElem, findClosestScrollableElement, clearCachedHeight, visitedElems = [], pointerDownHandler, pointerMoveHandler, pointerUpHandler;\n\n\t\t\t\t/**\n\t\t\t\t * Find the closest scrollable element from and including target\n\t\t\t\t * @param {Element} target\n\t\t\t\t * @return {Element}\n\t\t\t\t */\n\t\t\t\tfindClosestScrollableElement = function(target) {\n\t\t\t\t\tvar clientHeight, scrollHeight;\n\n\t\t\t\t\tif (target == null) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// use cached clientHeight and scrollHeight, to minimize layout/reflow\n\t\t\t\t\tclientHeight = target._cachedClientHeight || target.clientHeight;\n\t\t\t\t\tscrollHeight = target._cachedScrollHeight || target.scrollHeight;\n\n\t\t\t\t\ttarget._cachedClientHeight = clientHeight;\n\t\t\t\t\ttarget._cachedScrollHeight = scrollHeight;\n\n\t\t\t\t\t// keep track of the elements visited so we could clear cached height later\n\t\t\t\t\tif (visitedElems.indexOf(target) === -1) {\n\t\t\t\t\t\tvisitedElems.push(target);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!isNaN(clientHeight) && !isNaN(scrollHeight) && Math.abs(scrollHeight - clientHeight) > 1) {\n\t\t\t\t\t\treturn target == document.documentElement ? document.body : target;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (elem != target) {\n\t\t\t\t\t\t\treturn findClosestScrollableElement(target.parentNode);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * Clear cached clientHeight and scrollHeight from visited elements\n\t\t\t\t */\n\t\t\t\tclearCachedHeight = function() {\n\t\t\t\t\tfor (var i=0; i<visitedElems.length; i++) {\n\t\t\t\t\t\tvisitedElems[i]._cachedClientHeight = null;\n\t\t\t\t\t\tvisitedElems[i]._cachedScrollHeight = null;\n\t\t\t\t\t}\n\t\t\t\t\tvisitedElems.length = 0;\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * Handler for PointerDown event\n\t\t\t\t */\n\t\t\t\tpointerDownHandler = function(event) {\n\t\t\t\t\tif (event.pointerType === \"touch\") {\n\t\t\t\t\t\t// should have been clear \n\t\t\t\t\t\tclearCachedHeight();\n\n\t\t\t\t\t\tlast = event.clientY;\n\t\t\t\t\t\tscrollElem = findClosestScrollableElement(event.target);\n\t\t\t\t\t\tif (scrollElem) {\n\t\t\t\t\t\t\t// prevent ancestors that have pointer event handler installed\n\t\t\t\t\t\t\t// to do any work\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * Handler for PointerMove event\n\t\t\t\t */\n\t\t\t\tpointerMoveHandler = function(Event) {\n\t\t\t\t\tvar current, delta, nextScrollElem;\n\n\t\t\t\t\tif (event.pointerType === \"touch\") {\n\t\t\t\t\t\tif (last != undefined && scrollElem) {\n\t\t\t\t\t\t\tcurrent = scrollElem.scrollTop;\n\t\t\t\t\t\t\tdelta = last - event.clientY;\n\t\t\t\t\t\t\tscrollElem.scrollTop = current + delta;\t\n\n\t\t\t\t\t\t\t// see if scroll min/max has been reached, scroll the next closest scrollable element\n\t\t\t\t\t\t\t// ignore if delta is < 1 (subpixel case)\n\t\t\t\t\t\t\tif (delta >= 1 && current == scrollElem.scrollTop) {\n\t\t\t\t\t\t\t\tnextScrollElem = findClosestScrollableElement(scrollElem.parentNode);\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\twhile (nextScrollElem) {\n\t\t\t\t\t\t\t\t\tcurrent = nextScrollElem.scrollTop;\n\t\t\t\t\t\t\t\t\tnextScrollElem.scrollTop = current + delta;\n\t\t\t\t\t\t\t\t\tif (nextScrollElem === document.body || nextScrollElem.scrollTop != current) {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tnextScrollElem = findClosestScrollableElement(nextScrollElem.parentNode);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlast = event.clientY;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * Handler for PointerUp event\n\t\t\t\t */\n\t\t\t\tpointerUpHandler = function(event) {\n\t\t\t\t\tclearCachedHeight();\n\t\t\t\t\tlast = undefined;\n\t\t\t\t};\n\n\t\t\t\telem.addEventListener(POINTER_DOWN, pointerDownHandler);\n\t\t\t\telem.addEventListener(POINTER_MOVE, pointerMoveHandler); \n\t\t\t\telem.addEventListener(POINTER_UP, pointerUpHandler);\n\t\t\t\telem._pointerHandlers = [pointerDownHandler, pointerMoveHandler, pointerUpHandler];\n\t\t\t},\n\t\t\t/**\n\t\t\t * This method detach the scroll event handler.\n\t\t\t * @param {Element} elem \n\t\t\t */\n\t\t\tdetachScrollHandler = function(elem) {\n\t\t\t\tif (elem._pointerHandlers) {\n\t\t\t\t\telem.removeEventListener(POINTER_DOWN, elem._pointerHandlers[0]);\n\t\t\t\t\telem.removeEventListener(POINTER_MOVE, elem._pointerHandlers[1]);\n\t\t\t\t\telem.removeEventListener(POINTER_UP, elem._pointerHandlers[2]);\n\t\t\t\t\telem._pointerHandlers = undefined;\n\t\t\t\t}\n\t\t\t},\n\t\t\t/**\n\t\t\t * This method detach event handler for MSPointer / MSGesture events when user\n\t\t\t * tries to detach touch / gesture events.\n\t\t\t * @param {String} type\n\t\t\t * @param {Function} listener\n\t\t\t * @param {Boolean} useCapture\n\t\t\t */\n\t\t\tremoveTouchEvents = function (type, listener, useCapture) {\n\t\t\t\t//todo: are we able to understand when all listeners are unregistered and shall be removed?\n\t\t\t\tif (type === \"touchmove\") {\n\t\t\t\t\tif (this._touchActionUpdated) {\n\t\t\t\t\t\tdelete this.style[TOUCH_ACTION];\n\t\t\t\t\t}\n\t\t\t\t\tdetachScrollHandler(this);\n\t\t\t\t}\n\t\t\t};\n\n\n\t\t/*\n\t\t * Adding DocumentTouch interface\n\t\t * @see http://www.w3.org/TR/2011/WD-touch-events-20110505/#idl-def-DocumentTouch\n\t\t */\n\n\t\t/**\n\t\t * Create touches list from array or touches or given touch\n\t\t * @param {Touch[]|Touch} touches\n\t\t * @returns {TouchList}\n\t\t */\n\t\tdocument.createTouchList = function(touches) {\n\t\t\tvar touchList = new TouchList();\n\t\t\tif (touches) {\n\t\t\t\tif (touches.length) {\n\t\t\t\t\ttouchList._addAll(touches);\n\t\t\t\t} else {\n\t\t\t\t\ttouchList._add(touches);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn touchList;\n\t\t};\n\n\t\t/*******  Fakes which persuade other code to use touch events ********/\n\n\t\t/**\n\t\t * AbstractView is class for document.defaultView === window\n\t\t * @param {AbstractView} view\n\t\t * @param {EventTarget} target\n\t\t * @param {Number} identifier\n\t\t * @param {Number} pageX\n\t\t * @param {Number} pageY\n\t\t * @param {Number} screenX\n\t\t * @param {Number} screenY\n\t\t * @return {Touch}\n\t\t */\n\t\tdocument.createTouch = function(view, target, identifier, pageX, pageY, screenX, screenY) {\n\t\t\treturn {\n\t\t\t\tidentifier: identifier,\n\t\t\t\tscreenX: screenX,\n\t\t\t\tscreenY: screenY,\n\t\t\t\t//clientX: clientX,\n\t\t\t\t//clientY: clientY,\n\t\t\t\tpageX: pageX,\n\t\t\t\tpageY: pageY,\n\t\t\t\ttarget: target\n\t\t\t};\n\t\t};\n\t\t//Fake Modernizer touch test\n\t\t//http://modernizr.github.com/Modernizr/touch.html\n\t\tif (!window.ontouchstart) window.ontouchstart = 1;\n\n\t\t/*******  End of fakes ***********************************/\n\n\t\tgeneralTouchesHolder = document.createTouchList();\n\n\t\t// Overriding HTMLElement and HTMLDocument to hand over touch handler to MSPointer event handler\n\t\taugmentEventListener(HTMLElement);\n\t\taugmentEventListener(Document);\n\t}\n}(window));","module.exports={\"supplemental\":{\"defaultRegion\":{\"ar\":\"001\",\"as\":\"IN\",\"be\":\"BY\",\"bg\":\"BG\",\"bn\":\"BD\",\"bo\":\"CN\",\"brx\":\"IN\",\"bs\":\"BA\",\"ca\":\"ES\",\"cs\":\"CZ\",\"da\":\"DK\",\"de\":\"DE\",\"el\":\"GR\",\"en\":\"US\",\"es\":\"ES\",\"et\":\"EE\",\"fi\":\"FI\",\"fr\":\"FR\",\"ga\":\"IE\",\"gu\":\"IN\",\"he\":\"IL\",\"hi\":\"IN\",\"hr\":\"HR\",\"hu\":\"HU\",\"id\":\"ID\",\"is\":\"IS\",\"it\":\"IT\",\"ja\":\"JP\",\"kn\":\"IN\",\"ko\":\"KR\",\"kok\":\"IN\",\"ks\":\"IN\",\"ks-Arab\":\"IN\",\"lt\":\"LT\",\"lv\":\"LV\",\"mk\":\"MK\",\"ml\":\"IN\",\"mr\":\"IN\",\"ms\":\"MY\",\"mt\":\"MT\",\"nb\":\"NO\",\"ne\":\"NP\",\"nl\":\"NL\",\"nn\":\"NO\",\"no\":\"NO\",\"or\":\"IN\",\"pa\":\"IN\",\"pa-Guru\":\"IN\",\"pa-Arab\":\"PK\",\"pl\":\"PL\",\"pt\":\"BR\",\"ro\":\"RO\",\"ru\":\"RU\",\"sk\":\"SK\",\"sl\":\"SI\",\"sq\":\"AL\",\"sr\":\"RS\",\"sr-Cyrl\":\"RS\",\"sr-Latn\":\"RS\",\"sv\":\"SE\",\"ta\":\"IN\",\"te\":\"IN\",\"th\":\"TH\",\"tr\":\"TR\",\"uk\":\"UA\",\"ur\":\"PK\",\"vi\":\"VN\",\"zh\":\"CN\",\"zh-Hans\":\"CN\",\"zh-Hant\":\"TW\"},\"weekData\":{\"firstDay\":{\"001\":1,\"AE\":6,\"BH\":6,\"BR\":0,\"DZ\":6,\"EG\":6,\"IQ\":6,\"JO\":6,\"KW\":6,\"LB\":1,\"LY\":6,\"MA\":6,\"OM\":6,\"QA\":6,\"SA\":0,\"SD\":6,\"SY\":6,\"TN\":0,\"YE\":0,\"BY\":1,\"BG\":1,\"ES\":1,\"CZ\":1,\"DK\":1,\"AT\":1,\"CH\":1,\"DE\":1,\"LU\":1,\"CY\":1,\"GR\":1,\"AU\":0,\"CA\":0,\"GB\":1,\"IE\":0,\"IN\":0,\"MT\":0,\"NZ\":0,\"PH\":0,\"SG\":0,\"US\":0,\"ZA\":0,\"AR\":0,\"CL\":1,\"CO\":0,\"CR\":1,\"DO\":0,\"EC\":1,\"GT\":0,\"HN\":0,\"MX\":0,\"NI\":0,\"PA\":0,\"PE\":0,\"PR\":0,\"PY\":0,\"SV\":0,\"UY\":1,\"VE\":0,\"EE\":1,\"FI\":1,\"BE\":1,\"FR\":1,\"IL\":0,\"HR\":1,\"HU\":1,\"ID\":0,\"IS\":1,\"IT\":1,\"JP\":0,\"KR\":0,\"LT\":1,\"LV\":1,\"MK\":1,\"MY\":1,\"NO\":1,\"NL\":1,\"PL\":1,\"PT\":1,\"RO\":1,\"RU\":1,\"SK\":1,\"SI\":1,\"AL\":1,\"BA\":1,\"ME\":1,\"RS\":1,\"SE\":1,\"TH\":0,\"TR\":1,\"UA\":1,\"VN\":1,\"CN\":0,\"HK\":0,\"MO\":0,\"TW\":0},\"weekendStart\":{\"001\":6,\"AE\":5,\"BH\":5,\"DZ\":5,\"EG\":5,\"IQ\":5,\"JO\":5,\"KW\":5,\"LY\":5,\"MA\":5,\"OM\":5,\"QA\":5,\"SA\":5,\"SD\":5,\"SY\":5,\"TN\":5,\"YE\":5,\"IN\":0,\"IL\":5},\"weekendEnd\":{\"001\":0,\"AE\":6,\"BH\":6,\"DZ\":6,\"EG\":6,\"IQ\":6,\"JO\":6,\"KW\":6,\"LY\":6,\"MA\":6,\"OM\":6,\"QA\":6,\"SA\":6,\"SD\":6,\"SY\":6,\"TN\":6,\"YE\":6,\"IL\":6}},\"prefferedHours\":{\"001\":\"H\",\"AE\":\"h\",\"BH\":\"h\",\"DZ\":\"h\",\"EG\":\"h\",\"IQ\":\"h\",\"JO\":\"h\",\"KW\":\"h\",\"LB\":\"h\",\"LY\":\"h\",\"MA\":\"H\",\"OM\":\"h\",\"QA\":\"h\",\"SA\":\"h\",\"SD\":\"h\",\"SY\":\"h\",\"TN\":\"h\",\"YE\":\"h\",\"BG\":\"H\",\"ES\":\"H\",\"CZ\":\"H\",\"DK\":\"H\",\"AT\":\"H\",\"CH\":\"H\",\"DE\":\"H\",\"LU\":\"H\",\"CY\":\"h\",\"GR\":\"h\",\"AU\":\"h\",\"CA\":\"h\",\"GB\":\"H\",\"IE\":\"H\",\"IN\":\"h\",\"NZ\":\"h\",\"PH\":\"h\",\"SG\":\"h\",\"US\":\"h\",\"ZA\":\"h\",\"AR\":\"H\",\"BO\":\"H\",\"CL\":\"H\",\"CO\":\"h\",\"CR\":\"H\",\"CU\":\"H\",\"DO\":\"h\",\"EC\":\"H\",\"GT\":\"H\",\"HN\":\"H\",\"MX\":\"H\",\"NI\":\"H\",\"PA\":\"h\",\"PE\":\"H\",\"PR\":\"h\",\"SV\":\"H\",\"UY\":\"H\",\"VE\":\"h\",\"EE\":\"H\",\"FI\":\"H\",\"BE\":\"H\",\"FR\":\"H\",\"IL\":\"H\",\"HR\":\"H\",\"ID\":\"H\",\"IS\":\"H\",\"IT\":\"H\",\"JP\":\"H\",\"KR\":\"h\",\"LT\":\"H\",\"LV\":\"H\",\"MK\":\"H\",\"MY\":\"h\",\"NL\":\"H\",\"PT\":\"H\",\"RO\":\"H\",\"RU\":\"H\",\"SK\":\"H\",\"SI\":\"H\",\"AL\":\"h\",\"BA\":\"H\",\"ME\":\"H\",\"RS\":\"H\",\"SE\":\"H\",\"TR\":\"H\",\"UA\":\"H\",\"CN\":\"h\",\"HK\":\"h\",\"MO\":\"h\",\"TW\":\"h\"},\"currencyData\":{\"fractions\":{\"IDR\":{\"_digits\":\"2\"},\"JPY\":{\"_digits\":\"0\"},\"KRW\":{\"_digits\":\"0\"},\"AFN\":{\"_digits\":\"0\"},\"ADP\":{\"_digits\":\"0\"},\"BHD\":{\"_digits\":\"3\"},\"BYR\":{\"_digits\":\"0\"},\"BIF\":{\"_digits\":\"0\"},\"XOF\":{\"_digits\":\"0\"},\"XAF\":{\"_digits\":\"0\"},\"XPF\":{\"_digits\":\"0\"},\"CLP\":{\"_digits\":\"0\"},\"KMF\":{\"_digits\":\"0\"},\"DJF\":{\"_digits\":\"0\"},\"STD\":{\"_digits\":\"0\"},\"PYG\":{\"_digits\":\"0\"},\"GNF\":{\"_digits\":\"0\"},\"ISK\":{\"_digits\":\"0\"},\"IQD\":{\"_digits\":\"0\"},\"ITL\":{\"_digits\":\"0\"},\"LAK\":{\"_digits\":\"0\"},\"KWD\":{\"_digits\":\"3\"},\"MMK\":{\"_digits\":\"0\"},\"LBP\":{\"_digits\":\"0\"},\"ALL\":{\"_digits\":\"0\"},\"SLL\":{\"_digits\":\"0\"},\"LUF\":{\"_digits\":\"0\"},\"LYD\":{\"_digits\":\"3\"},\"MGF\":{\"_digits\":\"0\"},\"TMM\":{\"_digits\":\"0\"},\"KPW\":{\"_digits\":\"0\"},\"MRO\":{\"_digits\":\"0\"},\"RWF\":{\"_digits\":\"0\"},\"RSD\":{\"_digits\":\"0\"},\"SOS\":{\"_digits\":\"0\"},\"ESP\":{\"_digits\":\"0\"},\"SYP\":{\"_digits\":\"0\"},\"TND\":{\"_digits\":\"3\"},\"TRL\":{\"_digits\":\"0\"},\"UYW\":{\"_digits\":\"4\"},\"CLF\":{\"_digits\":\"4\"},\"UYI\":{\"_digits\":\"0\"},\"VUV\":{\"_digits\":\"0\"},\"YER\":{\"_digits\":\"0\"},\"ZMK\":{\"_digits\":\"0\"},\"ZWD\":{\"_digits\":\"0\"},\"VND\":{\"_digits\":\"0\"}}}},\"_ojLocale_\":\"en-US\",\"main\":{\"en\":{\"identity\":{\"version\":{\"_cldrVersion\":\"38\"},\"language\":\"en\"},\"numbers\":{\"defaultNumberingSystem\":\"latn\",\"otherNumberingSystems\":{\"native\":\"latn\"},\"symbols-numberSystem-latn\":{\"decimal\":\".\",\"group\":\",\",\"percentSign\":\"%\",\"plusSign\":\"+\",\"minusSign\":\"-\",\"exponential\":\"E\",\"perMille\":\"‰\",\"infinity\":\"∞\",\"nan\":\"NaN\"},\"decimalFormats-numberSystem-latn\":{\"standard\":\"#,##0.###\",\"long\":{\"decimalFormat\":{\"1000-count-one\":\"0 thousand\",\"1000-count-other\":\"0 thousand\",\"10000-count-one\":\"00 thousand\",\"10000-count-other\":\"00 thousand\",\"100000-count-one\":\"000 thousand\",\"100000-count-other\":\"000 thousand\",\"1000000-count-one\":\"0 million\",\"1000000-count-other\":\"0 million\",\"10000000-count-one\":\"00 million\",\"10000000-count-other\":\"00 million\",\"100000000-count-one\":\"000 million\",\"100000000-count-other\":\"000 million\",\"1000000000-count-one\":\"0 billion\",\"1000000000-count-other\":\"0 billion\",\"10000000000-count-one\":\"00 billion\",\"10000000000-count-other\":\"00 billion\",\"100000000000-count-one\":\"000 billion\",\"100000000000-count-other\":\"000 billion\",\"1000000000000-count-one\":\"0 trillion\",\"1000000000000-count-other\":\"0 trillion\",\"10000000000000-count-one\":\"00 trillion\",\"10000000000000-count-other\":\"00 trillion\",\"100000000000000-count-one\":\"000 trillion\",\"100000000000000-count-other\":\"000 trillion\"}},\"short\":{\"decimalFormat\":{\"1000-count-one\":\"0K\",\"1000-count-other\":\"0K\",\"10000-count-one\":\"00K\",\"10000-count-other\":\"00K\",\"100000-count-one\":\"000K\",\"100000-count-other\":\"000K\",\"1000000-count-one\":\"0M\",\"1000000-count-other\":\"0M\",\"10000000-count-one\":\"00M\",\"10000000-count-other\":\"00M\",\"100000000-count-one\":\"000M\",\"100000000-count-other\":\"000M\",\"1000000000-count-one\":\"0B\",\"1000000000-count-other\":\"0B\",\"10000000000-count-one\":\"00B\",\"10000000000-count-other\":\"00B\",\"100000000000-count-one\":\"000B\",\"100000000000-count-other\":\"000B\",\"1000000000000-count-one\":\"0T\",\"1000000000000-count-other\":\"0T\",\"10000000000000-count-one\":\"00T\",\"10000000000000-count-other\":\"00T\",\"100000000000000-count-one\":\"000T\",\"100000000000000-count-other\":\"000T\"}}},\"percentFormats-numberSystem-latn\":{\"standard\":\"#,##0%\"},\"currencyFormats-numberSystem-latn\":{\"standard\":\"¤#,##0.00\",\"unitPattern-count-one\":\"{0} {1}\",\"unitPattern-count-other\":\"{0} {1}\"},\"currencies\":{\"AUD\":{\"displayName\":\"Australian Dollar\",\"symbol\":\"A$\"},\"BRL\":{\"displayName\":\"Brazilian Real\",\"symbol\":\"R$\"},\"CAD\":{\"displayName\":\"Canadian Dollar\",\"symbol\":\"CA$\"},\"CHF\":{\"displayName\":\"Swiss Franc\",\"symbol\":\"CHF\"},\"CNY\":{\"displayName\":\"Chinese Yuan\",\"symbol\":\"CN¥\"},\"CZK\":{\"displayName\":\"Czech Koruna\",\"symbol\":\"CZK\"},\"DKK\":{\"displayName\":\"Danish Krone\",\"symbol\":\"DKK\"},\"EUR\":{\"displayName\":\"Euro\",\"symbol\":\"€\"},\"GBP\":{\"displayName\":\"British Pound\",\"symbol\":\"£\"},\"HKD\":{\"displayName\":\"Hong Kong Dollar\",\"symbol\":\"HK$\"},\"HUF\":{\"displayName\":\"Hungarian Forint\",\"symbol\":\"HUF\"},\"IDR\":{\"displayName\":\"Indonesian Rupiah\",\"symbol\":\"IDR\"},\"INR\":{\"displayName\":\"Indian Rupee\",\"symbol\":\"₹\"},\"JPY\":{\"displayName\":\"Japanese Yen\",\"symbol\":\"¥\"},\"KRW\":{\"displayName\":\"South Korean Won\",\"symbol\":\"₩\"},\"MXN\":{\"displayName\":\"Mexican Peso\",\"symbol\":\"MX$\"},\"NOK\":{\"displayName\":\"Norwegian Krone\",\"symbol\":\"NOK\"},\"PLN\":{\"displayName\":\"Polish Zloty\",\"symbol\":\"PLN\"},\"RUB\":{\"displayName\":\"Russian Ruble\",\"symbol\":\"RUB\"},\"SAR\":{\"displayName\":\"Saudi Riyal\",\"symbol\":\"SAR\"},\"SEK\":{\"displayName\":\"Swedish Krona\",\"symbol\":\"SEK\"},\"THB\":{\"displayName\":\"Thai Baht\",\"symbol\":\"THB\"},\"TRY\":{\"displayName\":\"Turkish Lira\",\"symbol\":\"TRY\"},\"TWD\":{\"displayName\":\"New Taiwan Dollar\",\"symbol\":\"NT$\"},\"USD\":{\"displayName\":\"US Dollar\",\"symbol\":\"$\"},\"ZAR\":{\"displayName\":\"South African Rand\",\"symbol\":\"ZAR\"}}},\"units\":{\"narrow\":{\"digital-terabyte\":{\"unitPattern-count-one\":\"{0}TB\",\"unitPattern-count-other\":\"{0}TB\"},\"digital-terabit\":{\"unitPattern-count-one\":\"{0}Tb\",\"unitPattern-count-other\":\"{0}Tb\"},\"digital-gigabyte\":{\"unitPattern-count-one\":\"{0}GB\",\"unitPattern-count-other\":\"{0}GB\"},\"digital-gigabit\":{\"unitPattern-count-one\":\"{0}Gb\",\"unitPattern-count-other\":\"{0}Gb\"},\"digital-megabyte\":{\"unitPattern-count-one\":\"{0}MB\",\"unitPattern-count-other\":\"{0}MB\"},\"digital-megabit\":{\"unitPattern-count-one\":\"{0}Mb\",\"unitPattern-count-other\":\"{0}Mb\"},\"digital-kilobyte\":{\"unitPattern-count-one\":\"{0}kB\",\"unitPattern-count-other\":\"{0}kB\"},\"digital-kilobit\":{\"unitPattern-count-one\":\"{0}kb\",\"unitPattern-count-other\":\"{0}kb\"},\"digital-byte\":{\"unitPattern-count-one\":\"{0}B\",\"unitPattern-count-other\":\"{0}B\"},\"digital-bit\":{\"unitPattern-count-one\":\"{0}bit\",\"unitPattern-count-other\":\"{0}bit\"}}}},\"en-US\":{\"identity\":{\"version\":{\"_cldrVersion\":\"38\"},\"language\":\"en\",\"territory\":\"US\"},\"numbers\":{\"defaultNumberingSystem\":\"latn\",\"otherNumberingSystems\":{\"native\":\"latn\"},\"symbols-numberSystem-latn\":{\"decimal\":\".\",\"group\":\",\",\"percentSign\":\"%\",\"plusSign\":\"+\",\"minusSign\":\"-\",\"exponential\":\"E\",\"perMille\":\"‰\",\"infinity\":\"∞\",\"nan\":\"NaN\"},\"decimalFormats-numberSystem-latn\":{\"standard\":\"#,##0.###\",\"long\":{\"decimalFormat\":{\"1000-count-one\":\"0 thousand\",\"1000-count-other\":\"0 thousand\",\"10000-count-one\":\"00 thousand\",\"10000-count-other\":\"00 thousand\",\"100000-count-one\":\"000 thousand\",\"100000-count-other\":\"000 thousand\",\"1000000-count-one\":\"0 million\",\"1000000-count-other\":\"0 million\",\"10000000-count-one\":\"00 million\",\"10000000-count-other\":\"00 million\",\"100000000-count-one\":\"000 million\",\"100000000-count-other\":\"000 million\",\"1000000000-count-one\":\"0 billion\",\"1000000000-count-other\":\"0 billion\",\"10000000000-count-one\":\"00 billion\",\"10000000000-count-other\":\"00 billion\",\"100000000000-count-one\":\"000 billion\",\"100000000000-count-other\":\"000 billion\",\"1000000000000-count-one\":\"0 trillion\",\"1000000000000-count-other\":\"0 trillion\",\"10000000000000-count-one\":\"00 trillion\",\"10000000000000-count-other\":\"00 trillion\",\"100000000000000-count-one\":\"000 trillion\",\"100000000000000-count-other\":\"000 trillion\"}},\"short\":{\"decimalFormat\":{\"1000-count-one\":\"0K\",\"1000-count-other\":\"0K\",\"10000-count-one\":\"00K\",\"10000-count-other\":\"00K\",\"100000-count-one\":\"000K\",\"100000-count-other\":\"000K\",\"1000000-count-one\":\"0M\",\"1000000-count-other\":\"0M\",\"10000000-count-one\":\"00M\",\"10000000-count-other\":\"00M\",\"100000000-count-one\":\"000M\",\"100000000-count-other\":\"000M\",\"1000000000-count-one\":\"0B\",\"1000000000-count-other\":\"0B\",\"10000000000-count-one\":\"00B\",\"10000000000-count-other\":\"00B\",\"100000000000-count-one\":\"000B\",\"100000000000-count-other\":\"000B\",\"1000000000000-count-one\":\"0T\",\"1000000000000-count-other\":\"0T\",\"10000000000000-count-one\":\"00T\",\"10000000000000-count-other\":\"00T\",\"100000000000000-count-one\":\"000T\",\"100000000000000-count-other\":\"000T\"}}},\"percentFormats-numberSystem-latn\":{\"standard\":\"#,##0%\"},\"currencyFormats-numberSystem-latn\":{\"standard\":\"¤#,##0.00\",\"unitPattern-count-one\":\"{0} {1}\",\"unitPattern-count-other\":\"{0} {1}\"},\"currencies\":{\"AUD\":{\"displayName\":\"Australian Dollar\",\"symbol\":\"A$\"},\"BRL\":{\"displayName\":\"Brazilian Real\",\"symbol\":\"R$\"},\"CAD\":{\"displayName\":\"Canadian Dollar\",\"symbol\":\"CA$\"},\"CHF\":{\"displayName\":\"Swiss Franc\",\"symbol\":\"CHF\"},\"CNY\":{\"displayName\":\"Chinese Yuan\",\"symbol\":\"CN¥\"},\"CZK\":{\"displayName\":\"Czech Koruna\",\"symbol\":\"CZK\"},\"DKK\":{\"displayName\":\"Danish Krone\",\"symbol\":\"DKK\"},\"EUR\":{\"displayName\":\"Euro\",\"symbol\":\"€\"},\"GBP\":{\"displayName\":\"British Pound\",\"symbol\":\"£\"},\"HKD\":{\"displayName\":\"Hong Kong Dollar\",\"symbol\":\"HK$\"},\"HUF\":{\"displayName\":\"Hungarian Forint\",\"symbol\":\"HUF\"},\"IDR\":{\"displayName\":\"Indonesian Rupiah\",\"symbol\":\"IDR\"},\"INR\":{\"displayName\":\"Indian Rupee\",\"symbol\":\"₹\"},\"JPY\":{\"displayName\":\"Japanese Yen\",\"symbol\":\"¥\"},\"KRW\":{\"displayName\":\"South Korean Won\",\"symbol\":\"₩\"},\"MXN\":{\"displayName\":\"Mexican Peso\",\"symbol\":\"MX$\"},\"NOK\":{\"displayName\":\"Norwegian Krone\",\"symbol\":\"NOK\"},\"PLN\":{\"displayName\":\"Polish Zloty\",\"symbol\":\"PLN\"},\"RUB\":{\"displayName\":\"Russian Ruble\",\"symbol\":\"RUB\"},\"SAR\":{\"displayName\":\"Saudi Riyal\",\"symbol\":\"SAR\"},\"SEK\":{\"displayName\":\"Swedish Krona\",\"symbol\":\"SEK\"},\"THB\":{\"displayName\":\"Thai Baht\",\"symbol\":\"THB\"},\"TRY\":{\"displayName\":\"Turkish Lira\",\"symbol\":\"TRY\"},\"TWD\":{\"displayName\":\"New Taiwan Dollar\",\"symbol\":\"NT$\"},\"USD\":{\"displayName\":\"US Dollar\",\"symbol\":\"$\"},\"ZAR\":{\"displayName\":\"South African Rand\",\"symbol\":\"ZAR\"}}},\"units\":{\"narrow\":{\"digital-terabyte\":{\"unitPattern-count-one\":\"{0}TB\",\"unitPattern-count-other\":\"{0}TB\"},\"digital-terabit\":{\"unitPattern-count-one\":\"{0}Tb\",\"unitPattern-count-other\":\"{0}Tb\"},\"digital-gigabyte\":{\"unitPattern-count-one\":\"{0}GB\",\"unitPattern-count-other\":\"{0}GB\"},\"digital-gigabit\":{\"unitPattern-count-one\":\"{0}Gb\",\"unitPattern-count-other\":\"{0}Gb\"},\"digital-megabyte\":{\"unitPattern-count-one\":\"{0}MB\",\"unitPattern-count-other\":\"{0}MB\"},\"digital-megabit\":{\"unitPattern-count-one\":\"{0}Mb\",\"unitPattern-count-other\":\"{0}Mb\"},\"digital-kilobyte\":{\"unitPattern-count-one\":\"{0}kB\",\"unitPattern-count-other\":\"{0}kB\"},\"digital-kilobit\":{\"unitPattern-count-one\":\"{0}kb\",\"unitPattern-count-other\":\"{0}kb\"},\"digital-byte\":{\"unitPattern-count-one\":\"{0}B\",\"unitPattern-count-other\":\"{0}B\"},\"digital-bit\":{\"unitPattern-count-one\":\"{0}bit\",\"unitPattern-count-other\":\"{0}bit\"}}}}}}"],"names":["FormatParseError","Error","constructor","message","options","super","Object","setPrototypeOf","this","prototype","cause","Logger","_curry2","_","names","obj","result","idx","length","pick_1","console","_arity_1","n","fn","apply","arguments","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","CalendarUtils","_getDayPeriods","locale","calendar","date","Date","getDayPeriodsFromFormatToParts","formatter","eraPart","formatToParts","find","value","type","formatterLocale","getFormatterLocale","Intl","DateTimeFormat","hour","hour12","amValue","setHours","format","wide","am","pm","_getEras","eras","era","start","cal","eraNarrow","eraAbbr","eraName","getEraFromFormatToParts","eraLenArray","eraMap","narrow","short","long","i","j","eraLenName","year","month","day","eraForLength","eraObj","_fillMonthAndDays","widthVal","isStandAlone","dates","getMonthFromFormatToParts","formatParts","monthPart","getWeekdayFromFormatToParts","weekdayPart","calMonthFormat","calDayFormat","index","dayIndexVal","_weekdaysFormatMap","weekday","undefined","monthFormat","dayFormat","_getFormatMonthAndDays","calMonths","calDays","types","_monthNamesFormatMap","monthDayObjForWidth","myMonthObj","assign","myDayObj","myMonthFormatObj","myDayFormatObj","monthsNode","daysNode","_getStandAloneDays","dayObjForWidth","myDayStandAloneObj","_getStandAloneMonths","monthObjForWidth","myMonthStandAloneObj","getCalendar","calendars","dayPeriodsObj","erasObj","standAloneMonths","standAloneDays","exceptionLocales","includes","monthsDaysNodeObj","monthsNodes","daysNodes","dayPeriods","months","days","formatterCache","Map","getISODateOffset","timeZone","d","UTC","hours","minutes","offset","original","asUTC","originalMins","utcMinutes","delta","_getOffset","_applyTimezoneToDate","adjustment","setTime","getTime","_compareDates","formattedUTC","timezone","get","minute","second","hourCycle","set","_getConverter","localDate","localTime","split","trim","parseInt","date1","date2","NativeDateTimeConstants","_YEAR_AND_DATE_REGEXP","_YMD_REGEXP","_TIME_REGEXP","_TIME_FORMAT_REGEXP","_YEAR_REGEXP","_MONTH_REGEXP","_DAY_REGEXP","_WEEK_DAY_REGEXP","_HOUR_REGEXP","_MINUTE_REGEXP","_SECOND_REGEXP","_FRACTIONAL_SECOND_REGEXP","_AMPM_REGEXP","_WORD_REGEXP","_ESCAPE_REGEXP","_TOKEN_REGEXP","_ZULU","_LOCAL","_AUTO","_INVARIANT","_OFFSET","_ALNUM_REGEXP","_NON_DIGIT_REGEXP","_NON_DIGIT_OPT_REGEXP","_STR_REGEXP","_TWO_DIGITS_REGEXP","_THREE_DIGITS_REGEXP","_FOUR_DIGITS_REGEXP","_SLASH_REGEXP","_PROPERTIES_MAP","MMM","token","style","mLen","matchIndex","key","regExp","MMMM","MMMMM","LLL","LLLL","LLLLL","E","dLen","EE","EEE","EEEE","EEEEE","c","cc","ccc","cccc","ccccc","h","timePart","start1","end1","start2","end2","hh","K","KK","H","HH","k","kk","m","mm","s","ss","S","SS","SSS","getPartIdx","dd","M","MM","L","LL","y","yy","yyyy","a","z","v","zz","zzz","zzzz","Z","ZZ","ZZZ","X","XX","XXX","VV","G","GG","GGG","GGGG","GGGGG","FRACTIONAL_SECOND_MAP","_tokenMap","numeric","fractionalSecond","timeZoneName","_dateTimeFormats","dateStyle","full","month_s","month_m","medium","timeStyle","_ALPHA_REGEXP","_HOUR12_REGEXP","_hourCycleMap","h12","h23","h11","h24","_zh_tw_locales","_zh_tw_pm_symbols","regexTrim","regexTrimNumber","regexTrimRightZeros","zeros","_ISO_DATE_REGEXP","_ISO_DATE_ONLY_REGEXP","startsWith","pattern","indexOf","replace","trimRightZeros","trimNumber","toUpper","join","toUpperCase","padZeros","num","isNegative","substr","zeroPad","str","count","left","l","_throwInvalidISOStringRange","isoStr","name","displayValue","displayLow","displayHigh","RangeError","code","parameterMap","minValue","maxValue","propertyName","_throwInvalidISOStringSyntax","dateToLocalIso","_date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","isLeapYear","getDaysInMonth","IsoStrParts","isoString","test","splitted","tIndex","today","isBC","datetime","slice","dateSplitted","val","nbDays","milliSecSplitted","timeSplitted","tVal","getGetOption","getOptionCaller","property","values","defaultValue","toLowerCase","_toBoolean","String","Number","expectedValues","push","msg","rangeError","errorInfo","errorCode","propertyValue","propertyValueValid","caller","partsToIsoString","parts","isoToLocalDate","setFullYear","_isoToLocalDateIgnoreTimezone","getISOStrFormatInfo","res","dateTime","isoStrParts","exe","exec","isoStrLen","timeZoneLen","substring","getTimeStringFromOffset","prefix","reverseSign","alwaysMinutes","absOffset","Math","abs","floor","sign","dateTimeUtils","__proto__","isDateOnlyIsoString","localSystemTimeZone","NativeParserImpl","parseImpl","resOptions","dtStyle","parsedIsoStr","isoStrInfo","_isoStrDateTimeStyle","_dateTimeStyle","_parseExact","_adjustHours","_createParseISOStringFromDate","warning","isoStrFormat","_appendPreOrPostMatch","preMatch","strings","quoteCount","escaped","il","charAt","_validateRange","range","low","high","_throwInvalidDateFormat","isDate","isTime","samplePattern","SyntaxError","_throwWeekdayMismatch","_throwDateFormatMismatch","errorCodeType","_parseTimezoneOffset","_offset","offsetParts","Array","_expandYear","start2DigitYear","ambiguousTwoDigitYear","_arrayIndexOfMonthOrDay","monthsDaysData","userInput","trimUserInput","toUpperTrimmedNoPeriod","keys","valueFromData","trimValueFromData","trimUserInputNumber","numberPartFromData","isInteger","trimItem","_getDayIndex","calNode","ret","calDaysFmt","calDaysStdAlone","abbreviated","_getMonthIndex","calMonthsFmt","calMonthsStdAlone","_getParseRegExp","expFormat","regexp","groups","match","lastIndex","add","_getTokenIndex","arr","_parseLenienthms","timepart","dtype","msec","_matchPMSymbol","_getWeekdayName","calDaysStandAlone","dayKeys","dName","RegExp","_parseLenientyMEd","isDateTime","tokenIndexes","sort","b","n1","n2","yearIndex","foundDayIndex","dayIndex","foundYear","foundDay","tokenMatch","intToken","daysInMonth","twoDigitYearStart","parsedDate","weekDay","getDay","_parseLenientyMMMEd","origValue","calMonthsStandAlone","foundMatch","reverseMonth","mName","monthKeys","unshift","dRegExp","_parseLenient","gregParts","isoParts","_getNameIndex","datePart","matchGroup","mLength","monthsFormat","startName","endName","_validateTimePart","matchInt","_timeObj","objMap","timeToken","timeObj","htoken","fractionalSecondDigits","loc","isPM","pmSymbols","pmSymbol","calPM","trimEraPart","lenientParse","getOption","parseInfo","pmHour","hourOffset","tzID","weekDayName","millisec","jl","current","currentGroup","e","MonthDays","isoParsedDate","_getTimeZoneOffset","validateDay","timeIndex","tzName","getLocalSystemTimeZone","getTimezoneOffset","_getAdjustedOffset","origOffset","tzParts","hoursOffset","minOffset","newOffset","newDate","newDateIsoStrInfo","adjustD","adjustedMin","getUTCMinutes","setUTCHours","getUTCHours","getUTCFullYear","getUTCMonth","getUTCDate","getUTCSeconds","_createISOStrParts","ms","_getParseISOStringOffset","isoFormat","getTimeZoneCurrentDate","getTimeZoneCurrentOffset","intlCnv","resolvedOptions","getFormatter","getResolvedOptions","patternFromOptions","getPatternFromOptions","getYearFormatter","dateStyleShortYear","numberingSystem","formatWithYearFormat","formatInstance","yearInstance","yearParts","formattedYear","part","reduce","acc","formatDateTime","intlFormatter","yearFormatter","normalizeIsoString","isoStrDate","parseDateTime","parsed","warn","curDate","islocalTimeZone","optVal","dtokenMap","ttokenMap","tokenMap","map","ish12","isNaN","_arity$1","_isPlaceholder","_curry1","_curryN","_curryN$1","received","combined","argsIdx","combinedIdx","curryN_1","getFormatParse","curriedFormat","parse","curriedParse","FormVariantContext","createContext","useFormVariantContext","useContext","factory","$","extend","expr","pseudos","data","createPseudo","dataName","elem","ui","ie","navigator","userAgent","plugin","module","option","proto","plugins","call","instance","args","allowDisconnected","element","parentNode","nodeType","safeActiveElement","document","activeElement","error","body","nodeName","safeBlur","trigger","scrollParent","includeHidden","position","css","excludeStaticParent","overflowRegex","parents","filter","parent","eq","ownerDocument","widget","mouse","version","widgetEventPrefix","addClasses","appendTo","axis","connectToSortable","containment","cursor","cursorAt","grid","handle","helper","iframeFix","opacity","refreshPositions","revert","revertDuration","scope","scroll","scrollSensitivity","scrollSpeed","snap","snapMode","snapTolerance","stack","zIndex","drag","stop","_create","_setPositionRelative","_addClass","_setHandleClassName","_mouseInit","_setOption","_super","_removeHandleClassName","_destroy","is","destroyOnClear","_mouseDestroy","_mouseCapture","event","o","disabled","target","closest","_getHandle","_blurActiveElement","_blockFrames","selector","iframeBlocks","iframe","outerWidth","outerHeight","_unblockFrames","remove","_mouseStart","_createHelper","_cacheHelperProportions","ddmanager","_cacheMargins","cssPosition","offsetParent","hasFixedAncestor","positionAbs","_refreshOffsets","originalPosition","_generatePosition","originalPageX","pageX","originalPageY","pageY","_adjustOffsetFromHelper","_setContainment","_trigger","_clear","dropBehaviour","prepareOffsets","_mouseDrag","dragStart","top","margins","_getParentOffset","relative","_getRelativeOffset","click","noPropagation","_convertPositionTo","_uiHash","_mouseUp","Event","_mouseStop","that","dropped","drop","animate","dragStop","handleElement","cancel","_removeClass","helperIsFunction","clone","removeAttr","isArray","helperProportions","width","right","height","bottom","_isRootNode","tagName","po","contains","scrollLeft","scrollTop","p","scrollIsRootNode","isUserScrollable","ce","relativeContainer","max","scrollWidth","offsetWidth","scrollHeight","offsetHeight","window","pos","mod","constrainPosition","co","round","cancelHelperRemoval","destroy","Widget","draggable","uiSortable","item","sortables","each","sortable","isOver","_storedCSS","placeholder","_helper","innermostIntersecting","_intersectsWith","containerCache","_parent","currentItem","fromOutside","_revert","t","_cursor","_opacity","scrollParentNotHidden","overflowOffset","scrolled","snapElements","items","$t","$o","inst","ts","bs","ls","rs","r","first","x1","x2","y1","y2","snapping","release","snapItem","min","group","makeArray","_zIndex","mouseHandled","on","distance","delay","widgetName","_mouseDown","removeData","stopImmediatePropagation","started","off","_mouseMoveDelegate","_mouseUpDelegate","_mouseMoved","_mouseStarted","_mouseDownEvent","btnIsLeft","which","elIsCancel","mouseDelayMet","_mouseDelayTimer","setTimeout","_mouseDistanceMet","_mouseDelayMet","preventDefault","_mouseMove","documentMode","button","originalEvent","altKey","ctrlKey","metaKey","shiftKey","ignoreMissingWhich","clearTimeout","exports","UNSAFE_IntlDateTime","defineProperty","enumerable","__ConverterUtilsI18n","LocaleData","Converter","Translations","Config","oj$1","ojvalidationError","ojconverterPreferences","hasOwnProperty","OraNumberConverter","_REGEX_INFINITY","_REGEX_PARSE_FLOAT","_LENIENT_REGEX_PARSE_FLOAT","_REGEX_TRIM_ZEROS","_REGEX_ONLY_ZEROS","_decimalTypeValues","trillion","billion","million","thousand","_decimalTypeValuesMap","_roundingModeMap","HALF_UP","CEILING","UP","HALF_DOWN","FLOOR","DOWN","DEFAULT","_DIGITAL_KILO","_DIGITAL_MEGA","_DIGITAL_GIGA","_DIGITAL_TERA","_zeroPad","_getNumberOption","minimum","maximum","fallback","_throwNumberOutOfRange","_getNumberingExtension","_locale","numbering","_getNumberSettings","localeElements","_numberSettings","pat","numberSettings","localeElementsMainNode","OraI18nUtils","getLocaleElementsMainNode","numberingSystemKey","symbols","numbers","_getNumberingSystemKey","lenient","standard","decFormatLength","decimalFormat","currencyFormat","shortDecimalFormat","decimalSeparator","decimal","groupSeparator","separators","dec","grp","lang","getLocaleElementsMainNodeKey","minusSign","exponential","groupingSeparator","currencyDisplay","currency","currencyCode","unit","minExponentDigits","gotNegative","useExponentialNotation","phaseOneLength","isPrefix","inQuote","suffix","decimalPos","multiplier","digitLeftCount","zeroDigitCount","digitRightCount","groupingCount","groupingCount0","phase","ch","_QUOT","concat","_DIGIT","_ZERO_DIGIT","_GROUPING_SEPARATOR","_DECIMAL_SEPARATOR","_CURRENCY","_throwMissingCurrency","doubled","_SEPARATOR","_throwSyntaxError","_PERCENT","isPercent","_PER_MILL","isPerMill","_MINUS","offset1","str2","_EXPONENT","sub1","negPrefixPattern","posPrefixPattern","negSuffixPattern","posSuffixPattern","digitTotalCount","effectiveDecimalPos","minimumIntegerDigits","maximumIntegerDigits","_MAXIMUM_INTEGER_DIGITS","maximumFractionDigits","minimumFractionDigits","groupingSize","groupingSize0","_MAXIMUM_FRACTION_DIGITS","localeCompare","curDisplay","positivePrefix","_expandAffix","positiveSuffix","negativePrefix","negativeSuffix","_expandAffixes","_applyPatternImpl","info","specialCurrency","supplemental","currencyData","fractions","fractionDigits","_digits","prop","typeError","TypeError","requiredPropertyName","requiredPropertyValueValid","_validateNumberOptions","fmt","shortFormats","_throwUnsupportedParseOption","_throwMissingUnit","_toRawFixed","number","curSize","curSize0","numberString","exponent","precision","_roundNumber","roundingMode","sep","useGrouping","stringIndex","scale","mode","rounded","adjustedMode","toString","part1","part2","digits","_expandExponent","rMode","len","_getRoundingMode","strValue","v0","v1","parseFloat","_decimalAdjust","factor","pow","isFinite","_lenientParseNumber","_num","localeMinusSign","dot","groupSep","altGroupSep","resNum","plusSign","_getParsedValue","errStr","_throwNaNException","roundedNumber","_getRoundedNumber","syntaxError","propertyValueHint","buffer","symbol","currencies","displayName","percentSign","perMille","_parsePatternOption","patternHasGroupSeparator","_checkPatternForGroupSeparator","patternHasDecimalSeparator","_checkPatternForDecimalSeparator","_init","Infinity","infinity","formatType","optStyle","numStr0","trimExp","numStr","numStr1","padLen","posExp","str1","_toExponentialPrecision","absVal","plural","PluralRules","select","entry","units","formatString","_toDigitalByte","decimalFormatType","tokens","typeVal","decimalTypeKeys","decimalTypeKey","_matchTypeValue","_getZerosInPattern","_toCompactNumber","numeringSystems","nativeRet","_formatNumberImpl","latnStr","_getLatnDigits","NaN","value1","signInfo","exactMatch","posSign","posSignRegExp","nbSettingPosPrefix","nbSettingPosSuffix","nbSettingNegPrefix","nbSettingNegSuffix","posPrefRegexp","posSuffRegexp","negPrefRegexp","negSuffRegexp","repStr","posPrefix","posSuffix","negPrefix","negSuffix","_parseNegativePattern","integer","intAndFraction","exponentSymbol","exponentPos","decSep","fraction","_getNumberParts","expSignInfo","_value","neg","_parseNegativeExponent","_parseNumberImpl","_resolveNumberSettings","roundDuringParse","leneint","virtualKeyboardHint","_parseUseGrouping","_getVirtualKeyboardHint","_resolveOptions","getInstance","NumberConverter","Init","oj","createSubclass","superclass","IntlNumberConverter","mo","getMergedNumberPreferencesWithOptions","_getWrapped","_wrapped","StringUtils","formatValue","getLocale","__getBundle","_processConverterError","summary","getTranslatedString","detail","getHint","getOptions","_resolvedOptions","converterError","resourceKey","Assert","assertObject","IntlConverterUtils","__getConverterOptionError","ConverterError","exampleValue","_getHintValue","ojthemeutils","dateTimePrefs","getDateTimePreferences","adjustAndFreeze","isFrozen","isEmpty","getDateStyleShortYearFromTheme","freeze","themeOptionDefaults","parseJSONFromFontFamily","yearFormat","converterYear","numberPrefs","getNumberPreferences","isGroupAndDecimalBothSet","isEmpty$1","mergeOptions","prefSeparators","cnvOptions","isEmpty$2","_getNoCvtrOptionsPrefPattern","preferenceOptions","datePattern","_getShortPattern","prefs","_combinePatternsWithSpace","timePattern","getMergedDateTimePreferencesWithOptions","userPrefPattern","completePattern","_getPreferencesPattern","dateStyleShortYearPref","dateStyleShortYearOption","timeZonePref","userPrefTimezone","userPrefCurrencySeparators","userPrefDecimalSeparators","hasCurrencySeparators","hasDecimalSeparators","setDateTimePreferences","timeStylePattern","dateStylePattern","hasValidOptions","setNumberPreferences","currencyStyleOptions","decimalStyleOptions","valid","hasValidOptions$1","_options","resolved","ConverterUtils","latn","arab","thai","_IsoStrParts","_getDaysInMonth","_isLeapYear","getNumberingExtension","tag","bundle","mainNode","main","sensitivity","usage","patLen","len2","_DEFAULT_TIME_PORTION","_DATE_TIME_KEYS","fullYear","pad","seconds","milliseconds","isoToDate","_normalizeIsoString","_copyTimeOver","fromIsoString","toIsoString","normalizedToIsoString","fromTimeIndex","toTimeIndex","_clearTime","_dateTime","actionParam","doParseValue","retVal","dateTimeKeys","oraUtilsPadZero","isoStringNormalized","captured","isPlainObject","objKeys","objKey","dtKey","timeValue","todayIsoString","toISOString","todayDatePortion","datePortion","params","convertISOString","localOffset","formattedIsoStr","getUTCMilliseconds","getInitials","firstName","lastName","u","c1","charCodeAt","dateToLocalIsoDateString","getLocalTimeZoneOffset","converterOption","getConverterInstance","minMax","vTindex","getISOStrFormatType","entries","forEach","_getISOStrFormatType","now","isoStr1","isoStr2","isoStr1TimeOnly","isoStr2TimeOnly","isoStr1ContainsDateOnly","isoStr2ContainsDateOnly","comparableIsoStr1","comparableIsoStr2","_getTodaysDateIsoStr","comparableIsoStrings","_makeIsoDateStringsDateComparable","propValueValid","propName","reqPropName","_getOptionValueDetailMessage","cTypeStr","cOptions","converterInstance","Validation","converterFactory","createConverter","oj$2","DataSource","_registerLegacyNamespaceProp","EventSource","DataGridDataSource","DiagramDataSource","EventType","ADD","REMOVE","CHANGE","TableDataSource","errSummary","_LOGGER_MSG","_ERR_TABLE_DATASOURCE_INSTANTIATED_SUMMARY","errDetail","_ERR_TABLE_DATASOURCE_INSTANTIATED_DETAIL","isFetching","_startIndex","sortCriteria","totalSizeConfidence","RESET","REFRESH","SORT","REQUEST","SYNC","ERROR","_ERR_DATA_INVALID_TYPE_SUMMARY","_ERR_DATA_INVALID_TYPE_DETAIL","TreeDataSource","DataSourceCommon","ojpopupcore","ojbutton","DomUtils","ThemeUtils","Components","AnimationUtils","FocusUtils","ojcustomelementUtils","OJD_BODY","OJD_CONTENT","OJD_FOOTER","OJD_HEADER","OJD_HEADER_CLOSE","OJD_HEADER_CLOSE_WRAPPER","OJD_OPTION_DEFAULTS","OJD_HELPER_ELEMENT_DIALOG","OJD_ACCESS_KEY","OJD_TITLE_CLASS","OJD_FOOTER_CLASS","OJD_HEADER_CLASS","OJD_BODY_CLASS","OJD_CONTENT_CLASS","OJD_CONTAINER_CLASS","OJ_RESIZABLE_N","OJ_RESIZABLE_E","OJ_RESIZABLE_S","OJ_RESIZABLE_W","OJ_RESIZABLE_SE","OJ_RESIZABLE_SW","OJ_RESIZABLE_NE","OJ_RESIZABLE_NW","OJ_DRAGGABLE","SLOT_BODY","SLOT_HEADER","SLOT_FOOTER","SLOT_CONTEXTMENU","__oj_dialog_metadata","OJ_RESIZABLE_HANDLE_SELECTOR","OJ_RESIZABLE_RESIZE","maxHeight","maxWidth","minHeight","minWidth","alsoResize","animateDuration","animateEasing","ghost","handles","resize","_isNumber","_hasScroll","_el","el","has","mouseConstructor","bind","focus","addClass","originalElement","_proportionallyResizeElements","_initialResize","w","se","sw","ne","nw","append","children","show","_handles","mouseover","resizing","className","exp","removeClass","unbind","capture","curleft","curtop","iniPos","_renderProxy","size","originalSize","sizeDiff","originalMousePosition","aspectRatio","_propagate","_alsoresize_start","_containment_start","props","smp","dx","dy","_change","prevPosition","prevSize","_updateVirtualBoundaries","_updateRatio","_respectSize","_updateCache","_alsoresize_resize","_containment_resize","_proportionallyResize","isEmptyObject","_alsoresize_stop","_containment_stop","forceAspectRatio","pMinWidth","pMaxWidth","pMinHeight","pMaxHeight","_vBoundaries","_data","cpos","csize","ismaxw","ismaxh","isminw","isminh","dw","dh","cw","borders","paddings","prel","borderDif","elementOffset","cs","_store","os","op","_alsoResize","sum","oc","containerElement","containerOffset","containerPosition","parentData","containerSize","innerHeight","innerWidth","woset","hoset","isParent","isOffsetRelative","cp","pRatio","cop","continueResize","ho","__registerWidget","baseComponent","cancelBehavior","dragAffordance","initialVisibility","modality","my","horizontal","vertical","x","at","of","collision","using","topOffset","resizeBehavior","role","dialogTitle","title","beforeClose","beforeOpen","close","open","resizeStart","resizeStop","animateStart","animateEnd","_ComponentCreate","self","originalCss","display","_IsCustomElement","originalTitle","attr","hide","uniqueId","tabIndex","hasAttribute","_on","keydown","_keydownHandler","userDefinedDialogHeader","_createContainer","child","_userDefinedHeader","_userDefinedHeaderDiv","_dialogContainer","appendChild","subtreeAttached","_createContentDiv","_uiDialogContent","_contentDiv","_uiDialogBody","_uiDialogBodyDiv","_uiDialogFooter","_uiDialogFooterDiv","_processSlottedChildren","_userDefinedTitleDiv","querySelector","_userDefinedTitle","_createTitlebar","insertBefore","nextSibling","_uiDialogTitlebarDiv","_setupFocus","PositionUtils","coerceToJet","_titleMutationObserver","MutationObserver","mutations","mutation","attributeName","_uiDialogTitleDiv","textContent","getAttribute","observe","attributes","attributeFilter","createElement","classList","_createHeaderSlot","_headerSlot","_createFooterSlot","_footerSlot","_createBodySlot","_bodySlot","_GetContextMenu","_contextmenuSlot","removeChild","slot","slotMap","CustomElementUtils","getSlotMap","slots","slotParent","slotElements","_AfterCreateEvent","_off","ZOrderUtils","getStatus","STATUS","OPEN","_closeImplicitly","_setWhenReady","_destroyResizable","hasClass","_destroyCloseButton","removeUniqueId","insertAfter","_uiDialogTitlebar","_popupServiceEvents","disable","noop","enable","_isOperationPending","status","setStatus","BEFORE_CLOSE","_ignoreBeforeCloseResultant","_focusedElement","elementsInDialogWithAccesskey","querySelectorAll","elementsInDOMWithAccesskey","setAttribute","removeAttribute","psOptions","PopupService","OPTION","POPUP","CONTEXT","closeEvent","_beforeCloseHandler","rootElement","isFull","_isFullDisplay","isSheet","_isSheetDisplay","_unregisterResizeListener","_disableBodyOverflow","closeAnimation","animationOptions","animation","sheet","normal","startAnimation","then","_afterCloseHandler","context","_restoreBodyOverflow","opener","launcher","blur","isOpen","OPENING","CLOSING","UNKNOWN","CLOSE","_isDefaultPosition","_hasPositionAttribute","BEFORE_OPEN","_focusTabbable","closeButton","_createCloseButton","_createTitlebarCloseButton","isSheetDisplay","_makeDraggable","isRtl","_GetReadingDirection","_setSheetPosition","coerceToJqUi","normalizeHorizontalAlignment","LAUNCHER","POSITION","MODALITY","EVENTS","_getPopupServiceEvents","LAYER_SELECTORS","LAYER_LEVEL","TOP_LEVEL","CUSTOM_ELEMENT","_beforeOpenHandler","_initialWidth","_initialHeight","_registerResizeListener","openAnimation","_afterOpenHandler","AgentUtils","getAgentInfo","OS","IOS","_adjustPosition","_makeResizable","refresh","_resizeHandler","removeResizeListener","_handleResize","addResizeListener","GetFocusElement","hasFocus","_titleBarMousedown","getFirstTabStop","isDefaultPrevented","keyCode","ESCAPE","focusItem","TAB","isFirstActiveElement","getLastTabStop","isLastActiveElement","_focusable","applyHighlight","setupHandlers","focusInHandler","focusOutHandler","currentTarget","closeButtonDiv","parentElement","subtreeDetached","divParentElement","closeButtonLabel","closeButtonStartIcon","ojButton","chroming","label","icons","mousedown","isCloseButton","isAncestorOrSelf","mouseup","firstChild","_title","id","innerHTML","filteredUi","_positionDescendents","_resizableComponent","ojResizable","getCSSLengthAsFloat","_isResizing","_position","triggerOnDescendents","EVENT","POPUP_REFRESH","isDraggable","isResizable","behavior","isPhone","getDeviceRenderMode","elemHeight","elemWidth","attrs","flags","changeOptions","standardTitleDiv","standardTitle","getNodeBySubId","locator","_escapeId","targetId","regex","subId","node","getSubIdByNode","nodeCached","_surrogateRemoveHandler","events","POPUP_CLOSE","POPUP_REMOVE","POPUP_BEFORE_OPEN","POPUP_AFTER_OPEN","POPUP_BEFORE_CLOSE","POPUP_AFTER_CLOSE","operation","mediator","_whenReadyMediator","PopupWhenReadyMediator","isOperationPending","_NotifyDetached","setDefaultOptions","ojDialog","createDynamicPropertyGetter","extension","_WIDGET_NAME","_CONTROLS_SUBTREE_HIDDEN","CustomElementBridge","register","metadata","ojlabel","Context","RequiredValidator","LabelledByUtils","Message","ojpopup","Hammer","ojjqueryHammer","BaseInsideLabelStrategy","MessagingStrategy","_GetFormControlLabelStyleClass","_CreateLabel","component","GetComponent","container","_GetContainer","_getRootElement","labelStyleClass","GenerateIdIfNeeded","_showUserAssistanceNotInline","renderRequiredIcon","required","_createOjLabelElement","labelHint","helpHints","showRequired","helpHintsAttrValue","showUserAssistanceOnLabel","_getLabelId","defaultLabelStyleClass","_GetDefaultStyleClass","help","span","_InsertOjLabel","_CreateEventHandlers","_GetFormControlContainer","_labelHintChangedCallback","_labelHintChangedHandler","addEventListener","_requiredChangedCallback","_requiredChangedHandler","_helpHintsChangedCallback","_helpHintsChangedHandler","_DestroyLabel","labelId","for","labelledBy","_DeleteEventHandlers","removeEventListener","EditableValueUtils","COMPONENT_CREATE","CONVERTER_OPTION_CHANGE","DISABLED_OPTION_CHANGE","READONLY_OPTION_CHANGE","REFRESH_METHOD","REQUIRED_OPTION_CHANGE","RESET_METHOD","USER_ACTION","VALIDATE_METHOD","VALIDATORS_OPTION_CHANGE","VALUE_OPTION_CHANGE","validateMethodOptions","doValueChangeCheck","validationContext","converterOptionOptions","doNotClearMessages","disabledOptionOptions","requiredOptionOptions","readOnlyOptionOptions","refreshMethodOptions","validatorsOptionOptions","VALIDATE_VALUES","VALID","INVALID","getAttributeValue","attribute","returnVal","readOnly","propVal","fromDom","initializeOptionsFromDom","constructorOptions","comp","postprocessCallback","initializedOptions","finalValue","coerceDomValue","validateOption","previousValue","coerceDomValueForOption","valueToValidate","validateValueForOption","_context","writeback","internalSet","domValue","coerced","setPickerAttributes","picker","pickerAttributes","classValue","class","classes","hasNoLabelFlag","_getOjLabelAriaLabelledBy","defaultLabelId","ariaLabelledBy","ojlabels","_getCustomOjLabelElements","oneLabelElementId","labelElement","labelElements","getElementById","_initInputIdLabelForConnection","contentElement","componentId","_linkLabelForInputComp","_setReadonlyDivLabelledBy","_labelledByUpdatedForInputComp","contentElementId","_IsRequired","translations","_implicitReqValidator","_getImplicitRequiredValidator","_setDataOjInputIdAttrOnLabel","assert","readonlyElem","_getReadonlyDiv","_createOrUpdateReadonlyDiv","input","createConditions","_createReadonlyDiv","_setAriaLabelFromLabelHint","_GetDisplayValue","_setTabIndex","validate","returnValue","_SetValue","_VALIDATE_METHOD_OPTIONS","_CanSetValue","Promise","booleanSetValueReturn","resolve","_refreshRequired","contentNode","ariaValue","ariaRequiredUnsupported","_AriaRequiredUnsupported","_refreshTheming","_GetContentElement","$label","_createOjLabel","ojLabel","ariaLabelledByElem","_getAriaLabelledByElement","ariaId","_describedByUpdated","_AfterSetOptionRequired","_runMixedValidationAfterSetOption","_AfterSetOptionValidators","_ResetAllValidators","_hasInvalidMessagesShowing","_clearComponentMessages","_AfterSetOptionAsyncValidators","_AfterSetOptionConverter","_converter","_converterChangedCounter","converter","_GetConverter","_setBusyStateAsyncConverterLoading","converterCounter","_loadingConverter","_ResetConverter","_clearBusyStateAsyncConverterLoading","_AfterCreateConverterCached","_HasPlaceholderSet","_SetPlaceholder","_customPlaceholderSet","_initComponentMessaging","_MESSAGING_CONTENT_UPDATE_TYPE","ALL","_Refresh","messagesShown","_setMessagesOption","_getComponentMessaging","update","_getMessagingContent","CONVERTER_HINT","_GetNormalizedValidatorsFromOption","validator","validatorsOption","vOptions","vType","vTypeStr","isValidatorInstance","normalizedValidators","validators","validatorFactory","CollectionUtils","copyInto","_getLabelText","createValidator","_GetNormalizedAsyncValidatorsFromOption","asyncValidators","converterInstanceReturn","converterPromise","ci","_SetBusyState","_resolveBusyStateAsyncMap","resolveBusyStateAsync","domElem","busyContext","getContext","getBusyContext","description","addBusyState","_ClearBusyState","delete","_SetBusyStateAsyncValidatorHint","counter","_resolveBusyStateAsyncValidatorHintMap","resolveBusyStateAsyncHint","_ClearBusyStateAsyncValidatorHint","_SetBusyStateAsyncConverterLoading","_resolveBusyStateAsyncConverterLoading","_ClearBusyStateAsyncConverterLoading","_getShowLoadingDelay","_defaultOptions","showIndicatorDelay","_SetInputType","allowedTypes","inputType","agentInfo","ANDROID","WINDOWSPHONE","virtualKeyboard","_UseReadonlyDiv","readonlyInnerElem","_sDisplayOptionsRedwoodDefaults","MESSAGES","VALIDATOR_HINT","_sDisplayOptionsAltaDefaults","_HELP_ICON_ID","_VALID","_INVALID_SHOWN","_PENDING","describedBy","displayOptions","definition","source","labelEdge","messagesCustom","messagesHidden","userAssistanceDensity","_GetLabelElement","anchor","div","isValid","_valid","_hasInvalidMessages","_doRefresh","reset","_clearAllMessages","_runDeferredValidation","_VALIDATION_CONTEXT","_refreshComponentDisplayValue","showMessages","msgHidden","clonedMsg","clonedMsgs","msgsHidden","hasMessagesHidden","ComponentMessage","_forceDisplayToShown","severity","_clearMessages","_updateMessagesOption","_setValidOption","_VALIDATION_MODE","FULL","VALIDATORS_ONLY","REQUIRED_VALIDATOR_ONLY","_InitOptions","originalDefaults","savedAttributes","_GetSavedAttributes","_cloneMessagesBeforeSet","_SetDisabledDom","_AfterCreate","_IsTextFieldComponent","_toggleOjHasNoValueClass","_labelledByUpdated","_ResolveLabelEdgeStrategyType","_determineValidFromMessagesOptions","_ReleaseResources","releaseResources","_hammerIsUnregistered","_SetupResources","setupResources","_SaveAttributes","_SaveAllAttributes","_RestoreAttributes","_RestoreAllAttributes","_AfterSetOption","_AfterSetOptionDisabledReadOnly","TITLE","_messagesCustomOptionChanged","_placeholderOptionChanged","_retainFocusOnReadonlyChange","_resolveBusyStateFocusRestore","_AfterSetOptionValue","validationOptions","isEnabled","isUIValueChange","_VerifyConnectedForSetup","labelIndex","labelLength","_isActive","deactivate","__GetWidgetConstructor","_GetReadonlyFocusElement","oldValue","newValue","skipSetOption","containsFocus","_addRemoveOjReadOnlyClassOnLabel","validatorHint","converterHint","messages","displayOptionsDefaults","useUserAssistanceOptionDefault","_superApply","ariaElement","queryResult","_GetElementValue","_GetMessagingLauncherElement","_GetMessagingPositionElement","_GetImplicitValidators","_implicitSyncValidators","_GetAllValidatorsFromValidatorsOptionAndImplicit","implicitValidatorMap","implicitValidators","allValidators","_allValidators","valType","normalizedValidator","_updateValidatorMessagingHint","_getValidatorHintsMC","_GetAriaLabelElement","readonly","readonlystyleclass","ariaLabelElem","ariaLabel","readonlyDiv","_ariaLabelFromHint","_getAllAsyncValidatorsWithHint","allAsyncValidators","allAsyncValidatorsWithHints","_initAsyncValidatorMessagingHint","currentCounter","syncValidatorHintMC","allAsyncValidatorsWithHint","_asyncValidatorHintCounter","_setBusyStateAsyncValidatorHint","_addAsyncValidatorsHintsMessagingContent","_clearBusyStateAsyncValidatorHint","VALIDATOR_HINTS","compMessagings","asyncValidatorsWithHint","asyncValidatorHintCounter","hintArray","promiseArray","hint","reflect","promise","validatorHintMessagingContent","all","_HandleChangeEvent","submittedValue","_SetRawValue","_CompareOptionValues","rawValue","_IsValueEmpty","isEmptyOrUndefined","ojHasNoValueClass","hasOjHasNoValueClass","isValueEmpty","hasNoValueToggled","forceDisplayValueRefresh","helpDef","helpSource","_NotifyHidden","_ResetComponentState","_SetDisplayValue","contentElem","_SetPlaceholderOption","_ClearPlaceholder","clearBusyStateKey","validateReturn","fulfilledNewValue","resolvedState","_getLastDisplayValue","_asyncValidatorValidateCounter","_AsyncValidate","fnv","_afterAsyncValidateUpdateValue","_clearBusyState","_ParseValueShowErrors","newMsgs","_parseValue","ve","_processValidationErrors","busyStateKey","successfullyParsedValue","validationMode","_setLastDisplayValue","_asyncValidateValue","_setBusyState","updateContext","_hasInvalidComponentMessagesShowing","_updateValueOption","value2","compareValues","_messagesEquals","failedInAbstractFunction","INIT","VALIDITY_STATE","_OPTION_TO_CSS_MAPPING","doNotSetOption","beforeLen","shownMsgs","splice","changed","bothEmpty","_resetValid","_updateMessagingContent","newValidState","msgsClone","rootAttributes","_createDescribedByForLabel","runFullValidation","_getLastModelValue","_oj_lastModelValue","_oj_lastElementValue","_getMessages","labelTextContent","_getValidityState","_validityState","ComponentValidity","_hasValidityState","compMsgs","shown","_isMessageAddedByComponent","compMessaging","messagingLauncher","compContentElement","messagingContent","activate","customMsgs","previousShown","_getResolvedUserAssistance","internalMessagingSet","_setLastModelValue","msgs","valueMap","isValueChanged","targetOptions","msgsShown","_formatValue","formattedValue","_componentMessaging","ComponentMessaging","_getHintsFromAllValidatorsWithGetHintFunction","validatorHints","vHint","reqValOptions","reqTrans","messageSummary","messageDetail","defaultOptions","resolvedUserAssistance","updateType","validityState","_getMessagingContentValidityState","syncValidatorHints","instruction","pmo","passed","previousMsgs","pMsg","getSeverityLevel","setValid","parsedValue","_addValidationError","ojmessage","ValidatorError","getMessage","SEVERITY_LEVEL","componentMsgs","_messages","DISPLAY","SHOWN","_createComponentMessage","cMsg","seal","fullRefresh","displayValueReturn","_UpdateElementDisplayValue","_resolveBusyStateDeferredValidation","resultPromise","_validateValueForRequiredOnly","modelValue","ignoreAfterError","parsedReturnValue","_afterConverterFormat","_afterConverterFormatFailure","_SetLoading","widgetElem","focusElem","_saveAriaLabel","loadingText","_ClearLoading","_ShowHelpHints","_ShowHelpHintsLocation","actualDisplayValue","showLoadingIndicatorDelay","loadingTimeout","validateReturned","HIDDEN","finalValidState","implicitRequiredValidator","normalizedAsyncValidators","isInvalidShownSet","valMsgs","asyncValidatorValidateCounter","isRequired","requiredValidatorPromise","reject","results","_GetComponentManagedBaseLabelStyleClass","_CreateMiddleWrapper","innerDivElem","_STRATEGY_TYPE","LABEL_EDGE_INSIDE_FORM_CNTRL","editableValue","containers","isCustomElement","PopupMessagingStrategy","PopupMessagingStrategyPoolUtils","PopupMessagingStrategyUtils","registerMessagingStrategy","NOTEWINDOW","_DEFAULTS_BY_COMPONENT","ojRadioset","ojCheckboxset","ojInputText","ojTextArea","ojInputPassword","ojSwitch","ojSlider","ojColorSpectrum","ojColorPalette","default","_SELECTOR_FORMCONTROL_HINT","_SELECTOR_FORMCONTROL_HINT_CONVERTER","_SELECTOR_FORMCONTROL_HINT_VALIDATOR","_SELECTOR_FORMCONTROL_HINT_TITLE","_OPEN_NAMESPACE","_CLOSE_NAMESPACE","cm","_initMessagingPopup","reactivate","newDisplayOptions","_updatePopupIfOpenOrComponentHasFocus","_unregisterLauncherEvents","_destroyTooltip","_closePopup","_queueAction","_isPopupInitialized","_setActionResolver","$messagingContentRoot","ojPopup","_openPopupCallback","_registerLauncherEvents","_addAnimateEventListeners","messagingContentRoot","delegateEvent","newEventType","stopPropagation","_removeAnimateEventListeners","eventType","jElem","resolvePromise","animationOption","_actionCount","resolveBusyState","one","task","createActionPromise","_task","_actionPromise","_openPopup","domNode","latestContent","$launcher","_canOpenPopup","_buildPopupHtml","_getPopupElement","isPopupOpen","getPopupContentNode","GetLauncher","$position","_openPopupOnPressEvent","jqLauncher","_inPressEvent","_eatChangeAndClickOnPress","isDisabled","isReadOnly","contentToShow","isLauncherActiveElement","isTouchSupported","_eatContextMenuOnOpenPopupListener","_closePopupCallback","closeEvents","closePopupCallback","nonPressOpenEvents","_getPopupEventNamesToRegisterForComp","needsPressEvent","_needsPressEvent","_getNamespacedEvents","registerHammerOpenCallbackOnLauncher","hammerOptions","recognizers","Press","time","ojHammer","namespace","eventsArray","namespacedEventsArray","_getPopupPosition","compDefaultPosition","compDefaults","popup","getNextFreePopup","_popupBeforeCloseCallback","_popupCloseCallback","_popupOpenCallback","defaultAnimations","actionPrefix","isComponentInitialized","_resolveBusyState","destroyFreePopup","addSeparator","nwContent","nwHtml","ShowMessages","_buildMessagesHtml","ShowConverterHint","ShowValidatorHint","ShowTitle","_buildHintsHtml","content","getSeparatorHtml","maxSeverity","GetMaxSeverity","HasMessages","GetMessages","buildMessagesHtml","hints","hintsHtml","GetConverterHint","buildHintHtml","GetValidatorHints","GetTitle","hintText","htmlAllowed","formControlSelectors","titleDom","selectors","_appendTextDom","GetTextDom","outerHTML","getSeverityTranslatedString","sevTypeStr","FATAL","WARNING","INFO","CONFIRMATION","jSeparatorDom","renderSeveritySelectors","messageObj","severityLevel","severityStr","messagesByType","messagesByTypes","buildMessageHtml","addSeverityClass","msgContent","msgDetail","msgDom","msgIcon","msgSummary","_SELECTOR_MESSAGE","severityClasses","_getSeveritySelector","slen","severityIconClasses","_getSeverityIconSelector","silen","_SELECTOR_MESSAGE_CONTENT","messageSummaryOptionDefault","_SELECTOR_MESSAGE_SUMMARY","detailDom","_SELECTOR_MESSAGE_DETAIL","sevIconStr","_SELECTOR_MESSAGE_ERROR_ICON","_SELECTOR_MESSAGE_WARNING_ICON","_SELECTOR_MESSAGE_INFO_ICON","_SELECTOR_MESSAGE_CONFIRMATION_ICON","_DEFAULT_STATUS_ICON_SELECTORS","sevSelectorStr","_SELECTOR_MESSAGE_ERROR","_SELECTOR_MESSAGE_WARNING","_SELECTOR_MESSAGE_INFO","_SELECTOR_MESSAGE_CONFIRMATION","textDom","isString","isHTMLContent","cleanHtml","pool","_getPool","popups","_SELECTOR_MESSAGING","_getPopupContentHtml","initialFocus","tail","autoDismiss","_SELECTOR_MESSAGING_CONTAINER","_getFreePoolCount","_MESSAGING_POPUP_POOL_ID","poolElem","InlineHelpHintsStrategy","_userAssistanceDivElement","OJ_HAS_HELPHINTS_STYLECLASS","_createInlineHelpHints","newOptions","_isContainerRootDomInDocument","shouldUpdate","updateTitle","updateValidatorHint","updateConverterHint","_updateInlineHelpHints","_removeHelpHintsContainerAndContent","_focusinCallback","_deleteFocusEventHandlers","_deleteHelpHintsAttributeEventHandlers","showHelpHints","_addHelpHintsContent","_createFocusEventHandlers","_createHelpHintsAttributeEventHandlers","_focusinHandler","_focusoutCallback","_focusoutHandler","_getHelpHintsInlineContainer","rootElem","containerRootExistsInDocument","containerRoot","RemoveAriaDescribedByForInlineMessaging","helpOptions","helpInstruction","helpInstructionDom","helpSourceDom","_getHelpSourceDom","AddAriaDescribedByForInlineMessaging","formControlContainerDom","showInline","assertString","helpAnchorDiv","helpSourceAnchor","validateURL","helpSourceText","makeFocusable","_focusIn","relatedTarget","_animateOpen","hasChildNodes","action","effect","_getDefaultAnimation","_defaultAnimation","duration","timingFunction","InlineMessagingStrategy","_parentElement","INLINE","_updateInlineMessage","_removeMessagingContentRootDom","_replaceAnimationOptions","effects","effectsAsString","isEffectsTypeofString","JSON","stringify","_determineAnimation","newContent","parsedEffect","defaults","newHeight","oldContent","oldHeight","_inInlineMessagingAnimation","_currentContentToShow","_addRemoveOjHasMessagesClass","_timeoutId","promiseResolve","_NotifyMessagingStrategyQueueAction","_notifyQueueActionPromise","_notifyQueueActionPromiseResolve","actionEffect","afterAnimateContentToShow","_buildInlineHtml","messagingRootExists","_isMessagingContentRootDomInDocument","_createInlineMessage","_getInlineContentHtml","_addAriaLive","messagingRoot","assertPrototype","messagingRootExistsInDocument","InlineRequiredStrategy","_createOrUpdateInlineRequired","_removeInlineRequired","hasNoValue","_getRequiredInlineContainer","requiredText","AddDescribedByToElement","RemoveDescribedByFromElement","requiredOptionValue","InlineUserAssistanceStrategy","_displayOptions","USER_ASSISTANCE_INLINE","_readonlyChangedCallback","_readonlyChangedHandler","_disabledChangedCallback","_disabledChangedHandler","_userAssistanceDensityChangedCallback","_userAssistanceDensityChangedHandler","_createInlineContainer","_isDisabledOrReadonly","_activateContainerStrategies","_inlineMessagingStrategy","_inlineRequiredStrategy","_inlineHelpHintsStrategy","_shouldUpdateContent","_removeContainerRootDom","userAssistanceOptionValue","_OJ_REFLOW","_OJ_EFFICIENT","_deactivateContainerStrategies","InsideFormControlLabelStrategy","_container","root","firstElementChild","InsideLabelPlaceholderStrategy","_createPlaceholderToggle","_destroyPlaceholderToggle","_placeholderChanged","_blurCallback","_focusCallback","_placeholderChangedCallback","_blurHandler","_focusHandler","callback","ShowConverterHintAsPlaceholder","popupId","popupDom","InsideLabelStrategy","LABEL_EDGE_INSIDE","_placeholderChangedHandler","_activatePlaceholderStrategyIfNeeded","_placeholderStrategy","createInsideLabelPlaceholderStrategy","Callback","fname","_BASE_STYLE_CLASS","ojcontext","ojeditablevalue","NumberRangeValidator","ojconverterNumber","__oj_input_number_metadata","_sDefaultNumberConverter","_getNumberDefaultConverter","_ALIASED_PROPS","_INNER_ELEM","_GLOBAL_TRANSFER_ATTRS","mergeDeep","properties","binding","consume","defaultElement","_ALLOWED_TYPES","autocomplete","autofocus","step","transientValue","_setup","stepDown","steps","realStep","_step","stepUp","uiInputNumber","opts","toParse","opt","_parseStep","_parse","initialValue","_draw","_inputNumberDefaultValidators","_registerEvents","_refreshAriaMinMax","stepQueue","_blurEnterSetValueCounter","previous","coercedValue","_createOrDestroyOjButtonset","_refreshStateTheming","buttonSet","_destroyOjButtonset","unwrap","timer","valuenow","_updateButtonsAria","_updateButtons","_getDisplayValueParsed","_refreshAriaText","numberrange","_getImplicitNumberRangeValidator","_refreshRoleSpinbutton","_GetContentWrapper","_BUNDLE_KEY","_TOOLTIP_DECREMENT","_TOOLTIP_INCREMENT","numberRangeValidatorOptions","_createRangeValidatorOptions","needsButtonset","_needsButtonset","incrementString","decrementString","upButton","downButton","_markInternalComponents","_createOjButtonset","buttonSetObj","_createButtonset","inputNumberWrapper","buttons","buttonChromingDefault","getCachedCSSVarValues","buttonsetDiv","ojButtonset","focusManagement","spanElem","containerElem","OuterWrapper","middleWrapper","divElem","saveType","_start","spinning","_repeat","direction","stopRepeat","stepOpt","isReady","_spin","_stepNoStartStop","transientOnly","adjustedValue","_adjustParsedValueOnSpinAndUpdateDisplay","_valuePending","minOpt","maxOpt","_precision","_adjustValue","_precisionOf","stepBase","aboveMin","_adjustValueForFractions","toFixed","ceil","validMax","power","minOptPower","maxOptPower","stepOptPower","_stop","_isRealMouseEvent","recentTouchEnd","downButtonDisabledAlready","upButtonDisabledAlready","isMaxOptNonNull","isMinOptNonNull","_blurEnterSetValue","setValueReturn","setValueResolved","_refreshAriaValueNowText","hintMin","hintMax","hintInRange","hintExact","messageDetailRangeOverflow","messageDetailRangeUnderflow","messageDetailExact","messageSummaryRangeOverflow","messageSummaryRangeUnderflow","newMin","newMax","translationsOptionNumberRange","numberRange","translationsHint","translationsMessageDetail","translationsMessageSummary","inRange","exact","rangeOverflow","rangeUnderflow","parsedStep","needsRole","_setAttr","valuetext","attrName","currentStepObject","currentSpinStep","currentEvent","spinPromise","shift","_regularEventsAndListeners","compositionstart","_isComposing","compositionend","ENTER","keyup","_passiveEventsAndListeners","ojInputNumber","ojdataprovider","ojeventtarget","ListDataProviderView","dataProvider","_a","_noFilterSupport","AsyncIterable","_asyncIterator","Symbol","asyncIterator","AsyncIterator","_nextFunc","_params","signal","aborted","reason","DOMException","AsyncIteratorYieldResult","_VALUE","_DONE","AsyncIteratorReturnResult","FetchListResult","fetchParameters","totalFilteredRowCount","_FETCHPARAMETERS","_DATA","_METADATA","includeFilteredRowCount","_TOTALFILTEREDROWCOUNR","Item","ItemMetadata","_KEY","FetchListParameters","filterCriterion","_SIZE","_SORTCRITERIA","_FILTERCRITERION","_FETCHATTRIBUTES","_SIGNAL","FetchByKeysParameters","_KEYS","FetchByOffsetParameters","FetchByKeysResults","_RESULTS","ContainsKeysResults","containsParameters","_CONTAINSPARAMETERS","FetchByOffsetResults","done","_INTERNAL_FROM","_FROM","_INTERNAL_OFFSET","_INTERNAL_SORTCRITERIA","_INTERNAL_DATAMAPPING","_DATAMAPPING","_INTERNAL_FETCHATTRIBUTES","_INTERNAL_FILTERCRITERION","_addEventListeners","getCapability","dispatchEvent","DataProviderRefreshEvent","containsKeys","_CONTAINSKEYS","fetchByKeys","fetchByKeysResult","Set","fetchAttributes","updatedParams","_FETCHBYKEYS","resultMap","mappedResultMap","mappedItem","_getMappedItems","_DEFAULT_SIZE","dataProviderAsyncIterator","_FETCHFIRST","_fetchNextSet","fetchByOffset","mappedSortCriteria","_getMappedSortCriteria","_combineFilters","mappedFilterCriterion","_getMappedFilterCriterion","_FETCHBYOFFSET","resultArray","mappedResultArray","fetchFirst","cachedData","_ITEMS","_STARTINDEX","_LASTDONEHASDATA","mappedResult","_cacheResult","resultFetchParams","resultSortCriteria","resultFilterCriterion","unmappedResultSortCriteria","_getUnmappedSortCriteria","unmappedResultFilterCriterion","_getUnmappedFilterCriterion","resultParams","cachedAsyncIterator","_totalFilteredRowCount","next","resultValue","_filterResult","_fetchUntilKey","_fetchUntilOffset","capabilityName","getTotalSize","foundAllKeys","findKey","resultItems","resultItem","KeyUtils","equals","itemIndex","nextResult","resultSize","fetchSize","cachedItems","_createResultPromise","isDone","FilterFactory","getFilter","filterDef","mapFields","_MAPFIELDS","filters","criteria","_MAPFILTERCRITERION","mapSortCriteria","_MAPSORTCRITERIA","unmapSortCriteria","_UNMAPSORTCRITERIA","unmapFilterCriterion","_UNMAPFILTERCRITERION","dataprovider","_ADDEVENTLISTENER","_REFRESH","_MUTATE","_SORT","EventTargetMixin","applyMixin","ojldimport","ojcalendarutils","ojld","setBundle","_bundle","getFirstDayOfWeek","_getWeekData","getWeekendStart","getWeekendEnd","getDayNames","_getCalendarData","sun","mon","tue","wed","thu","fri","sat","getMonthNames","isMonthPriorToYear","findIndex","region","_getRegion","weekData","defaultRegion","__updateBundle","jsxRuntime","ojvcomponent","preact","Selector","Component","_handleFocusin","setState","_handleFocusout","_checkboxListener","selectedKeys","rowKey","selectionMode","newSelectedKeys","checked","addAll","clear","onSelectedKeysChanged","onIndeterminateChanged","state","render","indeterminate","isSelected","_isSelected","spanClass","recentPointer","ariaLabelledby","jsx","Root","onfocusin","onfocusout","onClick","isAddAll","defaultProps","_metadata","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__decorate","customElement","touchr","ojdnd","ojinputnumber","ojmenu","ojdialog","ojdatasourceCommon","ojdataprovideradapter","ojselector","ojtranslation","ojcomponentcore","DataCollectionUtils","ojanimation","DomScroller","UNSAFE_useFormVariantContext","ojkeyset","RegExpValidator","ojkeyboardfocusUtils","__oj_table_metadata","provide","Table","_MSG_FETCHING_DATA","_MSG_NO_DATA","_MSG_INITIALIZING","_MSG_STATUS_SORT_ASC","_MSG_STATUS_SORT_DSC","_LABEL_SELECT_COLUMN","_LABEL_SELECT_ALL_ROWS","_LABEL_SELECT_ROW","_LABEL_EDIT_ROW","_LABEL_SELECT_AND_EDIT_ROW","_ERR_PRECURRENTROW_ERROR_SUMMARY","_ERR_PRECURRENTROW_ERROR_DETAIL","_ERR_CURRENTROW_UNAVAILABLE_INDEX_SUMMARY","_ERR_CURRENTROW_UNAVAILABLE_INDEX_DETAIL","_ERR_REFRESHROW_INVALID_INDEX_SUMMARY","_ERR_REFRESHROW_INVALID_INDEX_DETAIL","_ERR_ELEMENT_INVALID_TYPE_SUMMARY","_ERR_ELEMENT_INVALID_TYPE_DETAIL","_UPDATE","_ADD_ROW_DISPLAY","_ATTACHED","_DATA_REFRESH","_DATA_SORT","_RESIZE","_COL_REORDER","_COL_RESIZE","_ROW_REFRESH","_ROWS_ADDED","_ROWS_REMOVED","_SHOWN","_SUB_ID","_TABLE_CELL","_TABLE_HEADER","_TABLE_FOOTER","_TABLE_SORT_ASCENDING","_TABLE_SORT_DESCENDING","_POSITION","_START_TOP","_START_BOTTOM","_FIELD_ID","_CONST_ATTRIBUTE","_CONST_DATA","_CONST_METADATA","_CONST_INDEXES","_CONST_INDEX","_CONST_KEY","_CONST_KEYS","_CONST_AFTERKEYS","_CONST_ADDBEFOREKEYS","_CONST_CLIENTID","_CONST_SIGNAL","_CONST_STARTINDEX","_CONST_ENDINDEX","_CONST_PAGESIZE","_CONST_OFFSET","_CONST_SILENT","_CONST_COLUMN","_CONST_ROW","_CONST_VALUE","_CONST_SORTCRITERIA","_CONST_ON","_CONST_OFF","_COLUMN_HEADER_ID","_COLUMN_HEADER_TEXT_ID","_COLUMN_HEADER_ASC_ID","_COLUMN_HEADER_DSC_ID","_COLUMN_HEADER_ID_PREFIX","_COLUMN_HEADER_ROW_SELECT_ID","_FOCUS_CALLED","_ROW_TEMPLATE","_CELL_TEMPLATE","_HEADER_TEMPLATE","_FOOTER_TEMPLATE","_OPTION_AUTO","_OPTION_ENABLED","_OPTION_DISABLED","_OPTION_DISPLAY","_LIST","_GRID","_OPTION_EDIT_MODE","_NONE","_ROW_EDIT","_OPTION_FROZEN_EDGE","_END","_START","_OPTION_SELECTION_MODES","_SINGLE","_MULTIPLE","_OPTION_SCROLL_POLICY","_LOADMORE_ON_SCROLL","_LOAD_ALL","_COLUMN_SORT_ORDER","_ASCENDING","_DESCENDING","_DND_REORDER_TABLE_ID_DATA_KEY","_CURRENT_ROW_STATUS","_UPDATED","_IGNORED","_VETOED","_ERROR","_ROW_ITEM_EXPANDO","_DATA_OJ_COMMAND","_DATA_OJ_EDITABLE","_DATA_OJ_SELECTABLE","_DATA_OJ_COLUMNIDX","_VALIDATOR_PATTERN","_DATA_OJ_BINDING_PROVIDER","_BATCH_PROCESS_SIZE_WHEN_IDLE","RESIZE_OFFSET","SIZING_ERROR_MARGIN","CONTENT_FLICKER_TIMEOUT","_SELECTOR_OFF_COLSPAN_OFFSET","_CSS_Vars","enableSticky","enableSelector","loadIndicator","horizontalGridVisible","addAnimation","removeAnimation","updateAnimation","_isStickyLayoutEnabled","_getDefaultOptions","_isStickyRowsEnabled","row","sticky","_isFixedLayoutEnabled","layout","_isTableStretchEnabled","_getTableContainer","CSS_CLASSES","_TABLE_STRETCH_CLASS","_isExternalScrollEnabled","scrollPolicyOptions","scroller","_invokeRowSelectableCallback","_invokeActionCallback","_invokeRowEditableCallback","_invokeRowStickyCallback","actionName","defaultVal","capability","_isNodeEditable","_isNodeType","_isNodeClickable","_isNodeDraggable","_getFirstAncestor","table","_getTable","DOM_ELEMENT","_TD","_TH","DOM_ATTR","_TABINDEX","_setDataWaitingState","showMessage","_clearScrollBuffer","_showStatusMessage","_hideNoDataMessage","_dataFetching","_dataResolveFunc","_addComponentBusyState","_checkViewportRejected","_animateOnFetch","_clearDataWaitingState","ignoreStatusMessage","_pendingFetchStale","_queueTask","_getLayoutManager","notifyTableUpdate","_beforeDataRefresh","_invokeDataFetchRows","_pendingFetchOptions","_hideStatusMessage","_setComponentNotReady","_readyResolveFunc","_setComponentReady","_getTableId","_createComponentBusyState","busyStateResolveFunc","_busyStateStack","_clearComponentBusyState","_clearBusyStateStack","_setFocusoutBusyState","_focusoutResolveFunc","_clearFocusoutBusyState","_setIdleRenderBusyState","_idleRenderResolveFunc","_clearIdleRenderBusyState","_setScrollPosBusyState","_scrollPosResolveFunc","_clearScrollPosBusyState","_clearAllComponentBusyStates","_cleanComponent","isDestroy","_isEditPending","_active","_isTableTab","_controller","_isAddRowRendered","_isRowRemovalRequired","_renderedTableHeaderColumns","_clearAllComponentTimeouts","_clearOpenPopupListeners","_clearIdleCallback","_unregisterDomScroller","_clearLayoutManager","_cleanAccStatus","_getTableBody","_OJ_CONTAINER_ATTR","_OJ_CONTEXT_ATTRIBUTE","_TABLE_HEADER_CLASS","_TABLE_BODY_CLASS","_TABLE_FOOTER_CLASS","_TABLE_STATUS_MESSAGE_CLASS","_TABLE_BODY_MESSAGE_ROW_CLASS","_TABLE_CLASS","TableDataSourceAdapter","_componentDestroyed","_unregisterDataSourceEventListeners","_hasHeaderTemplate","_hasCellTemplate","_hasFooterTemplate","_hasRowTemplate","_hasAddRowTemplate","_hasNoDataTemplate","_cleanTemplateNodes","_clearFocusoutTimeout","_clearShowStatusTimeout","_clearTableBodyHideTimeout","_clearTableFooterHideTimeout","_clearNotifyAttachedTimeout","_clearBrowserAutoScrollTimeout","_focusoutTimeout","_showStatusTimeout","_initializeTableBodyHide","tableBody","_bodyVisibilityTimeout","CSS_PROP","_VISIBILITY","CSS_VAL","_HIDDEN","_initializeTableFooterHide","tableFooter","_footerVisibilityTimeout","_browserAutoScrollTimeout","_browserAutoScrollInitPos","_setFinalTask","_finalTask","_hasPendingTasks","_taskCount","_hasAdditionalPendingTasks","_pendingTasks","err","_syncTableSizing","_initialSelectionStateValidated","_syncSelectionState","_validateInitialSelectionState","_resetAriaLabel","_updateAccStatusInfo","_TABLE_ELEMENT_CLASS","_ROLE","_createInitialTable","_isTableHeaderless","_isTableFooterless","_styleInitialTable","_refresh","abort","initFetch","_dataOption","_clearCachedDataMetadata","contextMenu","_getContextMenuElement","_createContextMenuContainer","_clearCachedDom","_clearCachedStyling","_refreshContextMenu","_statusMessageShown","_isSkeletonSupport","_refreshTableStatusMessage","_hasEditableRow","_setTableEditable","_initFetch","_refreshAll","resultObject","startIndex","_isColumnMetadataUpdated","_isTableHeaderColumnsRendered","_clearCachedMetadata","_refreshTableHeader","_sortColumn","foundColumn","columns","_getColumnDefs","columnsCount","column","_refreshTableFooter","_refreshTableBody","tableColGroup","_getTableColGroup","_getTableFooter","empty","_isGutterStartColumnEnabled","tableGutterCol","_createTableGutterCol","_isDefaultSelectorEnabled","tableSelectorCol","_createTableSelectorCol","tableCol","_createTableCol","_isGutterEndColumnEnabled","tableLegacyWidthBuffer","_getTableBodyLegacyWidthBuffer","widthBufferCell","_createTableBodyCell","_TABLE_LEGACY_WIDTH_BUFFER_CELL_CLASS","tableHeader","_getTableHeader","_createTableHeader","_styleTableHeader","tableHeaderRow","_getTableHeaderRow","_unregisterChildStateListeners","headerColumn","headerRenderer","_getColumnRenderer","_createTableHeaderColumn","headerContext","_getRendererContextObject","columnIndex","headerText","componentElement","columnHeaderSortableIconRenderer","delegateRenderer","_columnHeaderSortableIconRenderer","columnHeaderDefaultRenderer","_columnHeaderDefaultRenderer","rendererContent","applyRendererContent","_setTableHeaderColumnAttributes","_styleTableHeaderColumn","_COLUMN_CUSTOM_HEADER_CLASS","headerSlotTemplate","_getSlotTemplate","_isDefaultHeaderTemplateSlotValid","templateEngine","_getTemplateEngine","slotContext","_getHeaderSlotTemplateContextObject","headerContent","execute","as","tableGutterEnd","_createTableGutterCell","tableHeaderSelectorColumn","_createTableHeaderSelectorColumn","tableGutterStart","optimizeInitialColumnWidths","_finalizeNonBodyRowRendering","renderError","_createTableFooter","_styleTableFooter","tableFooterRow","_getTableFooterRow","isDefaultFooterTemplateSlotValid","_isDefaultFooterTemplateSlotValid","footerRenderer","footerCell","_createTableFooterCell","_styleTableFooterCell","_insertTableFooterCell","footerContext","_setTableFooterColumnAttributes","footerSlotTemplate","_getFooterSlotTemplateContextObject","footerContent","footerSelectorCell","_createTableFooterSelectorCell","keepVisible","_scrollLeft","_scrollTop","bodyPromiseArray","_refreshAddNewRowPlaceholder","_finalizeTableBody","resetFocus","rows","_getRowIdxRowArray","_getTableBodyRows","_clearTableBodyRowsFromIndex","_showNoDataMessage","tableBodyDocFrag","createDocumentFragment","_isLoadMoreOnScroll","_isLastRowInViewport","_fetchBySyncScroll","_renderRowsWhenIdle","isMouseWheel","rowIdxArray","rowsCount","renderRowPromiseArray","rowIdx","_renderRow","hasAnimation","addedTableBodyRows","handleAfterRowsProcessed","_appendElementToTableBody","_animateVisibleRows","_afterRowsRendered","checkFocus","_removeAllTableBodyRows","tableBodyRowsCount","tableBodyRow","_getTableBodyRow","_removeTableBodyRow","_clearCachedDomRowData","_getRowSelectionMode","_refreshTableBodyRow","docFrag","docFragStartIdx","isRefresh","rowRenderer","_getRowRenderer","currentRow","_getCurrentRow","rowContext","isCurrentRow","rowIndex","editable","selectable","checkForChildRow","_isDefaultRowTemplateSlotValid","rowContent","_getRawTableBodyRow","rowSlotTemplate","_getRowSlotTemplateContextObject","nodes","replaceChild","_ojReportBusy","_waitForAllElementsToResolve","rowChildren","_setTableBodyRowAttributes","_styleTableBodyRow","tableBodyCell","tableBodyCells","_getTableElementsByTagName","tableBodyCellsCount","_setTableBodyCellAttributes","_styleTableBodyCell","_columnsDestMap","moveTableBodyCell","_finalizeTableBodyCellsRefresh","_tableBodyRowDefaultRenderer","_createTableBodyDefaultSelector","_getTableBodyCells","colSpan","handleRowRefresh","skipTopUpdate","placeHolderRow","_getPlaceHolderRow","_isAddNewRowEnabled","_hasActiveAddRow","_setActiveRow","_setActiveNoData","visibleIndex","_getFirstVisibleColumnIndex","_setActiveHeader","_setTableActionableMode","addRowTemplate","addRowCellTemplate","submitAddRow","cancelAdd","_handleAddRow","addRowCell","_createTableBodyRow","_isDefaultAddRowTemplateSlotValid","renderedCells","_getPlaceHolderRowCells","moveAddRowCell","_finalizePlaceHolderRowSetup","_isDefaultAddRowCellTemplateSlotValid","_getCellSlotTemplateContextObject","cellContent","_TABLE_ADD_ROW_PLACEHOLDER_CLASS","addRowCells","_styleTableAddRowCell","_TABLE_FROZEN_START","_isVerticalGridEnabled","_TABLE_VGRID_LINES_CLASS","_updateStickyRowTops","_finalizeBodyRowRendering","rowElements","editableRowKey","_getEditableRowKey","actionableModeRowKey","_isTableActionableMode","_getRowKey","disableAllFocusableElements","rowElement","elements","busyContextPromiseArray","whenReady","_refreshRow","skipDataChecks","useCache","rowItem","_getData","applyParameters","dataPromise","_getRowKeyForRowIdx","resultsMap","keyResult","rowResults","refreshedRow","tableStatusMessage","_getTableStatusMessage","_createTableStatusMessage","tempSkeletonRow","_getTableTempSkeletonRow","adapterStartIndex","_bufferScrollerForLastRow","_refreshTableStatusPosition","_getShowStatusDelay","_showProgressiveLoading","tableBodyRows","_TABLE_FETCH_SKELETON_ROW_CLASS","tempCell","_TABLE_SKELETON_CELL_CLASS","_createSkeletonRow","_skeletonHWMSFadeInEndListener","_ANIMATION_SKELETON_FADE_IN_CLASS","_insertSkeletonRow","rowElem","pendingRow","existingCells","_TABLE_HIDDEN_CELL_CLASS","skeletonCell","_TOP","skeletonRow","_removeSkeletonRow","statusMessage","_DISPLAY","skeletons","childNodes","_isStatusMessageShown","vars","getCSSTimeUnitAsMillis","_noDataMessageShown","messageRow","_getTableBodyMessageRow","noDataTemplate","_isDefaultTemplateSlotValid","_TABLE_NO_DATA_CONTAINER_CLASS","noDataContentRow","_TR","createSubId","_TABLE_NO_DATA_ROW_CLASS","gutterCell","noDataContentCell","columnCount","_COLSPAN","emptyTextMsg","emptyText","messageText","_createTableBodyMessageRow","_setTableBodyMessage","tableBodyMessageRow","noDataRow","_getTableNoDataRow","_handleContextMenuResizePopup","columnIdx","widthValue","columnWidthInput","_getTableUID","dialog","_getContextMenuResizeDialog","spinner","_getContextMenuResizePopup","clonedColumnsOption","getMinimumForcedOffsetWidth","_handleContextMenuSelect","menuItemCommand","_contextMenuEvent","_COLUMN_HEADER_CELL_CLASS","_contextMenuEventHeaderColumn","_TABLE_DATA_CELL_CLASS","_getElementColumnIdx","_handleSortTableHeaderColumn","_nonContiguousSelection","_removeTableBodyRowTouchSelectionAffordance","text","columnWidth","getColumnWidthProperty","_resizeListener","layoutManager","containerStyle","getComputedStyle","isSizingRefreshRequired","getExactOffsetWidth","getExactOffsetHeight","_isResizeListenerAdded","_UnregisterChildNode","scrollPolicy","headerStyle","sortProperty","_isTableRefreshNeeded","currentOptions","subkey","_isTableSortable","_isTableColumnsResizable","resizable","_isTouchDevice","_isTouch","isMobileTouchDevice","tableBottomSlot","_getTableBottomSlot","_createTableBottomSlot","ascending","_clearSortedHeaderColumn","sortField","field","_invokeDataSort","_refreshSortTableHeaderColumn","_processFetchSort","sortAttribute","sortDirection","_setCurrentRow","_handleMouseEnterColumnHeader","_isColumnSelectionEnabled","MARKER_STYLE_CLASSES","_HOVER","_COLUMN_HEADER_ASC_ICON_CLASS","_COLUMN_HEADER_DSC_ICON_CLASS","_COLUMN_HEADER_DEFAULT_SORT_ICON_CLASS","_showTableHeaderColumnSortIcon","_handleMouseLeaveColumnHeader","_hideTableHeaderColumnSortIcon","tableHeaderColumn","_getTableHeaderColumn","sortContainer","_getSortIconContainer","sortIcon","_getSortIcon","_DISABLED","_ENABLED","_DEFAULT","_TITLE","sorted","_getSortedTableHeaderColumnIdx","tableHeaderColumns","_getTableHeaderColumns","sortedTableHeaderColumnIdx","sortedTableHeaderColumn","_SELECTED","_columnDefArray","_getColumnMetadata","columnsOption","columnsDefault","defaultedColumns","columnsSortedArray","defaultedColumnsCount","sortSupportedData","renderer","_WrapCustomElementRenderer","lastRow","getVerticalOverflowDiff","_registerDomScroller","controller","_domScrollerSuccessFunc","isFetchAborted","_noMoreData","maxCountLimit","_handleScrollerMaxRowCount","metadataArray","_domScroller","pauseScrollTracking","_getRowIdxForRowKey","rowCount","indexArray","indexes","resumeScrollTracking","clearCachedDimensions","_syncScrollPosition","_scrollPosition","_domScrollerErrorFunc","_requiresDomScrollerRefresh","getScroller","_dataProviderAsyncIterator","getContentElement","maxCount","initialRowCount","success","localKeyValidator","_findRowElementByKey","beforeFetch","_idleCallback","_scrollY","beforeScroll","fetchTrigger","_updateHeaderTop","headerSelector","_getTableSelectorColumn","_updateFooterBottom","footerSelector","_getTableFooterSelectorCell","_BOTTOM","footerCells","_getTableFooterCells","isRequestIdleCallbackSupported","cancelIdleCallback","cancelAnimationFrame","_requestIdleCallback","idleTimeout","requestAnimationFrame","isBlink","timeout","requestIdleCallback","idleDeadline","rowProcessed","afterRowsProcessed","isFirefox","isTableWidthConstrained","_OVERFLOW_X","renderRowsWithoutIdleDeadline","timeRemaining","lastTimeTaken","didTimeout","renderRowsWithIdleDeadline","rowData","_insertTableBodyRow","_hasRowOrCellRendererOrTemplate","_getRowIdxsForElementsWithStyleClass","styleClass","_tableQuerySelectorAll","rowIdxs","elementsCount","_getElementRowIdx","alreadyAdded","rowIdxsCount","_getColumnIdxsForElementsWithStyleClass","columnIdxs","_COLUMN_HEADER_SELECTOR_CELL_CLASS","_TABLE_FOOTER_SELECTOR_CELL_CLASS","columnIdxsCount","skipSizingRequiredCheck","isTableLayoutRefreshRequired","refreshTableDimensions","scrollBufferHeight","_updateScrollBufferHeight","checkViewport","scrollBuffer","_getTableBodyScrollBuffer","bottomOverflowDiff","newScrollBufferHeight","_HEIGHT","_PX","bufferPixelsInView","$scrollingElement","_skipScrollUpdate","updateCurrentScrollState","_clearDomCache","_TABLE_BUFFER_ROW_CLASS","_animationActionOverride","visibleRowIdxArray","_getVisibleRowIdxs","nonVisibleRowIdxArray","_animateTableBodyRows","rootNode","clean","slotName","_isDefaultCellTemplateSlotValid","defaultSlotName","cellTemplateName","headerTemplateName","footerTemplateName","_templateEngine","windowHeight","scrollerRect","getBoundingClientRect","startRowIdx","viewportBottom","lastRowIdx","tableElemX","viewportTop","tableTopElems","_filterTableOwnedElements","elementsFromPoint","borderBottomWidth","tableBottomElems","cellRenderer","cellSlotTemplate","isSortUpdate","updatedOptions","DataProviderFeatureChecker","isDataProvider","_isPagingModelDataProvider","fetchType","_initTemplateEngine","enginePromise","templateOptions","_GetCustomElement","__getTemplateEngine","engine","_initializeFetchFirstOptions","_clientId","AbortController","_containsKey","_hasRefreshInQueue","helperFunction","currentMetadata","scrollToKey","updatedScrollToKey","getPageCount","_getScrollToKey","getStartItemIndex","resultDataCount","sortCriterion","header","columnOptions","columnsMetadata","columnsMetadataCount","_getColumnKeys","columnKeys","_getLocalRowKeys","rowKeys","_hasMoreToFetch","_getColumnIdxForColumnKey","columnKey","_getColumnKeyForColumnIdx","rowIdxRowArray","indexesCount","_getDataSourceRowIndexForRowKey","_getRowKeyForDataSourceRowIndex","_animateTableBodyRow","_isAnimationDisabled","_startAnimation","tableBodyRowArray","animationPromiseArray","_tableBodyRow","_getAnimationEffect","addRowDisplay","_refreshAddRowDisplay","_setActiveAddRow","TableDndContext","_CSS_CLASSES","_DRAG_SOURCE","_DRAG_SOURCE_OPAQUE","_DROP_TARGET_EMPTY","_addDragMarkerClass","_setTableColumnCellsClass","_removeDragMarkerClass","dragColumns","_getTableElementsByClassName","dragColumnsCount","_cloneTableContainer","tableContainer","_TBODY","tableContainerClone","cloneNode","tableElementClone","_TABLE","tableBodyClone","minTop","_rowsDragged","offsetTop","cells","rowClone","_TABLE_DATA_ROW_SELECTOR_CLASS","selected","clonedCells","_ABSOLUTE","_FOCUS","_FOCUS_HIGHLIGHT","cell","_OVERFLOW","_OVERFLOW_Y","_BACKGROUND_COLOR","_TRANSPARENT","_BORDER_COLOR","_WIDTH","_destroyDragImage","_dragImage","_getEventColumnIndex","_getOverRowIndex","newRowIndex","overRow","_TABLE_SELECTOR_CELL_CLASS","_TABLE_DATA_ROW_CLASS","targetElementRect","offsetY","_TABLE_DATA_ROW_DRAG_INDICATOR_CLASS","_dropRowIndex","handleColumnDragStart","_isColumnReorderEnabled","_dragStartColumnIdxs","_getSelectedHeaderColumnIdxs","_setReorderColumnsDataTransfer","getSelection","removeAllRanges","handleColumnDragEnd","_removeDragOverIndicatorColumn","handleColumnDragEnter","_isColumnReordering","_invokeDropCallback","handleColumnReorderDragOver","_getDragOverColumnIndex","_currentDropColumnBefore","_isDragOverBeforeColumn","_displayDragOverIndicatorColumn","headerCells","clientX","handleColumnDragOver","handleColumnDragLeave","_invokeDndCallback","handleColumnReorderDrop","_moveTableHeaderColumn","handleColumnDrop","handleRowDragStart","dragOption","dnd","_setDragRowsDataTransfer","dataTypes","_getSelectedRowIdxs","handleRowDrag","handleRowDragEnd","_updateRowStateCellsClass","_removeDragOverIndicatorRow","handleRowDragEnter","handleRowDragOver","_updateDragRowsState","handleRowDragLeave","_isDndEventInElement","handleRowDrop","dropRowIndex","dndType","itemType","callbackType","dndOption","defaultPrevented","dataTransfer","_matchDragDataType","reorder","rect","domEvent","clientY","columnRect","onRightHalf","getReadingDirection","dragDataTypes","allowedTypeArray","setElementDraggable","_DRAGGABLE","_setDragRowsData","nativeEvent","rowDataArray","jsonStr","setData","selArray","getDataForVisibleRow","_setDragRowsImage","offsetX","setDragImage","tableIdHashCode","_hashCode","_createTableHeaderColumnDragImage","indicatorStyle","_displayDragOverIndicatorRow","TableLayoutManager","_table","_tableUpdates","unregisterListeners","unregisterScrollListeners","_getSizingState","_sizingState","hasHorizontalOverflow","hasVerticalOverflow","tableUpdate","_getTableUpdates","_clearTableUpdates","sizingState","hasRenderedSize","_enableTableVisibility","_restoreCachedScrollPos","maxScrollTop","clientHeight","newScrollTop","_restoreScrollLeft","_finalizeTableDimensions","registerScrollListeners","_handleScrollerScrollLeft","_handleScrollerScrollTop","_hasActiveRow","browserAutoScrollInitPos","_getCurrentVerticalScrollPosition","_scrollRowIntoViewport","_moveTableBodyRowTouchSelectionAffordanceTop","_moveTableBodyRowTouchSelectionAffordanceBottom","_scrollEventListener","newScrollLeft","_getElementScrollLeft","_isScrollPositionAdjusted","_ticking","_getCurrentScrollPosition","setScrollLeft","computedStyle","boxStyle","_getBoxStyle","isIE","paddingWidth","boxSizing","_BORDER_BOX","borderWidth","getWidthPropertyFromOffsetWidth","isTableHeightConstrained","getScrollBarHeight","_getDefaultScrollBarSize","getScrollBarWidth","_isVerticalScrollBarHidden","isVert","_BOX_SIZING","_BORDER_TOP_WIDTH","_BORDER_BOTTOM_WIDTH","_PADDING_TOP","_PADDING_BOTTOM","_BORDER_RIGHT_WIDTH","_BORDER_LEFT_WIDTH","_PADDING_RIGHT","_PADDING_LEFT","_applyColumnHeaderHeight","headerColumnCell","headerColumnDiv","_COLUMN_HEADER_CLASS","_MIN_HEIGHT","_applyForcedColumnWidth","forcedWidth","columnElement","_MIN_WIDTH","_MAX_WIDTH","_getForcedColumnWidth","cellCompStyle","cellBoxStyle","headerCell","headerBoxStyle","headerMinWidth","_getTableBodyCell","bodyCellBoxStyle","bodyCellMinWidth","cellMinWidth","_getTableFooterCell","footerBoxStyle","footerMinWidth","_HIDE_VERTICAL_SCROLLBAR","initializeDefaultScrollBarSize","_defaultScrollBarSize","getDefaultScrollBarWidth","_clientWidth","_clientHeight","_scrollWidth","_scrollHeight","_clearColumnSizingCache","_columnOffsets","getColumnScrollLeft","getRowScrollTop","getScrollWidth","getScrollHeight","getClientWidth","clientWidth","getClientHeight","_removeTableDimensionsStyling","tableElem","_TABLE_SCROLL_VERTICAL_CLASS","_TABLE_SCROLL_HORIZONTAL_CLASS","_STYLE","headerColumnTextDivs","_COLUMN_HEADER_TEXT_CLASS","headerColumnTextDivsCount","_TABLE_HEADER_WRAP_TEXT_CLASS","_removeHeaderColumnAndCellColumnWidths","_getBottomSlotHeight","bottomSlotStyle","_getTableContainerScrollableState","bottomSlotHeight","containerClientHeight","getExactClientHeight","containerClientWidth","getExactClientWidth","tableElemStyle","tableElemHeight","tableElemWidth","_setForcedColumnWidths","_forcedWidthColumns","_getPixelStyleEquivalent","columnCellCompStyle","forcedColumnCellWidth","forcedColumnWidth","legacyWidthBuffer","bufferCell","bufferCellWidth","addRowRow","_getColspanLogicalElements","addRowCellWidth","_getTableBodyLogicalCells","forcedCellWidth","_verifyMinAndMaxWidths","continueSizing","_applyColMinMax","isMin","colWidth","valueApplied","colTestWidth","styleVal","_getMinWidthAutoEquivalent","_tableWidthContainer","handleMouseEnterHeaderCell","handleMouseDownHeaderCell","_getEventTargetElement","setActiveHeader","_handleHeaderColumnResizeStart","_KEYBOARD_CODES","_MODIFIER_SHIFT","isMetaKeyPressed","handleMouseMoveHeader","handleMouseMoveHeaderCell","handleMouseUp","handleMouseLeaveTable","handleTouchStartHeaderCell","touches","handleTouchMoveHeader","handleTouchEnd","handleTouchCancel","handleKeyDownEsc","handleFocusout","_getEditableRowIdx","_TABLE_DATA_ROW_EDIT_CLASS","isMouse","displayDragOverIndicatorColumn","isStart","removeDragOverIndicatorColumn","_getPageX","changedTouches","EPSILON","TableLegacyLayoutManager","_freezeColumnWidths","headerFooterScrollListener","_setScrollX","_headerScrollEventListener","_footerScrollEventListener","isRTL","offsetLeft","rowRect","scrollingElementRect","clientTop","getHorizontalOverflowDiff","columnCell","scrollingElement","scrollbarWidth","horDiff","fragment","_frozenWidthRows","minWidths","_unfreezeColumnWidths","_setColumnWidths","scrollBarWidth","headerWidths","headerHeights","cellWidths","footerWidths","headerTextDiv","_isTableColumnsWidthSet","_isAllTableColumnsWidthSet","tableUpdates","_styleTableContainer","tableContainerScrollableState","tableBodyBorderHeight","browserScrollBarSize","legacySizer","_getTableLegacySizer","actualScrollBarWidth","_TABLE_LEGACY_SCROLL_CLASS","captionHeight","caption","_INLINE","tableContainerStyle","_BORDER_TOP","tableFooterHeight","headerFooterWidth","tableBodyHeight","messageCell","_getTableBodyMessageCell","bodyWidth","_refreshTouchAffordanceGlassPanePosition","_setResizeCursor","_handleHeaderColumnResizeEnd","_clearTableHeaderColumnsResize","eventTarget","_resizeStartColumnIdx","_isHeaderColumnResizeStart","_resizeColumnStart","tableHeaderColumnResizeIndicator","_getTableHeaderColumnResizeIndicator","_resizeStartPageX","_setTableHeaderColumnsResizeStyling","_setTableHeaderColumnResizeIndicator","widthChange","headerColumnWidth","startColWidth","headerColumnAdjacentIdx","headerColumnAdjacent","adjacentColWidth","_clearTableHeaderColumnsResizeStyling","_removeTableHeaderColumnResizeIndicator","resizeColumnStart","readingDir","distFromLeft","distFromRight","_createTableHeaderColumnResizeIndicator","tableRect","headerColumnRect","borderLeftWidth","borderRightWidth","_COLUMN_HEADER_RESIZING_CLASS","headerColumns","_DIV","_COLUMN_HEADER_RESIZE_INDICATOR_CLASS","_cacheDomElement","_getTableElementByClassName","indicatorClass","_COLUMN_HEADER_DRAG_INDICATOR_BEFORE_CLASS","_COLUMN_HEADER_DRAG_INDICATOR_AFTER_CLASS","indicatorElements","indicatorElementsCount","TableStickyLayoutManager","_clearMouseResizeListeners","_scroller","_getTableScroller","_isHTMLScroller","frozenIndex","frozenOffset","_selectorColWidth","_getTableGutterWidth","frozenStartColumns","_getFrozenStartColumnIndexes","_getAppliedColumnWidth","rowScrollTop","addRow","_updateFrozenEdges","_dragIndicatorColumnIndex","stickyRows","_getTableBodyStickyRows","stickyRow","_TABLE_STUCK_ROW_CLASS","scrollerTop","scrollerBottom","scrollerTopOffset","scrollerBottomOffset","scrollerOffsetTop","scrollerOffsetBottom","footer","scrollBarHeight","frozenStartOffset","frozenEndOffset","scrollerOffsetStart","scrollerOffsetEnd","frozenEndColumns","_getFrozenEndColumnIndexes","_clearAllCache","_appliedColumnWidths","_columnInitWidths","_gutterStartWidth","_gutterEndWidth","_setupTableHeight","_initializeFrozenColumns","overallWidth","isSafari","_initializeColumnLayouts","_determineColumnWidths","_applyHeaderWrapperClass","addRowCellsCount","frozenEdgeOffset","stickyLevel","isSticky","rowCells","_TABLE_STICKY_ROW_CLASS","_TABLE_FROZEN_END","_ZINDEX","tableScroller","tableScrollerHeight","scrollerStyle","scrollerOffsetHeight","colElements","_getTableCols","_savePreferredColWidths","_setAllColumnWidths","_clearForcedColumnWidths","totalWidth","_getTableCol","colIndex","selectorCell","_getTableBodySelectorCell","skipSizeCheck","updateFrozenEdges","_applyFrozenOffset","frozenEdge","targetRow","styleProperty","_LEFT","_RIGHT","styleValue","targetCell","_getTableGutterCell","_getPlaceHolderRowCell","gutterEdge","headerGutter","addRowGutter","footerGutter","addRowSelectorCell","tableBodySelectorCell","isForce","currIndex","endIndex","newScrollPosition","_getCurrentHorizontalScrollPosition","currentColumnIndex","_updateFrozenEdge","endOverflow","colWidths","appliedEdge","_frozenStartIndex","_applyFrozenEdge","_frozenEndIndex","isAdd","modifierFunc","_TABLE_FROZEN_EDGE","_isColumnResizing","isResize","_resizeStartIndex","_resizeEndIndex","_minimumStartColWidth","_minimumEndColWidth","_setResizeIndicator","_setupMouseResizeListeners","_finishResize","_docMouseMoveListener","_handleResizeMouseMove","_docMouseUpListener","_handleResizeMouseUp","_updateResizeColumnWidths","_removeResizeIndicator","_cleanupColumnResizing","updateOptions","newStartColWidth","newEndColWidth","minimumDiff","startColInitWidth","endColInitWidth","xDiff","tableStartCol","tableEndCol","startHeaderColumn","endHeaderColumn","_COLUMN_RESIZE_INDICATOR_CLASS","dataCell","_dragIndicatorIsStart","tableColumnDropIndicator","_getTableColumnDropIndicator","_createTableColumnDropIndicator","_COLUMN_DROP_INDICATOR_CLASS","TableFixedLayoutManager","_columnWeights","_columnMinWidths","_columnMaxWidths","isResetTableElemStyle","columnWeight","weight","_resetTableElementStyling","initScrollerWidth","scrollerWidth","forcedTotal","gutterStartWidth","gutterEndWidth","freeWeightTotal","columnWidths","forcedColumnWidths","currentFreeWeightTotal","widthDiff","currentWeight","newWidth","_createContextInfo","contextInfo","_TABLE_ACC_CONTEXT_INFO_CLASS","_HIDDEN_CONTENT_ACC_CLASS","isIos","tableContext","columnContext","selectorContext","_tableContextInfo","_rowContextInfo","_columnContextInfo","_selectorContextInfo","_createStateInfo","stateInfo","_TABLE_ACC_STATE_INFO_CLASS","_stateInfo","_createRowStateInfo","rowStateInfo","_TABLE_ACC_ROW_STATE_INFO_CLASS","_rowStateInfo","_createTableStatusAccNotification","statusNotification","_TABLE_STATUS_ACC_NOTIFICATION_CLASS","_accStatus","_setAccessibleContext","rowContextString","_accRowContext","_getAccessibleContext","_clearAccessibleContext","columnHint","_hasFocus","_accFirstFocus","summaryResource","colnum","rownum","_isTableEditMode","activeType","_getActiveType","activeIndex","ACTIVE_ELEMENT_TYPES","_HEADER","_accRowIndex","_accColumnIndex","headerSelected","selectedHeaderIdxs","getActionableElementsInNode","_FOOTER","tableFooterCell","footerSelected","selectedFooterIdxs","_getSelectedFooterColumnIdxs","_DATA_ROW","tableCell","activeRowElem","rowIndexOffset","rowSelected","selectedRowIdxs","_isRowSelectionEnabled","_getRowHeaderIds","_getAccSelectorString","_NO_DATA","_getNoDataId","_getActiveElement","_ADD_ROW","placeholderRow","_applyAccStatusLabel","_announceAccSelectionUpdate","_clearAccStatusInfo","_ARIA_LABELLEDBY","_accActionFocus","rowHeaderCell","rowHeaderIds","accessibility","rowHeader","rowHeaders","columnDefs","headerColumnId","_getVoiceOverCellLabelledby","labelledbyString","columnHeaderCell","_isPagingModelTableDataSource","isTreeDataProvider","_registerDataSourceEventListeners","PagingTableDataSource","_dataProviderEventHandlers","eventHandler","_handleDataRowMutate","_handleDataRefresh","dataProviderEventHandlersCount","ev","disregardAfterKey","_clearActiveRow","_removeRowsAfterLastValidRow","isSort","_adjustScrollPositionOnFetch","_invalidateRangeSelection","_lastSelectedRowIdxArray","lastValidKey","lastValidItemIdx","_createTableBodyScrollBuffer","_handleDataRowRemove","_handleDataRowAdd","_handleDataRowChange","eventDetail","addEventDetail","_executeTableBodyRowsRemove","eventDetailKeys","_getRowsFromEventDetailRemove","remainingRowIdxArray","removedTableBodyRows","removeAll","_clearSelectionState","editRowKey","containsKey","_afterRemoveRows","_removeRows","ii","_rowIdx","rowToRemove","stuckRow","totalRowHeight","tableBodyRowsToRemove","stickyIndex","_syncTableFocus","_syncActiveElement","transient","_updateSelectionStateFromEventDetailRemove","rowArray","_executeTableBodyRowsAdd","_getRowsFromEventDetailAdd","isContiguous","docFragArray","docFragIndexArray","_handleRowAdds","scrollPosition","isLoadAll","isIterateAfterDoneNotAllowed","initialKeys","initialKeyLength","_notifyAddOutOfViewport","finalRowKeys","getAddEventKeysResult","eventData","eventMetadata","eventKeys","eventDataCount","metadataSource","FlattenedTreeTableDataSource","tableDataSource","dataSource","eventKey","_getMetadata","docFragStartIndex","tableBodyRowBefore","_executeTableBodyRowsChange","_updateSelectionStateFromEventDetailChange","_getRowsFromEventDetailChange","updatedRowsPromiseArray","staleRow","updatedTableBodyRows","_cachedDomTableBodyRows","_cachedDomTableBodyStickyRows","_isGutterStartColumnEnabledCache","_isGutterEndColumnEnabledCache","menuContainer","enableNonContiguousSelectionMenu","_UL","ojMenu","_ID","_defaultContextMenu","_populateContextMenuItems","contextMenuNode","handleContextMenuSelect","_menuContainer","_GetDefaultContextMenu","resizeMenu","_createContextMenuItem","divider","sortAscMenu","sortDscMenu","sortMenu","nonContiguousSelectionMenu","listItems","command","newItem","getElementsByTagName","_A","replaceWith","useOjOption","listElement","sortMenuListItem","_createContextMenuListItem","_createContextMenuResizeDialog","_createContextMenuResizePopup","contextMenuListItem","_createContextMenuLabel","commandString","textNode","createTextNode","contextMenuLabel","_HREF","initialSize","cancelActionHandler","popupHeader","popupBody","popupFooter","popupCancelButton","popupOKButton","popupTitle","tableId","popupTextContent","setupPopup","_TEXT_ALIGN_END","margin","_INPUT","_BUTTON","dialogBody","dialogFooter","dialogCancelButton","dialogApplyButton","_TABLE_RESIZE_DIALOG_MOBILE_CLASS","_BUTTON_SMALL_CLASS","_SMALL_6_CLASS","_SMALL_HOR_MARGIN_CLASS","isTableHeaderless","isTableFooterless","_createTableContainer","_createTableScroller","_createTableColGroup","_createTableBody","_createTableBodyLegacyWidthBuffer","_createTableLegacySizer","_createTableWidthContainer","bufferRow","_TABLE_LEGACY_WIDTH_BUFFER_ROW_CLASS","tableSizer","_TABLE_LEGACY_SIZER_CLASS","selectorAccString","KeySetImpl","_ARIA_LABEL","_selectedKeysChangedListener","_isSelectAllControlVisible","_TABLE_HEADER_SELECTOR_CLASS","_createTableBodyMessageCell","_TABLE_BODY_MESSAGE_CLASS","_getTouchAffordanceGlassPane","touchAffordanceGlassPane","_TABLE_TOUCH_AFFORDANCE_GLASS_PANE_CLASS","_createTouchAffordanceGlassPane","_createTableBodyRowTouchSelectionAffordance","topAffordance","_getTableBodyRowTouchSelectionAffordanceTop","_TABLE_DATA_ROW_TOUCH_SELECTION_AFFORDANCE_TOP_CLASS","_TABLE_DATA_ROW_TOUCH_SELECTION_AFFORDANCE_TOUCH_AREA_CLASS","topIcon","_TABLE_DATA_ROW_TOUCH_SELECTION_AFFORDANCE_TOP_ICON_CLASS","bottomAffordance","_getTableBodyRowTouchSelectionAffordanceBottom","_TABLE_DATA_ROW_TOUCH_SELECTION_AFFORDANCE_BOTTOM_CLASS","bottomIcon","_TABLE_DATA_ROW_TOUCH_SELECTION_AFFORDANCE_BOTTOM_ICON_CLASS","_TABLE_BOTTOM_SLOT_CLASS","_TABLE_CONTAINER_CLASS","_WIDGET","_TABLE_SCROLLER_CLASS","_COLGROUP","_TABLE_COLGROUP_CLASS","_TFOOT","_THEAD","_TABLE_HEADER_ROW_CLASS","hasCustomContent","_insertTableHeaderColumn","_COL","_TABLE_COL_SELECTOR_CLASS","_TABLE_COL_CLASS","headerColumnDragImage","headerContentDiv","_COLUMN_HEADER_DRAG_IMAGE","statusMessageLoadingIndicator","_ICON_CLASS","_TABLE_LOADING_ICON_CLASS","tableWidthContainer","_TABLE_WIDTH_CONTAINER_CLASS","before","modelRow","isReorder","tableBodyRowDragIndicator","tableBodyDragIndicatorCell","_isCachedDomElement","_getCachedDomElement","dialogId","_TABLE_FOOTER_CELL_CLASS","tableOwnedOnly","Element","matches","msMatchesSelector","_isTableOwned","_getChildElementByClassName","tableFooterCells","_getTableFooterLogicalCells","_TABLE_FOOTER_ROW_CLASS","cols","tableColElements","_getTableHeaderLogicalColumns","getElementsByClassName","addRowIndex","_tableId","idElem","_tableUID","ElementUtils","getUniqueId","hash","strCount","_insertTableBodyCell","isNew","previousCell","oldTableHeaderColumn","previousColumn","tableBodyRowRect","touchAffordanceGlassPaneRect","destIdx","tableAddRowBodyCells","destTableBodyCell","afterColumn","destTableHeaderColumn","destTableFooterCell","destTableAddRowCell","destColIdx","columnsDestMapItems","reversedColumnIdxs","reverse","contents","nodeValue","indicatorRowBeforeElements","indicatorRowBeforeElementsCount","_registerDomEventListeners","touchAffordance","cellId","rowKeyStrHashCode","tableBodyMessageCell","_focusSetupHandlers","_styleTableBody","_TABLE_DATE_CELL_FORM_CONTROL_CLASS","tableBodyCellStyle","applyMergedInlineStyles","_TABLE_COMPACT_CLASS","editMode","_TABLE_EDIT_CLASS","_isHorizontalGridEnabled","_TABLE_HGRID_CLASS","_TABLE_STICKY_CLASS","_TABLE_ADD_ROW_CLASS","_TABLE_EXTERNAL_SCROLL_CLASS","_TABLE_MULTI_ROW_SELECT_CLASS","tableFooterCellStyle","footerStyle","footerClassName","_RELATIVE","_TABLE_SORT_CLASS","_TABLE_SHOW_REQUIRED_CLASS","tableHeaderColumnStyle","headerClassName","elementArray","indexedElementArrayNum","indexedElementArray","elementArrayCount","selectAllControl","verticalGridVisible","tableContainerRect","showStatus","tableContainerHeight","statusMessageTop","statusMessageHeight","headerHeight","skeletonDimension","_getDefaultSkeletonDimension","_skeletonFadeInEndListener","tableStatusMessageText","_TABLE_SKELETON_CONTAINER_CLASS","innerContent","_TABLE_SKELETON_CLASS","_defaultSkeletonDim","skeleton","visibility","dim","_domCache","onlyChildren","domElement","isClone","containerClone","tables","tableClone","elemParentTable","elemContainer","_setFocusInHandler","_setFocusOutHandler","_TABLE_SORT_ICON_CONTAINER_CLASS","getPropertyValue","edge","_TABLE_COL_GUTTER_CLASS","tablePart","elementName","_TABLE_GUTTER_START_HEADER_CELL","_TABLE_GUTTER_END_HEADER_CELL","_TABLE_GUTTER_START_FOOTER_CELL","_TABLE_GUTTER_END_FOOTER_CELL","_TABLE_GUTTER_START_BODY_CELL","_TABLE_GUTTER_END_BODY_CELL","_OPTION_DEFAULTS_CLASS","_COLUMN_HEADER_DROP_EMPTY_CELL_CLASS","_COLUMN_HEADER_SHOW_REQUIRED_ICON_CLASS","_TABLE_DATA_CURRENT_ROW_CLASS","_TABLE_ACTIVE_ELEMENT_CLASS","_TABLE_DATA_CELL_EDIT_CLASS","_TABLE_FOOTER_DROP_EMPTY_CELL_CLASS","_TABLE_STATUS_MESSAGE_TEXT_CLASS","_WIDGET_ICON_CLASS","_FLOAT","_MARGIN_BOTTOM","_VERTICAL_ALIGN","_CURSOR","_BLOCK","_INLINE_BLOCK","_SCROLL","_VISIBLE","_MIDDLE","_MOVE","_FIXED","_TYPE","_ARIA_HIDDEN","_SPAN","_LABEL","_ACTIVE","_CLICKABLE_ICON","_WARNING","_DRAG","DEFAULT_ROW_HEIGHT_GUESS","_handlePopupFocusinListener","_handlePopupFocusoutListener","_handlePopupFocusout","_handlePopupFocusin","isPopupFocusout","openPopup","getLogicalChildPopup","_tempFFFocus","_focusOutHandler","_clearKeyboardKeys","_unhighlightActive","_focusEditCell","isPopupFocusin","_focusInHandler","focusedRowIdx","_getActiveRowIndex","focusedHeaderColumnIdx","_getActiveHeaderIndex","addNewRow","isActionableElement","targetColumnIndex","_scrollColumnIntoViewport","focusedRowCells","active","_getActiveObjectFromActionableChild","_setActiveFooter","_events","focusout","focusin","_addKeyboardKey","keyboardCode1","_getKeyboardKeys","isEscapeKeyEvent","isEnterKeyEvent","isF2KeyEvent","isTabKeyEvent","_isKeyPressMatch","isArrowUpKeyEvent","isArrowDownKeyEvent","isArrowLeftKeyEvent","isArrowRightKeyEvent","isHomeKeyEvent","isEndKeyEvent","isExtend","_handleKeydownUpDown","_handleKeydownLeftRight","_getColumnSelectionMode","_handleKeydownTab","_handleKeydownF2","isSpaceBarKeyEvent","_handleKeydownSpacebar","_handleKeydownEnter","_handleKeydownHome","_handleKeydownEnd","_handleKeydownEsc","isMac","isMetaKeyEvent","_removeKeyboardKey","isShift","isEventClickthroughDisabled","isFromDefaultSelector","_mouseDownRowIdx","_getTableDndContext","hover","_handleMouseEnterSelection","_lastSelectedHeaderIdx","_lastSelectedRowIdx","focusCalled","focused","_fireActionEvent","_selectRange","_handleSelectionGesture","_selectionAnchorIdx","isTouch","_getRowSelection","_setEditRow","_getActiveFooterIndex","focusedFooterColumnIdx","ignoreActionable","_getTouchEventTargetElement","eventLocation","elementFromPoint","_registerCustomEvents","jqEventSpecial","special","ojtablebeforecurrentrow","handleObj","handler","ojtablesort","_touchEventDoubleTapFunction","_lastTapTime","_lastTapTarget","_registerTouchEvents","passiveTouchEventsAndListeners","touchend","evt","touchcancel","createDelegatedListener","listener","targetElement","TOUCHSTART","TOUCHMOVE","TABLE_BODY_SELECTOR","TOUCHSTART_CELL_HEADER_SELECTOR","TOUCHMOVE_TABLE_HEADER_SELECTOR","_delegatedTouchStartTableBodyListener","_delegatedTouchStartCellHeaderListener","_delegatedTouchMoveTableHeaderListener","_delegatedTouchMoveTableBodyListener","passive","_createActiveObject","isActionable","childElement","activeObject","_areActiveObjectsEqual","active1","active2","_getElementFromActiveObject","_highlightActive","skipFocus","_hasActiveHeader","updateAccStatus","_hasActiveFooter","currentRowKey","focusRowIndex","_hasActiveNoData","currentIndex","isForward","elementByIndexFunc","nextIndex","_getNextVisibleColumnIndex","firstVisibleIndex","_currentRow","_getActiveHeaderColumn","headerIndex","includeStuckRows","vertOverflowDiff","topOverflowDiff","hasTopOverflow","hasBottomOverflow","cellElement","horOverflowDiff","leftOverflowDiff","rightOverflowDiff","hasLeftOverflow","hasRightOverflow","isEdge","optionChange","localRowIndex","updatedCurrentRow","existingCurrentRow","isClearCurrentRow","currentFocusedRowIdx","currentRowChanged","_compareCurrentRowValues","currentRowUpdateAllowed","accessibleContext","previousCurrentRow","existingCurrentRowIndex","existingCurrentRowKey","existingCurrentRowIdx","updateEditable","_resetCurrentRow","existingBodyRow","_updateCurrentRow","currentFocusElement","focusRowIdx","focusColumnIdx","_setCellFocus","currentRowValue1","currentRowValue2","getFocusableElementsInNode","firstElem","_setCellInRowFocus","forwardSearch","tableBodyCellIndex","focusHandler","updateCurrent","skipScroll","scrollStuckRow","_setActive","_updateActive","updated","isNewActiveObj","_setColumnState","_applyColumnState","_updateColumnStateCellsClass","selectedRowIdxsCount","gutterStartCell","gutterEndCell","_isScrollToKey","iterationSpeed","_validateKeyForScroll","skipLocal","skipKeyValidation","_isScrollableX","_isScrollableY","keyValidationResolveFunc","coord","_getScrollCoordinates","_editRowCallback","handlingScrollY","_setScrollY","initialScrollTop","_getScrollTopByIndex","_getScrollTopByKey","_getScrollLeftByIndex","_getScrollLeftByKey","prevScrollPosition","diff","columnLocations","_getColumnLocations","_findClosestElementToTop","scrollPositionY","initOffset","forward","prevOffsetTop","_toggleTableActionableMode","skipFocusShift","activeBoundary","_applyActionableMode","boundaryElement","enableAllFocusableElements","tabbableElementsInFocusedElement","_editableRowIdx","_editableRowKey","editRow","_delayed_edit","_setEditableHelper","_scrollToRowHelper","_getRowToBeEdited","_setEditableRowIdx","_setAdjacentRowEditable","origColumnIdx","isNext","editableRowIdx","_handleAdjacentEditEndSuccessful","_handleEditEndRejected","newRowIdx","_findAdjacentEditableRow","_fireEditRowChangeEvent","cancelled","skipFocusReset","isLegacyDataSource","rowElementToBeEdited","updateEditMode","newEditRowValue","editAcceptPromiseArray","updatedItemPromise","prevEditableRowKey","accept","acceptPromise","setUpdatedItem","updatedPromise","cancelEdit","_editPromise","editableRowIndex","_refreshPrevEditableRow","_clearEditPending","prevEditableRowIdx","updatedItemObj","updatedItem","canceled","addRowAcceptPromiseArray","_keyboardKeys","foundCode","KEYBOARD_KEYS","keyboardKeys","found","keyboardKeysCount","keyCheckFunction","isLeft","focusNext","focusedHeaderIndex","_isNavigate","focusedFooterIndex","_lastSelectedFooterIdx","isUpEvent","tabbableElementsInRow","tabbableElementsInRowCount","rowElementTabIndex","maxIndex","focusedColumnIdx","currentRowIdx","_handleSelectAllGesture","_columnHeaderDefaultTextRenderer","_AddHoverable","textValue","requiredIcon","_createRequiredIconDomElement","requiredDom","_tableBodyCellDefaultRenderer","_getObjectPath","template","cellContext","rowEditable","rendererContext","_getVal","labelledbyVal","getWrappedDataSource","datasource","_getRendererStatusObject","_copyMetadata","_FixRendererContext","isAddRowCellTemplate","_getSlotTemplateContextObject","isAddRowTemplate","metadataContext","path","currentObj","foundPath","pathSegment","basePathSegment","pathSegmentIndex","rowSelectionMode","colSelectionMode","selection","_selectionSet","_getSelectedEquivalent","_syncRangeSelection","_isSelectionRequiredSatisfied","_setSelected","_selectFirstRowOrColumn","rowKeySet","currentFirstSelectedRow","updatedRowData","_validatedSelectedRowKeyData","rowKeyData","isOptionUpdate","useSelection","validateSelectedResult","columnKeySet","_isSelectionRequired","_validateSelected","isLocal","_enforceSelectionRequired","validationResolveFunc","validSelected","selectionRequired","_hasSelected","newKeySet","validatedColumnKeySet","invalidColumnKeys","validatedRowKeySet","localRowKeys","invalidLocalRowKeys","validRowKeyDataPromise","_fetchValidRowKeyData","validRowKeyData","implementation","fetchResult","validKeyData","selectionCount","startRowKey","startRowIndex","endRowKey","endRowIndex","rangeObj","startKey","endKey","_processRowRangeSelection","endRowIdx","_getDataSourceLastFetchedRowIndex","lastRowIndex","_processColumnRangeSelection","startColumnKey","endColumnKey","startColumnIndex","endColumnIndex","keySet","newSelection","_getRowSelectionFromKeySet","skipSelectionUpdate","updateSelected","currentSelected","areKeySetsEqual","_updateSelectors","_applySelected","newKey","rowSelection","_setFirstSelectedRow","_getSelectionEquivalent","newData","retObj","inverted","_getColumnSelectionFromKeySet","deletedValues","isSelectable","_applyRowSelection","_setLastRowSelection","_applyColumnSelection","headers","lastColumnIndex","lastColumnKey","_setLastHeaderColumnSelection","reorderOption","lastSelectedRowIdxArrayCount","_lastSelectedColumnIdxArray","lastSelectedColumnIdxArrayCount","isRow","isMultiSelectGesture","isSelect","columnSelectionMode","AllKeySetImpl","isTouchAffordance","_clearSelectedRows","firstSelectedIndex","lastSelectedIndex","_getHeaderColumnSelection","_getFooterColumnSelection","newRowKeySet","updatedFrom","rowSelectedKeySet","headerSelectorElement","keySetSize","headerSelectorElements","selectedSelectors","selectedSelectorSpans","from","hasSelectedState","firstSelectedRow","footerTemplate","headerTemplate","beforeCurrentRow","beforeRowEdit","beforeRowEditEnd","beforeRowAddEnd","ready","rowAction","getContextByNode","tableHeaderColumnSortAsc","tableHeaderColumnSortDsc","ignoreSortIcons","headerSortAsc","headerSortDsc","refreshRow","disableDefaultBrowserStyling","_isInitFetch","_NotifyAttached","_initializeNotifyAttachedTimeout","_notifyAttachedTimeout","_NotifyShown","_NotifyContextMenuGesture","openOptions","contextMenuItemAsc","contextMenuItemDsc","contextMenuItemResize","_OpenContextMenu","_setOptions","requiresRefresh","requiresDataRefresh","requiresHeaderRefresh","catch","_tableDndContext","_layoutManager","_doSortHelper","columDef","ojTable","_message","Validator","_min","_max","_hint","_customMessageSummary","_customMessageDetail","minStr","maxStr","string","numberValue","customMessageSummary","customMessageDetail","hintMinimum","hintMaximum","_BUNDLE_KEY_DETAIL","_BUNDLE_KEY_SUMMARY","valueString","exactPattern","matchArr","localizedSummary","_getSummaryKey","localizedDetail","_getDetailKey","methods","IE_10","msPointerEnabled","IE_11_PLUS","pointerEnabled","PointerEvent","maxTouchPoints","TouchEvent","generalTouchesHolder","POINTER_DOWN","POINTER_UP","POINTER_MOVE","POINTER_CANCEL","POINTER_TYPE_TOUCH","MSPointerEvent","MSPOINTER_TYPE_TOUCH","POINTER_TYPE_MOUSE","MSPOINTER_TYPE_MOUSE","GESTURE_START","MSPOINTER_TYPE_PEN","GESTURE_CHANGE","GESTURE_END","TOUCH_ACTION","_180_OVER_PI","PI","ALLOWED_POINTER_TYPE","Touchr_ALLOWED_POINTER_TYPE","createEvent","eventName","initEvent","makeSubArray","MAX_SIGNED_INT_VALUE","ToUint32","maxIndexProperty","object","getMaxIndexProperty","constrainedValue","create","TouchList","identifiedTouch","identifier","_touchIndex","touch","pointerId","_addAll","_add","force","pressure","radiusX","radiusY","rotationAngle","_remove","pointerToTarget","gesture","MSGesture","gestureScale","gestureRotation","attachedPointerStartMethods","checkSameTarget","pointerListener","originalTarget","targetTouches","pointerType","addPointer","createTouchList","gestureListener","rotation","screenX","screenY","augmentEventListener","elementClass","customAddEventListener","attachTouchEvents","customRemoveEventListener","removeTouchEvents","oldAddEventListener","oldRemoveEventListener","useCapture","doc","_touchActionUpdated","attachScrollHandler","last","scrollElem","findClosestScrollableElement","clearCachedHeight","pointerDownHandler","pointerMoveHandler","pointerUpHandler","visitedElems","_cachedClientHeight","_cachedScrollHeight","documentElement","nextScrollElem","_pointerHandlers","touchList","createTouch","view","ontouchstart","HTMLElement","Document"],"sourceRoot":""}